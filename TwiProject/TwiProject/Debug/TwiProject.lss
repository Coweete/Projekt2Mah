
TwiProject.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007ba0  00080000  00080000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00087ba0  00087ba0  0000fba0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000a34  20070000  00087ba8  00010000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          0000027c  20070a34  000885dc  00010a34  2**2
                  ALLOC
  4 .stack        00002000  20070cb0  00088858  00010a34  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00010a34  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  00010a5d  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000f6c0  00000000  00000000  00010ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002e3f  00000000  00000000  00020178  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000ca8  00000000  00000000  00022fb7  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000b88  00000000  00000000  00023c5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00007e34  00000000  00000000  000247e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00012df1  00000000  00000000  0002c61b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00066fe1  00000000  00000000  0003f40c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000029f0  00000000  00000000  000a63f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    000062e1  00000000  00000000  000a8de0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <_sfixed>:
   80000:	20072cb0 	.word	0x20072cb0
   80004:	00081169 	.word	0x00081169
   80008:	00081165 	.word	0x00081165
   8000c:	00081165 	.word	0x00081165
   80010:	00081165 	.word	0x00081165
   80014:	00081165 	.word	0x00081165
   80018:	00081165 	.word	0x00081165
	...
   8002c:	000803f1 	.word	0x000803f1
   80030:	00081165 	.word	0x00081165
   80034:	00000000 	.word	0x00000000
   80038:	00080429 	.word	0x00080429
   8003c:	00080465 	.word	0x00080465
   80040:	00081165 	.word	0x00081165
   80044:	00081165 	.word	0x00081165
   80048:	00081165 	.word	0x00081165
   8004c:	00081165 	.word	0x00081165
   80050:	00081165 	.word	0x00081165
   80054:	00081165 	.word	0x00081165
   80058:	00081165 	.word	0x00081165
   8005c:	00081165 	.word	0x00081165
   80060:	00081165 	.word	0x00081165
   80064:	00081165 	.word	0x00081165
   80068:	00000000 	.word	0x00000000
   8006c:	00080fd5 	.word	0x00080fd5
   80070:	00080fe9 	.word	0x00080fe9
   80074:	00080ffd 	.word	0x00080ffd
   80078:	00081011 	.word	0x00081011
	...
   80084:	0008064d 	.word	0x0008064d
   80088:	00081165 	.word	0x00081165
   8008c:	00081165 	.word	0x00081165
   80090:	00081165 	.word	0x00081165
   80094:	00081165 	.word	0x00081165
   80098:	00081165 	.word	0x00081165
   8009c:	00081165 	.word	0x00081165
   800a0:	00081165 	.word	0x00081165
   800a4:	00000000 	.word	0x00000000
   800a8:	00081165 	.word	0x00081165
   800ac:	00081165 	.word	0x00081165
   800b0:	00081165 	.word	0x00081165
   800b4:	00081165 	.word	0x00081165
   800b8:	00081165 	.word	0x00081165
   800bc:	00081165 	.word	0x00081165
   800c0:	00081165 	.word	0x00081165
   800c4:	00081165 	.word	0x00081165
   800c8:	00081165 	.word	0x00081165
   800cc:	00081165 	.word	0x00081165
   800d0:	00081165 	.word	0x00081165
   800d4:	00081165 	.word	0x00081165
   800d8:	00081165 	.word	0x00081165
   800dc:	00081165 	.word	0x00081165
   800e0:	00081165 	.word	0x00081165
   800e4:	00081165 	.word	0x00081165
   800e8:	00081165 	.word	0x00081165
   800ec:	00081165 	.word	0x00081165
   800f0:	00081165 	.word	0x00081165

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070a34 	.word	0x20070a34
   80110:	00000000 	.word	0x00000000
   80114:	00087ba8 	.word	0x00087ba8

00080118 <frame_dummy>:
   80118:	b508      	push	{r3, lr}
   8011a:	4b06      	ldr	r3, [pc, #24]	; (80134 <frame_dummy+0x1c>)
   8011c:	b11b      	cbz	r3, 80126 <frame_dummy+0xe>
   8011e:	4806      	ldr	r0, [pc, #24]	; (80138 <frame_dummy+0x20>)
   80120:	4906      	ldr	r1, [pc, #24]	; (8013c <frame_dummy+0x24>)
   80122:	f3af 8000 	nop.w
   80126:	4806      	ldr	r0, [pc, #24]	; (80140 <frame_dummy+0x28>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b113      	cbz	r3, 80132 <frame_dummy+0x1a>
   8012c:	4b05      	ldr	r3, [pc, #20]	; (80144 <frame_dummy+0x2c>)
   8012e:	b103      	cbz	r3, 80132 <frame_dummy+0x1a>
   80130:	4798      	blx	r3
   80132:	bd08      	pop	{r3, pc}
   80134:	00000000 	.word	0x00000000
   80138:	00087ba8 	.word	0x00087ba8
   8013c:	20070a38 	.word	0x20070a38
   80140:	00087ba8 	.word	0x00087ba8
   80144:	00000000 	.word	0x00000000

00080148 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
   80148:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8014c:	460c      	mov	r4, r1
   8014e:	4690      	mov	r8, r2
	int nChars = 0;

	if (file != 0) {
   80150:	b960      	cbnz	r0, 8016c <_read+0x24>
		return -1;
	}

	for (; len > 0; --len) {
   80152:	2a00      	cmp	r2, #0
   80154:	dd0e      	ble.n	80174 <_read+0x2c>
   80156:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
   80158:	4e09      	ldr	r6, [pc, #36]	; (80180 <_read+0x38>)
   8015a:	4d0a      	ldr	r5, [pc, #40]	; (80184 <_read+0x3c>)
   8015c:	6830      	ldr	r0, [r6, #0]
   8015e:	4621      	mov	r1, r4
   80160:	682b      	ldr	r3, [r5, #0]
   80162:	4798      	blx	r3
		ptr++;
   80164:	3401      	adds	r4, #1

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
   80166:	42bc      	cmp	r4, r7
   80168:	d1f8      	bne.n	8015c <_read+0x14>
   8016a:	e006      	b.n	8017a <_read+0x32>
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
		return -1;
   8016c:	f04f 30ff 	mov.w	r0, #4294967295
   80170:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}

	for (; len > 0; --len) {
   80174:	2000      	movs	r0, #0
   80176:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
   8017a:	4640      	mov	r0, r8
	}
	return nChars;
}
   8017c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80180:	20070ca8 	.word	0x20070ca8
   80184:	20070c98 	.word	0x20070c98

00080188 <twi_set_speed>:
uint32_t twi_set_speed(Twi *p_twi, uint32_t ul_speed, uint32_t ul_mck)
{
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
   80188:	4b0f      	ldr	r3, [pc, #60]	; (801c8 <twi_set_speed+0x40>)
   8018a:	4299      	cmp	r1, r3
   8018c:	d819      	bhi.n	801c2 <twi_set_speed+0x3a>
		return FAIL;
	}

	c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
   8018e:	0049      	lsls	r1, r1, #1
   80190:	fbb2 f2f1 	udiv	r2, r2, r1
   80194:	3a04      	subs	r2, #4

	/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
	while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
   80196:	2aff      	cmp	r2, #255	; 0xff
   80198:	d907      	bls.n	801aa <twi_set_speed+0x22>
 * \retval PASS New speed setting is accepted.
 * \retval FAIL New speed setting is rejected.
 */
uint32_t twi_set_speed(Twi *p_twi, uint32_t ul_speed, uint32_t ul_mck)
{
	uint32_t ckdiv = 0;
   8019a:	2300      	movs	r3, #0
	c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;

	/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
	while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
		/* Increase clock divider */
		ckdiv++;
   8019c:	3301      	adds	r3, #1
		/* Divide cldiv value */
		c_lh_div /= TWI_CLK_DIVIDER;
   8019e:	0852      	lsrs	r2, r2, #1
	}

	c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;

	/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
	while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
   801a0:	2aff      	cmp	r2, #255	; 0xff
   801a2:	d903      	bls.n	801ac <twi_set_speed+0x24>
   801a4:	2b07      	cmp	r3, #7
   801a6:	d1f9      	bne.n	8019c <twi_set_speed+0x14>
   801a8:	e000      	b.n	801ac <twi_set_speed+0x24>
 * \retval PASS New speed setting is accepted.
 * \retval FAIL New speed setting is rejected.
 */
uint32_t twi_set_speed(Twi *p_twi, uint32_t ul_speed, uint32_t ul_mck)
{
	uint32_t ckdiv = 0;
   801aa:	2300      	movs	r3, #0
		c_lh_div /= TWI_CLK_DIVIDER;
	}

	/* set clock waveform generator register */
	p_twi->TWI_CWGR =
			TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
   801ac:	0211      	lsls	r1, r2, #8
   801ae:	b289      	uxth	r1, r1
			TWI_CWGR_CKDIV(ckdiv);
   801b0:	041b      	lsls	r3, r3, #16
   801b2:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
		c_lh_div /= TWI_CLK_DIVIDER;
	}

	/* set clock waveform generator register */
	p_twi->TWI_CWGR =
			TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
   801b6:	430b      	orrs	r3, r1
   801b8:	b2d2      	uxtb	r2, r2
   801ba:	431a      	orrs	r2, r3
		/* Divide cldiv value */
		c_lh_div /= TWI_CLK_DIVIDER;
	}

	/* set clock waveform generator register */
	p_twi->TWI_CWGR =
   801bc:	6102      	str	r2, [r0, #16]
			TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
			TWI_CWGR_CKDIV(ckdiv);

	return PASS;
   801be:	2000      	movs	r0, #0
   801c0:	4770      	bx	lr
{
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
		return FAIL;
   801c2:	2001      	movs	r0, #1
	p_twi->TWI_CWGR =
			TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
			TWI_CWGR_CKDIV(ckdiv);

	return PASS;
}
   801c4:	4770      	bx	lr
   801c6:	bf00      	nop
   801c8:	00061a80 	.word	0x00061a80

000801cc <twi_master_init>:
 * \param p_opt Options for initializing the TWI module (see \ref twi_options_t).
 *
 * \return TWI_SUCCESS if initialization is complete, error code otherwise.
 */
uint32_t twi_master_init(Twi *p_twi, const twi_options_t *p_opt)
{
   801cc:	b538      	push	{r3, r4, r5, lr}
   801ce:	4604      	mov	r4, r0
   801d0:	460d      	mov	r5, r1
	uint32_t status = TWI_SUCCESS;

	/* Disable TWI interrupts */
	p_twi->TWI_IDR = ~0UL;
   801d2:	f04f 33ff 	mov.w	r3, #4294967295
   801d6:	6283      	str	r3, [r0, #40]	; 0x28

	/* Dummy read in status register */
	p_twi->TWI_SR;
   801d8:	6a03      	ldr	r3, [r0, #32]
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
   801da:	2380      	movs	r3, #128	; 0x80
   801dc:	6003      	str	r3, [r0, #0]
	p_twi->TWI_RHR;
   801de:	6b03      	ldr	r3, [r0, #48]	; 0x30
 * \param p_twi Pointer to a TWI instance.
 */
void twi_enable_master_mode(Twi *p_twi)
{
	/* Set Master Disable bit and Slave Disable bit */
	p_twi->TWI_CR = TWI_CR_MSDIS;
   801e0:	2308      	movs	r3, #8
   801e2:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
   801e4:	2320      	movs	r3, #32
   801e6:	6003      	str	r3, [r0, #0]

	/* Set Master Enable bit */
	p_twi->TWI_CR = TWI_CR_MSEN;
   801e8:	2304      	movs	r3, #4
   801ea:	6003      	str	r3, [r0, #0]
	twi_reset(p_twi);

	twi_enable_master_mode(p_twi);

	/* Select the speed */
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
   801ec:	6849      	ldr	r1, [r1, #4]
   801ee:	682a      	ldr	r2, [r5, #0]
   801f0:	4b05      	ldr	r3, [pc, #20]	; (80208 <twi_master_init+0x3c>)
   801f2:	4798      	blx	r3
   801f4:	2801      	cmp	r0, #1
   801f6:	bf14      	ite	ne
   801f8:	2000      	movne	r0, #0
   801fa:	2001      	moveq	r0, #1
		/* The desired speed setting is rejected */
		status = TWI_INVALID_ARGUMENT;
	}

	if (p_opt->smbus == 1) {
   801fc:	7a6b      	ldrb	r3, [r5, #9]
   801fe:	2b01      	cmp	r3, #1
		p_twi->TWI_CR = TWI_CR_QUICK;
   80200:	bf04      	itt	eq
   80202:	2340      	moveq	r3, #64	; 0x40
   80204:	6023      	streq	r3, [r4, #0]
	}

	return status;
}
   80206:	bd38      	pop	{r3, r4, r5, pc}
   80208:	00080189 	.word	0x00080189

0008020c <twi_master_read>:
 * \param p_packet Packet information and data (see \ref twi_packet_t).
 *
 * \return TWI_SUCCESS if all bytes were read, error code otherwise.
 */
uint32_t twi_master_read(Twi *p_twi, twi_packet_t *p_packet)
{
   8020c:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
   80210:	4604      	mov	r4, r0
	uint32_t status;
	uint32_t cnt = p_packet->length;
   80212:	68cb      	ldr	r3, [r1, #12]
	uint8_t *buffer = p_packet->buffer;
   80214:	688e      	ldr	r6, [r1, #8]
	uint8_t stop_sent = 0;
	uint32_t timeout = TWI_TIMEOUT;;
	
	/* Check argument */
	if (cnt == 0) {
   80216:	2b00      	cmp	r3, #0
   80218:	d049      	beq.n	802ae <twi_master_read+0xa2>
		return TWI_INVALID_ARGUMENT;
	}

	/* Set read mode, slave address and 3 internal address byte lengths */
	p_twi->TWI_MMR = 0;
   8021a:	2200      	movs	r2, #0
   8021c:	6042      	str	r2, [r0, #4]
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
   8021e:	6848      	ldr	r0, [r1, #4]
   80220:	0200      	lsls	r0, r0, #8
   80222:	f400 7040 	and.w	r0, r0, #768	; 0x300
		return TWI_INVALID_ARGUMENT;
	}

	/* Set read mode, slave address and 3 internal address byte lengths */
	p_twi->TWI_MMR = 0;
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
   80226:	f440 5080 	orr.w	r0, r0, #4096	; 0x1000
   8022a:	7c0d      	ldrb	r5, [r1, #16]
   8022c:	042d      	lsls	r5, r5, #16
   8022e:	f405 05fe 	and.w	r5, r5, #8323072	; 0x7f0000
   80232:	4328      	orrs	r0, r5
   80234:	6060      	str	r0, [r4, #4]
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
			TWI_MMR_IADRSZ_Msk);

	/* Set internal address for remote chip */
	p_twi->TWI_IADR = 0;
   80236:	60e2      	str	r2, [r4, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
   80238:	684a      	ldr	r2, [r1, #4]
 */
static uint32_t twi_mk_addr(const uint8_t *addr, int len)
{
	uint32_t val;

	if (len == 0)
   8023a:	b15a      	cbz	r2, 80254 <twi_master_read+0x48>
		return 0;

	val = addr[0];
   8023c:	7808      	ldrb	r0, [r1, #0]
	if (len > 1) {
   8023e:	2a01      	cmp	r2, #1
		val <<= 8;
		val |= addr[1];
   80240:	bfc4      	itt	gt
   80242:	784d      	ldrbgt	r5, [r1, #1]
   80244:	ea45 2000 	orrgt.w	r0, r5, r0, lsl #8
	}
	if (len > 2) {
   80248:	2a02      	cmp	r2, #2
   8024a:	dd04      	ble.n	80256 <twi_master_read+0x4a>
		val <<= 8;
		val |= addr[2];
   8024c:	788a      	ldrb	r2, [r1, #2]
   8024e:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
   80252:	e000      	b.n	80256 <twi_master_read+0x4a>
static uint32_t twi_mk_addr(const uint8_t *addr, int len)
{
	uint32_t val;

	if (len == 0)
		return 0;
   80254:	2000      	movs	r0, #0
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
			TWI_MMR_IADRSZ_Msk);

	/* Set internal address for remote chip */
	p_twi->TWI_IADR = 0;
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
   80256:	60e0      	str	r0, [r4, #12]

	/* Send a START condition */
	if (cnt == 1) {
   80258:	2b01      	cmp	r3, #1
   8025a:	d104      	bne.n	80266 <twi_master_read+0x5a>
		p_twi->TWI_CR = TWI_CR_START | TWI_CR_STOP;
   8025c:	2203      	movs	r2, #3
   8025e:	6022      	str	r2, [r4, #0]
		stop_sent = 1;
   80260:	f04f 0c01 	mov.w	ip, #1
   80264:	e02b      	b.n	802be <twi_master_read+0xb2>
	} else {
		p_twi->TWI_CR = TWI_CR_START;
   80266:	2201      	movs	r2, #1
   80268:	6022      	str	r2, [r4, #0]
		stop_sent = 0;
   8026a:	f04f 0c00 	mov.w	ip, #0
   8026e:	e026      	b.n	802be <twi_master_read+0xb2>
	}

	while (cnt > 0) {
		status = p_twi->TWI_SR;
   80270:	6a21      	ldr	r1, [r4, #32]
		if (status & TWI_SR_NACK) {
   80272:	f411 7f80 	tst.w	r1, #256	; 0x100
   80276:	d11c      	bne.n	802b2 <twi_master_read+0xa6>
			return TWI_RECEIVE_NACK;
		}

		if (!timeout--) {
   80278:	1e55      	subs	r5, r2, #1
   8027a:	b1e2      	cbz	r2, 802b6 <twi_master_read+0xaa>
   8027c:	462a      	mov	r2, r5
			return TWI_ERROR_TIMEOUT;
		}
				
		/* Last byte ? */
		if (cnt == 1  && !stop_sent) {
   8027e:	2b01      	cmp	r3, #1
   80280:	d105      	bne.n	8028e <twi_master_read+0x82>
   80282:	f1bc 0f00 	cmp.w	ip, #0
   80286:	d102      	bne.n	8028e <twi_master_read+0x82>
			p_twi->TWI_CR = TWI_CR_STOP;
   80288:	f8c4 9000 	str.w	r9, [r4]
			stop_sent = 1;
   8028c:	46c4      	mov	ip, r8
		}

		if (!(status & TWI_SR_RXRDY)) {
   8028e:	f011 0f02 	tst.w	r1, #2
   80292:	d004      	beq.n	8029e <twi_master_read+0x92>
			continue;
		}
		*buffer++ = p_twi->TWI_RHR;
   80294:	6b22      	ldr	r2, [r4, #48]	; 0x30
   80296:	7032      	strb	r2, [r6, #0]

		cnt--;
   80298:	3b01      	subs	r3, #1
		}

		if (!(status & TWI_SR_RXRDY)) {
			continue;
		}
		*buffer++ = p_twi->TWI_RHR;
   8029a:	3601      	adds	r6, #1

		cnt--;
		timeout = TWI_TIMEOUT;
   8029c:	463a      	mov	r2, r7
	} else {
		p_twi->TWI_CR = TWI_CR_START;
		stop_sent = 0;
	}

	while (cnt > 0) {
   8029e:	2b00      	cmp	r3, #0
   802a0:	d1e6      	bne.n	80270 <twi_master_read+0x64>

		cnt--;
		timeout = TWI_TIMEOUT;
	}

	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
   802a2:	6a23      	ldr	r3, [r4, #32]
   802a4:	f013 0f01 	tst.w	r3, #1
   802a8:	d0fb      	beq.n	802a2 <twi_master_read+0x96>
	}

	p_twi->TWI_SR;
   802aa:	6a23      	ldr	r3, [r4, #32]

	return TWI_SUCCESS;
   802ac:	e014      	b.n	802d8 <twi_master_read+0xcc>
	uint8_t stop_sent = 0;
	uint32_t timeout = TWI_TIMEOUT;;
	
	/* Check argument */
	if (cnt == 0) {
		return TWI_INVALID_ARGUMENT;
   802ae:	2001      	movs	r0, #1
   802b0:	e012      	b.n	802d8 <twi_master_read+0xcc>
	}

	while (cnt > 0) {
		status = p_twi->TWI_SR;
		if (status & TWI_SR_NACK) {
			return TWI_RECEIVE_NACK;
   802b2:	2005      	movs	r0, #5
   802b4:	e010      	b.n	802d8 <twi_master_read+0xcc>
		}

		if (!timeout--) {
			return TWI_ERROR_TIMEOUT;
   802b6:	2009      	movs	r0, #9
   802b8:	e00e      	b.n	802d8 <twi_master_read+0xcc>
	}

	while (cnt > 0) {
		status = p_twi->TWI_SR;
		if (status & TWI_SR_NACK) {
			return TWI_RECEIVE_NACK;
   802ba:	2005      	movs	r0, #5
   802bc:	e00c      	b.n	802d8 <twi_master_read+0xcc>
		p_twi->TWI_CR = TWI_CR_START;
		stop_sent = 0;
	}

	while (cnt > 0) {
		status = p_twi->TWI_SR;
   802be:	6a21      	ldr	r1, [r4, #32]
		if (status & TWI_SR_NACK) {
   802c0:	f411 7080 	ands.w	r0, r1, #256	; 0x100
   802c4:	d1f9      	bne.n	802ba <twi_master_read+0xae>
			return TWI_RECEIVE_NACK;
		}

		if (!timeout--) {
   802c6:	f643 2297 	movw	r2, #14999	; 0x3a97
			return TWI_ERROR_TIMEOUT;
		}
				
		/* Last byte ? */
		if (cnt == 1  && !stop_sent) {
			p_twi->TWI_CR = TWI_CR_STOP;
   802ca:	f04f 0902 	mov.w	r9, #2
			stop_sent = 1;
   802ce:	f04f 0801 	mov.w	r8, #1
			continue;
		}
		*buffer++ = p_twi->TWI_RHR;

		cnt--;
		timeout = TWI_TIMEOUT;
   802d2:	f643 2798 	movw	r7, #15000	; 0x3a98
   802d6:	e7d2      	b.n	8027e <twi_master_read+0x72>
	}

	p_twi->TWI_SR;

	return TWI_SUCCESS;
}
   802d8:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
   802dc:	4770      	bx	lr
   802de:	bf00      	nop

000802e0 <twi_master_write>:
 * \param p_packet Packet information and data (see \ref twi_packet_t).
 *
 * \return TWI_SUCCESS if all bytes were written, error code otherwise.
 */
uint32_t twi_master_write(Twi *p_twi, twi_packet_t *p_packet)
{
   802e0:	b470      	push	{r4, r5, r6}
   802e2:	4603      	mov	r3, r0
	uint32_t status;
	uint32_t cnt = p_packet->length;
   802e4:	68ca      	ldr	r2, [r1, #12]
	uint8_t *buffer = p_packet->buffer;
   802e6:	6888      	ldr	r0, [r1, #8]

	/* Check argument */
	if (cnt == 0) {
   802e8:	2a00      	cmp	r2, #0
   802ea:	d03f      	beq.n	8036c <twi_master_write+0x8c>
		return TWI_INVALID_ARGUMENT;
	}

	/* Set write mode, slave address and 3 internal address byte lengths */
	p_twi->TWI_MMR = 0;
   802ec:	2400      	movs	r4, #0
   802ee:	605c      	str	r4, [r3, #4]
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
   802f0:	7c0e      	ldrb	r6, [r1, #16]
   802f2:	0436      	lsls	r6, r6, #16
   802f4:	f406 06fe 	and.w	r6, r6, #8323072	; 0x7f0000
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
   802f8:	684d      	ldr	r5, [r1, #4]
   802fa:	022d      	lsls	r5, r5, #8
   802fc:	f405 7540 	and.w	r5, r5, #768	; 0x300
		return TWI_INVALID_ARGUMENT;
	}

	/* Set write mode, slave address and 3 internal address byte lengths */
	p_twi->TWI_MMR = 0;
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
   80300:	4335      	orrs	r5, r6
   80302:	605d      	str	r5, [r3, #4]
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
			TWI_MMR_IADRSZ_Msk);

	/* Set internal address for remote chip */
	p_twi->TWI_IADR = 0;
   80304:	60dc      	str	r4, [r3, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
   80306:	684c      	ldr	r4, [r1, #4]
 */
static uint32_t twi_mk_addr(const uint8_t *addr, int len)
{
	uint32_t val;

	if (len == 0)
   80308:	b15c      	cbz	r4, 80322 <twi_master_write+0x42>
		return 0;

	val = addr[0];
   8030a:	780d      	ldrb	r5, [r1, #0]
	if (len > 1) {
   8030c:	2c01      	cmp	r4, #1
		val <<= 8;
		val |= addr[1];
   8030e:	bfc4      	itt	gt
   80310:	784e      	ldrbgt	r6, [r1, #1]
   80312:	ea46 2505 	orrgt.w	r5, r6, r5, lsl #8
	}
	if (len > 2) {
   80316:	2c02      	cmp	r4, #2
   80318:	dd04      	ble.n	80324 <twi_master_write+0x44>
		val <<= 8;
		val |= addr[2];
   8031a:	7889      	ldrb	r1, [r1, #2]
   8031c:	ea41 2505 	orr.w	r5, r1, r5, lsl #8
   80320:	e000      	b.n	80324 <twi_master_write+0x44>
static uint32_t twi_mk_addr(const uint8_t *addr, int len)
{
	uint32_t val;

	if (len == 0)
		return 0;
   80322:	2500      	movs	r5, #0
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
			TWI_MMR_IADRSZ_Msk);

	/* Set internal address for remote chip */
	p_twi->TWI_IADR = 0;
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
   80324:	60dd      	str	r5, [r3, #12]
   80326:	e00b      	b.n	80340 <twi_master_write+0x60>

	/* Send all bytes */
	while (cnt > 0) {
		status = p_twi->TWI_SR;
   80328:	6a19      	ldr	r1, [r3, #32]
		if (status & TWI_SR_NACK) {
   8032a:	f411 7f80 	tst.w	r1, #256	; 0x100
   8032e:	d11f      	bne.n	80370 <twi_master_write+0x90>
			return TWI_RECEIVE_NACK;
		}

		if (!(status & TWI_SR_TXRDY)) {
   80330:	f011 0f04 	tst.w	r1, #4
   80334:	d0f8      	beq.n	80328 <twi_master_write+0x48>
			continue;
		}
		p_twi->TWI_THR = *buffer++;
   80336:	f810 1b01 	ldrb.w	r1, [r0], #1
   8033a:	6359      	str	r1, [r3, #52]	; 0x34
	/* Set internal address for remote chip */
	p_twi->TWI_IADR = 0;
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);

	/* Send all bytes */
	while (cnt > 0) {
   8033c:	3a01      	subs	r2, #1
   8033e:	d007      	beq.n	80350 <twi_master_write+0x70>
		status = p_twi->TWI_SR;
   80340:	6a19      	ldr	r1, [r3, #32]
		if (status & TWI_SR_NACK) {
   80342:	f411 7f80 	tst.w	r1, #256	; 0x100
   80346:	d115      	bne.n	80374 <twi_master_write+0x94>
			return TWI_RECEIVE_NACK;
		}

		if (!(status & TWI_SR_TXRDY)) {
   80348:	f011 0f04 	tst.w	r1, #4
   8034c:	d1f3      	bne.n	80336 <twi_master_write+0x56>
   8034e:	e7eb      	b.n	80328 <twi_master_write+0x48>

		cnt--;
	}

	while (1) {
		status = p_twi->TWI_SR;
   80350:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWI_SR_NACK) {
   80352:	f412 7080 	ands.w	r0, r2, #256	; 0x100
   80356:	d10f      	bne.n	80378 <twi_master_write+0x98>
			return TWI_RECEIVE_NACK;
		}

		if (status & TWI_SR_TXRDY) {
   80358:	f012 0f04 	tst.w	r2, #4
   8035c:	d0f8      	beq.n	80350 <twi_master_write+0x70>
			break;
		}
	}

	p_twi->TWI_CR = TWI_CR_STOP;
   8035e:	2202      	movs	r2, #2
   80360:	601a      	str	r2, [r3, #0]

	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
   80362:	6a1a      	ldr	r2, [r3, #32]
   80364:	f012 0f01 	tst.w	r2, #1
   80368:	d0fb      	beq.n	80362 <twi_master_write+0x82>
   8036a:	e006      	b.n	8037a <twi_master_write+0x9a>
	uint32_t cnt = p_packet->length;
	uint8_t *buffer = p_packet->buffer;

	/* Check argument */
	if (cnt == 0) {
		return TWI_INVALID_ARGUMENT;
   8036c:	2001      	movs	r0, #1
   8036e:	e004      	b.n	8037a <twi_master_write+0x9a>

	/* Send all bytes */
	while (cnt > 0) {
		status = p_twi->TWI_SR;
		if (status & TWI_SR_NACK) {
			return TWI_RECEIVE_NACK;
   80370:	2005      	movs	r0, #5
   80372:	e002      	b.n	8037a <twi_master_write+0x9a>
   80374:	2005      	movs	r0, #5
   80376:	e000      	b.n	8037a <twi_master_write+0x9a>
	}

	while (1) {
		status = p_twi->TWI_SR;
		if (status & TWI_SR_NACK) {
			return TWI_RECEIVE_NACK;
   80378:	2005      	movs	r0, #5

	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
	}

	return TWI_SUCCESS;
}
   8037a:	bc70      	pop	{r4, r5, r6}
   8037c:	4770      	bx	lr
   8037e:	bf00      	nop

00080380 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
   80380:	6943      	ldr	r3, [r0, #20]
   80382:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
   80386:	bf1d      	ittte	ne
   80388:	f3c1 0108 	ubfxne	r1, r1, #0, #9
   8038c:	61c1      	strne	r1, [r0, #28]
	return 0;
   8038e:	2000      	movne	r0, #0
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
		return 1;
   80390:	2001      	moveq	r0, #1
	}

	p_usart->US_THR = US_THR_TXCHR(c);
	return 0;
}
   80392:	4770      	bx	lr

00080394 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
   80394:	6943      	ldr	r3, [r0, #20]
   80396:	f013 0f01 	tst.w	r3, #1
   8039a:	d005      	beq.n	803a8 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
   8039c:	6983      	ldr	r3, [r0, #24]
   8039e:	f3c3 0308 	ubfx	r3, r3, #0, #9
   803a2:	600b      	str	r3, [r1, #0]

	return 0;
   803a4:	2000      	movs	r0, #0
   803a6:	4770      	bx	lr
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
		return 1;
   803a8:	2001      	movs	r0, #1

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;

	return 0;
}
   803aa:	4770      	bx	lr

000803ac <vListInsertEnd>:

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	pvListGetOwnerOfNextEntry.  This means it has to be the item pointed to by
	the pxIndex member. */
	pxIndex = pxList->pxIndex;
   803ac:	6843      	ldr	r3, [r0, #4]

	pxNewListItem->pxNext = pxIndex->pxNext;
   803ae:	685a      	ldr	r2, [r3, #4]
   803b0:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxPrevious = pxList->pxIndex;
   803b2:	6842      	ldr	r2, [r0, #4]
   803b4:	608a      	str	r2, [r1, #8]
	pxIndex->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
   803b6:	685a      	ldr	r2, [r3, #4]
   803b8:	6091      	str	r1, [r2, #8]
	pxIndex->pxNext = ( volatile xListItem * ) pxNewListItem;
   803ba:	6059      	str	r1, [r3, #4]
	pxList->pxIndex = ( volatile xListItem * ) pxNewListItem;
   803bc:	6041      	str	r1, [r0, #4]

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;
   803be:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
   803c0:	6803      	ldr	r3, [r0, #0]
   803c2:	3301      	adds	r3, #1
   803c4:	6003      	str	r3, [r0, #0]
   803c6:	4770      	bx	lr

000803c8 <uxListRemove>:

unsigned portBASE_TYPE uxListRemove( xListItem *pxItemToRemove )
{
xList * pxList;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   803c8:	6843      	ldr	r3, [r0, #4]
   803ca:	6882      	ldr	r2, [r0, #8]
   803cc:	609a      	str	r2, [r3, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
   803ce:	6883      	ldr	r3, [r0, #8]
   803d0:	6842      	ldr	r2, [r0, #4]
   803d2:	605a      	str	r2, [r3, #4]

	/* The list item knows which list it is in.  Obtain the list from the list
	item. */
	pxList = ( xList * ) pxItemToRemove->pvContainer;
   803d4:	6903      	ldr	r3, [r0, #16]

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
   803d6:	685a      	ldr	r2, [r3, #4]
   803d8:	4282      	cmp	r2, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
   803da:	bf04      	itt	eq
   803dc:	6882      	ldreq	r2, [r0, #8]
   803de:	605a      	streq	r2, [r3, #4]
	}

	pxItemToRemove->pvContainer = NULL;
   803e0:	2200      	movs	r2, #0
   803e2:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
   803e4:	681a      	ldr	r2, [r3, #0]
   803e6:	3a01      	subs	r2, #1
   803e8:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
   803ea:	6818      	ldr	r0, [r3, #0]
}
   803ec:	4770      	bx	lr
   803ee:	bf00      	nop

000803f0 <SVC_Handler>:
}
/*-----------------------------------------------------------*/

__attribute__ (( naked )) void SVC_Handler( void )
{
	__asm volatile (
   803f0:	4b06      	ldr	r3, [pc, #24]	; (8040c <pxCurrentTCBConst2>)
   803f2:	6819      	ldr	r1, [r3, #0]
   803f4:	6808      	ldr	r0, [r1, #0]
   803f6:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   803fa:	f380 8809 	msr	PSP, r0
   803fe:	f04f 0000 	mov.w	r0, #0
   80402:	f380 8811 	msr	BASEPRI, r0
   80406:	f04e 0e0d 	orr.w	lr, lr, #13
   8040a:	4770      	bx	lr

0008040c <pxCurrentTCBConst2>:
   8040c:	20070b28 	.word	0x20070b28

00080410 <ulPortSetInterruptMask>:
}
/*-----------------------------------------------------------*/

__attribute__(( naked )) unsigned long ulPortSetInterruptMask( void )
{
	__asm volatile														\
   80410:	f3ef 8011 	mrs	r0, BASEPRI
   80414:	f04f 01a0 	mov.w	r1, #160	; 0xa0
   80418:	f381 8811 	msr	BASEPRI, r1
   8041c:	4770      	bx	lr
	);

	/* This return will not be reached but is necessary to prevent compiler
	warnings. */
	return 0;
}
   8041e:	2000      	movs	r0, #0

00080420 <vPortClearInterruptMask>:
/*-----------------------------------------------------------*/

__attribute__(( naked )) void vPortClearInterruptMask( unsigned long ulNewMaskValue )
{
	__asm volatile													\
   80420:	f380 8811 	msr	BASEPRI, r0
   80424:	4770      	bx	lr
   80426:	bf00      	nop

00080428 <PendSV_Handler>:

__attribute__(( naked )) void PendSV_Handler( void )
{
	/* This is a naked function. */

	__asm volatile
   80428:	f3ef 8009 	mrs	r0, PSP
   8042c:	4b0c      	ldr	r3, [pc, #48]	; (80460 <pxCurrentTCBConst>)
   8042e:	681a      	ldr	r2, [r3, #0]
   80430:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   80434:	6010      	str	r0, [r2, #0]
   80436:	e92d 4008 	stmdb	sp!, {r3, lr}
   8043a:	f04f 00a0 	mov.w	r0, #160	; 0xa0
   8043e:	f380 8811 	msr	BASEPRI, r0
   80442:	f000 f8bb 	bl	805bc <vTaskSwitchContext>
   80446:	f04f 0000 	mov.w	r0, #0
   8044a:	f380 8811 	msr	BASEPRI, r0
   8044e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   80452:	6819      	ldr	r1, [r3, #0]
   80454:	6808      	ldr	r0, [r1, #0]
   80456:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8045a:	f380 8809 	msr	PSP, r0
   8045e:	4770      	bx	lr

00080460 <pxCurrentTCBConst>:
   80460:	20070b28 	.word	0x20070b28

00080464 <SysTick_Handler>:
	);
}
/*-----------------------------------------------------------*/

void SysTick_Handler( void )
{
   80464:	b508      	push	{r3, lr}
	/* If using preemption, also force a context switch. */
	#if configUSE_PREEMPTION == 1
		portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
   80466:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   8046a:	4b05      	ldr	r3, [pc, #20]	; (80480 <SysTick_Handler+0x1c>)
   8046c:	601a      	str	r2, [r3, #0]
	to generate the tick interrupt. */
	#if configUSE_TICKLESS_IDLE == 1
		portNVIC_SYSTICK_LOAD_REG = ulTimerReloadValueForOneTick;
	#endif

	( void ) portSET_INTERRUPT_MASK_FROM_ISR();
   8046e:	4b05      	ldr	r3, [pc, #20]	; (80484 <SysTick_Handler+0x20>)
   80470:	4798      	blx	r3
	{
		vTaskIncrementTick();
   80472:	4b05      	ldr	r3, [pc, #20]	; (80488 <SysTick_Handler+0x24>)
   80474:	4798      	blx	r3
	}
	portCLEAR_INTERRUPT_MASK_FROM_ISR( 0 );
   80476:	2000      	movs	r0, #0
   80478:	4b04      	ldr	r3, [pc, #16]	; (8048c <SysTick_Handler+0x28>)
   8047a:	4798      	blx	r3
   8047c:	bd08      	pop	{r3, pc}
   8047e:	bf00      	nop
   80480:	e000ed04 	.word	0xe000ed04
   80484:	00080411 	.word	0x00080411
   80488:	00080491 	.word	0x00080491
   8048c:	00080421 	.word	0x00080421

00080490 <vTaskIncrementTick>:
 * SCHEDULER INTERNALS AVAILABLE FOR PORTING PURPOSES
 * documented in task.h
 *----------------------------------------------------------*/

void vTaskIncrementTick( void )
{
   80490:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}

	/* Called by the portable layer each time a tick interrupt occurs.
	Increments the tick then checks to see if the new tick value will cause any
	tasks to be unblocked. */
	traceTASK_INCREMENT_TICK( xTickCount );
	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
   80494:	4b3d      	ldr	r3, [pc, #244]	; (8058c <vTaskIncrementTick+0xfc>)
   80496:	681b      	ldr	r3, [r3, #0]
   80498:	2b00      	cmp	r3, #0
   8049a:	d171      	bne.n	80580 <vTaskIncrementTick+0xf0>
	{
		++xTickCount;
   8049c:	4b3c      	ldr	r3, [pc, #240]	; (80590 <vTaskIncrementTick+0x100>)
   8049e:	881a      	ldrh	r2, [r3, #0]
   804a0:	3201      	adds	r2, #1
   804a2:	b292      	uxth	r2, r2
   804a4:	801a      	strh	r2, [r3, #0]
		if( xTickCount == ( portTickType ) 0U )
   804a6:	881b      	ldrh	r3, [r3, #0]
   804a8:	b29b      	uxth	r3, r3
   804aa:	bb03      	cbnz	r3, 804ee <vTaskIncrementTick+0x5e>
			xList *pxTemp;

			/* Tick count has overflowed so we need to swap the delay lists.
			If there are any items in pxDelayedTaskList here then there is
			an error! */
			configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );
   804ac:	4b39      	ldr	r3, [pc, #228]	; (80594 <vTaskIncrementTick+0x104>)
   804ae:	681b      	ldr	r3, [r3, #0]
   804b0:	681b      	ldr	r3, [r3, #0]
   804b2:	b11b      	cbz	r3, 804bc <vTaskIncrementTick+0x2c>
   804b4:	4b38      	ldr	r3, [pc, #224]	; (80598 <vTaskIncrementTick+0x108>)
   804b6:	4798      	blx	r3
   804b8:	bf00      	nop
   804ba:	e7fd      	b.n	804b8 <vTaskIncrementTick+0x28>

			pxTemp = pxDelayedTaskList;
   804bc:	4b35      	ldr	r3, [pc, #212]	; (80594 <vTaskIncrementTick+0x104>)
   804be:	6819      	ldr	r1, [r3, #0]
			pxDelayedTaskList = pxOverflowDelayedTaskList;
   804c0:	4a36      	ldr	r2, [pc, #216]	; (8059c <vTaskIncrementTick+0x10c>)
   804c2:	6810      	ldr	r0, [r2, #0]
   804c4:	6018      	str	r0, [r3, #0]
			pxOverflowDelayedTaskList = pxTemp;
   804c6:	6011      	str	r1, [r2, #0]
			xNumOfOverflows++;
   804c8:	4a35      	ldr	r2, [pc, #212]	; (805a0 <vTaskIncrementTick+0x110>)
   804ca:	6811      	ldr	r1, [r2, #0]
   804cc:	3101      	adds	r1, #1
   804ce:	6011      	str	r1, [r2, #0]

			if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   804d0:	681b      	ldr	r3, [r3, #0]
   804d2:	681b      	ldr	r3, [r3, #0]
   804d4:	b923      	cbnz	r3, 804e0 <vTaskIncrementTick+0x50>
				/* The new current delayed list is empty.  Set
				xNextTaskUnblockTime to the maximum possible value so it is
				extremely unlikely that the
				if( xTickCount >= xNextTaskUnblockTime ) test will pass until
				there is an item in the delayed list. */
				xNextTaskUnblockTime = portMAX_DELAY;
   804d6:	f64f 72ff 	movw	r2, #65535	; 0xffff
   804da:	4b32      	ldr	r3, [pc, #200]	; (805a4 <vTaskIncrementTick+0x114>)
   804dc:	801a      	strh	r2, [r3, #0]
   804de:	e006      	b.n	804ee <vTaskIncrementTick+0x5e>
			{
				/* The new current delayed list is not empty, get the value of
				the item at the head of the delayed list.  This is the time at
				which the task at the head of the delayed list should be removed
				from the Blocked state. */
				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
   804e0:	4b2c      	ldr	r3, [pc, #176]	; (80594 <vTaskIncrementTick+0x104>)
   804e2:	681b      	ldr	r3, [r3, #0]
   804e4:	68db      	ldr	r3, [r3, #12]
   804e6:	68db      	ldr	r3, [r3, #12]
				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
   804e8:	889a      	ldrh	r2, [r3, #4]
   804ea:	4b2e      	ldr	r3, [pc, #184]	; (805a4 <vTaskIncrementTick+0x114>)
   804ec:	801a      	strh	r2, [r3, #0]
			}
		}

		/* See if this tick has made a timeout expire. */
		prvCheckDelayedTasks();
   804ee:	4b28      	ldr	r3, [pc, #160]	; (80590 <vTaskIncrementTick+0x100>)
   804f0:	881a      	ldrh	r2, [r3, #0]
   804f2:	b292      	uxth	r2, r2
   804f4:	4b2b      	ldr	r3, [pc, #172]	; (805a4 <vTaskIncrementTick+0x114>)
   804f6:	881b      	ldrh	r3, [r3, #0]
   804f8:	b29b      	uxth	r3, r3
   804fa:	429a      	cmp	r2, r3
   804fc:	d344      	bcc.n	80588 <vTaskIncrementTick+0xf8>
   804fe:	4b25      	ldr	r3, [pc, #148]	; (80594 <vTaskIncrementTick+0x104>)
   80500:	681b      	ldr	r3, [r3, #0]
   80502:	681b      	ldr	r3, [r3, #0]
   80504:	b153      	cbz	r3, 8051c <vTaskIncrementTick+0x8c>
   80506:	4b23      	ldr	r3, [pc, #140]	; (80594 <vTaskIncrementTick+0x104>)
   80508:	681b      	ldr	r3, [r3, #0]
   8050a:	68db      	ldr	r3, [r3, #12]
   8050c:	68dc      	ldr	r4, [r3, #12]
   8050e:	88a3      	ldrh	r3, [r4, #4]
   80510:	4a1f      	ldr	r2, [pc, #124]	; (80590 <vTaskIncrementTick+0x100>)
   80512:	8812      	ldrh	r2, [r2, #0]
   80514:	b292      	uxth	r2, r2
   80516:	4293      	cmp	r3, r2
   80518:	d914      	bls.n	80544 <vTaskIncrementTick+0xb4>
   8051a:	e00f      	b.n	8053c <vTaskIncrementTick+0xac>
   8051c:	f64f 72ff 	movw	r2, #65535	; 0xffff
   80520:	4b20      	ldr	r3, [pc, #128]	; (805a4 <vTaskIncrementTick+0x114>)
   80522:	801a      	strh	r2, [r3, #0]
   80524:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80528:	4b1a      	ldr	r3, [pc, #104]	; (80594 <vTaskIncrementTick+0x104>)
   8052a:	681b      	ldr	r3, [r3, #0]
   8052c:	68db      	ldr	r3, [r3, #12]
   8052e:	68dc      	ldr	r4, [r3, #12]
   80530:	88a3      	ldrh	r3, [r4, #4]
   80532:	4a17      	ldr	r2, [pc, #92]	; (80590 <vTaskIncrementTick+0x100>)
   80534:	8812      	ldrh	r2, [r2, #0]
   80536:	b292      	uxth	r2, r2
   80538:	4293      	cmp	r3, r2
   8053a:	d907      	bls.n	8054c <vTaskIncrementTick+0xbc>
   8053c:	4a19      	ldr	r2, [pc, #100]	; (805a4 <vTaskIncrementTick+0x114>)
   8053e:	8013      	strh	r3, [r2, #0]
   80540:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80544:	4e18      	ldr	r6, [pc, #96]	; (805a8 <vTaskIncrementTick+0x118>)
   80546:	4f19      	ldr	r7, [pc, #100]	; (805ac <vTaskIncrementTick+0x11c>)
   80548:	f8df 806c 	ldr.w	r8, [pc, #108]	; 805b8 <vTaskIncrementTick+0x128>
   8054c:	1d25      	adds	r5, r4, #4
   8054e:	4628      	mov	r0, r5
   80550:	47b0      	blx	r6
   80552:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   80554:	b113      	cbz	r3, 8055c <vTaskIncrementTick+0xcc>
   80556:	f104 0018 	add.w	r0, r4, #24
   8055a:	47b0      	blx	r6
   8055c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   8055e:	683a      	ldr	r2, [r7, #0]
   80560:	4293      	cmp	r3, r2
   80562:	bf88      	it	hi
   80564:	603b      	strhi	r3, [r7, #0]
   80566:	eb03 0083 	add.w	r0, r3, r3, lsl #2
   8056a:	eb08 0080 	add.w	r0, r8, r0, lsl #2
   8056e:	4629      	mov	r1, r5
   80570:	4b0f      	ldr	r3, [pc, #60]	; (805b0 <vTaskIncrementTick+0x120>)
   80572:	4798      	blx	r3
   80574:	4b07      	ldr	r3, [pc, #28]	; (80594 <vTaskIncrementTick+0x104>)
   80576:	681b      	ldr	r3, [r3, #0]
   80578:	681b      	ldr	r3, [r3, #0]
   8057a:	2b00      	cmp	r3, #0
   8057c:	d1d4      	bne.n	80528 <vTaskIncrementTick+0x98>
   8057e:	e7cd      	b.n	8051c <vTaskIncrementTick+0x8c>
	}
	else
	{
		++uxMissedTicks;
   80580:	4b0c      	ldr	r3, [pc, #48]	; (805b4 <vTaskIncrementTick+0x124>)
   80582:	681a      	ldr	r2, [r3, #0]
   80584:	3201      	adds	r2, #1
   80586:	601a      	str	r2, [r3, #0]
   80588:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8058c:	20070b24 	.word	0x20070b24
   80590:	20070b30 	.word	0x20070b30
   80594:	20070a54 	.word	0x20070a54
   80598:	00080411 	.word	0x00080411
   8059c:	20070b34 	.word	0x20070b34
   805a0:	20070b2c 	.word	0x20070b2c
   805a4:	20070138 	.word	0x20070138
   805a8:	000803c9 	.word	0x000803c9
   805ac:	20070a58 	.word	0x20070a58
   805b0:	000803ad 	.word	0x000803ad
   805b4:	20070a50 	.word	0x20070a50
   805b8:	20070a5c 	.word	0x20070a5c

000805bc <vTaskSwitchContext>:

#endif
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
   805bc:	b508      	push	{r3, lr}
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
   805be:	4b1d      	ldr	r3, [pc, #116]	; (80634 <vTaskSwitchContext+0x78>)
   805c0:	681b      	ldr	r3, [r3, #0]
   805c2:	b95b      	cbnz	r3, 805dc <vTaskSwitchContext+0x20>
		#endif

		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();

		taskSELECT_HIGHEST_PRIORITY_TASK();
   805c4:	4b1c      	ldr	r3, [pc, #112]	; (80638 <vTaskSwitchContext+0x7c>)
   805c6:	681b      	ldr	r3, [r3, #0]
   805c8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
   805cc:	009b      	lsls	r3, r3, #2
   805ce:	4a1b      	ldr	r2, [pc, #108]	; (8063c <vTaskSwitchContext+0x80>)
   805d0:	58d3      	ldr	r3, [r2, r3]
   805d2:	b9cb      	cbnz	r3, 80608 <vTaskSwitchContext+0x4c>
   805d4:	4b18      	ldr	r3, [pc, #96]	; (80638 <vTaskSwitchContext+0x7c>)
   805d6:	681b      	ldr	r3, [r3, #0]
   805d8:	b953      	cbnz	r3, 805f0 <vTaskSwitchContext+0x34>
   805da:	e005      	b.n	805e8 <vTaskSwitchContext+0x2c>
{
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
	{
		/* The scheduler is currently suspended - do not allow a context
		switch. */
		xMissedYield = pdTRUE;
   805dc:	2201      	movs	r2, #1
   805de:	4b18      	ldr	r3, [pc, #96]	; (80640 <vTaskSwitchContext+0x84>)
   805e0:	601a      	str	r2, [r3, #0]
   805e2:	bd08      	pop	{r3, pc}
		#endif

		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();

		taskSELECT_HIGHEST_PRIORITY_TASK();
   805e4:	681a      	ldr	r2, [r3, #0]
   805e6:	b92a      	cbnz	r2, 805f4 <vTaskSwitchContext+0x38>
   805e8:	4b16      	ldr	r3, [pc, #88]	; (80644 <vTaskSwitchContext+0x88>)
   805ea:	4798      	blx	r3
   805ec:	bf00      	nop
   805ee:	e7fd      	b.n	805ec <vTaskSwitchContext+0x30>
   805f0:	4b11      	ldr	r3, [pc, #68]	; (80638 <vTaskSwitchContext+0x7c>)
   805f2:	4912      	ldr	r1, [pc, #72]	; (8063c <vTaskSwitchContext+0x80>)
   805f4:	681a      	ldr	r2, [r3, #0]
   805f6:	3a01      	subs	r2, #1
   805f8:	601a      	str	r2, [r3, #0]
   805fa:	681a      	ldr	r2, [r3, #0]
   805fc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80600:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
   80604:	2a00      	cmp	r2, #0
   80606:	d0ed      	beq.n	805e4 <vTaskSwitchContext+0x28>
   80608:	4b0b      	ldr	r3, [pc, #44]	; (80638 <vTaskSwitchContext+0x7c>)
   8060a:	681b      	ldr	r3, [r3, #0]
   8060c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
   80610:	4a0a      	ldr	r2, [pc, #40]	; (8063c <vTaskSwitchContext+0x80>)
   80612:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   80616:	685a      	ldr	r2, [r3, #4]
   80618:	6852      	ldr	r2, [r2, #4]
   8061a:	605a      	str	r2, [r3, #4]
   8061c:	f103 0108 	add.w	r1, r3, #8
   80620:	428a      	cmp	r2, r1
   80622:	bf04      	itt	eq
   80624:	6852      	ldreq	r2, [r2, #4]
   80626:	605a      	streq	r2, [r3, #4]
   80628:	685b      	ldr	r3, [r3, #4]
   8062a:	68da      	ldr	r2, [r3, #12]
   8062c:	4b06      	ldr	r3, [pc, #24]	; (80648 <vTaskSwitchContext+0x8c>)
   8062e:	601a      	str	r2, [r3, #0]
   80630:	bd08      	pop	{r3, pc}
   80632:	bf00      	nop
   80634:	20070b24 	.word	0x20070b24
   80638:	20070a58 	.word	0x20070a58
   8063c:	20070a5c 	.word	0x20070a5c
   80640:	20070b38 	.word	0x20070b38
   80644:	00080411 	.word	0x00080411
   80648:	20070b28 	.word	0x20070b28

0008064c <USART0_Handler>:
#if SAMD || SAMR21
void USART_HOST_ISR_VECT(uint8_t instance)
#else
USART_HOST_ISR_VECT()
#endif
{
   8064c:	b500      	push	{lr}
   8064e:	b083      	sub	sp, #12
	uint8_t temp;
#if SAMD || SAMR21
	usart_serial_read_packet(&host_uart_module, &temp, 1);
#else
	usart_serial_read_packet(USART_HOST, &temp, 1);
   80650:	4813      	ldr	r0, [pc, #76]	; (806a0 <USART0_Handler+0x54>)
   80652:	f10d 0107 	add.w	r1, sp, #7
   80656:	2201      	movs	r2, #1
   80658:	4b12      	ldr	r3, [pc, #72]	; (806a4 <USART0_Handler+0x58>)
   8065a:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i");
   8065c:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   8065e:	f3bf 8f5f 	dmb	sy
#endif

	/* Introducing critical section to avoid buffer corruption. */
	cpu_irq_disable();
   80662:	2200      	movs	r2, #0
   80664:	4b10      	ldr	r3, [pc, #64]	; (806a8 <USART0_Handler+0x5c>)
   80666:	701a      	strb	r2, [r3, #0]

	/* The number of data in the receive buffer is incremented and the
	 * buffer is updated. */
	serial_rx_count++;
   80668:	4b10      	ldr	r3, [pc, #64]	; (806ac <USART0_Handler+0x60>)
   8066a:	781a      	ldrb	r2, [r3, #0]
   8066c:	3201      	adds	r2, #1
   8066e:	701a      	strb	r2, [r3, #0]

	serial_rx_buf[serial_rx_buf_tail] = temp;
   80670:	4b0f      	ldr	r3, [pc, #60]	; (806b0 <USART0_Handler+0x64>)
   80672:	781b      	ldrb	r3, [r3, #0]
   80674:	f89d 1007 	ldrb.w	r1, [sp, #7]
   80678:	4a0e      	ldr	r2, [pc, #56]	; (806b4 <USART0_Handler+0x68>)
   8067a:	54d1      	strb	r1, [r2, r3]

	if ((SERIAL_RX_BUF_SIZE_HOST - 1) == serial_rx_buf_tail) {
   8067c:	2b9b      	cmp	r3, #155	; 0x9b
   8067e:	d103      	bne.n	80688 <USART0_Handler+0x3c>
		/* Reached the end of buffer, revert back to beginning of
		 * buffer. */
		serial_rx_buf_tail = 0x00;
   80680:	2200      	movs	r2, #0
   80682:	4b0b      	ldr	r3, [pc, #44]	; (806b0 <USART0_Handler+0x64>)
   80684:	701a      	strb	r2, [r3, #0]
   80686:	e002      	b.n	8068e <USART0_Handler+0x42>
	} else {
		serial_rx_buf_tail++;
   80688:	3301      	adds	r3, #1
   8068a:	4a09      	ldr	r2, [pc, #36]	; (806b0 <USART0_Handler+0x64>)
   8068c:	7013      	strb	r3, [r2, #0]
	}

	cpu_irq_enable();
   8068e:	2201      	movs	r2, #1
   80690:	4b05      	ldr	r3, [pc, #20]	; (806a8 <USART0_Handler+0x5c>)
   80692:	701a      	strb	r2, [r3, #0]
   80694:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i");
   80698:	b662      	cpsie	i
}
   8069a:	b003      	add	sp, #12
   8069c:	f85d fb04 	ldr.w	pc, [sp], #4
   806a0:	40098000 	.word	0x40098000
   806a4:	00080b51 	.word	0x00080b51
   806a8:	2007018c 	.word	0x2007018c
   806ac:	20070bd9 	.word	0x20070bd9
   806b0:	20070bd8 	.word	0x20070bd8
   806b4:	20070b3c 	.word	0x20070b3c

000806b8 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
   806b8:	b5f0      	push	{r4, r5, r6, r7, lr}
   806ba:	b083      	sub	sp, #12
   806bc:	4604      	mov	r4, r0
   806be:	460d      	mov	r5, r1
	uint32_t val = 0;
   806c0:	2300      	movs	r3, #0
   806c2:	9301      	str	r3, [sp, #4]

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   806c4:	4b1f      	ldr	r3, [pc, #124]	; (80744 <usart_serial_getchar+0x8c>)
   806c6:	4298      	cmp	r0, r3
   806c8:	d107      	bne.n	806da <usart_serial_getchar+0x22>
		while (uart_read((Uart*)p_usart, data));
   806ca:	461f      	mov	r7, r3
   806cc:	4e1e      	ldr	r6, [pc, #120]	; (80748 <usart_serial_getchar+0x90>)
   806ce:	4638      	mov	r0, r7
   806d0:	4629      	mov	r1, r5
   806d2:	47b0      	blx	r6
   806d4:	2800      	cmp	r0, #0
   806d6:	d1fa      	bne.n	806ce <usart_serial_getchar+0x16>
   806d8:	e019      	b.n	8070e <usart_serial_getchar+0x56>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   806da:	4b1c      	ldr	r3, [pc, #112]	; (8074c <usart_serial_getchar+0x94>)
   806dc:	4298      	cmp	r0, r3
   806de:	d109      	bne.n	806f4 <usart_serial_getchar+0x3c>
		while (usart_read(p_usart, &val));
   806e0:	461f      	mov	r7, r3
   806e2:	4e1b      	ldr	r6, [pc, #108]	; (80750 <usart_serial_getchar+0x98>)
   806e4:	4638      	mov	r0, r7
   806e6:	a901      	add	r1, sp, #4
   806e8:	47b0      	blx	r6
   806ea:	2800      	cmp	r0, #0
   806ec:	d1fa      	bne.n	806e4 <usart_serial_getchar+0x2c>
		*data = (uint8_t)(val & 0xFF);
   806ee:	9b01      	ldr	r3, [sp, #4]
   806f0:	702b      	strb	r3, [r5, #0]
   806f2:	e019      	b.n	80728 <usart_serial_getchar+0x70>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   806f4:	4b17      	ldr	r3, [pc, #92]	; (80754 <usart_serial_getchar+0x9c>)
   806f6:	4298      	cmp	r0, r3
   806f8:	d109      	bne.n	8070e <usart_serial_getchar+0x56>
		while (usart_read(p_usart, &val));
   806fa:	461e      	mov	r6, r3
   806fc:	4c14      	ldr	r4, [pc, #80]	; (80750 <usart_serial_getchar+0x98>)
   806fe:	4630      	mov	r0, r6
   80700:	a901      	add	r1, sp, #4
   80702:	47a0      	blx	r4
   80704:	2800      	cmp	r0, #0
   80706:	d1fa      	bne.n	806fe <usart_serial_getchar+0x46>
		*data = (uint8_t)(val & 0xFF);
   80708:	9b01      	ldr	r3, [sp, #4]
   8070a:	702b      	strb	r3, [r5, #0]
   8070c:	e018      	b.n	80740 <usart_serial_getchar+0x88>
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   8070e:	4b12      	ldr	r3, [pc, #72]	; (80758 <usart_serial_getchar+0xa0>)
   80710:	429c      	cmp	r4, r3
   80712:	d109      	bne.n	80728 <usart_serial_getchar+0x70>
		while (usart_read(p_usart, &val));
   80714:	461e      	mov	r6, r3
   80716:	4c0e      	ldr	r4, [pc, #56]	; (80750 <usart_serial_getchar+0x98>)
   80718:	4630      	mov	r0, r6
   8071a:	a901      	add	r1, sp, #4
   8071c:	47a0      	blx	r4
   8071e:	2800      	cmp	r0, #0
   80720:	d1fa      	bne.n	80718 <usart_serial_getchar+0x60>
		*data = (uint8_t)(val & 0xFF);
   80722:	9b01      	ldr	r3, [sp, #4]
   80724:	702b      	strb	r3, [r5, #0]
   80726:	e00b      	b.n	80740 <usart_serial_getchar+0x88>
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   80728:	4b0c      	ldr	r3, [pc, #48]	; (8075c <usart_serial_getchar+0xa4>)
   8072a:	429c      	cmp	r4, r3
   8072c:	d108      	bne.n	80740 <usart_serial_getchar+0x88>
		while (usart_read(p_usart, &val));
   8072e:	461e      	mov	r6, r3
   80730:	4c07      	ldr	r4, [pc, #28]	; (80750 <usart_serial_getchar+0x98>)
   80732:	4630      	mov	r0, r6
   80734:	a901      	add	r1, sp, #4
   80736:	47a0      	blx	r4
   80738:	2800      	cmp	r0, #0
   8073a:	d1fa      	bne.n	80732 <usart_serial_getchar+0x7a>
		*data = (uint8_t)(val & 0xFF);
   8073c:	9b01      	ldr	r3, [sp, #4]
   8073e:	702b      	strb	r3, [r5, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
   80740:	b003      	add	sp, #12
   80742:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80744:	400e0800 	.word	0x400e0800
   80748:	00080c5d 	.word	0x00080c5d
   8074c:	40098000 	.word	0x40098000
   80750:	00080395 	.word	0x00080395
   80754:	4009c000 	.word	0x4009c000
   80758:	400a0000 	.word	0x400a0000
   8075c:	400a4000 	.word	0x400a4000

00080760 <usart_serial_putchar>:
 *   \retval 1  The character was written.
 *   \retval 0  The function timed out before the USART transmitter became
 * ready to send.
 */
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
   80760:	b570      	push	{r4, r5, r6, lr}
   80762:	460c      	mov	r4, r1
#ifdef UART
	if (UART == (Uart*)p_usart) {
   80764:	4b21      	ldr	r3, [pc, #132]	; (807ec <usart_serial_putchar+0x8c>)
   80766:	4298      	cmp	r0, r3
   80768:	d107      	bne.n	8077a <usart_serial_putchar+0x1a>
		while (uart_write((Uart*)p_usart, c)!=0);
   8076a:	461e      	mov	r6, r3
   8076c:	4d20      	ldr	r5, [pc, #128]	; (807f0 <usart_serial_putchar+0x90>)
   8076e:	4630      	mov	r0, r6
   80770:	4621      	mov	r1, r4
   80772:	47a8      	blx	r5
   80774:	2800      	cmp	r0, #0
   80776:	d1fa      	bne.n	8076e <usart_serial_putchar+0xe>
   80778:	e02b      	b.n	807d2 <usart_serial_putchar+0x72>
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   8077a:	4b1e      	ldr	r3, [pc, #120]	; (807f4 <usart_serial_putchar+0x94>)
   8077c:	4298      	cmp	r0, r3
   8077e:	d107      	bne.n	80790 <usart_serial_putchar+0x30>
		while (usart_write(p_usart, c)!=0);
   80780:	461e      	mov	r6, r3
   80782:	4d1d      	ldr	r5, [pc, #116]	; (807f8 <usart_serial_putchar+0x98>)
   80784:	4630      	mov	r0, r6
   80786:	4621      	mov	r1, r4
   80788:	47a8      	blx	r5
   8078a:	2800      	cmp	r0, #0
   8078c:	d1fa      	bne.n	80784 <usart_serial_putchar+0x24>
   8078e:	e022      	b.n	807d6 <usart_serial_putchar+0x76>
		return 1;
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   80790:	4b1a      	ldr	r3, [pc, #104]	; (807fc <usart_serial_putchar+0x9c>)
   80792:	4298      	cmp	r0, r3
   80794:	d107      	bne.n	807a6 <usart_serial_putchar+0x46>
		while (usart_write(p_usart, c)!=0);
   80796:	461e      	mov	r6, r3
   80798:	4d17      	ldr	r5, [pc, #92]	; (807f8 <usart_serial_putchar+0x98>)
   8079a:	4630      	mov	r0, r6
   8079c:	4621      	mov	r1, r4
   8079e:	47a8      	blx	r5
   807a0:	2800      	cmp	r0, #0
   807a2:	d1fa      	bne.n	8079a <usart_serial_putchar+0x3a>
   807a4:	e019      	b.n	807da <usart_serial_putchar+0x7a>
		return 1;
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   807a6:	4b16      	ldr	r3, [pc, #88]	; (80800 <usart_serial_putchar+0xa0>)
   807a8:	4298      	cmp	r0, r3
   807aa:	d107      	bne.n	807bc <usart_serial_putchar+0x5c>
		while (usart_write(p_usart, c)!=0);
   807ac:	461e      	mov	r6, r3
   807ae:	4d12      	ldr	r5, [pc, #72]	; (807f8 <usart_serial_putchar+0x98>)
   807b0:	4630      	mov	r0, r6
   807b2:	4621      	mov	r1, r4
   807b4:	47a8      	blx	r5
   807b6:	2800      	cmp	r0, #0
   807b8:	d1fa      	bne.n	807b0 <usart_serial_putchar+0x50>
   807ba:	e010      	b.n	807de <usart_serial_putchar+0x7e>
		return 1;
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   807bc:	4b11      	ldr	r3, [pc, #68]	; (80804 <usart_serial_putchar+0xa4>)
   807be:	4298      	cmp	r0, r3
   807c0:	d10f      	bne.n	807e2 <usart_serial_putchar+0x82>
		while (usart_write(p_usart, c)!=0);
   807c2:	461e      	mov	r6, r3
   807c4:	4d0c      	ldr	r5, [pc, #48]	; (807f8 <usart_serial_putchar+0x98>)
   807c6:	4630      	mov	r0, r6
   807c8:	4621      	mov	r1, r4
   807ca:	47a8      	blx	r5
   807cc:	2800      	cmp	r0, #0
   807ce:	d1fa      	bne.n	807c6 <usart_serial_putchar+0x66>
   807d0:	e009      	b.n	807e6 <usart_serial_putchar+0x86>
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
#ifdef UART
	if (UART == (Uart*)p_usart) {
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
   807d2:	2001      	movs	r0, #1
   807d4:	bd70      	pop	{r4, r5, r6, pc}
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   807d6:	2001      	movs	r0, #1
   807d8:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   807da:	2001      	movs	r0, #1
   807dc:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   807de:	2001      	movs	r0, #1
   807e0:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
	}
# endif
#endif /* ifdef USART */

	return 0;
   807e2:	2000      	movs	r0, #0
   807e4:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   807e6:	2001      	movs	r0, #1
	}
# endif
#endif /* ifdef USART */

	return 0;
}
   807e8:	bd70      	pop	{r4, r5, r6, pc}
   807ea:	bf00      	nop
   807ec:	400e0800 	.word	0x400e0800
   807f0:	00080c4d 	.word	0x00080c4d
   807f4:	40098000 	.word	0x40098000
   807f8:	00080381 	.word	0x00080381
   807fc:	4009c000 	.word	0x4009c000
   80800:	400a0000 	.word	0x400a0000
   80804:	400a4000 	.word	0x400a4000

00080808 <configureConsole>:
#include "consoleFunctions.h"

void configureConsole(void)
/* Enables feedback through the USB-cable back to terminal within Atmel Studio */
/* Note that  the baudrate, parity and other parameters must be set in conf/conf_uart_serial.h */
{
   80808:	b530      	push	{r4, r5, lr}
   8080a:	b085      	sub	sp, #20
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   8080c:	2008      	movs	r0, #8
   8080e:	4d12      	ldr	r5, [pc, #72]	; (80858 <configureConsole+0x50>)
   80810:	47a8      	blx	r5
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
   80812:	4c12      	ldr	r4, [pc, #72]	; (8085c <configureConsole+0x54>)
   80814:	4b12      	ldr	r3, [pc, #72]	; (80860 <configureConsole+0x58>)
   80816:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   80818:	4a12      	ldr	r2, [pc, #72]	; (80864 <configureConsole+0x5c>)
   8081a:	4b13      	ldr	r3, [pc, #76]	; (80868 <configureConsole+0x60>)
   8081c:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   8081e:	4a13      	ldr	r2, [pc, #76]	; (8086c <configureConsole+0x64>)
   80820:	4b13      	ldr	r3, [pc, #76]	; (80870 <configureConsole+0x68>)
   80822:	601a      	str	r2, [r3, #0]
static inline void usart_serial_init(usart_if p_usart,
		usart_serial_options_t *opt)
{
#if ((!SAM4L) && (!SAMG55))
	sam_uart_opt_t uart_settings;
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   80824:	4b13      	ldr	r3, [pc, #76]	; (80874 <configureConsole+0x6c>)
   80826:	9301      	str	r3, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
   80828:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
   8082c:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
   8082e:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80832:	9303      	str	r3, [sp, #12]
   80834:	2008      	movs	r0, #8
   80836:	47a8      	blx	r5
	
#ifdef UART
	if (UART == (Uart*)p_usart) {
		sysclk_enable_peripheral_clock(ID_UART);
		/* Configure UART */
		uart_init((Uart*)p_usart, &uart_settings);
   80838:	4620      	mov	r0, r4
   8083a:	a901      	add	r1, sp, #4
   8083c:	4b0e      	ldr	r3, [pc, #56]	; (80878 <configureConsole+0x70>)
   8083e:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
   80840:	4d0e      	ldr	r5, [pc, #56]	; (8087c <configureConsole+0x74>)
   80842:	682b      	ldr	r3, [r5, #0]
   80844:	6898      	ldr	r0, [r3, #8]
   80846:	2100      	movs	r1, #0
   80848:	4c0d      	ldr	r4, [pc, #52]	; (80880 <configureConsole+0x78>)
   8084a:	47a0      	blx	r4
	setbuf(stdin, NULL);
   8084c:	682b      	ldr	r3, [r5, #0]
   8084e:	6858      	ldr	r0, [r3, #4]
   80850:	2100      	movs	r1, #0
   80852:	47a0      	blx	r4
	sysclk_enable_peripheral_clock(CONSOLE_UART_ID);
	stdio_serial_init(CONF_UART, &uart_serial_options);
	
	//printf("Console ready\n");
	//printf("=============\n");
   80854:	b005      	add	sp, #20
   80856:	bd30      	pop	{r4, r5, pc}
   80858:	0008110d 	.word	0x0008110d
   8085c:	400e0800 	.word	0x400e0800
   80860:	20070ca8 	.word	0x20070ca8
   80864:	00080761 	.word	0x00080761
   80868:	20070ca4 	.word	0x20070ca4
   8086c:	000806b9 	.word	0x000806b9
   80870:	20070c98 	.word	0x20070c98
   80874:	0501bd00 	.word	0x0501bd00
   80878:	00080c15 	.word	0x00080c15
   8087c:	200705c0 	.word	0x200705c0
   80880:	00081609 	.word	0x00081609

00080884 <send_package>:
			send_package(TWI_CMD_ERROR,TWI_SLAVE_PABYGGNAD);
		break;
	}	
}

void  send_package(uint8_t twi_state,uint8_t slave){
   80884:	b570      	push	{r4, r5, r6, lr}
   80886:	4605      	mov	r5, r0
   80888:	460c      	mov	r4, r1
	printf("in send\n");
   8088a:	481a      	ldr	r0, [pc, #104]	; (808f4 <send_package+0x70>)
   8088c:	4b1a      	ldr	r3, [pc, #104]	; (808f8 <send_package+0x74>)
   8088e:	4798      	blx	r3
	char sts[20];
	if(TWI_SLAVE_NAVIGERING == slave){
   80890:	2c03      	cmp	r4, #3
   80892:	d116      	bne.n	808c2 <send_package+0x3e>
		printf("NAV PACK");
   80894:	4819      	ldr	r0, [pc, #100]	; (808fc <send_package+0x78>)
   80896:	4c18      	ldr	r4, [pc, #96]	; (808f8 <send_package+0x74>)
   80898:	47a0      	blx	r4
		send_data_nav[0] = twi_state;
   8089a:	4a19      	ldr	r2, [pc, #100]	; (80900 <send_package+0x7c>)
   8089c:	7015      	strb	r5, [r2, #0]
		packet_nav.chip = slave;
   8089e:	4b19      	ldr	r3, [pc, #100]	; (80904 <send_package+0x80>)
   808a0:	2103      	movs	r1, #3
   808a2:	7419      	strb	r1, [r3, #16]
		packet_nav.buffer = (void *) send_data_nav;
   808a4:	609a      	str	r2, [r3, #8]
		printf("TRYING TO SEND\n");
   808a6:	4818      	ldr	r0, [pc, #96]	; (80908 <send_package+0x84>)
   808a8:	47a0      	blx	r4
		while(twi_master_write(TWI_MASTER,&packet_nav));
   808aa:	4e18      	ldr	r6, [pc, #96]	; (8090c <send_package+0x88>)
   808ac:	4d15      	ldr	r5, [pc, #84]	; (80904 <send_package+0x80>)
   808ae:	4c18      	ldr	r4, [pc, #96]	; (80910 <send_package+0x8c>)
   808b0:	4630      	mov	r0, r6
   808b2:	4629      	mov	r1, r5
   808b4:	47a0      	blx	r4
   808b6:	2800      	cmp	r0, #0
   808b8:	d1fa      	bne.n	808b0 <send_package+0x2c>
		printf("done sending nav\n");
   808ba:	4816      	ldr	r0, [pc, #88]	; (80914 <send_package+0x90>)
   808bc:	4b0e      	ldr	r3, [pc, #56]	; (808f8 <send_package+0x74>)
   808be:	4798      	blx	r3
   808c0:	bd70      	pop	{r4, r5, r6, pc}
		}else if(TWI_SLAVE_PABYGGNAD == slave){
   808c2:	2c02      	cmp	r4, #2
   808c4:	d115      	bne.n	808f2 <send_package+0x6e>
		printf("PAB PACK0");
   808c6:	4814      	ldr	r0, [pc, #80]	; (80918 <send_package+0x94>)
   808c8:	4c0b      	ldr	r4, [pc, #44]	; (808f8 <send_package+0x74>)
   808ca:	47a0      	blx	r4
		send_data_pab[0] = twi_state;
   808cc:	4a13      	ldr	r2, [pc, #76]	; (8091c <send_package+0x98>)
   808ce:	7015      	strb	r5, [r2, #0]
		packet_pab.chip = slave;
   808d0:	4b13      	ldr	r3, [pc, #76]	; (80920 <send_package+0x9c>)
   808d2:	2102      	movs	r1, #2
   808d4:	7419      	strb	r1, [r3, #16]
		packet_pab.buffer = (void *)send_data_pab;
   808d6:	609a      	str	r2, [r3, #8]
		printf("TRYING TO SEND\n");
   808d8:	480b      	ldr	r0, [pc, #44]	; (80908 <send_package+0x84>)
   808da:	47a0      	blx	r4
		while(twi_master_write(TWI_MASTER,&packet_pab));
   808dc:	4e0b      	ldr	r6, [pc, #44]	; (8090c <send_package+0x88>)
   808de:	4d10      	ldr	r5, [pc, #64]	; (80920 <send_package+0x9c>)
   808e0:	4c0b      	ldr	r4, [pc, #44]	; (80910 <send_package+0x8c>)
   808e2:	4630      	mov	r0, r6
   808e4:	4629      	mov	r1, r5
   808e6:	47a0      	blx	r4
   808e8:	2800      	cmp	r0, #0
   808ea:	d1fa      	bne.n	808e2 <send_package+0x5e>
		printf("done sending pab\n");
   808ec:	480d      	ldr	r0, [pc, #52]	; (80924 <send_package+0xa0>)
   808ee:	4b02      	ldr	r3, [pc, #8]	; (808f8 <send_package+0x74>)
   808f0:	4798      	blx	r3
   808f2:	bd70      	pop	{r4, r5, r6, pc}
   808f4:	00087900 	.word	0x00087900
   808f8:	00081461 	.word	0x00081461
   808fc:	0008790c 	.word	0x0008790c
   80900:	20070be0 	.word	0x20070be0
   80904:	20070178 	.word	0x20070178
   80908:	00087918 	.word	0x00087918
   8090c:	4008c000 	.word	0x4008c000
   80910:	000802e1 	.word	0x000802e1
   80914:	00087928 	.word	0x00087928
   80918:	0008793c 	.word	0x0008793c
   8091c:	20070bdc 	.word	0x20070bdc
   80920:	20070164 	.word	0x20070164
   80924:	00087948 	.word	0x00087948

00080928 <receive_package>:
	}
}


void receive_package(uint8_t slave){
   80928:	b570      	push	{r4, r5, r6, lr}
   8092a:	4604      	mov	r4, r0
	printf("Start of receive\n");
   8092c:	4812      	ldr	r0, [pc, #72]	; (80978 <receive_package+0x50>)
   8092e:	4b13      	ldr	r3, [pc, #76]	; (8097c <receive_package+0x54>)
   80930:	4798      	blx	r3
	char str[20];
	if (slave == TWI_SLAVE_NAVIGERING){
   80932:	2c03      	cmp	r4, #3
   80934:	d10e      	bne.n	80954 <receive_package+0x2c>
		printf("TRYing to receive nav");
   80936:	4812      	ldr	r0, [pc, #72]	; (80980 <receive_package+0x58>)
   80938:	4b10      	ldr	r3, [pc, #64]	; (8097c <receive_package+0x54>)
   8093a:	4798      	blx	r3
		while(twi_master_read(TWI_MASTER, &packet_received_nav) != TWI_SUCCESS);
   8093c:	4e11      	ldr	r6, [pc, #68]	; (80984 <receive_package+0x5c>)
   8093e:	4d12      	ldr	r5, [pc, #72]	; (80988 <receive_package+0x60>)
   80940:	4c12      	ldr	r4, [pc, #72]	; (8098c <receive_package+0x64>)
   80942:	4630      	mov	r0, r6
   80944:	4629      	mov	r1, r5
   80946:	47a0      	blx	r4
   80948:	2800      	cmp	r0, #0
   8094a:	d1fa      	bne.n	80942 <receive_package+0x1a>
		printf("done sending");
   8094c:	4810      	ldr	r0, [pc, #64]	; (80990 <receive_package+0x68>)
   8094e:	4b0b      	ldr	r3, [pc, #44]	; (8097c <receive_package+0x54>)
   80950:	4798      	blx	r3
   80952:	bd70      	pop	{r4, r5, r6, pc}
		return data_received_nav;
		}else if(slave == TWI_SLAVE_PABYGGNAD){
   80954:	2c02      	cmp	r4, #2
   80956:	d10d      	bne.n	80974 <receive_package+0x4c>
		printf("TRYing to receive Pa");
   80958:	480e      	ldr	r0, [pc, #56]	; (80994 <receive_package+0x6c>)
   8095a:	4b08      	ldr	r3, [pc, #32]	; (8097c <receive_package+0x54>)
   8095c:	4798      	blx	r3
		while(twi_master_read(TWI_MASTER, &packet_received_pab) != TWI_SUCCESS);
   8095e:	4e09      	ldr	r6, [pc, #36]	; (80984 <receive_package+0x5c>)
   80960:	4d0d      	ldr	r5, [pc, #52]	; (80998 <receive_package+0x70>)
   80962:	4c0a      	ldr	r4, [pc, #40]	; (8098c <receive_package+0x64>)
   80964:	4630      	mov	r0, r6
   80966:	4629      	mov	r1, r5
   80968:	47a0      	blx	r4
   8096a:	2800      	cmp	r0, #0
   8096c:	d1fa      	bne.n	80964 <receive_package+0x3c>
		printf("done sending");
   8096e:	4808      	ldr	r0, [pc, #32]	; (80990 <receive_package+0x68>)
   80970:	4b02      	ldr	r3, [pc, #8]	; (8097c <receive_package+0x54>)
   80972:	4798      	blx	r3
   80974:	bd70      	pop	{r4, r5, r6, pc}
   80976:	bf00      	nop
   80978:	0008795c 	.word	0x0008795c
   8097c:	00081461 	.word	0x00081461
   80980:	00087970 	.word	0x00087970
   80984:	4008c000 	.word	0x4008c000
   80988:	20070150 	.word	0x20070150
   8098c:	0008020d 	.word	0x0008020d
   80990:	00087988 	.word	0x00087988
   80994:	00087998 	.word	0x00087998
   80998:	2007013c 	.word	0x2007013c

0008099c <pa_sendstatus>:
	if(twi_master_setup(TWI_MASTER,&opt) == TWI_SUCCESS){
		pa_sendstatus(TWI_CMD_ARM_INIT,0);
	}
}

void pa_sendstatus(TwiCmd twi_state, uint8_t underState){
   8099c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	switch (twi_state){
   809a0:	3820      	subs	r0, #32
   809a2:	2805      	cmp	r0, #5
   809a4:	d878      	bhi.n	80a98 <pa_sendstatus+0xfc>
   809a6:	e8df f000 	tbb	[pc, r0]
   809aa:	3b03      	.short	0x3b03
   809ac:	73606d41 	.word	0x73606d41
		case TWI_CMD_ARM_INIT:
			send_data_pab[1] = TWI_CMD_ARM_REQ_BOX_INFO;
   809b0:	f8df a0f8 	ldr.w	sl, [pc, #248]	; 80aac <pa_sendstatus+0x110>
   809b4:	2402      	movs	r4, #2
   809b6:	f88a 4001 	strb.w	r4, [sl, #1]
			send_package(TWI_CMD_ARM_INIT,TWI_SLAVE_PABYGGNAD);
   809ba:	2020      	movs	r0, #32
   809bc:	4621      	mov	r1, r4
   809be:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 80aa8 <pa_sendstatus+0x10c>
   809c2:	47c8      	blx	r9
			delay_ms(10);
   809c4:	f64e 2060 	movw	r0, #60000	; 0xea60
   809c8:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 80ab0 <pa_sendstatus+0x114>
   809cc:	47c0      	blx	r8
			receive_package(TWI_SLAVE_PABYGGNAD);
   809ce:	4620      	mov	r0, r4
   809d0:	4f32      	ldr	r7, [pc, #200]	; (80a9c <pa_sendstatus+0x100>)
   809d2:	47b8      	blx	r7
			arminformation.boxDistance		=  data_received_pab[1];
   809d4:	4d32      	ldr	r5, [pc, #200]	; (80aa0 <pa_sendstatus+0x104>)
   809d6:	4e33      	ldr	r6, [pc, #204]	; (80aa4 <pa_sendstatus+0x108>)
   809d8:	7873      	ldrb	r3, [r6, #1]
   809da:	702b      	strb	r3, [r5, #0]
			arminformation.boxAngle			=  data_received_pab[2];
   809dc:	78b3      	ldrb	r3, [r6, #2]
   809de:	706b      	strb	r3, [r5, #1]
			send_data_pab[1] = TWI_CMD_ARM_REQ_OBJ_INFO;
   809e0:	2303      	movs	r3, #3
   809e2:	f88a 3001 	strb.w	r3, [sl, #1]
			send_package(TWI_CMD_ARM_INIT, TWI_SLAVE_PABYGGNAD);
   809e6:	2020      	movs	r0, #32
   809e8:	4621      	mov	r1, r4
   809ea:	47c8      	blx	r9
			delay_ms(10);
   809ec:	f64e 2060 	movw	r0, #60000	; 0xea60
   809f0:	47c0      	blx	r8
			receive_package(TWI_SLAVE_PABYGGNAD);
   809f2:	4620      	mov	r0, r4
   809f4:	47b8      	blx	r7
			arminformation.objectDistance	=	data_received_pab[1];
   809f6:	7873      	ldrb	r3, [r6, #1]
   809f8:	70ab      	strb	r3, [r5, #2]
			arminformation.objectAngle		=	data_received_pab[2];
   809fa:	78b3      	ldrb	r3, [r6, #2]
   809fc:	70eb      	strb	r3, [r5, #3]
			send_data_pab[1] = TWI_CMD_ARM_REQ_COLLECT_INFO;
   809fe:	2304      	movs	r3, #4
   80a00:	f88a 3001 	strb.w	r3, [sl, #1]
			send_package(TWI_CMD_ARM_INIT,TWI_SLAVE_PABYGGNAD);
   80a04:	2020      	movs	r0, #32
   80a06:	4621      	mov	r1, r4
   80a08:	47c8      	blx	r9
			delay_ms(10);
   80a0a:	f64e 2060 	movw	r0, #60000	; 0xea60
   80a0e:	47c0      	blx	r8
			receive_package(TWI_SLAVE_PABYGGNAD);
   80a10:	4620      	mov	r0, r4
   80a12:	47b8      	blx	r7
			arminformation.collectAll		= data_received_pab[1];
   80a14:	7873      	ldrb	r3, [r6, #1]
   80a16:	712b      	strb	r3, [r5, #4]
			arminformation.hasData			= data_received_pab[2];
   80a18:	78b3      	ldrb	r3, [r6, #2]
   80a1a:	716b      	strb	r3, [r5, #5]
		break;
   80a1c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		case TWI_CMD_DROPOFF_START:
			send_package(TWI_CMD_DROPOFF_START,TWI_SLAVE_PABYGGNAD);
   80a20:	2021      	movs	r0, #33	; 0x21
   80a22:	2102      	movs	r1, #2
   80a24:	4b20      	ldr	r3, [pc, #128]	; (80aa8 <pa_sendstatus+0x10c>)
   80a26:	4798      	blx	r3
		break;
   80a28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		case TWI_CMD_PICKUP_START:
			if(underState == SOCK){
   80a2c:	2902      	cmp	r1, #2
   80a2e:	d106      	bne.n	80a3e <pa_sendstatus+0xa2>
				send_data_pab[1] = SOCK;
   80a30:	4b1e      	ldr	r3, [pc, #120]	; (80aac <pa_sendstatus+0x110>)
   80a32:	7059      	strb	r1, [r3, #1]
				send_package(TWI_CMD_PICKUP_START,TWI_SLAVE_PABYGGNAD);
   80a34:	2022      	movs	r0, #34	; 0x22
   80a36:	4b1c      	ldr	r3, [pc, #112]	; (80aa8 <pa_sendstatus+0x10c>)
   80a38:	4798      	blx	r3
   80a3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			}else if(underState == SQUARE){
   80a3e:	2903      	cmp	r1, #3
   80a40:	d108      	bne.n	80a54 <pa_sendstatus+0xb8>
				send_data_pab[1] = SQUARE;
   80a42:	2203      	movs	r2, #3
   80a44:	4b19      	ldr	r3, [pc, #100]	; (80aac <pa_sendstatus+0x110>)
   80a46:	705a      	strb	r2, [r3, #1]
				send_package(TWI_CMD_PICKUP_START,TWI_SLAVE_PABYGGNAD);
   80a48:	2022      	movs	r0, #34	; 0x22
   80a4a:	2102      	movs	r1, #2
   80a4c:	4b16      	ldr	r3, [pc, #88]	; (80aa8 <pa_sendstatus+0x10c>)
   80a4e:	4798      	blx	r3
   80a50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			}else if(underState == GLASS){
   80a54:	2904      	cmp	r1, #4
   80a56:	d11f      	bne.n	80a98 <pa_sendstatus+0xfc>
				send_data_pab[1] = SQUARE;
   80a58:	2203      	movs	r2, #3
   80a5a:	4b14      	ldr	r3, [pc, #80]	; (80aac <pa_sendstatus+0x110>)
   80a5c:	705a      	strb	r2, [r3, #1]
				send_package(TWI_CMD_PICKUP_START,TWI_SLAVE_PABYGGNAD);
   80a5e:	2022      	movs	r0, #34	; 0x22
   80a60:	2102      	movs	r1, #2
   80a62:	4b11      	ldr	r3, [pc, #68]	; (80aa8 <pa_sendstatus+0x10c>)
   80a64:	4798      	blx	r3
   80a66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			}
		break;
		case TWI_CMD_PICKUP_STATUS:
			send_package(TWI_CMD_PICKUP_START,TWI_SLAVE_PABYGGNAD);
   80a6a:	2022      	movs	r0, #34	; 0x22
   80a6c:	2102      	movs	r1, #2
   80a6e:	4b0e      	ldr	r3, [pc, #56]	; (80aa8 <pa_sendstatus+0x10c>)
   80a70:	4798      	blx	r3
			delay_ms(10);
   80a72:	f64e 2060 	movw	r0, #60000	; 0xea60
   80a76:	4b0e      	ldr	r3, [pc, #56]	; (80ab0 <pa_sendstatus+0x114>)
   80a78:	4798      	blx	r3
			receive_package(TWI_SLAVE_PABYGGNAD);
   80a7a:	2002      	movs	r0, #2
   80a7c:	4b07      	ldr	r3, [pc, #28]	; (80a9c <pa_sendstatus+0x100>)
   80a7e:	4798      	blx	r3
		break;
   80a80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		case TWI_CMD_DROPOFF_STATUS:
			send_package(TWI_CMD_DROPOFF_STATUS,TWI_SLAVE_PABYGGNAD);
   80a84:	2023      	movs	r0, #35	; 0x23
   80a86:	2102      	movs	r1, #2
   80a88:	4b07      	ldr	r3, [pc, #28]	; (80aa8 <pa_sendstatus+0x10c>)
   80a8a:	4798      	blx	r3
			
		break;
   80a8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		case TWI_CMD_ERROR:
			send_package(TWI_CMD_ERROR,TWI_SLAVE_PABYGGNAD);
   80a90:	2025      	movs	r0, #37	; 0x25
   80a92:	2102      	movs	r1, #2
   80a94:	4b04      	ldr	r3, [pc, #16]	; (80aa8 <pa_sendstatus+0x10c>)
   80a96:	4798      	blx	r3
   80a98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   80a9c:	00080929 	.word	0x00080929
   80aa0:	20070c9c 	.word	0x20070c9c
   80aa4:	20070be4 	.word	0x20070be4
   80aa8:	00080885 	.word	0x00080885
   80aac:	20070bdc 	.word	0x20070bdc
   80ab0:	20070001 	.word	0x20070001

00080ab4 <init_twi_functions>:
	.chip			= TWI_SLAVE_NAVIGERING,
	.buffer			= (void*) data_received_nav,
	.length			= TWI_DATA_RECIEVE_LENGTH
};

void init_twi_functions(){
   80ab4:	b500      	push	{lr}
   80ab6:	b085      	sub	sp, #20
	twi_master_options_t opt;
	opt.speed = TWI_SPEED;
   80ab8:	4b0a      	ldr	r3, [pc, #40]	; (80ae4 <init_twi_functions+0x30>)
   80aba:	9302      	str	r3, [sp, #8]
typedef twi_packet_t twi_package_t;

static inline uint32_t twi_master_setup(twi_master_t p_twi,
		twi_master_options_t *p_opt)
{
	p_opt->master_clk = sysclk_get_cpu_hz();
   80abc:	4b0a      	ldr	r3, [pc, #40]	; (80ae8 <init_twi_functions+0x34>)
   80abe:	9301      	str	r3, [sp, #4]
	p_opt->smbus      = 0;
   80ac0:	2300      	movs	r3, #0
   80ac2:	f88d 300d 	strb.w	r3, [sp, #13]
   80ac6:	2016      	movs	r0, #22
   80ac8:	4b08      	ldr	r3, [pc, #32]	; (80aec <init_twi_functions+0x38>)
   80aca:	4798      	blx	r3
	} else {
		// Do Nothing
	}
#endif

	return (twi_master_init(p_twi, p_opt));
   80acc:	4808      	ldr	r0, [pc, #32]	; (80af0 <init_twi_functions+0x3c>)
   80ace:	a901      	add	r1, sp, #4
   80ad0:	4b08      	ldr	r3, [pc, #32]	; (80af4 <init_twi_functions+0x40>)
   80ad2:	4798      	blx	r3
	if(twi_master_setup(TWI_MASTER,&opt) == TWI_SUCCESS){
   80ad4:	b918      	cbnz	r0, 80ade <init_twi_functions+0x2a>
		pa_sendstatus(TWI_CMD_ARM_INIT,0);
   80ad6:	2020      	movs	r0, #32
   80ad8:	2100      	movs	r1, #0
   80ada:	4b07      	ldr	r3, [pc, #28]	; (80af8 <init_twi_functions+0x44>)
   80adc:	4798      	blx	r3
	}
}
   80ade:	b005      	add	sp, #20
   80ae0:	f85d fb04 	ldr.w	pc, [sp], #4
   80ae4:	000186a0 	.word	0x000186a0
   80ae8:	0501bd00 	.word	0x0501bd00
   80aec:	0008110d 	.word	0x0008110d
   80af0:	4008c000 	.word	0x4008c000
   80af4:	000801cd 	.word	0x000801cd
   80af8:	0008099d 	.word	0x0008099d

00080afc <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len);

int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
   80afc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80b00:	460e      	mov	r6, r1
   80b02:	4615      	mov	r5, r2
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
   80b04:	3801      	subs	r0, #1
   80b06:	2802      	cmp	r0, #2
   80b08:	d80f      	bhi.n	80b2a <_write+0x2e>
		return -1;
	}

	for (; len != 0; --len) {
   80b0a:	b192      	cbz	r2, 80b32 <_write+0x36>
   80b0c:	2400      	movs	r4, #0
		if (ptr_put(stdio_base, *ptr++) < 0) {
   80b0e:	f8df 803c 	ldr.w	r8, [pc, #60]	; 80b4c <_write+0x50>
   80b12:	4f0d      	ldr	r7, [pc, #52]	; (80b48 <_write+0x4c>)
   80b14:	f8d8 0000 	ldr.w	r0, [r8]
   80b18:	5d31      	ldrb	r1, [r6, r4]
   80b1a:	683b      	ldr	r3, [r7, #0]
   80b1c:	4798      	blx	r3
   80b1e:	2800      	cmp	r0, #0
   80b20:	db0a      	blt.n	80b38 <_write+0x3c>
			return -1;
		}
		++nChars;
   80b22:	3401      	adds	r4, #1

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
   80b24:	42a5      	cmp	r5, r4
   80b26:	d1f5      	bne.n	80b14 <_write+0x18>
   80b28:	e00a      	b.n	80b40 <_write+0x44>
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
   80b2a:	f04f 30ff 	mov.w	r0, #4294967295
   80b2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}

	for (; len != 0; --len) {
   80b32:	2000      	movs	r0, #0
   80b34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
   80b38:	f04f 30ff 	mov.w	r0, #4294967295
   80b3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		}
		++nChars;
   80b40:	4620      	mov	r0, r4
	}
	return nChars;
}
   80b42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80b46:	bf00      	nop
   80b48:	20070ca4 	.word	0x20070ca4
   80b4c:	20070ca8 	.word	0x20070ca8

00080b50 <usart_serial_read_packet>:
 * \param len    Length of data
 *
 */
status_code_t usart_serial_read_packet(usart_if usart, uint8_t *data,
		size_t len)
{
   80b50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   80b54:	b083      	sub	sp, #12
   80b56:	4605      	mov	r5, r0
	while (len) {
   80b58:	4690      	mov	r8, r2
   80b5a:	2a00      	cmp	r2, #0
   80b5c:	d047      	beq.n	80bee <usart_serial_read_packet+0x9e>
   80b5e:	1c4e      	adds	r6, r1, #1
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   80b60:	4f25      	ldr	r7, [pc, #148]	; (80bf8 <usart_serial_read_packet+0xa8>)
		while (usart_read(p_usart, &val));
   80b62:	4c26      	ldr	r4, [pc, #152]	; (80bfc <usart_serial_read_packet+0xac>)
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   80b64:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 80c10 <usart_serial_read_packet+0xc0>
	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
   80b68:	f8df b094 	ldr.w	fp, [pc, #148]	; 80c00 <usart_serial_read_packet+0xb0>
   80b6c:	f106 39ff 	add.w	r9, r6, #4294967295
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
	uint32_t val = 0;
   80b70:	2300      	movs	r3, #0
   80b72:	9301      	str	r3, [sp, #4]

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   80b74:	4b22      	ldr	r3, [pc, #136]	; (80c00 <usart_serial_read_packet+0xb0>)
   80b76:	429d      	cmp	r5, r3
   80b78:	d106      	bne.n	80b88 <usart_serial_read_packet+0x38>
		while (uart_read((Uart*)p_usart, data));
   80b7a:	4658      	mov	r0, fp
   80b7c:	4649      	mov	r1, r9
   80b7e:	4b21      	ldr	r3, [pc, #132]	; (80c04 <usart_serial_read_packet+0xb4>)
   80b80:	4798      	blx	r3
   80b82:	2800      	cmp	r0, #0
   80b84:	d1f9      	bne.n	80b7a <usart_serial_read_packet+0x2a>
   80b86:	e019      	b.n	80bbc <usart_serial_read_packet+0x6c>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   80b88:	4b1f      	ldr	r3, [pc, #124]	; (80c08 <usart_serial_read_packet+0xb8>)
   80b8a:	429d      	cmp	r5, r3
   80b8c:	d109      	bne.n	80ba2 <usart_serial_read_packet+0x52>
		while (usart_read(p_usart, &val));
   80b8e:	4699      	mov	r9, r3
   80b90:	4648      	mov	r0, r9
   80b92:	a901      	add	r1, sp, #4
   80b94:	47a0      	blx	r4
   80b96:	2800      	cmp	r0, #0
   80b98:	d1fa      	bne.n	80b90 <usart_serial_read_packet+0x40>
		*data = (uint8_t)(val & 0xFF);
   80b9a:	9b01      	ldr	r3, [sp, #4]
   80b9c:	f806 3c01 	strb.w	r3, [r6, #-1]
   80ba0:	e017      	b.n	80bd2 <usart_serial_read_packet+0x82>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   80ba2:	4b1a      	ldr	r3, [pc, #104]	; (80c0c <usart_serial_read_packet+0xbc>)
   80ba4:	429d      	cmp	r5, r3
   80ba6:	d109      	bne.n	80bbc <usart_serial_read_packet+0x6c>
		while (usart_read(p_usart, &val));
   80ba8:	4699      	mov	r9, r3
   80baa:	4648      	mov	r0, r9
   80bac:	a901      	add	r1, sp, #4
   80bae:	47a0      	blx	r4
   80bb0:	2800      	cmp	r0, #0
   80bb2:	d1fa      	bne.n	80baa <usart_serial_read_packet+0x5a>
		*data = (uint8_t)(val & 0xFF);
   80bb4:	9b01      	ldr	r3, [sp, #4]
   80bb6:	f806 3c01 	strb.w	r3, [r6, #-1]
   80bba:	e014      	b.n	80be6 <usart_serial_read_packet+0x96>
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   80bbc:	4555      	cmp	r5, sl
   80bbe:	d108      	bne.n	80bd2 <usart_serial_read_packet+0x82>
		while (usart_read(p_usart, &val));
   80bc0:	4650      	mov	r0, sl
   80bc2:	a901      	add	r1, sp, #4
   80bc4:	47a0      	blx	r4
   80bc6:	2800      	cmp	r0, #0
   80bc8:	d1fa      	bne.n	80bc0 <usart_serial_read_packet+0x70>
		*data = (uint8_t)(val & 0xFF);
   80bca:	9b01      	ldr	r3, [sp, #4]
   80bcc:	f806 3c01 	strb.w	r3, [r6, #-1]
   80bd0:	e009      	b.n	80be6 <usart_serial_read_packet+0x96>
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   80bd2:	42bd      	cmp	r5, r7
   80bd4:	d107      	bne.n	80be6 <usart_serial_read_packet+0x96>
		while (usart_read(p_usart, &val));
   80bd6:	4638      	mov	r0, r7
   80bd8:	a901      	add	r1, sp, #4
   80bda:	47a0      	blx	r4
   80bdc:	2800      	cmp	r0, #0
   80bde:	d1fa      	bne.n	80bd6 <usart_serial_read_packet+0x86>
		*data = (uint8_t)(val & 0xFF);
   80be0:	9b01      	ldr	r3, [sp, #4]
   80be2:	f806 3c01 	strb.w	r3, [r6, #-1]
   80be6:	3601      	adds	r6, #1
   80be8:	f1b8 0801 	subs.w	r8, r8, #1
   80bec:	d1be      	bne.n	80b6c <usart_serial_read_packet+0x1c>
		usart_serial_getchar(usart, data);
		len--;
		data++;
	}
	return STATUS_OK;
}
   80bee:	2000      	movs	r0, #0
   80bf0:	b003      	add	sp, #12
   80bf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   80bf6:	bf00      	nop
   80bf8:	400a4000 	.word	0x400a4000
   80bfc:	00080395 	.word	0x00080395
   80c00:	400e0800 	.word	0x400e0800
   80c04:	00080c5d 	.word	0x00080c5d
   80c08:	40098000 	.word	0x40098000
   80c0c:	4009c000 	.word	0x4009c000
   80c10:	400a0000 	.word	0x400a0000

00080c14 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
   80c14:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
   80c16:	23ac      	movs	r3, #172	; 0xac
   80c18:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   80c1a:	680a      	ldr	r2, [r1, #0]
   80c1c:	684b      	ldr	r3, [r1, #4]
   80c1e:	fbb2 f3f3 	udiv	r3, r2, r3
   80c22:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   80c24:	1e5c      	subs	r4, r3, #1
   80c26:	f64f 72fe 	movw	r2, #65534	; 0xfffe
   80c2a:	4294      	cmp	r4, r2
   80c2c:	d80a      	bhi.n	80c44 <uart_init+0x30>
		return 1;

	p_uart->UART_BRGR = cd;
   80c2e:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
   80c30:	688b      	ldr	r3, [r1, #8]
   80c32:	6043      	str	r3, [r0, #4]

	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   80c34:	f240 2302 	movw	r3, #514	; 0x202
   80c38:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   80c3c:	2350      	movs	r3, #80	; 0x50
   80c3e:	6003      	str	r3, [r0, #0]

	return 0;
   80c40:	2000      	movs	r0, #0
   80c42:	e000      	b.n	80c46 <uart_init+0x32>

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
		return 1;
   80c44:	2001      	movs	r0, #1

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;

	return 0;
}
   80c46:	f85d 4b04 	ldr.w	r4, [sp], #4
   80c4a:	4770      	bx	lr

00080c4c <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
   80c4c:	6943      	ldr	r3, [r0, #20]
   80c4e:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
   80c52:	bf1a      	itte	ne
   80c54:	61c1      	strne	r1, [r0, #28]
	return 0;
   80c56:	2000      	movne	r0, #0
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
		return 1;
   80c58:	2001      	moveq	r0, #1

	/* Send character */
	p_uart->UART_THR = uc_data;
	return 0;
}
   80c5a:	4770      	bx	lr

00080c5c <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
   80c5c:	6943      	ldr	r3, [r0, #20]
   80c5e:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
   80c62:	bf1d      	ittte	ne
   80c64:	6983      	ldrne	r3, [r0, #24]
   80c66:	700b      	strbne	r3, [r1, #0]
	return 0;
   80c68:	2000      	movne	r0, #0
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
		return 1;
   80c6a:	2001      	moveq	r0, #1

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
	return 0;
}
   80c6c:	4770      	bx	lr
   80c6e:	bf00      	nop

00080c70 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   80c70:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   80c72:	480e      	ldr	r0, [pc, #56]	; (80cac <sysclk_init+0x3c>)
   80c74:	4b0e      	ldr	r3, [pc, #56]	; (80cb0 <sysclk_init+0x40>)
   80c76:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   80c78:	2000      	movs	r0, #0
   80c7a:	213e      	movs	r1, #62	; 0x3e
   80c7c:	4b0d      	ldr	r3, [pc, #52]	; (80cb4 <sysclk_init+0x44>)
   80c7e:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   80c80:	4c0d      	ldr	r4, [pc, #52]	; (80cb8 <sysclk_init+0x48>)
   80c82:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   80c84:	2800      	cmp	r0, #0
   80c86:	d0fc      	beq.n	80c82 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   80c88:	4b0c      	ldr	r3, [pc, #48]	; (80cbc <sysclk_init+0x4c>)
   80c8a:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   80c8c:	4a0c      	ldr	r2, [pc, #48]	; (80cc0 <sysclk_init+0x50>)
   80c8e:	4b0d      	ldr	r3, [pc, #52]	; (80cc4 <sysclk_init+0x54>)
   80c90:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   80c92:	4c0d      	ldr	r4, [pc, #52]	; (80cc8 <sysclk_init+0x58>)
   80c94:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   80c96:	2800      	cmp	r0, #0
   80c98:	d0fc      	beq.n	80c94 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   80c9a:	2010      	movs	r0, #16
   80c9c:	4b0b      	ldr	r3, [pc, #44]	; (80ccc <sysclk_init+0x5c>)
   80c9e:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   80ca0:	4b0b      	ldr	r3, [pc, #44]	; (80cd0 <sysclk_init+0x60>)
   80ca2:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   80ca4:	4801      	ldr	r0, [pc, #4]	; (80cac <sysclk_init+0x3c>)
   80ca6:	4b02      	ldr	r3, [pc, #8]	; (80cb0 <sysclk_init+0x40>)
   80ca8:	4798      	blx	r3
   80caa:	bd10      	pop	{r4, pc}
   80cac:	0501bd00 	.word	0x0501bd00
   80cb0:	200700b1 	.word	0x200700b1
   80cb4:	00081089 	.word	0x00081089
   80cb8:	000810dd 	.word	0x000810dd
   80cbc:	000810ed 	.word	0x000810ed
   80cc0:	200d3f01 	.word	0x200d3f01
   80cc4:	400e0600 	.word	0x400e0600
   80cc8:	000810fd 	.word	0x000810fd
   80ccc:	00081025 	.word	0x00081025
   80cd0:	00081219 	.word	0x00081219

00080cd4 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   80cd4:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   80cd6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80cda:	4b1b      	ldr	r3, [pc, #108]	; (80d48 <board_init+0x74>)
   80cdc:	605a      	str	r2, [r3, #4]
   80cde:	200b      	movs	r0, #11
   80ce0:	4c1a      	ldr	r4, [pc, #104]	; (80d4c <board_init+0x78>)
   80ce2:	47a0      	blx	r4
   80ce4:	200c      	movs	r0, #12
   80ce6:	47a0      	blx	r4
   80ce8:	200d      	movs	r0, #13
   80cea:	47a0      	blx	r4
   80cec:	200e      	movs	r0, #14
   80cee:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   80cf0:	203b      	movs	r0, #59	; 0x3b
   80cf2:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80cf6:	4c16      	ldr	r4, [pc, #88]	; (80d50 <board_init+0x7c>)
   80cf8:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   80cfa:	2055      	movs	r0, #85	; 0x55
   80cfc:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80d00:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   80d02:	2056      	movs	r0, #86	; 0x56
   80d04:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80d08:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   80d0a:	2068      	movs	r0, #104	; 0x68
   80d0c:	4911      	ldr	r1, [pc, #68]	; (80d54 <board_init+0x80>)
   80d0e:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   80d10:	205c      	movs	r0, #92	; 0x5c
   80d12:	4911      	ldr	r1, [pc, #68]	; (80d58 <board_init+0x84>)
   80d14:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   80d16:	4811      	ldr	r0, [pc, #68]	; (80d5c <board_init+0x88>)
   80d18:	f44f 7140 	mov.w	r1, #768	; 0x300
   80d1c:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   80d20:	4b0f      	ldr	r3, [pc, #60]	; (80d60 <board_init+0x8c>)
   80d22:	4798      	blx	r3
		gpio_configure_pin(SPI1_NPCS3_GPIO, SPI1_NPCS3_FLAGS);
#   endif
#endif

#ifdef CONF_BOARD_TWI0
	gpio_configure_pin(TWI0_DATA_GPIO, TWI0_DATA_FLAGS);
   80d24:	2011      	movs	r0, #17
   80d26:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80d2a:	47a0      	blx	r4
	gpio_configure_pin(TWI0_CLK_GPIO, TWI0_CLK_FLAGS);
   80d2c:	2012      	movs	r0, #18
   80d2e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80d32:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   80d34:	202b      	movs	r0, #43	; 0x2b
   80d36:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80d3a:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   80d3c:	202a      	movs	r0, #42	; 0x2a
   80d3e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80d42:	47a0      	blx	r4
   80d44:	bd10      	pop	{r4, pc}
   80d46:	bf00      	nop
   80d48:	400e1a50 	.word	0x400e1a50
   80d4c:	0008110d 	.word	0x0008110d
   80d50:	00080e09 	.word	0x00080e09
   80d54:	28000079 	.word	0x28000079
   80d58:	28000001 	.word	0x28000001
   80d5c:	400e0e00 	.word	0x400e0e00
   80d60:	00080edd 	.word	0x00080edd

00080d64 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   80d64:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   80d66:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   80d6a:	d016      	beq.n	80d9a <pio_set_peripheral+0x36>
   80d6c:	d804      	bhi.n	80d78 <pio_set_peripheral+0x14>
   80d6e:	b1c1      	cbz	r1, 80da2 <pio_set_peripheral+0x3e>
   80d70:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   80d74:	d00a      	beq.n	80d8c <pio_set_peripheral+0x28>
   80d76:	e013      	b.n	80da0 <pio_set_peripheral+0x3c>
   80d78:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   80d7c:	d011      	beq.n	80da2 <pio_set_peripheral+0x3e>
   80d7e:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   80d82:	d00e      	beq.n	80da2 <pio_set_peripheral+0x3e>
   80d84:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   80d88:	d10a      	bne.n	80da0 <pio_set_peripheral+0x3c>
   80d8a:	4770      	bx	lr
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   80d8c:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   80d8e:	6f01      	ldr	r1, [r0, #112]	; 0x70
   80d90:	400b      	ands	r3, r1
   80d92:	ea23 0302 	bic.w	r3, r3, r2
   80d96:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   80d98:	e002      	b.n	80da0 <pio_set_peripheral+0x3c>

	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABSR;
   80d9a:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   80d9c:	4313      	orrs	r3, r2
   80d9e:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   80da0:	6042      	str	r2, [r0, #4]
   80da2:	4770      	bx	lr

00080da4 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80da4:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80da6:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   80daa:	bf14      	ite	ne
   80dac:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80dae:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   80db0:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   80db4:	bf14      	ite	ne
   80db6:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
   80db8:	6241      	streq	r1, [r0, #36]	; 0x24
			p_pio->PIO_IFSCER = ul_mask;
		}
	}
#elif (SAM3XA|| SAM3U)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
   80dba:	f012 0f02 	tst.w	r2, #2
   80dbe:	d002      	beq.n	80dc6 <pio_set_input+0x22>
		p_pio->PIO_SCIFSR = ul_mask;
   80dc0:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   80dc4:	e004      	b.n	80dd0 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
   80dc6:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   80dca:	bf18      	it	ne
   80dcc:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
   80dd0:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   80dd2:	6001      	str	r1, [r0, #0]
   80dd4:	4770      	bx	lr
   80dd6:	bf00      	nop

00080dd8 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
   80dd8:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80dda:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80ddc:	9c01      	ldr	r4, [sp, #4]
   80dde:	b10c      	cbz	r4, 80de4 <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
   80de0:	6641      	str	r1, [r0, #100]	; 0x64
   80de2:	e000      	b.n	80de6 <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80de4:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
   80de6:	b10b      	cbz	r3, 80dec <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
   80de8:	6501      	str	r1, [r0, #80]	; 0x50
   80dea:	e000      	b.n	80dee <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
   80dec:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
   80dee:	b10a      	cbz	r2, 80df4 <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
   80df0:	6301      	str	r1, [r0, #48]	; 0x30
   80df2:	e000      	b.n	80df6 <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
   80df4:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
   80df6:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   80df8:	6001      	str	r1, [r0, #0]
}
   80dfa:	f85d 4b04 	ldr.w	r4, [sp], #4
   80dfe:	4770      	bx	lr

00080e00 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   80e00:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   80e02:	4770      	bx	lr

00080e04 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   80e04:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   80e06:	4770      	bx	lr

00080e08 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   80e08:	b570      	push	{r4, r5, r6, lr}
   80e0a:	b082      	sub	sp, #8
   80e0c:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80e0e:	0944      	lsrs	r4, r0, #5
   80e10:	f504 1400 	add.w	r4, r4, #2097152	; 0x200000
   80e14:	f204 7407 	addw	r4, r4, #1799	; 0x707
   80e18:	0266      	lsls	r6, r4, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80e1a:	f001 44f0 	and.w	r4, r1, #2013265920	; 0x78000000
   80e1e:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80e22:	d030      	beq.n	80e86 <pio_configure_pin+0x7e>
   80e24:	d806      	bhi.n	80e34 <pio_configure_pin+0x2c>
   80e26:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80e2a:	d00a      	beq.n	80e42 <pio_configure_pin+0x3a>
   80e2c:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80e30:	d018      	beq.n	80e64 <pio_configure_pin+0x5c>
   80e32:	e049      	b.n	80ec8 <pio_configure_pin+0xc0>
   80e34:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80e38:	d030      	beq.n	80e9c <pio_configure_pin+0x94>
   80e3a:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   80e3e:	d02d      	beq.n	80e9c <pio_configure_pin+0x94>
   80e40:	e042      	b.n	80ec8 <pio_configure_pin+0xc0>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   80e42:	f000 001f 	and.w	r0, r0, #31
   80e46:	2401      	movs	r4, #1
   80e48:	4084      	lsls	r4, r0
   80e4a:	4630      	mov	r0, r6
   80e4c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80e50:	4622      	mov	r2, r4
   80e52:	4b1f      	ldr	r3, [pc, #124]	; (80ed0 <pio_configure_pin+0xc8>)
   80e54:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80e56:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80e5a:	bf14      	ite	ne
   80e5c:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80e5e:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80e60:	2001      	movs	r0, #1
   80e62:	e032      	b.n	80eca <pio_configure_pin+0xc2>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   80e64:	f000 001f 	and.w	r0, r0, #31
   80e68:	2401      	movs	r4, #1
   80e6a:	4084      	lsls	r4, r0
   80e6c:	4630      	mov	r0, r6
   80e6e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80e72:	4622      	mov	r2, r4
   80e74:	4b16      	ldr	r3, [pc, #88]	; (80ed0 <pio_configure_pin+0xc8>)
   80e76:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80e78:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80e7c:	bf14      	ite	ne
   80e7e:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80e80:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80e82:	2001      	movs	r0, #1
   80e84:	e021      	b.n	80eca <pio_configure_pin+0xc2>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   80e86:	f000 011f 	and.w	r1, r0, #31
   80e8a:	2401      	movs	r4, #1
   80e8c:	4630      	mov	r0, r6
   80e8e:	fa04 f101 	lsl.w	r1, r4, r1
   80e92:	462a      	mov	r2, r5
   80e94:	4b0f      	ldr	r3, [pc, #60]	; (80ed4 <pio_configure_pin+0xcc>)
   80e96:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80e98:	4620      	mov	r0, r4
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
   80e9a:	e016      	b.n	80eca <pio_configure_pin+0xc2>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80e9c:	f000 011f 	and.w	r1, r0, #31
   80ea0:	2401      	movs	r4, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80ea2:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80ea6:	ea05 0304 	and.w	r3, r5, r4
   80eaa:	9300      	str	r3, [sp, #0]
   80eac:	4630      	mov	r0, r6
   80eae:	fa04 f101 	lsl.w	r1, r4, r1
   80eb2:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80eb6:	bf14      	ite	ne
   80eb8:	2200      	movne	r2, #0
   80eba:	2201      	moveq	r2, #1
   80ebc:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80ec0:	4d05      	ldr	r5, [pc, #20]	; (80ed8 <pio_configure_pin+0xd0>)
   80ec2:	47a8      	blx	r5

	default:
		return 0;
	}

	return 1;
   80ec4:	4620      	mov	r0, r4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80ec6:	e000      	b.n	80eca <pio_configure_pin+0xc2>

	default:
		return 0;
   80ec8:	2000      	movs	r0, #0
	}

	return 1;
}
   80eca:	b002      	add	sp, #8
   80ecc:	bd70      	pop	{r4, r5, r6, pc}
   80ece:	bf00      	nop
   80ed0:	00080d65 	.word	0x00080d65
   80ed4:	00080da5 	.word	0x00080da5
   80ed8:	00080dd9 	.word	0x00080dd9

00080edc <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
   80edc:	b5f0      	push	{r4, r5, r6, r7, lr}
   80ede:	b083      	sub	sp, #12
   80ee0:	4607      	mov	r7, r0
   80ee2:	460e      	mov	r6, r1
   80ee4:	4615      	mov	r5, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80ee6:	f002 44f0 	and.w	r4, r2, #2013265920	; 0x78000000
   80eea:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80eee:	d026      	beq.n	80f3e <pio_configure_pin_group+0x62>
   80ef0:	d806      	bhi.n	80f00 <pio_configure_pin_group+0x24>
   80ef2:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80ef6:	d00a      	beq.n	80f0e <pio_configure_pin_group+0x32>
   80ef8:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80efc:	d013      	beq.n	80f26 <pio_configure_pin_group+0x4a>
   80efe:	e034      	b.n	80f6a <pio_configure_pin_group+0x8e>
   80f00:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80f04:	d01f      	beq.n	80f46 <pio_configure_pin_group+0x6a>
   80f06:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   80f0a:	d01c      	beq.n	80f46 <pio_configure_pin_group+0x6a>
   80f0c:	e02d      	b.n	80f6a <pio_configure_pin_group+0x8e>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   80f0e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80f12:	4632      	mov	r2, r6
   80f14:	4b16      	ldr	r3, [pc, #88]	; (80f70 <pio_configure_pin_group+0x94>)
   80f16:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80f18:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80f1c:	bf14      	ite	ne
   80f1e:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80f20:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80f22:	2001      	movs	r0, #1
   80f24:	e022      	b.n	80f6c <pio_configure_pin_group+0x90>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   80f26:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80f2a:	4632      	mov	r2, r6
   80f2c:	4b10      	ldr	r3, [pc, #64]	; (80f70 <pio_configure_pin_group+0x94>)
   80f2e:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80f30:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80f34:	bf14      	ite	ne
   80f36:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80f38:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80f3a:	2001      	movs	r0, #1
   80f3c:	e016      	b.n	80f6c <pio_configure_pin_group+0x90>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
   80f3e:	4b0d      	ldr	r3, [pc, #52]	; (80f74 <pio_configure_pin_group+0x98>)
   80f40:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80f42:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
   80f44:	e012      	b.n	80f6c <pio_configure_pin_group+0x90>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80f46:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
   80f4a:	f005 0301 	and.w	r3, r5, #1
   80f4e:	9300      	str	r3, [sp, #0]
   80f50:	4638      	mov	r0, r7
   80f52:	4631      	mov	r1, r6
   80f54:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80f58:	bf14      	ite	ne
   80f5a:	2200      	movne	r2, #0
   80f5c:	2201      	moveq	r2, #1
   80f5e:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80f62:	4c05      	ldr	r4, [pc, #20]	; (80f78 <pio_configure_pin_group+0x9c>)
   80f64:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
   80f66:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80f68:	e000      	b.n	80f6c <pio_configure_pin_group+0x90>

	default:
		return 0;
   80f6a:	2000      	movs	r0, #0
	}

	return 1;
}
   80f6c:	b003      	add	sp, #12
   80f6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80f70:	00080d65 	.word	0x00080d65
   80f74:	00080da5 	.word	0x00080da5
   80f78:	00080dd9 	.word	0x00080dd9

00080f7c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   80f7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80f80:	4604      	mov	r4, r0
   80f82:	460e      	mov	r6, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   80f84:	4b10      	ldr	r3, [pc, #64]	; (80fc8 <pio_handler_process+0x4c>)
   80f86:	4798      	blx	r3
   80f88:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80f8a:	4620      	mov	r0, r4
   80f8c:	4b0f      	ldr	r3, [pc, #60]	; (80fcc <pio_handler_process+0x50>)
   80f8e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   80f90:	4005      	ands	r5, r0
   80f92:	d017      	beq.n	80fc4 <pio_handler_process+0x48>
   80f94:	4f0e      	ldr	r7, [pc, #56]	; (80fd0 <pio_handler_process+0x54>)
   80f96:	f107 040c 	add.w	r4, r7, #12
   80f9a:	376c      	adds	r7, #108	; 0x6c
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
   80f9c:	f854 3c0c 	ldr.w	r3, [r4, #-12]
   80fa0:	42b3      	cmp	r3, r6
   80fa2:	d10a      	bne.n	80fba <pio_handler_process+0x3e>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80fa4:	f854 1c08 	ldr.w	r1, [r4, #-8]
   80fa8:	4229      	tst	r1, r5
   80faa:	d006      	beq.n	80fba <pio_handler_process+0x3e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80fac:	6823      	ldr	r3, [r4, #0]
   80fae:	4630      	mov	r0, r6
   80fb0:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
   80fb2:	f854 3c08 	ldr.w	r3, [r4, #-8]
   80fb6:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   80fba:	42bc      	cmp	r4, r7
   80fbc:	d002      	beq.n	80fc4 <pio_handler_process+0x48>
   80fbe:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
   80fc0:	2d00      	cmp	r5, #0
   80fc2:	d1eb      	bne.n	80f9c <pio_handler_process+0x20>
   80fc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80fc8:	00080e01 	.word	0x00080e01
   80fcc:	00080e05 	.word	0x00080e05
   80fd0:	20070bf0 	.word	0x20070bf0

00080fd4 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80fd4:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   80fd6:	4802      	ldr	r0, [pc, #8]	; (80fe0 <PIOA_Handler+0xc>)
   80fd8:	210b      	movs	r1, #11
   80fda:	4b02      	ldr	r3, [pc, #8]	; (80fe4 <PIOA_Handler+0x10>)
   80fdc:	4798      	blx	r3
   80fde:	bd08      	pop	{r3, pc}
   80fe0:	400e0e00 	.word	0x400e0e00
   80fe4:	00080f7d 	.word	0x00080f7d

00080fe8 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80fe8:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80fea:	4802      	ldr	r0, [pc, #8]	; (80ff4 <PIOB_Handler+0xc>)
   80fec:	210c      	movs	r1, #12
   80fee:	4b02      	ldr	r3, [pc, #8]	; (80ff8 <PIOB_Handler+0x10>)
   80ff0:	4798      	blx	r3
   80ff2:	bd08      	pop	{r3, pc}
   80ff4:	400e1000 	.word	0x400e1000
   80ff8:	00080f7d 	.word	0x00080f7d

00080ffc <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80ffc:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   80ffe:	4802      	ldr	r0, [pc, #8]	; (81008 <PIOC_Handler+0xc>)
   81000:	210d      	movs	r1, #13
   81002:	4b02      	ldr	r3, [pc, #8]	; (8100c <PIOC_Handler+0x10>)
   81004:	4798      	blx	r3
   81006:	bd08      	pop	{r3, pc}
   81008:	400e1200 	.word	0x400e1200
   8100c:	00080f7d 	.word	0x00080f7d

00081010 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   81010:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   81012:	4802      	ldr	r0, [pc, #8]	; (8101c <PIOD_Handler+0xc>)
   81014:	210e      	movs	r1, #14
   81016:	4b02      	ldr	r3, [pc, #8]	; (81020 <PIOD_Handler+0x10>)
   81018:	4798      	blx	r3
   8101a:	bd08      	pop	{r3, pc}
   8101c:	400e1400 	.word	0x400e1400
   81020:	00080f7d 	.word	0x00080f7d

00081024 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   81024:	4b17      	ldr	r3, [pc, #92]	; (81084 <pmc_switch_mck_to_pllack+0x60>)
   81026:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   81028:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   8102c:	4310      	orrs	r0, r2
   8102e:	6318      	str	r0, [r3, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   81030:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   81032:	f013 0f08 	tst.w	r3, #8
   81036:	d109      	bne.n	8104c <pmc_switch_mck_to_pllack+0x28>
   81038:	f44f 6300 	mov.w	r3, #2048	; 0x800
   8103c:	4911      	ldr	r1, [pc, #68]	; (81084 <pmc_switch_mck_to_pllack+0x60>)
   8103e:	e001      	b.n	81044 <pmc_switch_mck_to_pllack+0x20>
			--ul_timeout) {
		if (ul_timeout == 0) {
   81040:	3b01      	subs	r3, #1
   81042:	d019      	beq.n	81078 <pmc_switch_mck_to_pllack+0x54>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   81044:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   81046:	f012 0f08 	tst.w	r2, #8
   8104a:	d0f9      	beq.n	81040 <pmc_switch_mck_to_pllack+0x1c>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   8104c:	4b0d      	ldr	r3, [pc, #52]	; (81084 <pmc_switch_mck_to_pllack+0x60>)
   8104e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   81050:	f022 0203 	bic.w	r2, r2, #3
   81054:	f042 0202 	orr.w	r2, r2, #2
   81058:	631a      	str	r2, [r3, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   8105a:	6e98      	ldr	r0, [r3, #104]	; 0x68
   8105c:	f010 0008 	ands.w	r0, r0, #8
   81060:	d10c      	bne.n	8107c <pmc_switch_mck_to_pllack+0x58>
   81062:	f44f 6300 	mov.w	r3, #2048	; 0x800
   81066:	4907      	ldr	r1, [pc, #28]	; (81084 <pmc_switch_mck_to_pllack+0x60>)
   81068:	e001      	b.n	8106e <pmc_switch_mck_to_pllack+0x4a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   8106a:	3b01      	subs	r3, #1
   8106c:	d008      	beq.n	81080 <pmc_switch_mck_to_pllack+0x5c>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   8106e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   81070:	f012 0f08 	tst.w	r2, #8
   81074:	d0f9      	beq.n	8106a <pmc_switch_mck_to_pllack+0x46>
   81076:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   81078:	2001      	movs	r0, #1
   8107a:	4770      	bx	lr
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
   8107c:	2000      	movs	r0, #0
   8107e:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   81080:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   81082:	4770      	bx	lr
   81084:	400e0600 	.word	0x400e0600

00081088 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   81088:	b138      	cbz	r0, 8109a <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   8108a:	4911      	ldr	r1, [pc, #68]	; (810d0 <pmc_switch_mainck_to_xtal+0x48>)
   8108c:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   8108e:	4a11      	ldr	r2, [pc, #68]	; (810d4 <pmc_switch_mainck_to_xtal+0x4c>)
   81090:	401a      	ands	r2, r3
   81092:	4b11      	ldr	r3, [pc, #68]	; (810d8 <pmc_switch_mainck_to_xtal+0x50>)
   81094:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   81096:	620b      	str	r3, [r1, #32]
   81098:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   8109a:	4a0d      	ldr	r2, [pc, #52]	; (810d0 <pmc_switch_mainck_to_xtal+0x48>)
   8109c:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   8109e:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   810a2:	f023 0303 	bic.w	r3, r3, #3
   810a6:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   810aa:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   810ae:	0209      	lsls	r1, r1, #8
   810b0:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   810b2:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   810b4:	6213      	str	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   810b6:	6e93      	ldr	r3, [r2, #104]	; 0x68
   810b8:	f013 0f01 	tst.w	r3, #1
   810bc:	d0fb      	beq.n	810b6 <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   810be:	4a04      	ldr	r2, [pc, #16]	; (810d0 <pmc_switch_mainck_to_xtal+0x48>)
   810c0:	6a13      	ldr	r3, [r2, #32]
   810c2:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   810c6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   810ca:	6213      	str	r3, [r2, #32]
   810cc:	4770      	bx	lr
   810ce:	bf00      	nop
   810d0:	400e0600 	.word	0x400e0600
   810d4:	fec8fffc 	.word	0xfec8fffc
   810d8:	01370002 	.word	0x01370002

000810dc <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   810dc:	4b02      	ldr	r3, [pc, #8]	; (810e8 <pmc_osc_is_ready_mainck+0xc>)
   810de:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   810e0:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   810e4:	4770      	bx	lr
   810e6:	bf00      	nop
   810e8:	400e0600 	.word	0x400e0600

000810ec <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   810ec:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   810f0:	4b01      	ldr	r3, [pc, #4]	; (810f8 <pmc_disable_pllack+0xc>)
   810f2:	629a      	str	r2, [r3, #40]	; 0x28
   810f4:	4770      	bx	lr
   810f6:	bf00      	nop
   810f8:	400e0600 	.word	0x400e0600

000810fc <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   810fc:	4b02      	ldr	r3, [pc, #8]	; (81108 <pmc_is_locked_pllack+0xc>)
   810fe:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   81100:	f000 0002 	and.w	r0, r0, #2
   81104:	4770      	bx	lr
   81106:	bf00      	nop
   81108:	400e0600 	.word	0x400e0600

0008110c <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   8110c:	282c      	cmp	r0, #44	; 0x2c
   8110e:	d820      	bhi.n	81152 <pmc_enable_periph_clk+0x46>
		return 1;
	}

	if (ul_id < 32) {
   81110:	281f      	cmp	r0, #31
   81112:	d80d      	bhi.n	81130 <pmc_enable_periph_clk+0x24>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   81114:	4b12      	ldr	r3, [pc, #72]	; (81160 <pmc_enable_periph_clk+0x54>)
   81116:	699a      	ldr	r2, [r3, #24]
   81118:	2301      	movs	r3, #1
   8111a:	4083      	lsls	r3, r0
   8111c:	401a      	ands	r2, r3
   8111e:	4293      	cmp	r3, r2
   81120:	d019      	beq.n	81156 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER0 = 1 << ul_id;
   81122:	2301      	movs	r3, #1
   81124:	fa03 f000 	lsl.w	r0, r3, r0
   81128:	4b0d      	ldr	r3, [pc, #52]	; (81160 <pmc_enable_periph_clk+0x54>)
   8112a:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   8112c:	2000      	movs	r0, #0
   8112e:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   81130:	4b0b      	ldr	r3, [pc, #44]	; (81160 <pmc_enable_periph_clk+0x54>)
   81132:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55)
	} else {
		ul_id -= 32;
   81136:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   81138:	2301      	movs	r3, #1
   8113a:	4083      	lsls	r3, r0
   8113c:	401a      	ands	r2, r3
   8113e:	4293      	cmp	r3, r2
   81140:	d00b      	beq.n	8115a <pmc_enable_periph_clk+0x4e>
			PMC->PMC_PCER1 = 1 << ul_id;
   81142:	2301      	movs	r3, #1
   81144:	fa03 f000 	lsl.w	r0, r3, r0
   81148:	4b05      	ldr	r3, [pc, #20]	; (81160 <pmc_enable_periph_clk+0x54>)
   8114a:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
   8114e:	2000      	movs	r0, #0
   81150:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
   81152:	2001      	movs	r0, #1
   81154:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   81156:	2000      	movs	r0, #0
   81158:	4770      	bx	lr
   8115a:	2000      	movs	r0, #0
}
   8115c:	4770      	bx	lr
   8115e:	bf00      	nop
   81160:	400e0600 	.word	0x400e0600

00081164 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   81164:	e7fe      	b.n	81164 <Dummy_Handler>
   81166:	bf00      	nop

00081168 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   81168:	b510      	push	{r4, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   8116a:	4b1e      	ldr	r3, [pc, #120]	; (811e4 <Reset_Handler+0x7c>)
   8116c:	4a1e      	ldr	r2, [pc, #120]	; (811e8 <Reset_Handler+0x80>)
   8116e:	429a      	cmp	r2, r3
   81170:	d003      	beq.n	8117a <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
   81172:	4b1e      	ldr	r3, [pc, #120]	; (811ec <Reset_Handler+0x84>)
   81174:	4a1b      	ldr	r2, [pc, #108]	; (811e4 <Reset_Handler+0x7c>)
   81176:	429a      	cmp	r2, r3
   81178:	d304      	bcc.n	81184 <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   8117a:	4b1d      	ldr	r3, [pc, #116]	; (811f0 <Reset_Handler+0x88>)
   8117c:	4a1d      	ldr	r2, [pc, #116]	; (811f4 <Reset_Handler+0x8c>)
   8117e:	429a      	cmp	r2, r3
   81180:	d30f      	bcc.n	811a2 <Reset_Handler+0x3a>
   81182:	e01a      	b.n	811ba <Reset_Handler+0x52>
   81184:	4b1c      	ldr	r3, [pc, #112]	; (811f8 <Reset_Handler+0x90>)
   81186:	4c1d      	ldr	r4, [pc, #116]	; (811fc <Reset_Handler+0x94>)
   81188:	1ae4      	subs	r4, r4, r3
   8118a:	f024 0403 	bic.w	r4, r4, #3
   8118e:	3404      	adds	r4, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   81190:	2300      	movs	r3, #0
			*pDest++ = *pSrc++;
   81192:	4814      	ldr	r0, [pc, #80]	; (811e4 <Reset_Handler+0x7c>)
   81194:	4914      	ldr	r1, [pc, #80]	; (811e8 <Reset_Handler+0x80>)
   81196:	585a      	ldr	r2, [r3, r1]
   81198:	501a      	str	r2, [r3, r0]
   8119a:	3304      	adds	r3, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   8119c:	42a3      	cmp	r3, r4
   8119e:	d1fa      	bne.n	81196 <Reset_Handler+0x2e>
   811a0:	e7eb      	b.n	8117a <Reset_Handler+0x12>
   811a2:	4b17      	ldr	r3, [pc, #92]	; (81200 <Reset_Handler+0x98>)
   811a4:	4917      	ldr	r1, [pc, #92]	; (81204 <Reset_Handler+0x9c>)
   811a6:	1ac9      	subs	r1, r1, r3
   811a8:	f021 0103 	bic.w	r1, r1, #3
   811ac:	1d1a      	adds	r2, r3, #4
   811ae:	4411      	add	r1, r2
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
		*pDest++ = 0;
   811b0:	2200      	movs	r2, #0
   811b2:	f843 2f04 	str.w	r2, [r3, #4]!
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   811b6:	428b      	cmp	r3, r1
   811b8:	d1fb      	bne.n	811b2 <Reset_Handler+0x4a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   811ba:	4a13      	ldr	r2, [pc, #76]	; (81208 <Reset_Handler+0xa0>)
   811bc:	f022 4360 	bic.w	r3, r2, #3758096384	; 0xe0000000
   811c0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   811c4:	4911      	ldr	r1, [pc, #68]	; (8120c <Reset_Handler+0xa4>)
   811c6:	608b      	str	r3, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   811c8:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
   811cc:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
   811d0:	d203      	bcs.n	811da <Reset_Handler+0x72>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   811d2:	688a      	ldr	r2, [r1, #8]
   811d4:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
   811d8:	608a      	str	r2, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   811da:	4b0d      	ldr	r3, [pc, #52]	; (81210 <Reset_Handler+0xa8>)
   811dc:	4798      	blx	r3

	/* Branch to main function */
	main();
   811de:	4b0d      	ldr	r3, [pc, #52]	; (81214 <Reset_Handler+0xac>)
   811e0:	4798      	blx	r3
   811e2:	e7fe      	b.n	811e2 <Reset_Handler+0x7a>
   811e4:	20070000 	.word	0x20070000
   811e8:	00087ba8 	.word	0x00087ba8
   811ec:	20070a34 	.word	0x20070a34
   811f0:	20070cb0 	.word	0x20070cb0
   811f4:	20070a34 	.word	0x20070a34
   811f8:	20070004 	.word	0x20070004
   811fc:	20070a37 	.word	0x20070a37
   81200:	20070a30 	.word	0x20070a30
   81204:	20070cab 	.word	0x20070cab
   81208:	00080000 	.word	0x00080000
   8120c:	e000ed00 	.word	0xe000ed00
   81210:	00081411 	.word	0x00081411
   81214:	00081385 	.word	0x00081385

00081218 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   81218:	4b3e      	ldr	r3, [pc, #248]	; (81314 <SystemCoreClockUpdate+0xfc>)
   8121a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   8121c:	f003 0303 	and.w	r3, r3, #3
   81220:	2b03      	cmp	r3, #3
   81222:	d85f      	bhi.n	812e4 <SystemCoreClockUpdate+0xcc>
   81224:	e8df f003 	tbb	[pc, r3]
   81228:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   8122c:	4b3a      	ldr	r3, [pc, #232]	; (81318 <SystemCoreClockUpdate+0x100>)
   8122e:	695b      	ldr	r3, [r3, #20]
   81230:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   81234:	bf14      	ite	ne
   81236:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   8123a:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   8123e:	4b37      	ldr	r3, [pc, #220]	; (8131c <SystemCoreClockUpdate+0x104>)
   81240:	601a      	str	r2, [r3, #0]
   81242:	e04f      	b.n	812e4 <SystemCoreClockUpdate+0xcc>
		}
		break;
	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   81244:	4b33      	ldr	r3, [pc, #204]	; (81314 <SystemCoreClockUpdate+0xfc>)
   81246:	6a1b      	ldr	r3, [r3, #32]
   81248:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   8124c:	d003      	beq.n	81256 <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   8124e:	4a34      	ldr	r2, [pc, #208]	; (81320 <SystemCoreClockUpdate+0x108>)
   81250:	4b32      	ldr	r3, [pc, #200]	; (8131c <SystemCoreClockUpdate+0x104>)
   81252:	601a      	str	r2, [r3, #0]
   81254:	e046      	b.n	812e4 <SystemCoreClockUpdate+0xcc>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   81256:	4a33      	ldr	r2, [pc, #204]	; (81324 <SystemCoreClockUpdate+0x10c>)
   81258:	4b30      	ldr	r3, [pc, #192]	; (8131c <SystemCoreClockUpdate+0x104>)
   8125a:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   8125c:	4b2d      	ldr	r3, [pc, #180]	; (81314 <SystemCoreClockUpdate+0xfc>)
   8125e:	6a1b      	ldr	r3, [r3, #32]
   81260:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81264:	2b10      	cmp	r3, #16
   81266:	d002      	beq.n	8126e <SystemCoreClockUpdate+0x56>
   81268:	2b20      	cmp	r3, #32
   8126a:	d004      	beq.n	81276 <SystemCoreClockUpdate+0x5e>
   8126c:	e03a      	b.n	812e4 <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   8126e:	4a2e      	ldr	r2, [pc, #184]	; (81328 <SystemCoreClockUpdate+0x110>)
   81270:	4b2a      	ldr	r3, [pc, #168]	; (8131c <SystemCoreClockUpdate+0x104>)
   81272:	601a      	str	r2, [r3, #0]
				break;
   81274:	e036      	b.n	812e4 <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   81276:	4a2a      	ldr	r2, [pc, #168]	; (81320 <SystemCoreClockUpdate+0x108>)
   81278:	4b28      	ldr	r3, [pc, #160]	; (8131c <SystemCoreClockUpdate+0x104>)
   8127a:	601a      	str	r2, [r3, #0]
				break;
   8127c:	e032      	b.n	812e4 <SystemCoreClockUpdate+0xcc>
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   8127e:	4b25      	ldr	r3, [pc, #148]	; (81314 <SystemCoreClockUpdate+0xfc>)
   81280:	6a1b      	ldr	r3, [r3, #32]
   81282:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   81286:	d003      	beq.n	81290 <SystemCoreClockUpdate+0x78>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   81288:	4a25      	ldr	r2, [pc, #148]	; (81320 <SystemCoreClockUpdate+0x108>)
   8128a:	4b24      	ldr	r3, [pc, #144]	; (8131c <SystemCoreClockUpdate+0x104>)
   8128c:	601a      	str	r2, [r3, #0]
   8128e:	e012      	b.n	812b6 <SystemCoreClockUpdate+0x9e>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   81290:	4a24      	ldr	r2, [pc, #144]	; (81324 <SystemCoreClockUpdate+0x10c>)
   81292:	4b22      	ldr	r3, [pc, #136]	; (8131c <SystemCoreClockUpdate+0x104>)
   81294:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   81296:	4b1f      	ldr	r3, [pc, #124]	; (81314 <SystemCoreClockUpdate+0xfc>)
   81298:	6a1b      	ldr	r3, [r3, #32]
   8129a:	f003 0370 	and.w	r3, r3, #112	; 0x70
   8129e:	2b10      	cmp	r3, #16
   812a0:	d002      	beq.n	812a8 <SystemCoreClockUpdate+0x90>
   812a2:	2b20      	cmp	r3, #32
   812a4:	d004      	beq.n	812b0 <SystemCoreClockUpdate+0x98>
   812a6:	e006      	b.n	812b6 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   812a8:	4a1f      	ldr	r2, [pc, #124]	; (81328 <SystemCoreClockUpdate+0x110>)
   812aa:	4b1c      	ldr	r3, [pc, #112]	; (8131c <SystemCoreClockUpdate+0x104>)
   812ac:	601a      	str	r2, [r3, #0]
				break;
   812ae:	e002      	b.n	812b6 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   812b0:	4a1b      	ldr	r2, [pc, #108]	; (81320 <SystemCoreClockUpdate+0x108>)
   812b2:	4b1a      	ldr	r3, [pc, #104]	; (8131c <SystemCoreClockUpdate+0x104>)
   812b4:	601a      	str	r2, [r3, #0]
				break;
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   812b6:	4b17      	ldr	r3, [pc, #92]	; (81314 <SystemCoreClockUpdate+0xfc>)
   812b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   812ba:	f003 0303 	and.w	r3, r3, #3
   812be:	2b02      	cmp	r3, #2
   812c0:	d10d      	bne.n	812de <SystemCoreClockUpdate+0xc6>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   812c2:	4b14      	ldr	r3, [pc, #80]	; (81314 <SystemCoreClockUpdate+0xfc>)
   812c4:	6a98      	ldr	r0, [r3, #40]	; 0x28
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   812c6:	6a99      	ldr	r1, [r3, #40]	; 0x28
   812c8:	4b14      	ldr	r3, [pc, #80]	; (8131c <SystemCoreClockUpdate+0x104>)
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   812ca:	f3c0 400a 	ubfx	r0, r0, #16, #11
   812ce:	681a      	ldr	r2, [r3, #0]
   812d0:	fb00 2202 	mla	r2, r0, r2, r2
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   812d4:	b2c9      	uxtb	r1, r1
   812d6:	fbb2 f2f1 	udiv	r2, r2, r1
   812da:	601a      	str	r2, [r3, #0]
   812dc:	e002      	b.n	812e4 <SystemCoreClockUpdate+0xcc>
				                             CKGR_PLLAR_DIVA_Pos));
		} else {
			SystemCoreClock = SYS_UTMIPLL / 2U;
   812de:	4a13      	ldr	r2, [pc, #76]	; (8132c <SystemCoreClockUpdate+0x114>)
   812e0:	4b0e      	ldr	r3, [pc, #56]	; (8131c <SystemCoreClockUpdate+0x104>)
   812e2:	601a      	str	r2, [r3, #0]
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   812e4:	4b0b      	ldr	r3, [pc, #44]	; (81314 <SystemCoreClockUpdate+0xfc>)
   812e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   812e8:	f003 0370 	and.w	r3, r3, #112	; 0x70
   812ec:	2b70      	cmp	r3, #112	; 0x70
   812ee:	d107      	bne.n	81300 <SystemCoreClockUpdate+0xe8>
		SystemCoreClock /= 3U;
   812f0:	4b0a      	ldr	r3, [pc, #40]	; (8131c <SystemCoreClockUpdate+0x104>)
   812f2:	681a      	ldr	r2, [r3, #0]
   812f4:	490e      	ldr	r1, [pc, #56]	; (81330 <SystemCoreClockUpdate+0x118>)
   812f6:	fba1 0202 	umull	r0, r2, r1, r2
   812fa:	0852      	lsrs	r2, r2, #1
   812fc:	601a      	str	r2, [r3, #0]
   812fe:	4770      	bx	lr
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   81300:	4b04      	ldr	r3, [pc, #16]	; (81314 <SystemCoreClockUpdate+0xfc>)
   81302:	6b19      	ldr	r1, [r3, #48]	; 0x30
   81304:	4b05      	ldr	r3, [pc, #20]	; (8131c <SystemCoreClockUpdate+0x104>)
   81306:	f3c1 1102 	ubfx	r1, r1, #4, #3
   8130a:	681a      	ldr	r2, [r3, #0]
   8130c:	40ca      	lsrs	r2, r1
   8130e:	601a      	str	r2, [r3, #0]
   81310:	4770      	bx	lr
   81312:	bf00      	nop
   81314:	400e0600 	.word	0x400e0600
   81318:	400e1a10 	.word	0x400e1a10
   8131c:	20070190 	.word	0x20070190
   81320:	00b71b00 	.word	0x00b71b00
   81324:	003d0900 	.word	0x003d0900
   81328:	007a1200 	.word	0x007a1200
   8132c:	0e4e1c00 	.word	0x0e4e1c00
   81330:	aaaaaaab 	.word	0xaaaaaaab

00081334 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   81334:	4b09      	ldr	r3, [pc, #36]	; (8135c <_sbrk+0x28>)
   81336:	681b      	ldr	r3, [r3, #0]
   81338:	b913      	cbnz	r3, 81340 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
   8133a:	4a09      	ldr	r2, [pc, #36]	; (81360 <_sbrk+0x2c>)
   8133c:	4b07      	ldr	r3, [pc, #28]	; (8135c <_sbrk+0x28>)
   8133e:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
   81340:	4b06      	ldr	r3, [pc, #24]	; (8135c <_sbrk+0x28>)
   81342:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   81344:	181a      	adds	r2, r3, r0
   81346:	4907      	ldr	r1, [pc, #28]	; (81364 <_sbrk+0x30>)
   81348:	4291      	cmp	r1, r2
   8134a:	db04      	blt.n	81356 <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
   8134c:	4610      	mov	r0, r2
   8134e:	4a03      	ldr	r2, [pc, #12]	; (8135c <_sbrk+0x28>)
   81350:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   81352:	4618      	mov	r0, r3
   81354:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
   81356:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
   8135a:	4770      	bx	lr
   8135c:	20070c60 	.word	0x20070c60
   81360:	20072cb0 	.word	0x20072cb0
   81364:	20087ffc 	.word	0x20087ffc

00081368 <_close>:
}

extern int _close(int file)
{
	return -1;
}
   81368:	f04f 30ff 	mov.w	r0, #4294967295
   8136c:	4770      	bx	lr
   8136e:	bf00      	nop

00081370 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
   81370:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   81374:	604b      	str	r3, [r1, #4]

	return 0;
}
   81376:	2000      	movs	r0, #0
   81378:	4770      	bx	lr
   8137a:	bf00      	nop

0008137c <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
   8137c:	2001      	movs	r0, #1
   8137e:	4770      	bx	lr

00081380 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
   81380:	2000      	movs	r0, #0
   81382:	4770      	bx	lr

00081384 <main>:
#define TASK_BLINK		1

extern uint8_t data_received_nav[];

int main (void)
{
   81384:	b5f0      	push	{r4, r5, r6, r7, lr}
   81386:	b087      	sub	sp, #28

	board_init();
   81388:	4b15      	ldr	r3, [pc, #84]	; (813e0 <main+0x5c>)
   8138a:	4798      	blx	r3
	sysclk_init();
   8138c:	4b15      	ldr	r3, [pc, #84]	; (813e4 <main+0x60>)
   8138e:	4798      	blx	r3
	configureConsole();
   81390:	4b15      	ldr	r3, [pc, #84]	; (813e8 <main+0x64>)
   81392:	4798      	blx	r3
   81394:	200b      	movs	r0, #11
   81396:	4c15      	ldr	r4, [pc, #84]	; (813ec <main+0x68>)
   81398:	47a0      	blx	r4
   8139a:	200c      	movs	r0, #12
   8139c:	47a0      	blx	r4
   8139e:	200d      	movs	r0, #13
   813a0:	47a0      	blx	r4
   813a2:	200e      	movs	r0, #14
   813a4:	47a0      	blx	r4
	ioport_init();
	//delay_init();
	init_twi_functions();
   813a6:	4b12      	ldr	r3, [pc, #72]	; (813f0 <main+0x6c>)
   813a8:	4798      	blx	r3
	

	printf("start sending to navigation");
   813aa:	4812      	ldr	r0, [pc, #72]	; (813f4 <main+0x70>)
   813ac:	4c12      	ldr	r4, [pc, #72]	; (813f8 <main+0x74>)
   813ae:	47a0      	blx	r4
	send_package(TWI_CMD_ERROR,TWI_SLAVE_NAVIGERING);
   813b0:	2025      	movs	r0, #37	; 0x25
   813b2:	2103      	movs	r1, #3
   813b4:	4b11      	ldr	r3, [pc, #68]	; (813fc <main+0x78>)
   813b6:	4798      	blx	r3
	receive_package(TWI_SLAVE_NAVIGERING);
   813b8:	2003      	movs	r0, #3
   813ba:	4b11      	ldr	r3, [pc, #68]	; (81400 <main+0x7c>)
   813bc:	4798      	blx	r3
	char str[20];
	sprintf(str,"Data receive %d",data_received_nav[1]);
   813be:	4f11      	ldr	r7, [pc, #68]	; (81404 <main+0x80>)
   813c0:	4e11      	ldr	r6, [pc, #68]	; (81408 <main+0x84>)
   813c2:	a801      	add	r0, sp, #4
   813c4:	4639      	mov	r1, r7
   813c6:	7872      	ldrb	r2, [r6, #1]
   813c8:	4d10      	ldr	r5, [pc, #64]	; (8140c <main+0x88>)
   813ca:	47a8      	blx	r5
	printf(str);
   813cc:	a801      	add	r0, sp, #4
   813ce:	47a0      	blx	r4
	sprintf(str,"Data receive %d",data_received_nav[2]);
   813d0:	a801      	add	r0, sp, #4
   813d2:	4639      	mov	r1, r7
   813d4:	78b2      	ldrb	r2, [r6, #2]
   813d6:	47a8      	blx	r5
	printf(str);
   813d8:	a801      	add	r0, sp, #4
   813da:	47a0      	blx	r4
   813dc:	e7fe      	b.n	813dc <main+0x58>
   813de:	bf00      	nop
   813e0:	00080cd5 	.word	0x00080cd5
   813e4:	00080c71 	.word	0x00080c71
   813e8:	00080809 	.word	0x00080809
   813ec:	0008110d 	.word	0x0008110d
   813f0:	00080ab5 	.word	0x00080ab5
   813f4:	000879b0 	.word	0x000879b0
   813f8:	00081461 	.word	0x00081461
   813fc:	00080885 	.word	0x00080885
   81400:	00080929 	.word	0x00080929
   81404:	000879cc 	.word	0x000879cc
   81408:	20070be8 	.word	0x20070be8
   8140c:	00081719 	.word	0x00081719

00081410 <__libc_init_array>:
   81410:	b570      	push	{r4, r5, r6, lr}
   81412:	4e0f      	ldr	r6, [pc, #60]	; (81450 <__libc_init_array+0x40>)
   81414:	4d0f      	ldr	r5, [pc, #60]	; (81454 <__libc_init_array+0x44>)
   81416:	1b76      	subs	r6, r6, r5
   81418:	10b6      	asrs	r6, r6, #2
   8141a:	d007      	beq.n	8142c <__libc_init_array+0x1c>
   8141c:	3d04      	subs	r5, #4
   8141e:	2400      	movs	r4, #0
   81420:	3401      	adds	r4, #1
   81422:	f855 3f04 	ldr.w	r3, [r5, #4]!
   81426:	4798      	blx	r3
   81428:	42a6      	cmp	r6, r4
   8142a:	d1f9      	bne.n	81420 <__libc_init_array+0x10>
   8142c:	4e0a      	ldr	r6, [pc, #40]	; (81458 <__libc_init_array+0x48>)
   8142e:	4d0b      	ldr	r5, [pc, #44]	; (8145c <__libc_init_array+0x4c>)
   81430:	f006 fba4 	bl	87b7c <_init>
   81434:	1b76      	subs	r6, r6, r5
   81436:	10b6      	asrs	r6, r6, #2
   81438:	d008      	beq.n	8144c <__libc_init_array+0x3c>
   8143a:	3d04      	subs	r5, #4
   8143c:	2400      	movs	r4, #0
   8143e:	3401      	adds	r4, #1
   81440:	f855 3f04 	ldr.w	r3, [r5, #4]!
   81444:	4798      	blx	r3
   81446:	42a6      	cmp	r6, r4
   81448:	d1f9      	bne.n	8143e <__libc_init_array+0x2e>
   8144a:	bd70      	pop	{r4, r5, r6, pc}
   8144c:	bd70      	pop	{r4, r5, r6, pc}
   8144e:	bf00      	nop
   81450:	00087b88 	.word	0x00087b88
   81454:	00087b88 	.word	0x00087b88
   81458:	00087b90 	.word	0x00087b90
   8145c:	00087b88 	.word	0x00087b88

00081460 <iprintf>:
   81460:	b40f      	push	{r0, r1, r2, r3}
   81462:	b510      	push	{r4, lr}
   81464:	4b07      	ldr	r3, [pc, #28]	; (81484 <iprintf+0x24>)
   81466:	b082      	sub	sp, #8
   81468:	ac04      	add	r4, sp, #16
   8146a:	f854 2b04 	ldr.w	r2, [r4], #4
   8146e:	6818      	ldr	r0, [r3, #0]
   81470:	4623      	mov	r3, r4
   81472:	6881      	ldr	r1, [r0, #8]
   81474:	9401      	str	r4, [sp, #4]
   81476:	f001 fc51 	bl	82d1c <_vfiprintf_r>
   8147a:	b002      	add	sp, #8
   8147c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   81480:	b004      	add	sp, #16
   81482:	4770      	bx	lr
   81484:	200705c0 	.word	0x200705c0

00081488 <memcpy>:
   81488:	4684      	mov	ip, r0
   8148a:	ea41 0300 	orr.w	r3, r1, r0
   8148e:	f013 0303 	ands.w	r3, r3, #3
   81492:	d149      	bne.n	81528 <memcpy+0xa0>
   81494:	3a40      	subs	r2, #64	; 0x40
   81496:	d323      	bcc.n	814e0 <memcpy+0x58>
   81498:	680b      	ldr	r3, [r1, #0]
   8149a:	6003      	str	r3, [r0, #0]
   8149c:	684b      	ldr	r3, [r1, #4]
   8149e:	6043      	str	r3, [r0, #4]
   814a0:	688b      	ldr	r3, [r1, #8]
   814a2:	6083      	str	r3, [r0, #8]
   814a4:	68cb      	ldr	r3, [r1, #12]
   814a6:	60c3      	str	r3, [r0, #12]
   814a8:	690b      	ldr	r3, [r1, #16]
   814aa:	6103      	str	r3, [r0, #16]
   814ac:	694b      	ldr	r3, [r1, #20]
   814ae:	6143      	str	r3, [r0, #20]
   814b0:	698b      	ldr	r3, [r1, #24]
   814b2:	6183      	str	r3, [r0, #24]
   814b4:	69cb      	ldr	r3, [r1, #28]
   814b6:	61c3      	str	r3, [r0, #28]
   814b8:	6a0b      	ldr	r3, [r1, #32]
   814ba:	6203      	str	r3, [r0, #32]
   814bc:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   814be:	6243      	str	r3, [r0, #36]	; 0x24
   814c0:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   814c2:	6283      	str	r3, [r0, #40]	; 0x28
   814c4:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   814c6:	62c3      	str	r3, [r0, #44]	; 0x2c
   814c8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   814ca:	6303      	str	r3, [r0, #48]	; 0x30
   814cc:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   814ce:	6343      	str	r3, [r0, #52]	; 0x34
   814d0:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   814d2:	6383      	str	r3, [r0, #56]	; 0x38
   814d4:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   814d6:	63c3      	str	r3, [r0, #60]	; 0x3c
   814d8:	3040      	adds	r0, #64	; 0x40
   814da:	3140      	adds	r1, #64	; 0x40
   814dc:	3a40      	subs	r2, #64	; 0x40
   814de:	d2db      	bcs.n	81498 <memcpy+0x10>
   814e0:	3230      	adds	r2, #48	; 0x30
   814e2:	d30b      	bcc.n	814fc <memcpy+0x74>
   814e4:	680b      	ldr	r3, [r1, #0]
   814e6:	6003      	str	r3, [r0, #0]
   814e8:	684b      	ldr	r3, [r1, #4]
   814ea:	6043      	str	r3, [r0, #4]
   814ec:	688b      	ldr	r3, [r1, #8]
   814ee:	6083      	str	r3, [r0, #8]
   814f0:	68cb      	ldr	r3, [r1, #12]
   814f2:	60c3      	str	r3, [r0, #12]
   814f4:	3010      	adds	r0, #16
   814f6:	3110      	adds	r1, #16
   814f8:	3a10      	subs	r2, #16
   814fa:	d2f3      	bcs.n	814e4 <memcpy+0x5c>
   814fc:	320c      	adds	r2, #12
   814fe:	d305      	bcc.n	8150c <memcpy+0x84>
   81500:	f851 3b04 	ldr.w	r3, [r1], #4
   81504:	f840 3b04 	str.w	r3, [r0], #4
   81508:	3a04      	subs	r2, #4
   8150a:	d2f9      	bcs.n	81500 <memcpy+0x78>
   8150c:	3204      	adds	r2, #4
   8150e:	d008      	beq.n	81522 <memcpy+0x9a>
   81510:	07d2      	lsls	r2, r2, #31
   81512:	bf1c      	itt	ne
   81514:	f811 3b01 	ldrbne.w	r3, [r1], #1
   81518:	f800 3b01 	strbne.w	r3, [r0], #1
   8151c:	d301      	bcc.n	81522 <memcpy+0x9a>
   8151e:	880b      	ldrh	r3, [r1, #0]
   81520:	8003      	strh	r3, [r0, #0]
   81522:	4660      	mov	r0, ip
   81524:	4770      	bx	lr
   81526:	bf00      	nop
   81528:	2a08      	cmp	r2, #8
   8152a:	d313      	bcc.n	81554 <memcpy+0xcc>
   8152c:	078b      	lsls	r3, r1, #30
   8152e:	d0b1      	beq.n	81494 <memcpy+0xc>
   81530:	f010 0303 	ands.w	r3, r0, #3
   81534:	d0ae      	beq.n	81494 <memcpy+0xc>
   81536:	f1c3 0304 	rsb	r3, r3, #4
   8153a:	1ad2      	subs	r2, r2, r3
   8153c:	07db      	lsls	r3, r3, #31
   8153e:	bf1c      	itt	ne
   81540:	f811 3b01 	ldrbne.w	r3, [r1], #1
   81544:	f800 3b01 	strbne.w	r3, [r0], #1
   81548:	d3a4      	bcc.n	81494 <memcpy+0xc>
   8154a:	f831 3b02 	ldrh.w	r3, [r1], #2
   8154e:	f820 3b02 	strh.w	r3, [r0], #2
   81552:	e79f      	b.n	81494 <memcpy+0xc>
   81554:	3a04      	subs	r2, #4
   81556:	d3d9      	bcc.n	8150c <memcpy+0x84>
   81558:	3a01      	subs	r2, #1
   8155a:	f811 3b01 	ldrb.w	r3, [r1], #1
   8155e:	f800 3b01 	strb.w	r3, [r0], #1
   81562:	d2f9      	bcs.n	81558 <memcpy+0xd0>
   81564:	780b      	ldrb	r3, [r1, #0]
   81566:	7003      	strb	r3, [r0, #0]
   81568:	784b      	ldrb	r3, [r1, #1]
   8156a:	7043      	strb	r3, [r0, #1]
   8156c:	788b      	ldrb	r3, [r1, #2]
   8156e:	7083      	strb	r3, [r0, #2]
   81570:	4660      	mov	r0, ip
   81572:	4770      	bx	lr

00081574 <memset>:
   81574:	b4f0      	push	{r4, r5, r6, r7}
   81576:	0784      	lsls	r4, r0, #30
   81578:	d043      	beq.n	81602 <memset+0x8e>
   8157a:	1e54      	subs	r4, r2, #1
   8157c:	2a00      	cmp	r2, #0
   8157e:	d03e      	beq.n	815fe <memset+0x8a>
   81580:	b2cd      	uxtb	r5, r1
   81582:	4603      	mov	r3, r0
   81584:	e003      	b.n	8158e <memset+0x1a>
   81586:	1e62      	subs	r2, r4, #1
   81588:	2c00      	cmp	r4, #0
   8158a:	d038      	beq.n	815fe <memset+0x8a>
   8158c:	4614      	mov	r4, r2
   8158e:	f803 5b01 	strb.w	r5, [r3], #1
   81592:	079a      	lsls	r2, r3, #30
   81594:	d1f7      	bne.n	81586 <memset+0x12>
   81596:	2c03      	cmp	r4, #3
   81598:	d92a      	bls.n	815f0 <memset+0x7c>
   8159a:	b2cd      	uxtb	r5, r1
   8159c:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   815a0:	2c0f      	cmp	r4, #15
   815a2:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   815a6:	d915      	bls.n	815d4 <memset+0x60>
   815a8:	f1a4 0710 	sub.w	r7, r4, #16
   815ac:	093f      	lsrs	r7, r7, #4
   815ae:	f103 0610 	add.w	r6, r3, #16
   815b2:	eb06 1607 	add.w	r6, r6, r7, lsl #4
   815b6:	461a      	mov	r2, r3
   815b8:	6015      	str	r5, [r2, #0]
   815ba:	6055      	str	r5, [r2, #4]
   815bc:	6095      	str	r5, [r2, #8]
   815be:	60d5      	str	r5, [r2, #12]
   815c0:	3210      	adds	r2, #16
   815c2:	42b2      	cmp	r2, r6
   815c4:	d1f8      	bne.n	815b8 <memset+0x44>
   815c6:	f004 040f 	and.w	r4, r4, #15
   815ca:	3701      	adds	r7, #1
   815cc:	2c03      	cmp	r4, #3
   815ce:	eb03 1307 	add.w	r3, r3, r7, lsl #4
   815d2:	d90d      	bls.n	815f0 <memset+0x7c>
   815d4:	461e      	mov	r6, r3
   815d6:	4622      	mov	r2, r4
   815d8:	3a04      	subs	r2, #4
   815da:	2a03      	cmp	r2, #3
   815dc:	f846 5b04 	str.w	r5, [r6], #4
   815e0:	d8fa      	bhi.n	815d8 <memset+0x64>
   815e2:	1f22      	subs	r2, r4, #4
   815e4:	f022 0203 	bic.w	r2, r2, #3
   815e8:	3204      	adds	r2, #4
   815ea:	4413      	add	r3, r2
   815ec:	f004 0403 	and.w	r4, r4, #3
   815f0:	b12c      	cbz	r4, 815fe <memset+0x8a>
   815f2:	b2c9      	uxtb	r1, r1
   815f4:	441c      	add	r4, r3
   815f6:	f803 1b01 	strb.w	r1, [r3], #1
   815fa:	42a3      	cmp	r3, r4
   815fc:	d1fb      	bne.n	815f6 <memset+0x82>
   815fe:	bcf0      	pop	{r4, r5, r6, r7}
   81600:	4770      	bx	lr
   81602:	4614      	mov	r4, r2
   81604:	4603      	mov	r3, r0
   81606:	e7c6      	b.n	81596 <memset+0x22>

00081608 <setbuf>:
   81608:	2900      	cmp	r1, #0
   8160a:	bf0c      	ite	eq
   8160c:	2202      	moveq	r2, #2
   8160e:	2200      	movne	r2, #0
   81610:	f44f 6380 	mov.w	r3, #1024	; 0x400
   81614:	f000 b800 	b.w	81618 <setvbuf>

00081618 <setvbuf>:
   81618:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8161c:	4d3c      	ldr	r5, [pc, #240]	; (81710 <setvbuf+0xf8>)
   8161e:	4604      	mov	r4, r0
   81620:	682d      	ldr	r5, [r5, #0]
   81622:	4688      	mov	r8, r1
   81624:	4616      	mov	r6, r2
   81626:	461f      	mov	r7, r3
   81628:	b115      	cbz	r5, 81630 <setvbuf+0x18>
   8162a:	6bab      	ldr	r3, [r5, #56]	; 0x38
   8162c:	2b00      	cmp	r3, #0
   8162e:	d04f      	beq.n	816d0 <setvbuf+0xb8>
   81630:	2e02      	cmp	r6, #2
   81632:	d830      	bhi.n	81696 <setvbuf+0x7e>
   81634:	2f00      	cmp	r7, #0
   81636:	db2e      	blt.n	81696 <setvbuf+0x7e>
   81638:	4628      	mov	r0, r5
   8163a:	4621      	mov	r1, r4
   8163c:	f003 faf8 	bl	84c30 <_fflush_r>
   81640:	89a3      	ldrh	r3, [r4, #12]
   81642:	2200      	movs	r2, #0
   81644:	6062      	str	r2, [r4, #4]
   81646:	61a2      	str	r2, [r4, #24]
   81648:	061a      	lsls	r2, r3, #24
   8164a:	d428      	bmi.n	8169e <setvbuf+0x86>
   8164c:	f023 0383 	bic.w	r3, r3, #131	; 0x83
   81650:	b29b      	uxth	r3, r3
   81652:	2e02      	cmp	r6, #2
   81654:	81a3      	strh	r3, [r4, #12]
   81656:	d02d      	beq.n	816b4 <setvbuf+0x9c>
   81658:	f1b8 0f00 	cmp.w	r8, #0
   8165c:	d03c      	beq.n	816d8 <setvbuf+0xc0>
   8165e:	2e01      	cmp	r6, #1
   81660:	d013      	beq.n	8168a <setvbuf+0x72>
   81662:	b29b      	uxth	r3, r3
   81664:	f003 0008 	and.w	r0, r3, #8
   81668:	4a2a      	ldr	r2, [pc, #168]	; (81714 <setvbuf+0xfc>)
   8166a:	b280      	uxth	r0, r0
   8166c:	63ea      	str	r2, [r5, #60]	; 0x3c
   8166e:	f8c4 8000 	str.w	r8, [r4]
   81672:	f8c4 8010 	str.w	r8, [r4, #16]
   81676:	6167      	str	r7, [r4, #20]
   81678:	b178      	cbz	r0, 8169a <setvbuf+0x82>
   8167a:	f013 0f03 	tst.w	r3, #3
   8167e:	bf18      	it	ne
   81680:	2700      	movne	r7, #0
   81682:	60a7      	str	r7, [r4, #8]
   81684:	2000      	movs	r0, #0
   81686:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8168a:	f043 0301 	orr.w	r3, r3, #1
   8168e:	427a      	negs	r2, r7
   81690:	81a3      	strh	r3, [r4, #12]
   81692:	61a2      	str	r2, [r4, #24]
   81694:	e7e5      	b.n	81662 <setvbuf+0x4a>
   81696:	f04f 30ff 	mov.w	r0, #4294967295
   8169a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8169e:	4628      	mov	r0, r5
   816a0:	6921      	ldr	r1, [r4, #16]
   816a2:	f003 fc25 	bl	84ef0 <_free_r>
   816a6:	89a3      	ldrh	r3, [r4, #12]
   816a8:	2e02      	cmp	r6, #2
   816aa:	f023 0383 	bic.w	r3, r3, #131	; 0x83
   816ae:	b29b      	uxth	r3, r3
   816b0:	81a3      	strh	r3, [r4, #12]
   816b2:	d1d1      	bne.n	81658 <setvbuf+0x40>
   816b4:	2000      	movs	r0, #0
   816b6:	f104 0243 	add.w	r2, r4, #67	; 0x43
   816ba:	f043 0302 	orr.w	r3, r3, #2
   816be:	2500      	movs	r5, #0
   816c0:	2101      	movs	r1, #1
   816c2:	81a3      	strh	r3, [r4, #12]
   816c4:	60a5      	str	r5, [r4, #8]
   816c6:	6022      	str	r2, [r4, #0]
   816c8:	6122      	str	r2, [r4, #16]
   816ca:	6161      	str	r1, [r4, #20]
   816cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   816d0:	4628      	mov	r0, r5
   816d2:	f003 fac9 	bl	84c68 <__sinit>
   816d6:	e7ab      	b.n	81630 <setvbuf+0x18>
   816d8:	2f00      	cmp	r7, #0
   816da:	bf08      	it	eq
   816dc:	f44f 6780 	moveq.w	r7, #1024	; 0x400
   816e0:	4638      	mov	r0, r7
   816e2:	f003 feff 	bl	854e4 <malloc>
   816e6:	4680      	mov	r8, r0
   816e8:	b128      	cbz	r0, 816f6 <setvbuf+0xde>
   816ea:	89a3      	ldrh	r3, [r4, #12]
   816ec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   816f0:	b29b      	uxth	r3, r3
   816f2:	81a3      	strh	r3, [r4, #12]
   816f4:	e7b3      	b.n	8165e <setvbuf+0x46>
   816f6:	f44f 6080 	mov.w	r0, #1024	; 0x400
   816fa:	f003 fef3 	bl	854e4 <malloc>
   816fe:	4680      	mov	r8, r0
   81700:	b918      	cbnz	r0, 8170a <setvbuf+0xf2>
   81702:	89a3      	ldrh	r3, [r4, #12]
   81704:	f04f 30ff 	mov.w	r0, #4294967295
   81708:	e7d5      	b.n	816b6 <setvbuf+0x9e>
   8170a:	f44f 6780 	mov.w	r7, #1024	; 0x400
   8170e:	e7ec      	b.n	816ea <setvbuf+0xd2>
   81710:	200705c0 	.word	0x200705c0
   81714:	00084c5d 	.word	0x00084c5d

00081718 <sprintf>:
   81718:	b40e      	push	{r1, r2, r3}
   8171a:	b5f0      	push	{r4, r5, r6, r7, lr}
   8171c:	b09c      	sub	sp, #112	; 0x70
   8171e:	ac21      	add	r4, sp, #132	; 0x84
   81720:	f854 2b04 	ldr.w	r2, [r4], #4
   81724:	490e      	ldr	r1, [pc, #56]	; (81760 <sprintf+0x48>)
   81726:	4606      	mov	r6, r0
   81728:	4623      	mov	r3, r4
   8172a:	f44f 7e02 	mov.w	lr, #520	; 0x208
   8172e:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   81732:	6808      	ldr	r0, [r1, #0]
   81734:	f64f 77ff 	movw	r7, #65535	; 0xffff
   81738:	a902      	add	r1, sp, #8
   8173a:	9602      	str	r6, [sp, #8]
   8173c:	9606      	str	r6, [sp, #24]
   8173e:	9401      	str	r4, [sp, #4]
   81740:	f8ad e014 	strh.w	lr, [sp, #20]
   81744:	9504      	str	r5, [sp, #16]
   81746:	9507      	str	r5, [sp, #28]
   81748:	f8ad 7016 	strh.w	r7, [sp, #22]
   8174c:	f000 f83a 	bl	817c4 <_svfprintf_r>
   81750:	9b02      	ldr	r3, [sp, #8]
   81752:	2200      	movs	r2, #0
   81754:	701a      	strb	r2, [r3, #0]
   81756:	b01c      	add	sp, #112	; 0x70
   81758:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   8175c:	b003      	add	sp, #12
   8175e:	4770      	bx	lr
   81760:	200705c0 	.word	0x200705c0

00081764 <strlen>:
   81764:	f020 0103 	bic.w	r1, r0, #3
   81768:	f010 0003 	ands.w	r0, r0, #3
   8176c:	f1c0 0000 	rsb	r0, r0, #0
   81770:	f851 3b04 	ldr.w	r3, [r1], #4
   81774:	f100 0c04 	add.w	ip, r0, #4
   81778:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   8177c:	f06f 0200 	mvn.w	r2, #0
   81780:	bf1c      	itt	ne
   81782:	fa22 f20c 	lsrne.w	r2, r2, ip
   81786:	4313      	orrne	r3, r2
   81788:	f04f 0c01 	mov.w	ip, #1
   8178c:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   81790:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   81794:	eba3 020c 	sub.w	r2, r3, ip
   81798:	ea22 0203 	bic.w	r2, r2, r3
   8179c:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   817a0:	bf04      	itt	eq
   817a2:	f851 3b04 	ldreq.w	r3, [r1], #4
   817a6:	3004      	addeq	r0, #4
   817a8:	d0f4      	beq.n	81794 <strlen+0x30>
   817aa:	f013 0fff 	tst.w	r3, #255	; 0xff
   817ae:	bf1f      	itttt	ne
   817b0:	3001      	addne	r0, #1
   817b2:	f413 4f7f 	tstne.w	r3, #65280	; 0xff00
   817b6:	3001      	addne	r0, #1
   817b8:	f413 0f7f 	tstne.w	r3, #16711680	; 0xff0000
   817bc:	bf18      	it	ne
   817be:	3001      	addne	r0, #1
   817c0:	4770      	bx	lr
   817c2:	bf00      	nop

000817c4 <_svfprintf_r>:
   817c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   817c8:	b0c9      	sub	sp, #292	; 0x124
   817ca:	9310      	str	r3, [sp, #64]	; 0x40
   817cc:	910c      	str	r1, [sp, #48]	; 0x30
   817ce:	4691      	mov	r9, r2
   817d0:	900d      	str	r0, [sp, #52]	; 0x34
   817d2:	f003 fe13 	bl	853fc <_localeconv_r>
   817d6:	6800      	ldr	r0, [r0, #0]
   817d8:	9015      	str	r0, [sp, #84]	; 0x54
   817da:	f7ff ffc3 	bl	81764 <strlen>
   817de:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   817e0:	9018      	str	r0, [sp, #96]	; 0x60
   817e2:	89a3      	ldrh	r3, [r4, #12]
   817e4:	061e      	lsls	r6, r3, #24
   817e6:	d503      	bpl.n	817f0 <_svfprintf_r+0x2c>
   817e8:	6923      	ldr	r3, [r4, #16]
   817ea:	2b00      	cmp	r3, #0
   817ec:	f001 8081 	beq.w	828f2 <_svfprintf_r+0x112e>
   817f0:	ac38      	add	r4, sp, #224	; 0xe0
   817f2:	46a4      	mov	ip, r4
   817f4:	9408      	str	r4, [sp, #32]
   817f6:	942b      	str	r4, [sp, #172]	; 0xac
   817f8:	2500      	movs	r5, #0
   817fa:	2400      	movs	r4, #0
   817fc:	e9cd 4516 	strd	r4, r5, [sp, #88]	; 0x58
   81800:	2300      	movs	r3, #0
   81802:	9311      	str	r3, [sp, #68]	; 0x44
   81804:	932d      	str	r3, [sp, #180]	; 0xb4
   81806:	932c      	str	r3, [sp, #176]	; 0xb0
   81808:	931a      	str	r3, [sp, #104]	; 0x68
   8180a:	9319      	str	r3, [sp, #100]	; 0x64
   8180c:	930e      	str	r3, [sp, #56]	; 0x38
   8180e:	4666      	mov	r6, ip
   81810:	f899 3000 	ldrb.w	r3, [r9]
   81814:	2b00      	cmp	r3, #0
   81816:	f000 80f8 	beq.w	81a0a <_svfprintf_r+0x246>
   8181a:	2b25      	cmp	r3, #37	; 0x25
   8181c:	f000 80f5 	beq.w	81a0a <_svfprintf_r+0x246>
   81820:	f109 0201 	add.w	r2, r9, #1
   81824:	e001      	b.n	8182a <_svfprintf_r+0x66>
   81826:	2b25      	cmp	r3, #37	; 0x25
   81828:	d004      	beq.n	81834 <_svfprintf_r+0x70>
   8182a:	7813      	ldrb	r3, [r2, #0]
   8182c:	4614      	mov	r4, r2
   8182e:	3201      	adds	r2, #1
   81830:	2b00      	cmp	r3, #0
   81832:	d1f8      	bne.n	81826 <_svfprintf_r+0x62>
   81834:	ebc9 0504 	rsb	r5, r9, r4
   81838:	b17d      	cbz	r5, 8185a <_svfprintf_r+0x96>
   8183a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8183c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   8183e:	3301      	adds	r3, #1
   81840:	442a      	add	r2, r5
   81842:	2b07      	cmp	r3, #7
   81844:	f8c6 9000 	str.w	r9, [r6]
   81848:	6075      	str	r5, [r6, #4]
   8184a:	922d      	str	r2, [sp, #180]	; 0xb4
   8184c:	932c      	str	r3, [sp, #176]	; 0xb0
   8184e:	f300 80c2 	bgt.w	819d6 <_svfprintf_r+0x212>
   81852:	3608      	adds	r6, #8
   81854:	980e      	ldr	r0, [sp, #56]	; 0x38
   81856:	4428      	add	r0, r5
   81858:	900e      	str	r0, [sp, #56]	; 0x38
   8185a:	7823      	ldrb	r3, [r4, #0]
   8185c:	2b00      	cmp	r3, #0
   8185e:	f000 80c2 	beq.w	819e6 <_svfprintf_r+0x222>
   81862:	2300      	movs	r3, #0
   81864:	f894 8001 	ldrb.w	r8, [r4, #1]
   81868:	461a      	mov	r2, r3
   8186a:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   8186e:	930f      	str	r3, [sp, #60]	; 0x3c
   81870:	9309      	str	r3, [sp, #36]	; 0x24
   81872:	f104 0901 	add.w	r9, r4, #1
   81876:	f04f 34ff 	mov.w	r4, #4294967295
   8187a:	940a      	str	r4, [sp, #40]	; 0x28
   8187c:	f109 0901 	add.w	r9, r9, #1
   81880:	f1a8 0320 	sub.w	r3, r8, #32
   81884:	2b58      	cmp	r3, #88	; 0x58
   81886:	f200 83c5 	bhi.w	82014 <_svfprintf_r+0x850>
   8188a:	e8df f013 	tbh	[pc, r3, lsl #1]
   8188e:	026a      	.short	0x026a
   81890:	03c303c3 	.word	0x03c303c3
   81894:	03c30271 	.word	0x03c30271
   81898:	03c303c3 	.word	0x03c303c3
   8189c:	03c303c3 	.word	0x03c303c3
   818a0:	031403c3 	.word	0x031403c3
   818a4:	03c30366 	.word	0x03c30366
   818a8:	00c0009d 	.word	0x00c0009d
   818ac:	027803c3 	.word	0x027803c3
   818b0:	027f027f 	.word	0x027f027f
   818b4:	027f027f 	.word	0x027f027f
   818b8:	027f027f 	.word	0x027f027f
   818bc:	027f027f 	.word	0x027f027f
   818c0:	03c3027f 	.word	0x03c3027f
   818c4:	03c303c3 	.word	0x03c303c3
   818c8:	03c303c3 	.word	0x03c303c3
   818cc:	03c303c3 	.word	0x03c303c3
   818d0:	03c303c3 	.word	0x03c303c3
   818d4:	029003c3 	.word	0x029003c3
   818d8:	03c30371 	.word	0x03c30371
   818dc:	03c30371 	.word	0x03c30371
   818e0:	03c303c3 	.word	0x03c303c3
   818e4:	036a03c3 	.word	0x036a03c3
   818e8:	03c303c3 	.word	0x03c303c3
   818ec:	03c30078 	.word	0x03c30078
   818f0:	03c303c3 	.word	0x03c303c3
   818f4:	03c303c3 	.word	0x03c303c3
   818f8:	03c30059 	.word	0x03c30059
   818fc:	02af03c3 	.word	0x02af03c3
   81900:	03c303c3 	.word	0x03c303c3
   81904:	03c303c3 	.word	0x03c303c3
   81908:	03c303c3 	.word	0x03c303c3
   8190c:	03c303c3 	.word	0x03c303c3
   81910:	03c303c3 	.word	0x03c303c3
   81914:	03480337 	.word	0x03480337
   81918:	03710371 	.word	0x03710371
   8191c:	02ff0371 	.word	0x02ff0371
   81920:	03c30348 	.word	0x03c30348
   81924:	030803c3 	.word	0x030803c3
   81928:	02c503c3 	.word	0x02c503c3
   8192c:	0320007c 	.word	0x0320007c
   81930:	03c303a3 	.word	0x03c303a3
   81934:	03c302d9 	.word	0x03c302d9
   81938:	03c3005f 	.word	0x03c3005f
   8193c:	00de03c3 	.word	0x00de03c3
   81940:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81944:	f04c 0c10 	orr.w	ip, ip, #16
   81948:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   8194c:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8194e:	06a2      	lsls	r2, r4, #26
   81950:	f100 8354 	bmi.w	81ffc <_svfprintf_r+0x838>
   81954:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81956:	06e3      	lsls	r3, r4, #27
   81958:	f100 85bd 	bmi.w	824d6 <_svfprintf_r+0xd12>
   8195c:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81960:	f01c 0f40 	tst.w	ip, #64	; 0x40
   81964:	f000 85b7 	beq.w	824d6 <_svfprintf_r+0xd12>
   81968:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   8196c:	2500      	movs	r5, #0
   8196e:	f8bc 4000 	ldrh.w	r4, [ip]
   81972:	f10c 0c04 	add.w	ip, ip, #4
   81976:	2301      	movs	r3, #1
   81978:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   8197c:	e08c      	b.n	81a98 <_svfprintf_r+0x2d4>
   8197e:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81980:	f045 0510 	orr.w	r5, r5, #16
   81984:	9509      	str	r5, [sp, #36]	; 0x24
   81986:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8198a:	f01c 0320 	ands.w	r3, ip, #32
   8198e:	f040 832a 	bne.w	81fe6 <_svfprintf_r+0x822>
   81992:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81996:	f01c 0210 	ands.w	r2, ip, #16
   8199a:	f040 85a4 	bne.w	824e6 <_svfprintf_r+0xd22>
   8199e:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   819a2:	f01c 0340 	ands.w	r3, ip, #64	; 0x40
   819a6:	f000 859e 	beq.w	824e6 <_svfprintf_r+0xd22>
   819aa:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   819ae:	4613      	mov	r3, r2
   819b0:	f8bc 4000 	ldrh.w	r4, [ip]
   819b4:	f10c 0c04 	add.w	ip, ip, #4
   819b8:	2500      	movs	r5, #0
   819ba:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   819be:	e06b      	b.n	81a98 <_svfprintf_r+0x2d4>
   819c0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   819c2:	9310      	str	r3, [sp, #64]	; 0x40
   819c4:	4264      	negs	r4, r4
   819c6:	940f      	str	r4, [sp, #60]	; 0x3c
   819c8:	9d09      	ldr	r5, [sp, #36]	; 0x24
   819ca:	f045 0504 	orr.w	r5, r5, #4
   819ce:	9509      	str	r5, [sp, #36]	; 0x24
   819d0:	f899 8000 	ldrb.w	r8, [r9]
   819d4:	e752      	b.n	8187c <_svfprintf_r+0xb8>
   819d6:	980d      	ldr	r0, [sp, #52]	; 0x34
   819d8:	990c      	ldr	r1, [sp, #48]	; 0x30
   819da:	aa2b      	add	r2, sp, #172	; 0xac
   819dc:	f004 fe40 	bl	86660 <__ssprint_r>
   819e0:	b940      	cbnz	r0, 819f4 <_svfprintf_r+0x230>
   819e2:	ae38      	add	r6, sp, #224	; 0xe0
   819e4:	e736      	b.n	81854 <_svfprintf_r+0x90>
   819e6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   819e8:	b123      	cbz	r3, 819f4 <_svfprintf_r+0x230>
   819ea:	980d      	ldr	r0, [sp, #52]	; 0x34
   819ec:	990c      	ldr	r1, [sp, #48]	; 0x30
   819ee:	aa2b      	add	r2, sp, #172	; 0xac
   819f0:	f004 fe36 	bl	86660 <__ssprint_r>
   819f4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   819f6:	980e      	ldr	r0, [sp, #56]	; 0x38
   819f8:	89a3      	ldrh	r3, [r4, #12]
   819fa:	f013 0f40 	tst.w	r3, #64	; 0x40
   819fe:	bf18      	it	ne
   81a00:	f04f 30ff 	movne.w	r0, #4294967295
   81a04:	b049      	add	sp, #292	; 0x124
   81a06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81a0a:	464c      	mov	r4, r9
   81a0c:	e725      	b.n	8185a <_svfprintf_r+0x96>
   81a0e:	f899 8000 	ldrb.w	r8, [r9]
   81a12:	f109 0001 	add.w	r0, r9, #1
   81a16:	f1b8 0f2a 	cmp.w	r8, #42	; 0x2a
   81a1a:	f001 810c 	beq.w	82c36 <_svfprintf_r+0x1472>
   81a1e:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   81a22:	2b09      	cmp	r3, #9
   81a24:	bf98      	it	ls
   81a26:	2100      	movls	r1, #0
   81a28:	f201 806b 	bhi.w	82b02 <_svfprintf_r+0x133e>
   81a2c:	f810 8b01 	ldrb.w	r8, [r0], #1
   81a30:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   81a34:	eb03 0141 	add.w	r1, r3, r1, lsl #1
   81a38:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   81a3c:	2b09      	cmp	r3, #9
   81a3e:	d9f5      	bls.n	81a2c <_svfprintf_r+0x268>
   81a40:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
   81a44:	910a      	str	r1, [sp, #40]	; 0x28
   81a46:	4681      	mov	r9, r0
   81a48:	e71a      	b.n	81880 <_svfprintf_r+0xbc>
   81a4a:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81a4c:	4ca1      	ldr	r4, [pc, #644]	; (81cd4 <_svfprintf_r+0x510>)
   81a4e:	06af      	lsls	r7, r5, #26
   81a50:	941a      	str	r4, [sp, #104]	; 0x68
   81a52:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81a56:	f140 81d1 	bpl.w	81dfc <_svfprintf_r+0x638>
   81a5a:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   81a5e:	f10c 0307 	add.w	r3, ip, #7
   81a62:	f023 0307 	bic.w	r3, r3, #7
   81a66:	f103 0408 	add.w	r4, r3, #8
   81a6a:	9410      	str	r4, [sp, #64]	; 0x40
   81a6c:	e9d3 4500 	ldrd	r4, r5, [r3]
   81a70:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81a74:	f01c 0f01 	tst.w	ip, #1
   81a78:	f000 8462 	beq.w	82340 <_svfprintf_r+0xb7c>
   81a7c:	ea54 0005 	orrs.w	r0, r4, r5
   81a80:	f000 845e 	beq.w	82340 <_svfprintf_r+0xb7c>
   81a84:	2330      	movs	r3, #48	; 0x30
   81a86:	f04c 0c02 	orr.w	ip, ip, #2
   81a8a:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
   81a8e:	f88d 8091 	strb.w	r8, [sp, #145]	; 0x91
   81a92:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   81a96:	2302      	movs	r3, #2
   81a98:	f04f 0a00 	mov.w	sl, #0
   81a9c:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   81aa0:	990a      	ldr	r1, [sp, #40]	; 0x28
   81aa2:	2900      	cmp	r1, #0
   81aa4:	db05      	blt.n	81ab2 <_svfprintf_r+0x2ee>
   81aa6:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81aaa:	f02c 0c80 	bic.w	ip, ip, #128	; 0x80
   81aae:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   81ab2:	ea54 0005 	orrs.w	r0, r4, r5
   81ab6:	f040 82c5 	bne.w	82044 <_svfprintf_r+0x880>
   81aba:	990a      	ldr	r1, [sp, #40]	; 0x28
   81abc:	2900      	cmp	r1, #0
   81abe:	f040 82c1 	bne.w	82044 <_svfprintf_r+0x880>
   81ac2:	2b00      	cmp	r3, #0
   81ac4:	f040 8438 	bne.w	82338 <_svfprintf_r+0xb74>
   81ac8:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81acc:	f01c 0f01 	tst.w	ip, #1
   81ad0:	f000 8432 	beq.w	82338 <_svfprintf_r+0xb74>
   81ad4:	af48      	add	r7, sp, #288	; 0x120
   81ad6:	2330      	movs	r3, #48	; 0x30
   81ad8:	9d08      	ldr	r5, [sp, #32]
   81ada:	f807 3d41 	strb.w	r3, [r7, #-65]!
   81ade:	1bec      	subs	r4, r5, r7
   81ae0:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
   81ae4:	2500      	movs	r5, #0
   81ae6:	4564      	cmp	r4, ip
   81ae8:	bfa8      	it	ge
   81aea:	46a4      	movge	ip, r4
   81aec:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   81af0:	9514      	str	r5, [sp, #80]	; 0x50
   81af2:	f1ba 0f00 	cmp.w	sl, #0
   81af6:	d002      	beq.n	81afe <_svfprintf_r+0x33a>
   81af8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   81afa:	3501      	adds	r5, #1
   81afc:	950b      	str	r5, [sp, #44]	; 0x2c
   81afe:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81b00:	f013 0302 	ands.w	r3, r3, #2
   81b04:	9312      	str	r3, [sp, #72]	; 0x48
   81b06:	d002      	beq.n	81b0e <_svfprintf_r+0x34a>
   81b08:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   81b0a:	3502      	adds	r5, #2
   81b0c:	950b      	str	r5, [sp, #44]	; 0x2c
   81b0e:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81b12:	f01c 0c84 	ands.w	ip, ip, #132	; 0x84
   81b16:	f8cd c04c 	str.w	ip, [sp, #76]	; 0x4c
   81b1a:	f040 8290 	bne.w	8203e <_svfprintf_r+0x87a>
   81b1e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   81b20:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
   81b24:	ebcc 0b05 	rsb	fp, ip, r5
   81b28:	f1bb 0f00 	cmp.w	fp, #0
   81b2c:	f340 8287 	ble.w	8203e <_svfprintf_r+0x87a>
   81b30:	f1bb 0f10 	cmp.w	fp, #16
   81b34:	992d      	ldr	r1, [sp, #180]	; 0xb4
   81b36:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   81b38:	f8df a1a0 	ldr.w	sl, [pc, #416]	; 81cdc <_svfprintf_r+0x518>
   81b3c:	dd2c      	ble.n	81b98 <_svfprintf_r+0x3d4>
   81b3e:	971b      	str	r7, [sp, #108]	; 0x6c
   81b40:	4630      	mov	r0, r6
   81b42:	4657      	mov	r7, sl
   81b44:	2510      	movs	r5, #16
   81b46:	46ca      	mov	sl, r9
   81b48:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   81b4a:	46a1      	mov	r9, r4
   81b4c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   81b4e:	e006      	b.n	81b5e <_svfprintf_r+0x39a>
   81b50:	f1ab 0b10 	sub.w	fp, fp, #16
   81b54:	f1bb 0f10 	cmp.w	fp, #16
   81b58:	f100 0008 	add.w	r0, r0, #8
   81b5c:	dd17      	ble.n	81b8e <_svfprintf_r+0x3ca>
   81b5e:	3201      	adds	r2, #1
   81b60:	3110      	adds	r1, #16
   81b62:	2a07      	cmp	r2, #7
   81b64:	912d      	str	r1, [sp, #180]	; 0xb4
   81b66:	922c      	str	r2, [sp, #176]	; 0xb0
   81b68:	6007      	str	r7, [r0, #0]
   81b6a:	6045      	str	r5, [r0, #4]
   81b6c:	ddf0      	ble.n	81b50 <_svfprintf_r+0x38c>
   81b6e:	4620      	mov	r0, r4
   81b70:	4631      	mov	r1, r6
   81b72:	aa2b      	add	r2, sp, #172	; 0xac
   81b74:	f004 fd74 	bl	86660 <__ssprint_r>
   81b78:	2800      	cmp	r0, #0
   81b7a:	f47f af3b 	bne.w	819f4 <_svfprintf_r+0x230>
   81b7e:	f1ab 0b10 	sub.w	fp, fp, #16
   81b82:	f1bb 0f10 	cmp.w	fp, #16
   81b86:	992d      	ldr	r1, [sp, #180]	; 0xb4
   81b88:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   81b8a:	a838      	add	r0, sp, #224	; 0xe0
   81b8c:	dce7      	bgt.n	81b5e <_svfprintf_r+0x39a>
   81b8e:	464c      	mov	r4, r9
   81b90:	46d1      	mov	r9, sl
   81b92:	46ba      	mov	sl, r7
   81b94:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
   81b96:	4606      	mov	r6, r0
   81b98:	3201      	adds	r2, #1
   81b9a:	eb0b 0c01 	add.w	ip, fp, r1
   81b9e:	2a07      	cmp	r2, #7
   81ba0:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81ba4:	922c      	str	r2, [sp, #176]	; 0xb0
   81ba6:	e886 0c00 	stmia.w	r6, {sl, fp}
   81baa:	f300 841a 	bgt.w	823e2 <_svfprintf_r+0xc1e>
   81bae:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   81bb2:	3608      	adds	r6, #8
   81bb4:	f1ba 0f00 	cmp.w	sl, #0
   81bb8:	d00f      	beq.n	81bda <_svfprintf_r+0x416>
   81bba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81bbc:	f10c 0c01 	add.w	ip, ip, #1
   81bc0:	3301      	adds	r3, #1
   81bc2:	f10d 018f 	add.w	r1, sp, #143	; 0x8f
   81bc6:	2201      	movs	r2, #1
   81bc8:	2b07      	cmp	r3, #7
   81bca:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81bce:	932c      	str	r3, [sp, #176]	; 0xb0
   81bd0:	e886 0006 	stmia.w	r6, {r1, r2}
   81bd4:	f300 83a4 	bgt.w	82320 <_svfprintf_r+0xb5c>
   81bd8:	3608      	adds	r6, #8
   81bda:	9b12      	ldr	r3, [sp, #72]	; 0x48
   81bdc:	b173      	cbz	r3, 81bfc <_svfprintf_r+0x438>
   81bde:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81be0:	f10c 0c02 	add.w	ip, ip, #2
   81be4:	3301      	adds	r3, #1
   81be6:	a924      	add	r1, sp, #144	; 0x90
   81be8:	2202      	movs	r2, #2
   81bea:	2b07      	cmp	r3, #7
   81bec:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81bf0:	932c      	str	r3, [sp, #176]	; 0xb0
   81bf2:	e886 0006 	stmia.w	r6, {r1, r2}
   81bf6:	f300 8387 	bgt.w	82308 <_svfprintf_r+0xb44>
   81bfa:	3608      	adds	r6, #8
   81bfc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
   81bfe:	2d80      	cmp	r5, #128	; 0x80
   81c00:	f000 82ca 	beq.w	82198 <_svfprintf_r+0x9d4>
   81c04:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   81c06:	ebc4 0a05 	rsb	sl, r4, r5
   81c0a:	f1ba 0f00 	cmp.w	sl, #0
   81c0e:	dd3b      	ble.n	81c88 <_svfprintf_r+0x4c4>
   81c10:	f1ba 0f10 	cmp.w	sl, #16
   81c14:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81c16:	4d30      	ldr	r5, [pc, #192]	; (81cd8 <_svfprintf_r+0x514>)
   81c18:	dd2b      	ble.n	81c72 <_svfprintf_r+0x4ae>
   81c1a:	940a      	str	r4, [sp, #40]	; 0x28
   81c1c:	4632      	mov	r2, r6
   81c1e:	f04f 0b10 	mov.w	fp, #16
   81c22:	462e      	mov	r6, r5
   81c24:	4661      	mov	r1, ip
   81c26:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   81c28:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   81c2a:	e006      	b.n	81c3a <_svfprintf_r+0x476>
   81c2c:	f1aa 0a10 	sub.w	sl, sl, #16
   81c30:	f1ba 0f10 	cmp.w	sl, #16
   81c34:	f102 0208 	add.w	r2, r2, #8
   81c38:	dd17      	ble.n	81c6a <_svfprintf_r+0x4a6>
   81c3a:	3301      	adds	r3, #1
   81c3c:	3110      	adds	r1, #16
   81c3e:	2b07      	cmp	r3, #7
   81c40:	912d      	str	r1, [sp, #180]	; 0xb4
   81c42:	932c      	str	r3, [sp, #176]	; 0xb0
   81c44:	e882 0840 	stmia.w	r2, {r6, fp}
   81c48:	ddf0      	ble.n	81c2c <_svfprintf_r+0x468>
   81c4a:	4620      	mov	r0, r4
   81c4c:	4629      	mov	r1, r5
   81c4e:	aa2b      	add	r2, sp, #172	; 0xac
   81c50:	f004 fd06 	bl	86660 <__ssprint_r>
   81c54:	2800      	cmp	r0, #0
   81c56:	f47f aecd 	bne.w	819f4 <_svfprintf_r+0x230>
   81c5a:	f1aa 0a10 	sub.w	sl, sl, #16
   81c5e:	f1ba 0f10 	cmp.w	sl, #16
   81c62:	992d      	ldr	r1, [sp, #180]	; 0xb4
   81c64:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81c66:	aa38      	add	r2, sp, #224	; 0xe0
   81c68:	dce7      	bgt.n	81c3a <_svfprintf_r+0x476>
   81c6a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   81c6c:	4635      	mov	r5, r6
   81c6e:	468c      	mov	ip, r1
   81c70:	4616      	mov	r6, r2
   81c72:	3301      	adds	r3, #1
   81c74:	44d4      	add	ip, sl
   81c76:	2b07      	cmp	r3, #7
   81c78:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81c7c:	932c      	str	r3, [sp, #176]	; 0xb0
   81c7e:	e886 0420 	stmia.w	r6, {r5, sl}
   81c82:	f300 8335 	bgt.w	822f0 <_svfprintf_r+0xb2c>
   81c86:	3608      	adds	r6, #8
   81c88:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81c8a:	05ed      	lsls	r5, r5, #23
   81c8c:	f100 8224 	bmi.w	820d8 <_svfprintf_r+0x914>
   81c90:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81c92:	44a4      	add	ip, r4
   81c94:	3301      	adds	r3, #1
   81c96:	2b07      	cmp	r3, #7
   81c98:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81c9c:	6037      	str	r7, [r6, #0]
   81c9e:	6074      	str	r4, [r6, #4]
   81ca0:	932c      	str	r3, [sp, #176]	; 0xb0
   81ca2:	f300 830f 	bgt.w	822c4 <_svfprintf_r+0xb00>
   81ca6:	3608      	adds	r6, #8
   81ca8:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81caa:	0763      	lsls	r3, r4, #29
   81cac:	d549      	bpl.n	81d42 <_svfprintf_r+0x57e>
   81cae:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   81cb0:	980b      	ldr	r0, [sp, #44]	; 0x2c
   81cb2:	1a2c      	subs	r4, r5, r0
   81cb4:	2c00      	cmp	r4, #0
   81cb6:	dd44      	ble.n	81d42 <_svfprintf_r+0x57e>
   81cb8:	2c10      	cmp	r4, #16
   81cba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81cbc:	f8df a01c 	ldr.w	sl, [pc, #28]	; 81cdc <_svfprintf_r+0x518>
   81cc0:	dd2b      	ble.n	81d1a <_svfprintf_r+0x556>
   81cc2:	4657      	mov	r7, sl
   81cc4:	2510      	movs	r5, #16
   81cc6:	4662      	mov	r2, ip
   81cc8:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   81ccc:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
   81cd0:	e00b      	b.n	81cea <_svfprintf_r+0x526>
   81cd2:	bf00      	nop
   81cd4:	00087a18 	.word	0x00087a18
   81cd8:	000879e4 	.word	0x000879e4
   81cdc:	00087a34 	.word	0x00087a34
   81ce0:	3c10      	subs	r4, #16
   81ce2:	2c10      	cmp	r4, #16
   81ce4:	f106 0608 	add.w	r6, r6, #8
   81ce8:	dd15      	ble.n	81d16 <_svfprintf_r+0x552>
   81cea:	3301      	adds	r3, #1
   81cec:	3210      	adds	r2, #16
   81cee:	2b07      	cmp	r3, #7
   81cf0:	922d      	str	r2, [sp, #180]	; 0xb4
   81cf2:	932c      	str	r3, [sp, #176]	; 0xb0
   81cf4:	6037      	str	r7, [r6, #0]
   81cf6:	6075      	str	r5, [r6, #4]
   81cf8:	ddf2      	ble.n	81ce0 <_svfprintf_r+0x51c>
   81cfa:	4650      	mov	r0, sl
   81cfc:	4641      	mov	r1, r8
   81cfe:	aa2b      	add	r2, sp, #172	; 0xac
   81d00:	f004 fcae 	bl	86660 <__ssprint_r>
   81d04:	2800      	cmp	r0, #0
   81d06:	f47f ae75 	bne.w	819f4 <_svfprintf_r+0x230>
   81d0a:	3c10      	subs	r4, #16
   81d0c:	2c10      	cmp	r4, #16
   81d0e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   81d10:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81d12:	ae38      	add	r6, sp, #224	; 0xe0
   81d14:	dce9      	bgt.n	81cea <_svfprintf_r+0x526>
   81d16:	4694      	mov	ip, r2
   81d18:	46ba      	mov	sl, r7
   81d1a:	3301      	adds	r3, #1
   81d1c:	44a4      	add	ip, r4
   81d1e:	2b07      	cmp	r3, #7
   81d20:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81d24:	932c      	str	r3, [sp, #176]	; 0xb0
   81d26:	f8c6 a000 	str.w	sl, [r6]
   81d2a:	6074      	str	r4, [r6, #4]
   81d2c:	dd09      	ble.n	81d42 <_svfprintf_r+0x57e>
   81d2e:	980d      	ldr	r0, [sp, #52]	; 0x34
   81d30:	990c      	ldr	r1, [sp, #48]	; 0x30
   81d32:	aa2b      	add	r2, sp, #172	; 0xac
   81d34:	f004 fc94 	bl	86660 <__ssprint_r>
   81d38:	2800      	cmp	r0, #0
   81d3a:	f47f ae5b 	bne.w	819f4 <_svfprintf_r+0x230>
   81d3e:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81d42:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   81d44:	980b      	ldr	r0, [sp, #44]	; 0x2c
   81d46:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   81d48:	42a8      	cmp	r0, r5
   81d4a:	bfac      	ite	ge
   81d4c:	1824      	addge	r4, r4, r0
   81d4e:	1964      	addlt	r4, r4, r5
   81d50:	940e      	str	r4, [sp, #56]	; 0x38
   81d52:	f1bc 0f00 	cmp.w	ip, #0
   81d56:	f040 82c1 	bne.w	822dc <_svfprintf_r+0xb18>
   81d5a:	2300      	movs	r3, #0
   81d5c:	932c      	str	r3, [sp, #176]	; 0xb0
   81d5e:	ae38      	add	r6, sp, #224	; 0xe0
   81d60:	e556      	b.n	81810 <_svfprintf_r+0x4c>
   81d62:	f899 8000 	ldrb.w	r8, [r9]
   81d66:	2a00      	cmp	r2, #0
   81d68:	f47f ad88 	bne.w	8187c <_svfprintf_r+0xb8>
   81d6c:	2220      	movs	r2, #32
   81d6e:	e585      	b.n	8187c <_svfprintf_r+0xb8>
   81d70:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81d72:	f045 0501 	orr.w	r5, r5, #1
   81d76:	9509      	str	r5, [sp, #36]	; 0x24
   81d78:	f899 8000 	ldrb.w	r8, [r9]
   81d7c:	e57e      	b.n	8187c <_svfprintf_r+0xb8>
   81d7e:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81d80:	f045 0580 	orr.w	r5, r5, #128	; 0x80
   81d84:	9509      	str	r5, [sp, #36]	; 0x24
   81d86:	f899 8000 	ldrb.w	r8, [r9]
   81d8a:	e577      	b.n	8187c <_svfprintf_r+0xb8>
   81d8c:	2400      	movs	r4, #0
   81d8e:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   81d92:	940f      	str	r4, [sp, #60]	; 0x3c
   81d94:	4621      	mov	r1, r4
   81d96:	f819 8b01 	ldrb.w	r8, [r9], #1
   81d9a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   81d9e:	eb03 0141 	add.w	r1, r3, r1, lsl #1
   81da2:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   81da6:	2b09      	cmp	r3, #9
   81da8:	d9f5      	bls.n	81d96 <_svfprintf_r+0x5d2>
   81daa:	910f      	str	r1, [sp, #60]	; 0x3c
   81dac:	e568      	b.n	81880 <_svfprintf_r+0xbc>
   81dae:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81db2:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81db6:	f04c 0c10 	orr.w	ip, ip, #16
   81dba:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   81dbe:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81dc0:	06a5      	lsls	r5, r4, #26
   81dc2:	f140 80b2 	bpl.w	81f2a <_svfprintf_r+0x766>
   81dc6:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81dc8:	1de9      	adds	r1, r5, #7
   81dca:	f021 0107 	bic.w	r1, r1, #7
   81dce:	e9d1 2300 	ldrd	r2, r3, [r1]
   81dd2:	3108      	adds	r1, #8
   81dd4:	9110      	str	r1, [sp, #64]	; 0x40
   81dd6:	4614      	mov	r4, r2
   81dd8:	461d      	mov	r5, r3
   81dda:	2a00      	cmp	r2, #0
   81ddc:	f173 0c00 	sbcs.w	ip, r3, #0
   81de0:	f2c0 8394 	blt.w	8250c <_svfprintf_r+0xd48>
   81de4:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   81de8:	2301      	movs	r3, #1
   81dea:	e659      	b.n	81aa0 <_svfprintf_r+0x2dc>
   81dec:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81dee:	4cb6      	ldr	r4, [pc, #728]	; (820c8 <_svfprintf_r+0x904>)
   81df0:	06af      	lsls	r7, r5, #26
   81df2:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81df6:	941a      	str	r4, [sp, #104]	; 0x68
   81df8:	f53f ae2f 	bmi.w	81a5a <_svfprintf_r+0x296>
   81dfc:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81dfe:	06ed      	lsls	r5, r5, #27
   81e00:	f140 8443 	bpl.w	8268a <_svfprintf_r+0xec6>
   81e04:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   81e08:	2500      	movs	r5, #0
   81e0a:	f8dc 4000 	ldr.w	r4, [ip]
   81e0e:	f10c 0c04 	add.w	ip, ip, #4
   81e12:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   81e16:	e62b      	b.n	81a70 <_svfprintf_r+0x2ac>
   81e18:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81e1c:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81e20:	f01c 0f20 	tst.w	ip, #32
   81e24:	f000 8440 	beq.w	826a8 <_svfprintf_r+0xee4>
   81e28:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81e2a:	6821      	ldr	r1, [r4, #0]
   81e2c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   81e2e:	17e5      	asrs	r5, r4, #31
   81e30:	462b      	mov	r3, r5
   81e32:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81e34:	4622      	mov	r2, r4
   81e36:	3504      	adds	r5, #4
   81e38:	9510      	str	r5, [sp, #64]	; 0x40
   81e3a:	e9c1 2300 	strd	r2, r3, [r1]
   81e3e:	e4e7      	b.n	81810 <_svfprintf_r+0x4c>
   81e40:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81e42:	f04f 0a00 	mov.w	sl, #0
   81e46:	6827      	ldr	r7, [r4, #0]
   81e48:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   81e4c:	1d25      	adds	r5, r4, #4
   81e4e:	2f00      	cmp	r7, #0
   81e50:	f000 85e9 	beq.w	82a26 <_svfprintf_r+0x1262>
   81e54:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   81e56:	4638      	mov	r0, r7
   81e58:	2c00      	cmp	r4, #0
   81e5a:	f2c0 859b 	blt.w	82994 <_svfprintf_r+0x11d0>
   81e5e:	4651      	mov	r1, sl
   81e60:	4622      	mov	r2, r4
   81e62:	f003 fde3 	bl	85a2c <memchr>
   81e66:	2800      	cmp	r0, #0
   81e68:	f000 8613 	beq.w	82a92 <_svfprintf_r+0x12ce>
   81e6c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   81e6e:	1bc0      	subs	r0, r0, r7
   81e70:	42a0      	cmp	r0, r4
   81e72:	bfb8      	it	lt
   81e74:	4604      	movlt	r4, r0
   81e76:	9510      	str	r5, [sp, #64]	; 0x40
   81e78:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
   81e7c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
   81e80:	f8cd a050 	str.w	sl, [sp, #80]	; 0x50
   81e84:	950b      	str	r5, [sp, #44]	; 0x2c
   81e86:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   81e8a:	e632      	b.n	81af2 <_svfprintf_r+0x32e>
   81e8c:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81e90:	f04c 0c40 	orr.w	ip, ip, #64	; 0x40
   81e94:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   81e98:	f899 8000 	ldrb.w	r8, [r9]
   81e9c:	e4ee      	b.n	8187c <_svfprintf_r+0xb8>
   81e9e:	f899 8000 	ldrb.w	r8, [r9]
   81ea2:	464b      	mov	r3, r9
   81ea4:	f1b8 0f6c 	cmp.w	r8, #108	; 0x6c
   81ea8:	f000 847f 	beq.w	827aa <_svfprintf_r+0xfe6>
   81eac:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81eae:	f045 0510 	orr.w	r5, r5, #16
   81eb2:	9509      	str	r5, [sp, #36]	; 0x24
   81eb4:	e4e2      	b.n	8187c <_svfprintf_r+0xb8>
   81eb6:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81eb8:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81eba:	6824      	ldr	r4, [r4, #0]
   81ebc:	1d2b      	adds	r3, r5, #4
   81ebe:	2c00      	cmp	r4, #0
   81ec0:	940f      	str	r4, [sp, #60]	; 0x3c
   81ec2:	f6ff ad7d 	blt.w	819c0 <_svfprintf_r+0x1fc>
   81ec6:	9310      	str	r3, [sp, #64]	; 0x40
   81ec8:	f899 8000 	ldrb.w	r8, [r9]
   81ecc:	e4d6      	b.n	8187c <_svfprintf_r+0xb8>
   81ece:	9b10      	ldr	r3, [sp, #64]	; 0x40
   81ed0:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81ed4:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81ed6:	487d      	ldr	r0, [pc, #500]	; (820cc <_svfprintf_r+0x908>)
   81ed8:	3504      	adds	r5, #4
   81eda:	681c      	ldr	r4, [r3, #0]
   81edc:	f04f 0878 	mov.w	r8, #120	; 0x78
   81ee0:	2330      	movs	r3, #48	; 0x30
   81ee2:	f04c 0c02 	orr.w	ip, ip, #2
   81ee6:	9510      	str	r5, [sp, #64]	; 0x40
   81ee8:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
   81eec:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   81ef0:	2500      	movs	r5, #0
   81ef2:	f88d 8091 	strb.w	r8, [sp, #145]	; 0x91
   81ef6:	901a      	str	r0, [sp, #104]	; 0x68
   81ef8:	2302      	movs	r3, #2
   81efa:	e5cd      	b.n	81a98 <_svfprintf_r+0x2d4>
   81efc:	9b10      	ldr	r3, [sp, #64]	; 0x40
   81efe:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81f00:	681a      	ldr	r2, [r3, #0]
   81f02:	2401      	movs	r4, #1
   81f04:	2300      	movs	r3, #0
   81f06:	3504      	adds	r5, #4
   81f08:	469a      	mov	sl, r3
   81f0a:	940b      	str	r4, [sp, #44]	; 0x2c
   81f0c:	f88d 20b8 	strb.w	r2, [sp, #184]	; 0xb8
   81f10:	9510      	str	r5, [sp, #64]	; 0x40
   81f12:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   81f16:	930a      	str	r3, [sp, #40]	; 0x28
   81f18:	9314      	str	r3, [sp, #80]	; 0x50
   81f1a:	af2e      	add	r7, sp, #184	; 0xb8
   81f1c:	e5ef      	b.n	81afe <_svfprintf_r+0x33a>
   81f1e:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81f20:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81f24:	06a5      	lsls	r5, r4, #26
   81f26:	f53f af4e 	bmi.w	81dc6 <_svfprintf_r+0x602>
   81f2a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81f2e:	f01c 0f10 	tst.w	ip, #16
   81f32:	f040 82df 	bne.w	824f4 <_svfprintf_r+0xd30>
   81f36:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81f3a:	f01c 0f40 	tst.w	ip, #64	; 0x40
   81f3e:	f000 82d9 	beq.w	824f4 <_svfprintf_r+0xd30>
   81f42:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   81f46:	f9bc 4000 	ldrsh.w	r4, [ip]
   81f4a:	f10c 0c04 	add.w	ip, ip, #4
   81f4e:	17e5      	asrs	r5, r4, #31
   81f50:	4622      	mov	r2, r4
   81f52:	462b      	mov	r3, r5
   81f54:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   81f58:	e73f      	b.n	81dda <_svfprintf_r+0x616>
   81f5a:	f899 8000 	ldrb.w	r8, [r9]
   81f5e:	222b      	movs	r2, #43	; 0x2b
   81f60:	e48c      	b.n	8187c <_svfprintf_r+0xb8>
   81f62:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81f64:	f045 0508 	orr.w	r5, r5, #8
   81f68:	9509      	str	r5, [sp, #36]	; 0x24
   81f6a:	f899 8000 	ldrb.w	r8, [r9]
   81f6e:	e485      	b.n	8187c <_svfprintf_r+0xb8>
   81f70:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81f72:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81f76:	1deb      	adds	r3, r5, #7
   81f78:	f023 0307 	bic.w	r3, r3, #7
   81f7c:	f103 0c08 	add.w	ip, r3, #8
   81f80:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   81f84:	e9d3 4500 	ldrd	r4, r5, [r3]
   81f88:	e9cd 4516 	strd	r4, r5, [sp, #88]	; 0x58
   81f8c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   81f90:	f004 faea 	bl	86568 <__fpclassifyd>
   81f94:	2801      	cmp	r0, #1
   81f96:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   81f9a:	f040 835c 	bne.w	82656 <_svfprintf_r+0xe92>
   81f9e:	2200      	movs	r2, #0
   81fa0:	2300      	movs	r3, #0
   81fa2:	f005 f97d 	bl	872a0 <__aeabi_dcmplt>
   81fa6:	2800      	cmp	r0, #0
   81fa8:	f040 8563 	bne.w	82a72 <_svfprintf_r+0x12ae>
   81fac:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   81fb0:	2503      	movs	r5, #3
   81fb2:	950b      	str	r5, [sp, #44]	; 0x2c
   81fb4:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81fb6:	4f46      	ldr	r7, [pc, #280]	; (820d0 <_svfprintf_r+0x90c>)
   81fb8:	f025 0580 	bic.w	r5, r5, #128	; 0x80
   81fbc:	4b45      	ldr	r3, [pc, #276]	; (820d4 <_svfprintf_r+0x910>)
   81fbe:	2400      	movs	r4, #0
   81fc0:	9509      	str	r5, [sp, #36]	; 0x24
   81fc2:	2500      	movs	r5, #0
   81fc4:	940a      	str	r4, [sp, #40]	; 0x28
   81fc6:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   81fca:	bfd8      	it	le
   81fcc:	461f      	movle	r7, r3
   81fce:	2403      	movs	r4, #3
   81fd0:	9514      	str	r5, [sp, #80]	; 0x50
   81fd2:	e58e      	b.n	81af2 <_svfprintf_r+0x32e>
   81fd4:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81fd8:	f04c 0c20 	orr.w	ip, ip, #32
   81fdc:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   81fe0:	f899 8000 	ldrb.w	r8, [r9]
   81fe4:	e44a      	b.n	8187c <_svfprintf_r+0xb8>
   81fe6:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81fe8:	1de3      	adds	r3, r4, #7
   81fea:	f023 0307 	bic.w	r3, r3, #7
   81fee:	f103 0508 	add.w	r5, r3, #8
   81ff2:	9510      	str	r5, [sp, #64]	; 0x40
   81ff4:	e9d3 4500 	ldrd	r4, r5, [r3]
   81ff8:	2300      	movs	r3, #0
   81ffa:	e54d      	b.n	81a98 <_svfprintf_r+0x2d4>
   81ffc:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81ffe:	1deb      	adds	r3, r5, #7
   82000:	f023 0307 	bic.w	r3, r3, #7
   82004:	f103 0c08 	add.w	ip, r3, #8
   82008:	e9d3 4500 	ldrd	r4, r5, [r3]
   8200c:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   82010:	2301      	movs	r3, #1
   82012:	e541      	b.n	81a98 <_svfprintf_r+0x2d4>
   82014:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   82018:	f1b8 0f00 	cmp.w	r8, #0
   8201c:	f43f ace3 	beq.w	819e6 <_svfprintf_r+0x222>
   82020:	2300      	movs	r3, #0
   82022:	f04f 0c01 	mov.w	ip, #1
   82026:	469a      	mov	sl, r3
   82028:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   8202c:	f88d 80b8 	strb.w	r8, [sp, #184]	; 0xb8
   82030:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   82034:	930a      	str	r3, [sp, #40]	; 0x28
   82036:	9314      	str	r3, [sp, #80]	; 0x50
   82038:	4664      	mov	r4, ip
   8203a:	af2e      	add	r7, sp, #184	; 0xb8
   8203c:	e55f      	b.n	81afe <_svfprintf_r+0x33a>
   8203e:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82042:	e5b7      	b.n	81bb4 <_svfprintf_r+0x3f0>
   82044:	2b01      	cmp	r3, #1
   82046:	f000 80ec 	beq.w	82222 <_svfprintf_r+0xa5e>
   8204a:	2b02      	cmp	r3, #2
   8204c:	f10d 03df 	add.w	r3, sp, #223	; 0xdf
   82050:	d118      	bne.n	82084 <_svfprintf_r+0x8c0>
   82052:	f8dd c068 	ldr.w	ip, [sp, #104]	; 0x68
   82056:	4619      	mov	r1, r3
   82058:	f004 000f 	and.w	r0, r4, #15
   8205c:	0922      	lsrs	r2, r4, #4
   8205e:	f81c 0000 	ldrb.w	r0, [ip, r0]
   82062:	ea42 7205 	orr.w	r2, r2, r5, lsl #28
   82066:	092b      	lsrs	r3, r5, #4
   82068:	7008      	strb	r0, [r1, #0]
   8206a:	ea52 0003 	orrs.w	r0, r2, r3
   8206e:	460f      	mov	r7, r1
   82070:	4614      	mov	r4, r2
   82072:	461d      	mov	r5, r3
   82074:	f101 31ff 	add.w	r1, r1, #4294967295
   82078:	d1ee      	bne.n	82058 <_svfprintf_r+0x894>
   8207a:	9d08      	ldr	r5, [sp, #32]
   8207c:	e9cd 231e 	strd	r2, r3, [sp, #120]	; 0x78
   82080:	1bec      	subs	r4, r5, r7
   82082:	e52d      	b.n	81ae0 <_svfprintf_r+0x31c>
   82084:	08e0      	lsrs	r0, r4, #3
   82086:	ea40 7045 	orr.w	r0, r0, r5, lsl #29
   8208a:	f004 0207 	and.w	r2, r4, #7
   8208e:	08e9      	lsrs	r1, r5, #3
   82090:	3230      	adds	r2, #48	; 0x30
   82092:	ea50 0c01 	orrs.w	ip, r0, r1
   82096:	461f      	mov	r7, r3
   82098:	701a      	strb	r2, [r3, #0]
   8209a:	4604      	mov	r4, r0
   8209c:	460d      	mov	r5, r1
   8209e:	f103 33ff 	add.w	r3, r3, #4294967295
   820a2:	d1ef      	bne.n	82084 <_svfprintf_r+0x8c0>
   820a4:	9c09      	ldr	r4, [sp, #36]	; 0x24
   820a6:	e9cd 011c 	strd	r0, r1, [sp, #112]	; 0x70
   820aa:	07e0      	lsls	r0, r4, #31
   820ac:	4639      	mov	r1, r7
   820ae:	f140 80c1 	bpl.w	82234 <_svfprintf_r+0xa70>
   820b2:	2a30      	cmp	r2, #48	; 0x30
   820b4:	f000 80be 	beq.w	82234 <_svfprintf_r+0xa70>
   820b8:	9d08      	ldr	r5, [sp, #32]
   820ba:	461f      	mov	r7, r3
   820bc:	2330      	movs	r3, #48	; 0x30
   820be:	1bec      	subs	r4, r5, r7
   820c0:	f801 3c01 	strb.w	r3, [r1, #-1]
   820c4:	e50c      	b.n	81ae0 <_svfprintf_r+0x31c>
   820c6:	bf00      	nop
   820c8:	00087a04 	.word	0x00087a04
   820cc:	00087a18 	.word	0x00087a18
   820d0:	000879f8 	.word	0x000879f8
   820d4:	000879f4 	.word	0x000879f4
   820d8:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   820dc:	f340 80ad 	ble.w	8223a <_svfprintf_r+0xa76>
   820e0:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   820e4:	2200      	movs	r2, #0
   820e6:	2300      	movs	r3, #0
   820e8:	f8cd c01c 	str.w	ip, [sp, #28]
   820ec:	f005 f8ce 	bl	8728c <__aeabi_dcmpeq>
   820f0:	f8dd c01c 	ldr.w	ip, [sp, #28]
   820f4:	2800      	cmp	r0, #0
   820f6:	f000 8126 	beq.w	82346 <_svfprintf_r+0xb82>
   820fa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   820fc:	49aa      	ldr	r1, [pc, #680]	; (823a8 <_svfprintf_r+0xbe4>)
   820fe:	3301      	adds	r3, #1
   82100:	f10c 0c01 	add.w	ip, ip, #1
   82104:	2201      	movs	r2, #1
   82106:	2b07      	cmp	r3, #7
   82108:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   8210c:	932c      	str	r3, [sp, #176]	; 0xb0
   8210e:	e886 0006 	stmia.w	r6, {r1, r2}
   82112:	f300 82ed 	bgt.w	826f0 <_svfprintf_r+0xf2c>
   82116:	3608      	adds	r6, #8
   82118:	9b25      	ldr	r3, [sp, #148]	; 0x94
   8211a:	9c11      	ldr	r4, [sp, #68]	; 0x44
   8211c:	42a3      	cmp	r3, r4
   8211e:	db03      	blt.n	82128 <_svfprintf_r+0x964>
   82120:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82122:	07ec      	lsls	r4, r5, #31
   82124:	f57f adc0 	bpl.w	81ca8 <_svfprintf_r+0x4e4>
   82128:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8212a:	9c18      	ldr	r4, [sp, #96]	; 0x60
   8212c:	3301      	adds	r3, #1
   8212e:	9d15      	ldr	r5, [sp, #84]	; 0x54
   82130:	44a4      	add	ip, r4
   82132:	2b07      	cmp	r3, #7
   82134:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82138:	6035      	str	r5, [r6, #0]
   8213a:	6074      	str	r4, [r6, #4]
   8213c:	932c      	str	r3, [sp, #176]	; 0xb0
   8213e:	f300 833e 	bgt.w	827be <_svfprintf_r+0xffa>
   82142:	3608      	adds	r6, #8
   82144:	9d11      	ldr	r5, [sp, #68]	; 0x44
   82146:	1e6c      	subs	r4, r5, #1
   82148:	2c00      	cmp	r4, #0
   8214a:	f77f adad 	ble.w	81ca8 <_svfprintf_r+0x4e4>
   8214e:	2c10      	cmp	r4, #16
   82150:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82152:	4d96      	ldr	r5, [pc, #600]	; (823ac <_svfprintf_r+0xbe8>)
   82154:	f340 8197 	ble.w	82486 <_svfprintf_r+0xcc2>
   82158:	2710      	movs	r7, #16
   8215a:	4662      	mov	r2, ip
   8215c:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   82160:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   82164:	e004      	b.n	82170 <_svfprintf_r+0x9ac>
   82166:	3608      	adds	r6, #8
   82168:	3c10      	subs	r4, #16
   8216a:	2c10      	cmp	r4, #16
   8216c:	f340 818a 	ble.w	82484 <_svfprintf_r+0xcc0>
   82170:	3301      	adds	r3, #1
   82172:	3210      	adds	r2, #16
   82174:	2b07      	cmp	r3, #7
   82176:	922d      	str	r2, [sp, #180]	; 0xb4
   82178:	932c      	str	r3, [sp, #176]	; 0xb0
   8217a:	e886 00a0 	stmia.w	r6, {r5, r7}
   8217e:	ddf2      	ble.n	82166 <_svfprintf_r+0x9a2>
   82180:	4640      	mov	r0, r8
   82182:	4651      	mov	r1, sl
   82184:	aa2b      	add	r2, sp, #172	; 0xac
   82186:	f004 fa6b 	bl	86660 <__ssprint_r>
   8218a:	2800      	cmp	r0, #0
   8218c:	f47f ac32 	bne.w	819f4 <_svfprintf_r+0x230>
   82190:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   82192:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82194:	ae38      	add	r6, sp, #224	; 0xe0
   82196:	e7e7      	b.n	82168 <_svfprintf_r+0x9a4>
   82198:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   8219a:	980b      	ldr	r0, [sp, #44]	; 0x2c
   8219c:	ebc0 0a05 	rsb	sl, r0, r5
   821a0:	f1ba 0f00 	cmp.w	sl, #0
   821a4:	f77f ad2e 	ble.w	81c04 <_svfprintf_r+0x440>
   821a8:	f1ba 0f10 	cmp.w	sl, #16
   821ac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   821ae:	4d7f      	ldr	r5, [pc, #508]	; (823ac <_svfprintf_r+0xbe8>)
   821b0:	dd2b      	ble.n	8220a <_svfprintf_r+0xa46>
   821b2:	9412      	str	r4, [sp, #72]	; 0x48
   821b4:	4632      	mov	r2, r6
   821b6:	f04f 0b10 	mov.w	fp, #16
   821ba:	462e      	mov	r6, r5
   821bc:	4661      	mov	r1, ip
   821be:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   821c0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   821c2:	e006      	b.n	821d2 <_svfprintf_r+0xa0e>
   821c4:	f1aa 0a10 	sub.w	sl, sl, #16
   821c8:	f1ba 0f10 	cmp.w	sl, #16
   821cc:	f102 0208 	add.w	r2, r2, #8
   821d0:	dd17      	ble.n	82202 <_svfprintf_r+0xa3e>
   821d2:	3301      	adds	r3, #1
   821d4:	3110      	adds	r1, #16
   821d6:	2b07      	cmp	r3, #7
   821d8:	912d      	str	r1, [sp, #180]	; 0xb4
   821da:	932c      	str	r3, [sp, #176]	; 0xb0
   821dc:	e882 0840 	stmia.w	r2, {r6, fp}
   821e0:	ddf0      	ble.n	821c4 <_svfprintf_r+0xa00>
   821e2:	4620      	mov	r0, r4
   821e4:	4629      	mov	r1, r5
   821e6:	aa2b      	add	r2, sp, #172	; 0xac
   821e8:	f004 fa3a 	bl	86660 <__ssprint_r>
   821ec:	2800      	cmp	r0, #0
   821ee:	f47f ac01 	bne.w	819f4 <_svfprintf_r+0x230>
   821f2:	f1aa 0a10 	sub.w	sl, sl, #16
   821f6:	f1ba 0f10 	cmp.w	sl, #16
   821fa:	992d      	ldr	r1, [sp, #180]	; 0xb4
   821fc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   821fe:	aa38      	add	r2, sp, #224	; 0xe0
   82200:	dce7      	bgt.n	821d2 <_svfprintf_r+0xa0e>
   82202:	9c12      	ldr	r4, [sp, #72]	; 0x48
   82204:	4635      	mov	r5, r6
   82206:	468c      	mov	ip, r1
   82208:	4616      	mov	r6, r2
   8220a:	3301      	adds	r3, #1
   8220c:	44d4      	add	ip, sl
   8220e:	2b07      	cmp	r3, #7
   82210:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82214:	932c      	str	r3, [sp, #176]	; 0xb0
   82216:	e886 0420 	stmia.w	r6, {r5, sl}
   8221a:	f300 820f 	bgt.w	8263c <_svfprintf_r+0xe78>
   8221e:	3608      	adds	r6, #8
   82220:	e4f0      	b.n	81c04 <_svfprintf_r+0x440>
   82222:	2d00      	cmp	r5, #0
   82224:	bf08      	it	eq
   82226:	2c0a      	cmpeq	r4, #10
   82228:	f080 8138 	bcs.w	8249c <_svfprintf_r+0xcd8>
   8222c:	3430      	adds	r4, #48	; 0x30
   8222e:	af48      	add	r7, sp, #288	; 0x120
   82230:	f807 4d41 	strb.w	r4, [r7, #-65]!
   82234:	9d08      	ldr	r5, [sp, #32]
   82236:	1bec      	subs	r4, r5, r7
   82238:	e452      	b.n	81ae0 <_svfprintf_r+0x31c>
   8223a:	9c11      	ldr	r4, [sp, #68]	; 0x44
   8223c:	2c01      	cmp	r4, #1
   8223e:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   82240:	f340 81d2 	ble.w	825e8 <_svfprintf_r+0xe24>
   82244:	3401      	adds	r4, #1
   82246:	f10c 0301 	add.w	r3, ip, #1
   8224a:	2201      	movs	r2, #1
   8224c:	2c07      	cmp	r4, #7
   8224e:	932d      	str	r3, [sp, #180]	; 0xb4
   82250:	6037      	str	r7, [r6, #0]
   82252:	942c      	str	r4, [sp, #176]	; 0xb0
   82254:	6072      	str	r2, [r6, #4]
   82256:	f300 81d8 	bgt.w	8260a <_svfprintf_r+0xe46>
   8225a:	3608      	adds	r6, #8
   8225c:	9d15      	ldr	r5, [sp, #84]	; 0x54
   8225e:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
   82262:	3401      	adds	r4, #1
   82264:	6035      	str	r5, [r6, #0]
   82266:	9d18      	ldr	r5, [sp, #96]	; 0x60
   82268:	4498      	add	r8, r3
   8226a:	2c07      	cmp	r4, #7
   8226c:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   82270:	942c      	str	r4, [sp, #176]	; 0xb0
   82272:	6075      	str	r5, [r6, #4]
   82274:	f300 81d5 	bgt.w	82622 <_svfprintf_r+0xe5e>
   82278:	3608      	adds	r6, #8
   8227a:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   8227e:	2200      	movs	r2, #0
   82280:	2300      	movs	r3, #0
   82282:	f005 f803 	bl	8728c <__aeabi_dcmpeq>
   82286:	9d11      	ldr	r5, [sp, #68]	; 0x44
   82288:	2800      	cmp	r0, #0
   8228a:	f040 80b9 	bne.w	82400 <_svfprintf_r+0xc3c>
   8228e:	1e6b      	subs	r3, r5, #1
   82290:	3401      	adds	r4, #1
   82292:	3701      	adds	r7, #1
   82294:	4498      	add	r8, r3
   82296:	2c07      	cmp	r4, #7
   82298:	942c      	str	r4, [sp, #176]	; 0xb0
   8229a:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   8229e:	6037      	str	r7, [r6, #0]
   822a0:	6073      	str	r3, [r6, #4]
   822a2:	f300 80e2 	bgt.w	8246a <_svfprintf_r+0xca6>
   822a6:	3608      	adds	r6, #8
   822a8:	f8dd c064 	ldr.w	ip, [sp, #100]	; 0x64
   822ac:	3401      	adds	r4, #1
   822ae:	9d19      	ldr	r5, [sp, #100]	; 0x64
   822b0:	44c4      	add	ip, r8
   822b2:	ab27      	add	r3, sp, #156	; 0x9c
   822b4:	2c07      	cmp	r4, #7
   822b6:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   822ba:	942c      	str	r4, [sp, #176]	; 0xb0
   822bc:	e886 0028 	stmia.w	r6, {r3, r5}
   822c0:	f77f acf1 	ble.w	81ca6 <_svfprintf_r+0x4e2>
   822c4:	980d      	ldr	r0, [sp, #52]	; 0x34
   822c6:	990c      	ldr	r1, [sp, #48]	; 0x30
   822c8:	aa2b      	add	r2, sp, #172	; 0xac
   822ca:	f004 f9c9 	bl	86660 <__ssprint_r>
   822ce:	2800      	cmp	r0, #0
   822d0:	f47f ab90 	bne.w	819f4 <_svfprintf_r+0x230>
   822d4:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   822d8:	ae38      	add	r6, sp, #224	; 0xe0
   822da:	e4e5      	b.n	81ca8 <_svfprintf_r+0x4e4>
   822dc:	980d      	ldr	r0, [sp, #52]	; 0x34
   822de:	990c      	ldr	r1, [sp, #48]	; 0x30
   822e0:	aa2b      	add	r2, sp, #172	; 0xac
   822e2:	f004 f9bd 	bl	86660 <__ssprint_r>
   822e6:	2800      	cmp	r0, #0
   822e8:	f43f ad37 	beq.w	81d5a <_svfprintf_r+0x596>
   822ec:	f7ff bb82 	b.w	819f4 <_svfprintf_r+0x230>
   822f0:	980d      	ldr	r0, [sp, #52]	; 0x34
   822f2:	990c      	ldr	r1, [sp, #48]	; 0x30
   822f4:	aa2b      	add	r2, sp, #172	; 0xac
   822f6:	f004 f9b3 	bl	86660 <__ssprint_r>
   822fa:	2800      	cmp	r0, #0
   822fc:	f47f ab7a 	bne.w	819f4 <_svfprintf_r+0x230>
   82300:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82304:	ae38      	add	r6, sp, #224	; 0xe0
   82306:	e4bf      	b.n	81c88 <_svfprintf_r+0x4c4>
   82308:	980d      	ldr	r0, [sp, #52]	; 0x34
   8230a:	990c      	ldr	r1, [sp, #48]	; 0x30
   8230c:	aa2b      	add	r2, sp, #172	; 0xac
   8230e:	f004 f9a7 	bl	86660 <__ssprint_r>
   82312:	2800      	cmp	r0, #0
   82314:	f47f ab6e 	bne.w	819f4 <_svfprintf_r+0x230>
   82318:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   8231c:	ae38      	add	r6, sp, #224	; 0xe0
   8231e:	e46d      	b.n	81bfc <_svfprintf_r+0x438>
   82320:	980d      	ldr	r0, [sp, #52]	; 0x34
   82322:	990c      	ldr	r1, [sp, #48]	; 0x30
   82324:	aa2b      	add	r2, sp, #172	; 0xac
   82326:	f004 f99b 	bl	86660 <__ssprint_r>
   8232a:	2800      	cmp	r0, #0
   8232c:	f47f ab62 	bne.w	819f4 <_svfprintf_r+0x230>
   82330:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82334:	ae38      	add	r6, sp, #224	; 0xe0
   82336:	e450      	b.n	81bda <_svfprintf_r+0x416>
   82338:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   8233a:	af38      	add	r7, sp, #224	; 0xe0
   8233c:	f7ff bbd0 	b.w	81ae0 <_svfprintf_r+0x31c>
   82340:	2302      	movs	r3, #2
   82342:	f7ff bba9 	b.w	81a98 <_svfprintf_r+0x2d4>
   82346:	9b25      	ldr	r3, [sp, #148]	; 0x94
   82348:	2b00      	cmp	r3, #0
   8234a:	f340 81dd 	ble.w	82708 <_svfprintf_r+0xf44>
   8234e:	9c11      	ldr	r4, [sp, #68]	; 0x44
   82350:	9d14      	ldr	r5, [sp, #80]	; 0x50
   82352:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
   82356:	42ac      	cmp	r4, r5
   82358:	bfa8      	it	ge
   8235a:	462c      	movge	r4, r5
   8235c:	2c00      	cmp	r4, #0
   8235e:	44ba      	add	sl, r7
   82360:	dd0b      	ble.n	8237a <_svfprintf_r+0xbb6>
   82362:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82364:	44a4      	add	ip, r4
   82366:	3301      	adds	r3, #1
   82368:	2b07      	cmp	r3, #7
   8236a:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   8236e:	6037      	str	r7, [r6, #0]
   82370:	6074      	str	r4, [r6, #4]
   82372:	932c      	str	r3, [sp, #176]	; 0xb0
   82374:	f300 831e 	bgt.w	829b4 <_svfprintf_r+0x11f0>
   82378:	3608      	adds	r6, #8
   8237a:	9d14      	ldr	r5, [sp, #80]	; 0x50
   8237c:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
   82380:	1b2c      	subs	r4, r5, r4
   82382:	2c00      	cmp	r4, #0
   82384:	f340 80d7 	ble.w	82536 <_svfprintf_r+0xd72>
   82388:	2c10      	cmp	r4, #16
   8238a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8238c:	4d07      	ldr	r5, [pc, #28]	; (823ac <_svfprintf_r+0xbe8>)
   8238e:	f340 81a3 	ble.w	826d8 <_svfprintf_r+0xf14>
   82392:	970a      	str	r7, [sp, #40]	; 0x28
   82394:	f04f 0810 	mov.w	r8, #16
   82398:	462f      	mov	r7, r5
   8239a:	4662      	mov	r2, ip
   8239c:	4625      	mov	r5, r4
   8239e:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
   823a2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   823a4:	e009      	b.n	823ba <_svfprintf_r+0xbf6>
   823a6:	bf00      	nop
   823a8:	00087944 	.word	0x00087944
   823ac:	000879e4 	.word	0x000879e4
   823b0:	3608      	adds	r6, #8
   823b2:	3d10      	subs	r5, #16
   823b4:	2d10      	cmp	r5, #16
   823b6:	f340 818b 	ble.w	826d0 <_svfprintf_r+0xf0c>
   823ba:	3301      	adds	r3, #1
   823bc:	3210      	adds	r2, #16
   823be:	2b07      	cmp	r3, #7
   823c0:	922d      	str	r2, [sp, #180]	; 0xb4
   823c2:	932c      	str	r3, [sp, #176]	; 0xb0
   823c4:	e886 0180 	stmia.w	r6, {r7, r8}
   823c8:	ddf2      	ble.n	823b0 <_svfprintf_r+0xbec>
   823ca:	4658      	mov	r0, fp
   823cc:	4621      	mov	r1, r4
   823ce:	aa2b      	add	r2, sp, #172	; 0xac
   823d0:	f004 f946 	bl	86660 <__ssprint_r>
   823d4:	2800      	cmp	r0, #0
   823d6:	f47f ab0d 	bne.w	819f4 <_svfprintf_r+0x230>
   823da:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   823dc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   823de:	ae38      	add	r6, sp, #224	; 0xe0
   823e0:	e7e7      	b.n	823b2 <_svfprintf_r+0xbee>
   823e2:	980d      	ldr	r0, [sp, #52]	; 0x34
   823e4:	990c      	ldr	r1, [sp, #48]	; 0x30
   823e6:	aa2b      	add	r2, sp, #172	; 0xac
   823e8:	f004 f93a 	bl	86660 <__ssprint_r>
   823ec:	2800      	cmp	r0, #0
   823ee:	f47f ab01 	bne.w	819f4 <_svfprintf_r+0x230>
   823f2:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   823f6:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   823fa:	ae38      	add	r6, sp, #224	; 0xe0
   823fc:	f7ff bbda 	b.w	81bb4 <_svfprintf_r+0x3f0>
   82400:	1e6f      	subs	r7, r5, #1
   82402:	2f00      	cmp	r7, #0
   82404:	f77f af50 	ble.w	822a8 <_svfprintf_r+0xae4>
   82408:	2f10      	cmp	r7, #16
   8240a:	4dae      	ldr	r5, [pc, #696]	; (826c4 <_svfprintf_r+0xf00>)
   8240c:	dd23      	ble.n	82456 <_svfprintf_r+0xc92>
   8240e:	4643      	mov	r3, r8
   82410:	f04f 0a10 	mov.w	sl, #16
   82414:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   82418:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   8241c:	e004      	b.n	82428 <_svfprintf_r+0xc64>
   8241e:	3f10      	subs	r7, #16
   82420:	2f10      	cmp	r7, #16
   82422:	f106 0608 	add.w	r6, r6, #8
   82426:	dd15      	ble.n	82454 <_svfprintf_r+0xc90>
   82428:	3401      	adds	r4, #1
   8242a:	3310      	adds	r3, #16
   8242c:	2c07      	cmp	r4, #7
   8242e:	932d      	str	r3, [sp, #180]	; 0xb4
   82430:	942c      	str	r4, [sp, #176]	; 0xb0
   82432:	e886 0420 	stmia.w	r6, {r5, sl}
   82436:	ddf2      	ble.n	8241e <_svfprintf_r+0xc5a>
   82438:	4640      	mov	r0, r8
   8243a:	4659      	mov	r1, fp
   8243c:	aa2b      	add	r2, sp, #172	; 0xac
   8243e:	f004 f90f 	bl	86660 <__ssprint_r>
   82442:	2800      	cmp	r0, #0
   82444:	f47f aad6 	bne.w	819f4 <_svfprintf_r+0x230>
   82448:	3f10      	subs	r7, #16
   8244a:	2f10      	cmp	r7, #16
   8244c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   8244e:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   82450:	ae38      	add	r6, sp, #224	; 0xe0
   82452:	dce9      	bgt.n	82428 <_svfprintf_r+0xc64>
   82454:	4698      	mov	r8, r3
   82456:	3401      	adds	r4, #1
   82458:	44b8      	add	r8, r7
   8245a:	2c07      	cmp	r4, #7
   8245c:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   82460:	942c      	str	r4, [sp, #176]	; 0xb0
   82462:	e886 00a0 	stmia.w	r6, {r5, r7}
   82466:	f77f af1e 	ble.w	822a6 <_svfprintf_r+0xae2>
   8246a:	980d      	ldr	r0, [sp, #52]	; 0x34
   8246c:	990c      	ldr	r1, [sp, #48]	; 0x30
   8246e:	aa2b      	add	r2, sp, #172	; 0xac
   82470:	f004 f8f6 	bl	86660 <__ssprint_r>
   82474:	2800      	cmp	r0, #0
   82476:	f47f aabd 	bne.w	819f4 <_svfprintf_r+0x230>
   8247a:	f8dd 80b4 	ldr.w	r8, [sp, #180]	; 0xb4
   8247e:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   82480:	ae38      	add	r6, sp, #224	; 0xe0
   82482:	e711      	b.n	822a8 <_svfprintf_r+0xae4>
   82484:	4694      	mov	ip, r2
   82486:	3301      	adds	r3, #1
   82488:	44a4      	add	ip, r4
   8248a:	2b07      	cmp	r3, #7
   8248c:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82490:	932c      	str	r3, [sp, #176]	; 0xb0
   82492:	6035      	str	r5, [r6, #0]
   82494:	6074      	str	r4, [r6, #4]
   82496:	f77f ac06 	ble.w	81ca6 <_svfprintf_r+0x4e2>
   8249a:	e713      	b.n	822c4 <_svfprintf_r+0xb00>
   8249c:	f10d 0bdf 	add.w	fp, sp, #223	; 0xdf
   824a0:	4620      	mov	r0, r4
   824a2:	4629      	mov	r1, r5
   824a4:	220a      	movs	r2, #10
   824a6:	2300      	movs	r3, #0
   824a8:	f004 ff4a 	bl	87340 <__aeabi_uldivmod>
   824ac:	3230      	adds	r2, #48	; 0x30
   824ae:	f88b 2000 	strb.w	r2, [fp]
   824b2:	4620      	mov	r0, r4
   824b4:	4629      	mov	r1, r5
   824b6:	220a      	movs	r2, #10
   824b8:	2300      	movs	r3, #0
   824ba:	f004 ff41 	bl	87340 <__aeabi_uldivmod>
   824be:	4604      	mov	r4, r0
   824c0:	460d      	mov	r5, r1
   824c2:	ea54 0c05 	orrs.w	ip, r4, r5
   824c6:	465f      	mov	r7, fp
   824c8:	f10b 3bff 	add.w	fp, fp, #4294967295
   824cc:	d1e8      	bne.n	824a0 <_svfprintf_r+0xcdc>
   824ce:	9d08      	ldr	r5, [sp, #32]
   824d0:	1bec      	subs	r4, r5, r7
   824d2:	f7ff bb05 	b.w	81ae0 <_svfprintf_r+0x31c>
   824d6:	9d10      	ldr	r5, [sp, #64]	; 0x40
   824d8:	2301      	movs	r3, #1
   824da:	682c      	ldr	r4, [r5, #0]
   824dc:	3504      	adds	r5, #4
   824de:	9510      	str	r5, [sp, #64]	; 0x40
   824e0:	2500      	movs	r5, #0
   824e2:	f7ff bad9 	b.w	81a98 <_svfprintf_r+0x2d4>
   824e6:	9d10      	ldr	r5, [sp, #64]	; 0x40
   824e8:	682c      	ldr	r4, [r5, #0]
   824ea:	3504      	adds	r5, #4
   824ec:	9510      	str	r5, [sp, #64]	; 0x40
   824ee:	2500      	movs	r5, #0
   824f0:	f7ff bad2 	b.w	81a98 <_svfprintf_r+0x2d4>
   824f4:	9d10      	ldr	r5, [sp, #64]	; 0x40
   824f6:	682c      	ldr	r4, [r5, #0]
   824f8:	3504      	adds	r5, #4
   824fa:	9510      	str	r5, [sp, #64]	; 0x40
   824fc:	17e5      	asrs	r5, r4, #31
   824fe:	4622      	mov	r2, r4
   82500:	462b      	mov	r3, r5
   82502:	2a00      	cmp	r2, #0
   82504:	f173 0c00 	sbcs.w	ip, r3, #0
   82508:	f6bf ac6c 	bge.w	81de4 <_svfprintf_r+0x620>
   8250c:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   82510:	4264      	negs	r4, r4
   82512:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   82516:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   8251a:	2301      	movs	r3, #1
   8251c:	f7ff bac0 	b.w	81aa0 <_svfprintf_r+0x2dc>
   82520:	980d      	ldr	r0, [sp, #52]	; 0x34
   82522:	990c      	ldr	r1, [sp, #48]	; 0x30
   82524:	aa2b      	add	r2, sp, #172	; 0xac
   82526:	f004 f89b 	bl	86660 <__ssprint_r>
   8252a:	2800      	cmp	r0, #0
   8252c:	f47f aa62 	bne.w	819f4 <_svfprintf_r+0x230>
   82530:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82534:	ae38      	add	r6, sp, #224	; 0xe0
   82536:	9d14      	ldr	r5, [sp, #80]	; 0x50
   82538:	9c25      	ldr	r4, [sp, #148]	; 0x94
   8253a:	442f      	add	r7, r5
   8253c:	9d11      	ldr	r5, [sp, #68]	; 0x44
   8253e:	42ac      	cmp	r4, r5
   82540:	db42      	blt.n	825c8 <_svfprintf_r+0xe04>
   82542:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82544:	07e9      	lsls	r1, r5, #31
   82546:	d43f      	bmi.n	825c8 <_svfprintf_r+0xe04>
   82548:	9811      	ldr	r0, [sp, #68]	; 0x44
   8254a:	ebc7 050a 	rsb	r5, r7, sl
   8254e:	1b04      	subs	r4, r0, r4
   82550:	42ac      	cmp	r4, r5
   82552:	bfb8      	it	lt
   82554:	4625      	movlt	r5, r4
   82556:	2d00      	cmp	r5, #0
   82558:	dd0b      	ble.n	82572 <_svfprintf_r+0xdae>
   8255a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8255c:	44ac      	add	ip, r5
   8255e:	3301      	adds	r3, #1
   82560:	2b07      	cmp	r3, #7
   82562:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82566:	6037      	str	r7, [r6, #0]
   82568:	6075      	str	r5, [r6, #4]
   8256a:	932c      	str	r3, [sp, #176]	; 0xb0
   8256c:	f300 824c 	bgt.w	82a08 <_svfprintf_r+0x1244>
   82570:	3608      	adds	r6, #8
   82572:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
   82576:	1b64      	subs	r4, r4, r5
   82578:	2c00      	cmp	r4, #0
   8257a:	f77f ab95 	ble.w	81ca8 <_svfprintf_r+0x4e4>
   8257e:	2c10      	cmp	r4, #16
   82580:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82582:	4d50      	ldr	r5, [pc, #320]	; (826c4 <_svfprintf_r+0xf00>)
   82584:	f77f af7f 	ble.w	82486 <_svfprintf_r+0xcc2>
   82588:	2710      	movs	r7, #16
   8258a:	4662      	mov	r2, ip
   8258c:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   82590:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   82594:	e004      	b.n	825a0 <_svfprintf_r+0xddc>
   82596:	3608      	adds	r6, #8
   82598:	3c10      	subs	r4, #16
   8259a:	2c10      	cmp	r4, #16
   8259c:	f77f af72 	ble.w	82484 <_svfprintf_r+0xcc0>
   825a0:	3301      	adds	r3, #1
   825a2:	3210      	adds	r2, #16
   825a4:	2b07      	cmp	r3, #7
   825a6:	922d      	str	r2, [sp, #180]	; 0xb4
   825a8:	932c      	str	r3, [sp, #176]	; 0xb0
   825aa:	e886 00a0 	stmia.w	r6, {r5, r7}
   825ae:	ddf2      	ble.n	82596 <_svfprintf_r+0xdd2>
   825b0:	4640      	mov	r0, r8
   825b2:	4651      	mov	r1, sl
   825b4:	aa2b      	add	r2, sp, #172	; 0xac
   825b6:	f004 f853 	bl	86660 <__ssprint_r>
   825ba:	2800      	cmp	r0, #0
   825bc:	f47f aa1a 	bne.w	819f4 <_svfprintf_r+0x230>
   825c0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   825c2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   825c4:	ae38      	add	r6, sp, #224	; 0xe0
   825c6:	e7e7      	b.n	82598 <_svfprintf_r+0xdd4>
   825c8:	9d18      	ldr	r5, [sp, #96]	; 0x60
   825ca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   825cc:	44ac      	add	ip, r5
   825ce:	9d15      	ldr	r5, [sp, #84]	; 0x54
   825d0:	3301      	adds	r3, #1
   825d2:	6035      	str	r5, [r6, #0]
   825d4:	9d18      	ldr	r5, [sp, #96]	; 0x60
   825d6:	2b07      	cmp	r3, #7
   825d8:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   825dc:	6075      	str	r5, [r6, #4]
   825de:	932c      	str	r3, [sp, #176]	; 0xb0
   825e0:	f300 81f4 	bgt.w	829cc <_svfprintf_r+0x1208>
   825e4:	3608      	adds	r6, #8
   825e6:	e7af      	b.n	82548 <_svfprintf_r+0xd84>
   825e8:	9d09      	ldr	r5, [sp, #36]	; 0x24
   825ea:	07ea      	lsls	r2, r5, #31
   825ec:	f53f ae2a 	bmi.w	82244 <_svfprintf_r+0xa80>
   825f0:	3401      	adds	r4, #1
   825f2:	f10c 0801 	add.w	r8, ip, #1
   825f6:	2301      	movs	r3, #1
   825f8:	2c07      	cmp	r4, #7
   825fa:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   825fe:	942c      	str	r4, [sp, #176]	; 0xb0
   82600:	6037      	str	r7, [r6, #0]
   82602:	6073      	str	r3, [r6, #4]
   82604:	f77f ae4f 	ble.w	822a6 <_svfprintf_r+0xae2>
   82608:	e72f      	b.n	8246a <_svfprintf_r+0xca6>
   8260a:	980d      	ldr	r0, [sp, #52]	; 0x34
   8260c:	990c      	ldr	r1, [sp, #48]	; 0x30
   8260e:	aa2b      	add	r2, sp, #172	; 0xac
   82610:	f004 f826 	bl	86660 <__ssprint_r>
   82614:	2800      	cmp	r0, #0
   82616:	f47f a9ed 	bne.w	819f4 <_svfprintf_r+0x230>
   8261a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   8261c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   8261e:	ae38      	add	r6, sp, #224	; 0xe0
   82620:	e61c      	b.n	8225c <_svfprintf_r+0xa98>
   82622:	980d      	ldr	r0, [sp, #52]	; 0x34
   82624:	990c      	ldr	r1, [sp, #48]	; 0x30
   82626:	aa2b      	add	r2, sp, #172	; 0xac
   82628:	f004 f81a 	bl	86660 <__ssprint_r>
   8262c:	2800      	cmp	r0, #0
   8262e:	f47f a9e1 	bne.w	819f4 <_svfprintf_r+0x230>
   82632:	f8dd 80b4 	ldr.w	r8, [sp, #180]	; 0xb4
   82636:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   82638:	ae38      	add	r6, sp, #224	; 0xe0
   8263a:	e61e      	b.n	8227a <_svfprintf_r+0xab6>
   8263c:	980d      	ldr	r0, [sp, #52]	; 0x34
   8263e:	990c      	ldr	r1, [sp, #48]	; 0x30
   82640:	aa2b      	add	r2, sp, #172	; 0xac
   82642:	f004 f80d 	bl	86660 <__ssprint_r>
   82646:	2800      	cmp	r0, #0
   82648:	f47f a9d4 	bne.w	819f4 <_svfprintf_r+0x230>
   8264c:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82650:	ae38      	add	r6, sp, #224	; 0xe0
   82652:	f7ff bad7 	b.w	81c04 <_svfprintf_r+0x440>
   82656:	f003 ff87 	bl	86568 <__fpclassifyd>
   8265a:	2800      	cmp	r0, #0
   8265c:	f040 80bb 	bne.w	827d6 <_svfprintf_r+0x1012>
   82660:	9c09      	ldr	r4, [sp, #36]	; 0x24
   82662:	4f19      	ldr	r7, [pc, #100]	; (826c8 <_svfprintf_r+0xf04>)
   82664:	4b19      	ldr	r3, [pc, #100]	; (826cc <_svfprintf_r+0xf08>)
   82666:	f04f 0c03 	mov.w	ip, #3
   8266a:	f024 0480 	bic.w	r4, r4, #128	; 0x80
   8266e:	9409      	str	r4, [sp, #36]	; 0x24
   82670:	900a      	str	r0, [sp, #40]	; 0x28
   82672:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   82676:	9014      	str	r0, [sp, #80]	; 0x50
   82678:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   8267c:	bfd8      	it	le
   8267e:	461f      	movle	r7, r3
   82680:	4664      	mov	r4, ip
   82682:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   82686:	f7ff ba34 	b.w	81af2 <_svfprintf_r+0x32e>
   8268a:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8268c:	0664      	lsls	r4, r4, #25
   8268e:	f140 8150 	bpl.w	82932 <_svfprintf_r+0x116e>
   82692:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   82696:	2500      	movs	r5, #0
   82698:	f8bc 4000 	ldrh.w	r4, [ip]
   8269c:	f10c 0c04 	add.w	ip, ip, #4
   826a0:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   826a4:	f7ff b9e4 	b.w	81a70 <_svfprintf_r+0x2ac>
   826a8:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   826ac:	f01c 0f10 	tst.w	ip, #16
   826b0:	f000 8146 	beq.w	82940 <_svfprintf_r+0x117c>
   826b4:	9c10      	ldr	r4, [sp, #64]	; 0x40
   826b6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   826b8:	6823      	ldr	r3, [r4, #0]
   826ba:	3404      	adds	r4, #4
   826bc:	9410      	str	r4, [sp, #64]	; 0x40
   826be:	601d      	str	r5, [r3, #0]
   826c0:	f7ff b8a6 	b.w	81810 <_svfprintf_r+0x4c>
   826c4:	000879e4 	.word	0x000879e4
   826c8:	00087a00 	.word	0x00087a00
   826cc:	000879fc 	.word	0x000879fc
   826d0:	462c      	mov	r4, r5
   826d2:	463d      	mov	r5, r7
   826d4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   826d6:	4694      	mov	ip, r2
   826d8:	3301      	adds	r3, #1
   826da:	44a4      	add	ip, r4
   826dc:	2b07      	cmp	r3, #7
   826de:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   826e2:	932c      	str	r3, [sp, #176]	; 0xb0
   826e4:	6035      	str	r5, [r6, #0]
   826e6:	6074      	str	r4, [r6, #4]
   826e8:	f73f af1a 	bgt.w	82520 <_svfprintf_r+0xd5c>
   826ec:	3608      	adds	r6, #8
   826ee:	e722      	b.n	82536 <_svfprintf_r+0xd72>
   826f0:	980d      	ldr	r0, [sp, #52]	; 0x34
   826f2:	990c      	ldr	r1, [sp, #48]	; 0x30
   826f4:	aa2b      	add	r2, sp, #172	; 0xac
   826f6:	f003 ffb3 	bl	86660 <__ssprint_r>
   826fa:	2800      	cmp	r0, #0
   826fc:	f47f a97a 	bne.w	819f4 <_svfprintf_r+0x230>
   82700:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82704:	ae38      	add	r6, sp, #224	; 0xe0
   82706:	e507      	b.n	82118 <_svfprintf_r+0x954>
   82708:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   8270a:	49b7      	ldr	r1, [pc, #732]	; (829e8 <_svfprintf_r+0x1224>)
   8270c:	3201      	adds	r2, #1
   8270e:	f10c 0c01 	add.w	ip, ip, #1
   82712:	2001      	movs	r0, #1
   82714:	2a07      	cmp	r2, #7
   82716:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   8271a:	922c      	str	r2, [sp, #176]	; 0xb0
   8271c:	6031      	str	r1, [r6, #0]
   8271e:	6070      	str	r0, [r6, #4]
   82720:	f300 80f7 	bgt.w	82912 <_svfprintf_r+0x114e>
   82724:	3608      	adds	r6, #8
   82726:	461c      	mov	r4, r3
   82728:	b92c      	cbnz	r4, 82736 <_svfprintf_r+0xf72>
   8272a:	9d11      	ldr	r5, [sp, #68]	; 0x44
   8272c:	b91d      	cbnz	r5, 82736 <_svfprintf_r+0xf72>
   8272e:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82730:	07e8      	lsls	r0, r5, #31
   82732:	f57f aab9 	bpl.w	81ca8 <_svfprintf_r+0x4e4>
   82736:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82738:	9d15      	ldr	r5, [sp, #84]	; 0x54
   8273a:	9918      	ldr	r1, [sp, #96]	; 0x60
   8273c:	3301      	adds	r3, #1
   8273e:	6035      	str	r5, [r6, #0]
   82740:	9d18      	ldr	r5, [sp, #96]	; 0x60
   82742:	4461      	add	r1, ip
   82744:	2b07      	cmp	r3, #7
   82746:	912d      	str	r1, [sp, #180]	; 0xb4
   82748:	6075      	str	r5, [r6, #4]
   8274a:	932c      	str	r3, [sp, #176]	; 0xb0
   8274c:	f300 81de 	bgt.w	82b0c <_svfprintf_r+0x1348>
   82750:	f106 0208 	add.w	r2, r6, #8
   82754:	4264      	negs	r4, r4
   82756:	2c00      	cmp	r4, #0
   82758:	f340 810b 	ble.w	82972 <_svfprintf_r+0x11ae>
   8275c:	2c10      	cmp	r4, #16
   8275e:	4da3      	ldr	r5, [pc, #652]	; (829ec <_svfprintf_r+0x1228>)
   82760:	f340 8148 	ble.w	829f4 <_svfprintf_r+0x1230>
   82764:	46a3      	mov	fp, r4
   82766:	2610      	movs	r6, #16
   82768:	460c      	mov	r4, r1
   8276a:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   8276e:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   82772:	e006      	b.n	82782 <_svfprintf_r+0xfbe>
   82774:	3208      	adds	r2, #8
   82776:	f1ab 0b10 	sub.w	fp, fp, #16
   8277a:	f1bb 0f10 	cmp.w	fp, #16
   8277e:	f340 8137 	ble.w	829f0 <_svfprintf_r+0x122c>
   82782:	3301      	adds	r3, #1
   82784:	3410      	adds	r4, #16
   82786:	2b07      	cmp	r3, #7
   82788:	942d      	str	r4, [sp, #180]	; 0xb4
   8278a:	932c      	str	r3, [sp, #176]	; 0xb0
   8278c:	e882 0060 	stmia.w	r2, {r5, r6}
   82790:	ddf0      	ble.n	82774 <_svfprintf_r+0xfb0>
   82792:	4640      	mov	r0, r8
   82794:	4651      	mov	r1, sl
   82796:	aa2b      	add	r2, sp, #172	; 0xac
   82798:	f003 ff62 	bl	86660 <__ssprint_r>
   8279c:	2800      	cmp	r0, #0
   8279e:	f47f a929 	bne.w	819f4 <_svfprintf_r+0x230>
   827a2:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
   827a4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   827a6:	aa38      	add	r2, sp, #224	; 0xe0
   827a8:	e7e5      	b.n	82776 <_svfprintf_r+0xfb2>
   827aa:	9c09      	ldr	r4, [sp, #36]	; 0x24
   827ac:	f109 0901 	add.w	r9, r9, #1
   827b0:	f044 0420 	orr.w	r4, r4, #32
   827b4:	9409      	str	r4, [sp, #36]	; 0x24
   827b6:	f893 8001 	ldrb.w	r8, [r3, #1]
   827ba:	f7ff b85f 	b.w	8187c <_svfprintf_r+0xb8>
   827be:	980d      	ldr	r0, [sp, #52]	; 0x34
   827c0:	990c      	ldr	r1, [sp, #48]	; 0x30
   827c2:	aa2b      	add	r2, sp, #172	; 0xac
   827c4:	f003 ff4c 	bl	86660 <__ssprint_r>
   827c8:	2800      	cmp	r0, #0
   827ca:	f47f a913 	bne.w	819f4 <_svfprintf_r+0x230>
   827ce:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   827d2:	ae38      	add	r6, sp, #224	; 0xe0
   827d4:	e4b6      	b.n	82144 <_svfprintf_r+0x980>
   827d6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   827d8:	f028 0a20 	bic.w	sl, r8, #32
   827dc:	3501      	adds	r5, #1
   827de:	f000 80a5 	beq.w	8292c <_svfprintf_r+0x1168>
   827e2:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
   827e6:	d104      	bne.n	827f2 <_svfprintf_r+0x102e>
   827e8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   827ea:	2d00      	cmp	r5, #0
   827ec:	bf08      	it	eq
   827ee:	2501      	moveq	r5, #1
   827f0:	950a      	str	r5, [sp, #40]	; 0x28
   827f2:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   827f6:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   827fa:	f44c 7c80 	orr.w	ip, ip, #256	; 0x100
   827fe:	2b00      	cmp	r3, #0
   82800:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
   82804:	f2c0 819c 	blt.w	82b40 <_svfprintf_r+0x137c>
   82808:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	; 0x58
   8280c:	e9cd 4520 	strd	r4, r5, [sp, #128]	; 0x80
   82810:	f04f 0b00 	mov.w	fp, #0
   82814:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   82818:	f000 819b 	beq.w	82b52 <_svfprintf_r+0x138e>
   8281c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
   82820:	f000 81a9 	beq.w	82b76 <_svfprintf_r+0x13b2>
   82824:	f1ba 0f45 	cmp.w	sl, #69	; 0x45
   82828:	bf0a      	itet	eq
   8282a:	9c0a      	ldreq	r4, [sp, #40]	; 0x28
   8282c:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   8282e:	1c65      	addeq	r5, r4, #1
   82830:	2002      	movs	r0, #2
   82832:	a925      	add	r1, sp, #148	; 0x94
   82834:	aa26      	add	r2, sp, #152	; 0x98
   82836:	ab29      	add	r3, sp, #164	; 0xa4
   82838:	e88d 0021 	stmia.w	sp, {r0, r5}
   8283c:	9203      	str	r2, [sp, #12]
   8283e:	9304      	str	r3, [sp, #16]
   82840:	9102      	str	r1, [sp, #8]
   82842:	980d      	ldr	r0, [sp, #52]	; 0x34
   82844:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
   82848:	f001 fa32 	bl	83cb0 <_dtoa_r>
   8284c:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
   82850:	4607      	mov	r7, r0
   82852:	d002      	beq.n	8285a <_svfprintf_r+0x1096>
   82854:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   82858:	d105      	bne.n	82866 <_svfprintf_r+0x10a2>
   8285a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8285e:	f01c 0f01 	tst.w	ip, #1
   82862:	f000 819c 	beq.w	82b9e <_svfprintf_r+0x13da>
   82866:	f1ba 0f46 	cmp.w	sl, #70	; 0x46
   8286a:	eb07 0405 	add.w	r4, r7, r5
   8286e:	f000 811c 	beq.w	82aaa <_svfprintf_r+0x12e6>
   82872:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
   82876:	2200      	movs	r2, #0
   82878:	2300      	movs	r3, #0
   8287a:	f004 fd07 	bl	8728c <__aeabi_dcmpeq>
   8287e:	2800      	cmp	r0, #0
   82880:	f040 8105 	bne.w	82a8e <_svfprintf_r+0x12ca>
   82884:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   82886:	429c      	cmp	r4, r3
   82888:	d906      	bls.n	82898 <_svfprintf_r+0x10d4>
   8288a:	2130      	movs	r1, #48	; 0x30
   8288c:	1c5a      	adds	r2, r3, #1
   8288e:	9229      	str	r2, [sp, #164]	; 0xa4
   82890:	7019      	strb	r1, [r3, #0]
   82892:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   82894:	429c      	cmp	r4, r3
   82896:	d8f9      	bhi.n	8288c <_svfprintf_r+0x10c8>
   82898:	1bdb      	subs	r3, r3, r7
   8289a:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
   8289e:	9311      	str	r3, [sp, #68]	; 0x44
   828a0:	f000 80ed 	beq.w	82a7e <_svfprintf_r+0x12ba>
   828a4:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   828a8:	f340 81f2 	ble.w	82c90 <_svfprintf_r+0x14cc>
   828ac:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   828b0:	f000 8168 	beq.w	82b84 <_svfprintf_r+0x13c0>
   828b4:	9c25      	ldr	r4, [sp, #148]	; 0x94
   828b6:	9414      	str	r4, [sp, #80]	; 0x50
   828b8:	9c11      	ldr	r4, [sp, #68]	; 0x44
   828ba:	9d14      	ldr	r5, [sp, #80]	; 0x50
   828bc:	42ac      	cmp	r4, r5
   828be:	f300 8132 	bgt.w	82b26 <_svfprintf_r+0x1362>
   828c2:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   828c6:	f01c 0f01 	tst.w	ip, #1
   828ca:	f040 81ad 	bne.w	82c28 <_svfprintf_r+0x1464>
   828ce:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
   828d2:	462c      	mov	r4, r5
   828d4:	f04f 0867 	mov.w	r8, #103	; 0x67
   828d8:	f1bb 0f00 	cmp.w	fp, #0
   828dc:	f040 80b2 	bne.w	82a44 <_svfprintf_r+0x1280>
   828e0:	9d12      	ldr	r5, [sp, #72]	; 0x48
   828e2:	930b      	str	r3, [sp, #44]	; 0x2c
   828e4:	9509      	str	r5, [sp, #36]	; 0x24
   828e6:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
   828ea:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   828ee:	f7ff b900 	b.w	81af2 <_svfprintf_r+0x32e>
   828f2:	980d      	ldr	r0, [sp, #52]	; 0x34
   828f4:	2140      	movs	r1, #64	; 0x40
   828f6:	f002 fdfd 	bl	854f4 <_malloc_r>
   828fa:	6020      	str	r0, [r4, #0]
   828fc:	6120      	str	r0, [r4, #16]
   828fe:	2800      	cmp	r0, #0
   82900:	f000 81bf 	beq.w	82c82 <_svfprintf_r+0x14be>
   82904:	f8dd c030 	ldr.w	ip, [sp, #48]	; 0x30
   82908:	2340      	movs	r3, #64	; 0x40
   8290a:	f8cc 3014 	str.w	r3, [ip, #20]
   8290e:	f7fe bf6f 	b.w	817f0 <_svfprintf_r+0x2c>
   82912:	980d      	ldr	r0, [sp, #52]	; 0x34
   82914:	990c      	ldr	r1, [sp, #48]	; 0x30
   82916:	aa2b      	add	r2, sp, #172	; 0xac
   82918:	f003 fea2 	bl	86660 <__ssprint_r>
   8291c:	2800      	cmp	r0, #0
   8291e:	f47f a869 	bne.w	819f4 <_svfprintf_r+0x230>
   82922:	9c25      	ldr	r4, [sp, #148]	; 0x94
   82924:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82928:	ae38      	add	r6, sp, #224	; 0xe0
   8292a:	e6fd      	b.n	82728 <_svfprintf_r+0xf64>
   8292c:	2406      	movs	r4, #6
   8292e:	940a      	str	r4, [sp, #40]	; 0x28
   82930:	e75f      	b.n	827f2 <_svfprintf_r+0x102e>
   82932:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82934:	682c      	ldr	r4, [r5, #0]
   82936:	3504      	adds	r5, #4
   82938:	9510      	str	r5, [sp, #64]	; 0x40
   8293a:	2500      	movs	r5, #0
   8293c:	f7ff b898 	b.w	81a70 <_svfprintf_r+0x2ac>
   82940:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82944:	f01c 0f40 	tst.w	ip, #64	; 0x40
   82948:	f000 8087 	beq.w	82a5a <_svfprintf_r+0x1296>
   8294c:	9c10      	ldr	r4, [sp, #64]	; 0x40
   8294e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   82950:	6823      	ldr	r3, [r4, #0]
   82952:	3404      	adds	r4, #4
   82954:	9410      	str	r4, [sp, #64]	; 0x40
   82956:	801d      	strh	r5, [r3, #0]
   82958:	f7fe bf5a 	b.w	81810 <_svfprintf_r+0x4c>
   8295c:	980d      	ldr	r0, [sp, #52]	; 0x34
   8295e:	990c      	ldr	r1, [sp, #48]	; 0x30
   82960:	aa2b      	add	r2, sp, #172	; 0xac
   82962:	f003 fe7d 	bl	86660 <__ssprint_r>
   82966:	2800      	cmp	r0, #0
   82968:	f47f a844 	bne.w	819f4 <_svfprintf_r+0x230>
   8296c:	992d      	ldr	r1, [sp, #180]	; 0xb4
   8296e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82970:	aa38      	add	r2, sp, #224	; 0xe0
   82972:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
   82976:	3301      	adds	r3, #1
   82978:	9c11      	ldr	r4, [sp, #68]	; 0x44
   8297a:	448c      	add	ip, r1
   8297c:	2b07      	cmp	r3, #7
   8297e:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82982:	932c      	str	r3, [sp, #176]	; 0xb0
   82984:	6017      	str	r7, [r2, #0]
   82986:	6054      	str	r4, [r2, #4]
   82988:	f73f ac9c 	bgt.w	822c4 <_svfprintf_r+0xb00>
   8298c:	f102 0608 	add.w	r6, r2, #8
   82990:	f7ff b98a 	b.w	81ca8 <_svfprintf_r+0x4e4>
   82994:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
   82998:	f7fe fee4 	bl	81764 <strlen>
   8299c:	9510      	str	r5, [sp, #64]	; 0x40
   8299e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   829a0:	ea20 7ce0 	bic.w	ip, r0, r0, asr #31
   829a4:	4604      	mov	r4, r0
   829a6:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   829aa:	9514      	str	r5, [sp, #80]	; 0x50
   829ac:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   829b0:	f7ff b89f 	b.w	81af2 <_svfprintf_r+0x32e>
   829b4:	980d      	ldr	r0, [sp, #52]	; 0x34
   829b6:	990c      	ldr	r1, [sp, #48]	; 0x30
   829b8:	aa2b      	add	r2, sp, #172	; 0xac
   829ba:	f003 fe51 	bl	86660 <__ssprint_r>
   829be:	2800      	cmp	r0, #0
   829c0:	f47f a818 	bne.w	819f4 <_svfprintf_r+0x230>
   829c4:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   829c8:	ae38      	add	r6, sp, #224	; 0xe0
   829ca:	e4d6      	b.n	8237a <_svfprintf_r+0xbb6>
   829cc:	980d      	ldr	r0, [sp, #52]	; 0x34
   829ce:	990c      	ldr	r1, [sp, #48]	; 0x30
   829d0:	aa2b      	add	r2, sp, #172	; 0xac
   829d2:	f003 fe45 	bl	86660 <__ssprint_r>
   829d6:	2800      	cmp	r0, #0
   829d8:	f47f a80c 	bne.w	819f4 <_svfprintf_r+0x230>
   829dc:	9c25      	ldr	r4, [sp, #148]	; 0x94
   829de:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   829e2:	ae38      	add	r6, sp, #224	; 0xe0
   829e4:	e5b0      	b.n	82548 <_svfprintf_r+0xd84>
   829e6:	bf00      	nop
   829e8:	00087944 	.word	0x00087944
   829ec:	000879e4 	.word	0x000879e4
   829f0:	4621      	mov	r1, r4
   829f2:	465c      	mov	r4, fp
   829f4:	3301      	adds	r3, #1
   829f6:	4421      	add	r1, r4
   829f8:	2b07      	cmp	r3, #7
   829fa:	912d      	str	r1, [sp, #180]	; 0xb4
   829fc:	932c      	str	r3, [sp, #176]	; 0xb0
   829fe:	6015      	str	r5, [r2, #0]
   82a00:	6054      	str	r4, [r2, #4]
   82a02:	dcab      	bgt.n	8295c <_svfprintf_r+0x1198>
   82a04:	3208      	adds	r2, #8
   82a06:	e7b4      	b.n	82972 <_svfprintf_r+0x11ae>
   82a08:	980d      	ldr	r0, [sp, #52]	; 0x34
   82a0a:	990c      	ldr	r1, [sp, #48]	; 0x30
   82a0c:	aa2b      	add	r2, sp, #172	; 0xac
   82a0e:	f003 fe27 	bl	86660 <__ssprint_r>
   82a12:	2800      	cmp	r0, #0
   82a14:	f47e afee 	bne.w	819f4 <_svfprintf_r+0x230>
   82a18:	9c25      	ldr	r4, [sp, #148]	; 0x94
   82a1a:	9911      	ldr	r1, [sp, #68]	; 0x44
   82a1c:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82a20:	1b0c      	subs	r4, r1, r4
   82a22:	ae38      	add	r6, sp, #224	; 0xe0
   82a24:	e5a5      	b.n	82572 <_svfprintf_r+0xdae>
   82a26:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82a28:	46ba      	mov	sl, r7
   82a2a:	2c06      	cmp	r4, #6
   82a2c:	bf28      	it	cs
   82a2e:	2406      	movcs	r4, #6
   82a30:	ea24 7ce4 	bic.w	ip, r4, r4, asr #31
   82a34:	970a      	str	r7, [sp, #40]	; 0x28
   82a36:	9714      	str	r7, [sp, #80]	; 0x50
   82a38:	9510      	str	r5, [sp, #64]	; 0x40
   82a3a:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   82a3e:	4f97      	ldr	r7, [pc, #604]	; (82c9c <_svfprintf_r+0x14d8>)
   82a40:	f7ff b857 	b.w	81af2 <_svfprintf_r+0x32e>
   82a44:	9d12      	ldr	r5, [sp, #72]	; 0x48
   82a46:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   82a4a:	9509      	str	r5, [sp, #36]	; 0x24
   82a4c:	2500      	movs	r5, #0
   82a4e:	930b      	str	r3, [sp, #44]	; 0x2c
   82a50:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   82a54:	950a      	str	r5, [sp, #40]	; 0x28
   82a56:	f7ff b84f 	b.w	81af8 <_svfprintf_r+0x334>
   82a5a:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   82a5e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   82a60:	f8dc 3000 	ldr.w	r3, [ip]
   82a64:	f10c 0c04 	add.w	ip, ip, #4
   82a68:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   82a6c:	601c      	str	r4, [r3, #0]
   82a6e:	f7fe becf 	b.w	81810 <_svfprintf_r+0x4c>
   82a72:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   82a76:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   82a7a:	f7ff ba99 	b.w	81fb0 <_svfprintf_r+0x7ec>
   82a7e:	9b25      	ldr	r3, [sp, #148]	; 0x94
   82a80:	1cdc      	adds	r4, r3, #3
   82a82:	db19      	blt.n	82ab8 <_svfprintf_r+0x12f4>
   82a84:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82a86:	429c      	cmp	r4, r3
   82a88:	db16      	blt.n	82ab8 <_svfprintf_r+0x12f4>
   82a8a:	9314      	str	r3, [sp, #80]	; 0x50
   82a8c:	e714      	b.n	828b8 <_svfprintf_r+0x10f4>
   82a8e:	4623      	mov	r3, r4
   82a90:	e702      	b.n	82898 <_svfprintf_r+0x10d4>
   82a92:	ea24 7ce4 	bic.w	ip, r4, r4, asr #31
   82a96:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   82a9a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82a9c:	9510      	str	r5, [sp, #64]	; 0x40
   82a9e:	900a      	str	r0, [sp, #40]	; 0x28
   82aa0:	9014      	str	r0, [sp, #80]	; 0x50
   82aa2:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   82aa6:	f7ff b824 	b.w	81af2 <_svfprintf_r+0x32e>
   82aaa:	783b      	ldrb	r3, [r7, #0]
   82aac:	2b30      	cmp	r3, #48	; 0x30
   82aae:	f000 80ad 	beq.w	82c0c <_svfprintf_r+0x1448>
   82ab2:	9d25      	ldr	r5, [sp, #148]	; 0x94
   82ab4:	442c      	add	r4, r5
   82ab6:	e6dc      	b.n	82872 <_svfprintf_r+0x10ae>
   82ab8:	f1a8 0802 	sub.w	r8, r8, #2
   82abc:	1e59      	subs	r1, r3, #1
   82abe:	2900      	cmp	r1, #0
   82ac0:	9125      	str	r1, [sp, #148]	; 0x94
   82ac2:	bfba      	itte	lt
   82ac4:	4249      	neglt	r1, r1
   82ac6:	232d      	movlt	r3, #45	; 0x2d
   82ac8:	232b      	movge	r3, #43	; 0x2b
   82aca:	2909      	cmp	r1, #9
   82acc:	f88d 809c 	strb.w	r8, [sp, #156]	; 0x9c
   82ad0:	f88d 309d 	strb.w	r3, [sp, #157]	; 0x9d
   82ad4:	dc65      	bgt.n	82ba2 <_svfprintf_r+0x13de>
   82ad6:	2330      	movs	r3, #48	; 0x30
   82ad8:	3130      	adds	r1, #48	; 0x30
   82ada:	f88d 309e 	strb.w	r3, [sp, #158]	; 0x9e
   82ade:	f88d 109f 	strb.w	r1, [sp, #159]	; 0x9f
   82ae2:	ab28      	add	r3, sp, #160	; 0xa0
   82ae4:	9d11      	ldr	r5, [sp, #68]	; 0x44
   82ae6:	aa27      	add	r2, sp, #156	; 0x9c
   82ae8:	9c11      	ldr	r4, [sp, #68]	; 0x44
   82aea:	1a9a      	subs	r2, r3, r2
   82aec:	2d01      	cmp	r5, #1
   82aee:	9219      	str	r2, [sp, #100]	; 0x64
   82af0:	4414      	add	r4, r2
   82af2:	f340 80b7 	ble.w	82c64 <_svfprintf_r+0x14a0>
   82af6:	3401      	adds	r4, #1
   82af8:	2500      	movs	r5, #0
   82afa:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   82afe:	9514      	str	r5, [sp, #80]	; 0x50
   82b00:	e6ea      	b.n	828d8 <_svfprintf_r+0x1114>
   82b02:	2400      	movs	r4, #0
   82b04:	4681      	mov	r9, r0
   82b06:	940a      	str	r4, [sp, #40]	; 0x28
   82b08:	f7fe beba 	b.w	81880 <_svfprintf_r+0xbc>
   82b0c:	980d      	ldr	r0, [sp, #52]	; 0x34
   82b0e:	990c      	ldr	r1, [sp, #48]	; 0x30
   82b10:	aa2b      	add	r2, sp, #172	; 0xac
   82b12:	f003 fda5 	bl	86660 <__ssprint_r>
   82b16:	2800      	cmp	r0, #0
   82b18:	f47e af6c 	bne.w	819f4 <_svfprintf_r+0x230>
   82b1c:	9c25      	ldr	r4, [sp, #148]	; 0x94
   82b1e:	992d      	ldr	r1, [sp, #180]	; 0xb4
   82b20:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82b22:	aa38      	add	r2, sp, #224	; 0xe0
   82b24:	e616      	b.n	82754 <_svfprintf_r+0xf90>
   82b26:	9c14      	ldr	r4, [sp, #80]	; 0x50
   82b28:	9d11      	ldr	r5, [sp, #68]	; 0x44
   82b2a:	2c00      	cmp	r4, #0
   82b2c:	bfd4      	ite	le
   82b2e:	f1c4 0402 	rsble	r4, r4, #2
   82b32:	2401      	movgt	r4, #1
   82b34:	442c      	add	r4, r5
   82b36:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   82b3a:	f04f 0867 	mov.w	r8, #103	; 0x67
   82b3e:	e6cb      	b.n	828d8 <_svfprintf_r+0x1114>
   82b40:	9917      	ldr	r1, [sp, #92]	; 0x5c
   82b42:	9816      	ldr	r0, [sp, #88]	; 0x58
   82b44:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
   82b48:	9020      	str	r0, [sp, #128]	; 0x80
   82b4a:	9121      	str	r1, [sp, #132]	; 0x84
   82b4c:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
   82b50:	e660      	b.n	82814 <_svfprintf_r+0x1050>
   82b52:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82b54:	2003      	movs	r0, #3
   82b56:	a925      	add	r1, sp, #148	; 0x94
   82b58:	aa26      	add	r2, sp, #152	; 0x98
   82b5a:	ab29      	add	r3, sp, #164	; 0xa4
   82b5c:	9501      	str	r5, [sp, #4]
   82b5e:	9000      	str	r0, [sp, #0]
   82b60:	9203      	str	r2, [sp, #12]
   82b62:	9304      	str	r3, [sp, #16]
   82b64:	9102      	str	r1, [sp, #8]
   82b66:	980d      	ldr	r0, [sp, #52]	; 0x34
   82b68:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
   82b6c:	f001 f8a0 	bl	83cb0 <_dtoa_r>
   82b70:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82b72:	4607      	mov	r7, r0
   82b74:	e677      	b.n	82866 <_svfprintf_r+0x10a2>
   82b76:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82b78:	2003      	movs	r0, #3
   82b7a:	a925      	add	r1, sp, #148	; 0x94
   82b7c:	aa26      	add	r2, sp, #152	; 0x98
   82b7e:	ab29      	add	r3, sp, #164	; 0xa4
   82b80:	9401      	str	r4, [sp, #4]
   82b82:	e7ec      	b.n	82b5e <_svfprintf_r+0x139a>
   82b84:	9d25      	ldr	r5, [sp, #148]	; 0x94
   82b86:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82b88:	2d00      	cmp	r5, #0
   82b8a:	9514      	str	r5, [sp, #80]	; 0x50
   82b8c:	dd63      	ble.n	82c56 <_svfprintf_r+0x1492>
   82b8e:	bbb4      	cbnz	r4, 82bfe <_svfprintf_r+0x143a>
   82b90:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82b92:	07e8      	lsls	r0, r5, #31
   82b94:	d433      	bmi.n	82bfe <_svfprintf_r+0x143a>
   82b96:	9c14      	ldr	r4, [sp, #80]	; 0x50
   82b98:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   82b9c:	e69c      	b.n	828d8 <_svfprintf_r+0x1114>
   82b9e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   82ba0:	e67a      	b.n	82898 <_svfprintf_r+0x10d4>
   82ba2:	f10d 02aa 	add.w	r2, sp, #170	; 0xaa
   82ba6:	4d3e      	ldr	r5, [pc, #248]	; (82ca0 <_svfprintf_r+0x14dc>)
   82ba8:	17cb      	asrs	r3, r1, #31
   82baa:	fb85 5001 	smull	r5, r0, r5, r1
   82bae:	ebc3 00a0 	rsb	r0, r3, r0, asr #2
   82bb2:	eb00 0380 	add.w	r3, r0, r0, lsl #2
   82bb6:	eba1 0143 	sub.w	r1, r1, r3, lsl #1
   82bba:	2809      	cmp	r0, #9
   82bbc:	4613      	mov	r3, r2
   82bbe:	f101 0230 	add.w	r2, r1, #48	; 0x30
   82bc2:	701a      	strb	r2, [r3, #0]
   82bc4:	4601      	mov	r1, r0
   82bc6:	f103 32ff 	add.w	r2, r3, #4294967295
   82bca:	dcec      	bgt.n	82ba6 <_svfprintf_r+0x13e2>
   82bcc:	f100 0130 	add.w	r1, r0, #48	; 0x30
   82bd0:	f10d 04ab 	add.w	r4, sp, #171	; 0xab
   82bd4:	b2c9      	uxtb	r1, r1
   82bd6:	4294      	cmp	r4, r2
   82bd8:	f803 1c01 	strb.w	r1, [r3, #-1]
   82bdc:	d95a      	bls.n	82c94 <_svfprintf_r+0x14d0>
   82bde:	f10d 009d 	add.w	r0, sp, #157	; 0x9d
   82be2:	461a      	mov	r2, r3
   82be4:	e001      	b.n	82bea <_svfprintf_r+0x1426>
   82be6:	f812 1b01 	ldrb.w	r1, [r2], #1
   82bea:	42a2      	cmp	r2, r4
   82bec:	f800 1f01 	strb.w	r1, [r0, #1]!
   82bf0:	d1f9      	bne.n	82be6 <_svfprintf_r+0x1422>
   82bf2:	f50d 7c90 	add.w	ip, sp, #288	; 0x120
   82bf6:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
   82bfa:	3bf6      	subs	r3, #246	; 0xf6
   82bfc:	e772      	b.n	82ae4 <_svfprintf_r+0x1320>
   82bfe:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82c00:	1c6c      	adds	r4, r5, #1
   82c02:	9d14      	ldr	r5, [sp, #80]	; 0x50
   82c04:	442c      	add	r4, r5
   82c06:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   82c0a:	e665      	b.n	828d8 <_svfprintf_r+0x1114>
   82c0c:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
   82c10:	2200      	movs	r2, #0
   82c12:	2300      	movs	r3, #0
   82c14:	f004 fb3a 	bl	8728c <__aeabi_dcmpeq>
   82c18:	2800      	cmp	r0, #0
   82c1a:	f47f af4a 	bne.w	82ab2 <_svfprintf_r+0x12ee>
   82c1e:	f1c5 0501 	rsb	r5, r5, #1
   82c22:	9525      	str	r5, [sp, #148]	; 0x94
   82c24:	442c      	add	r4, r5
   82c26:	e624      	b.n	82872 <_svfprintf_r+0x10ae>
   82c28:	9d14      	ldr	r5, [sp, #80]	; 0x50
   82c2a:	f04f 0867 	mov.w	r8, #103	; 0x67
   82c2e:	1c6c      	adds	r4, r5, #1
   82c30:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   82c34:	e650      	b.n	828d8 <_svfprintf_r+0x1114>
   82c36:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82c38:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   82c3c:	682d      	ldr	r5, [r5, #0]
   82c3e:	f10c 0304 	add.w	r3, ip, #4
   82c42:	2d00      	cmp	r5, #0
   82c44:	f899 8001 	ldrb.w	r8, [r9, #1]
   82c48:	950a      	str	r5, [sp, #40]	; 0x28
   82c4a:	9310      	str	r3, [sp, #64]	; 0x40
   82c4c:	4681      	mov	r9, r0
   82c4e:	f6be ae15 	bge.w	8187c <_svfprintf_r+0xb8>
   82c52:	f7fe be10 	b.w	81876 <_svfprintf_r+0xb2>
   82c56:	b97c      	cbnz	r4, 82c78 <_svfprintf_r+0x14b4>
   82c58:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82c5a:	07e9      	lsls	r1, r5, #31
   82c5c:	d40c      	bmi.n	82c78 <_svfprintf_r+0x14b4>
   82c5e:	2301      	movs	r3, #1
   82c60:	461c      	mov	r4, r3
   82c62:	e639      	b.n	828d8 <_svfprintf_r+0x1114>
   82c64:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82c68:	f01c 0301 	ands.w	r3, ip, #1
   82c6c:	f47f af43 	bne.w	82af6 <_svfprintf_r+0x1332>
   82c70:	9314      	str	r3, [sp, #80]	; 0x50
   82c72:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   82c76:	e62f      	b.n	828d8 <_svfprintf_r+0x1114>
   82c78:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82c7a:	1cac      	adds	r4, r5, #2
   82c7c:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   82c80:	e62a      	b.n	828d8 <_svfprintf_r+0x1114>
   82c82:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   82c84:	230c      	movs	r3, #12
   82c86:	602b      	str	r3, [r5, #0]
   82c88:	f04f 30ff 	mov.w	r0, #4294967295
   82c8c:	f7fe beba 	b.w	81a04 <_svfprintf_r+0x240>
   82c90:	9b25      	ldr	r3, [sp, #148]	; 0x94
   82c92:	e713      	b.n	82abc <_svfprintf_r+0x12f8>
   82c94:	f10d 039e 	add.w	r3, sp, #158	; 0x9e
   82c98:	e724      	b.n	82ae4 <_svfprintf_r+0x1320>
   82c9a:	bf00      	nop
   82c9c:	00087a2c 	.word	0x00087a2c
   82ca0:	66666667 	.word	0x66666667

00082ca4 <__sprint_r.part.0>:
   82ca4:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   82ca6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   82caa:	049c      	lsls	r4, r3, #18
   82cac:	460e      	mov	r6, r1
   82cae:	4680      	mov	r8, r0
   82cb0:	4691      	mov	r9, r2
   82cb2:	d52a      	bpl.n	82d0a <__sprint_r.part.0+0x66>
   82cb4:	6893      	ldr	r3, [r2, #8]
   82cb6:	6812      	ldr	r2, [r2, #0]
   82cb8:	f102 0a08 	add.w	sl, r2, #8
   82cbc:	b31b      	cbz	r3, 82d06 <__sprint_r.part.0+0x62>
   82cbe:	e91a 00a0 	ldmdb	sl, {r5, r7}
   82cc2:	08bf      	lsrs	r7, r7, #2
   82cc4:	d017      	beq.n	82cf6 <__sprint_r.part.0+0x52>
   82cc6:	3d04      	subs	r5, #4
   82cc8:	2400      	movs	r4, #0
   82cca:	e001      	b.n	82cd0 <__sprint_r.part.0+0x2c>
   82ccc:	42a7      	cmp	r7, r4
   82cce:	d010      	beq.n	82cf2 <__sprint_r.part.0+0x4e>
   82cd0:	4640      	mov	r0, r8
   82cd2:	f855 1f04 	ldr.w	r1, [r5, #4]!
   82cd6:	4632      	mov	r2, r6
   82cd8:	f002 f85c 	bl	84d94 <_fputwc_r>
   82cdc:	1c43      	adds	r3, r0, #1
   82cde:	f104 0401 	add.w	r4, r4, #1
   82ce2:	d1f3      	bne.n	82ccc <__sprint_r.part.0+0x28>
   82ce4:	2300      	movs	r3, #0
   82ce6:	f8c9 3008 	str.w	r3, [r9, #8]
   82cea:	f8c9 3004 	str.w	r3, [r9, #4]
   82cee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   82cf2:	f8d9 3008 	ldr.w	r3, [r9, #8]
   82cf6:	eba3 0387 	sub.w	r3, r3, r7, lsl #2
   82cfa:	f8c9 3008 	str.w	r3, [r9, #8]
   82cfe:	f10a 0a08 	add.w	sl, sl, #8
   82d02:	2b00      	cmp	r3, #0
   82d04:	d1db      	bne.n	82cbe <__sprint_r.part.0+0x1a>
   82d06:	2000      	movs	r0, #0
   82d08:	e7ec      	b.n	82ce4 <__sprint_r.part.0+0x40>
   82d0a:	f002 f9bd 	bl	85088 <__sfvwrite_r>
   82d0e:	2300      	movs	r3, #0
   82d10:	f8c9 3008 	str.w	r3, [r9, #8]
   82d14:	f8c9 3004 	str.w	r3, [r9, #4]
   82d18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00082d1c <_vfiprintf_r>:
   82d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82d20:	b0b1      	sub	sp, #196	; 0xc4
   82d22:	461c      	mov	r4, r3
   82d24:	9102      	str	r1, [sp, #8]
   82d26:	4690      	mov	r8, r2
   82d28:	9308      	str	r3, [sp, #32]
   82d2a:	9006      	str	r0, [sp, #24]
   82d2c:	b118      	cbz	r0, 82d36 <_vfiprintf_r+0x1a>
   82d2e:	6b83      	ldr	r3, [r0, #56]	; 0x38
   82d30:	2b00      	cmp	r3, #0
   82d32:	f000 80e8 	beq.w	82f06 <_vfiprintf_r+0x1ea>
   82d36:	9d02      	ldr	r5, [sp, #8]
   82d38:	89ab      	ldrh	r3, [r5, #12]
   82d3a:	b29a      	uxth	r2, r3
   82d3c:	0490      	lsls	r0, r2, #18
   82d3e:	d407      	bmi.n	82d50 <_vfiprintf_r+0x34>
   82d40:	6e6a      	ldr	r2, [r5, #100]	; 0x64
   82d42:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   82d46:	f422 5100 	bic.w	r1, r2, #8192	; 0x2000
   82d4a:	81ab      	strh	r3, [r5, #12]
   82d4c:	b29a      	uxth	r2, r3
   82d4e:	6669      	str	r1, [r5, #100]	; 0x64
   82d50:	0711      	lsls	r1, r2, #28
   82d52:	f140 80b7 	bpl.w	82ec4 <_vfiprintf_r+0x1a8>
   82d56:	f8dd b008 	ldr.w	fp, [sp, #8]
   82d5a:	f8db 3010 	ldr.w	r3, [fp, #16]
   82d5e:	2b00      	cmp	r3, #0
   82d60:	f000 80b0 	beq.w	82ec4 <_vfiprintf_r+0x1a8>
   82d64:	f002 021a 	and.w	r2, r2, #26
   82d68:	2a0a      	cmp	r2, #10
   82d6a:	f000 80b7 	beq.w	82edc <_vfiprintf_r+0x1c0>
   82d6e:	2300      	movs	r3, #0
   82d70:	f10d 0980 	add.w	r9, sp, #128	; 0x80
   82d74:	930a      	str	r3, [sp, #40]	; 0x28
   82d76:	9315      	str	r3, [sp, #84]	; 0x54
   82d78:	9314      	str	r3, [sp, #80]	; 0x50
   82d7a:	9309      	str	r3, [sp, #36]	; 0x24
   82d7c:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
   82d80:	464e      	mov	r6, r9
   82d82:	f898 3000 	ldrb.w	r3, [r8]
   82d86:	2b00      	cmp	r3, #0
   82d88:	f000 84c8 	beq.w	8371c <_vfiprintf_r+0xa00>
   82d8c:	2b25      	cmp	r3, #37	; 0x25
   82d8e:	f000 84c5 	beq.w	8371c <_vfiprintf_r+0xa00>
   82d92:	f108 0201 	add.w	r2, r8, #1
   82d96:	e001      	b.n	82d9c <_vfiprintf_r+0x80>
   82d98:	2b25      	cmp	r3, #37	; 0x25
   82d9a:	d004      	beq.n	82da6 <_vfiprintf_r+0x8a>
   82d9c:	7813      	ldrb	r3, [r2, #0]
   82d9e:	4614      	mov	r4, r2
   82da0:	3201      	adds	r2, #1
   82da2:	2b00      	cmp	r3, #0
   82da4:	d1f8      	bne.n	82d98 <_vfiprintf_r+0x7c>
   82da6:	ebc8 0504 	rsb	r5, r8, r4
   82daa:	b195      	cbz	r5, 82dd2 <_vfiprintf_r+0xb6>
   82dac:	9b14      	ldr	r3, [sp, #80]	; 0x50
   82dae:	9a15      	ldr	r2, [sp, #84]	; 0x54
   82db0:	3301      	adds	r3, #1
   82db2:	442a      	add	r2, r5
   82db4:	2b07      	cmp	r3, #7
   82db6:	f8c6 8000 	str.w	r8, [r6]
   82dba:	6075      	str	r5, [r6, #4]
   82dbc:	9215      	str	r2, [sp, #84]	; 0x54
   82dbe:	9314      	str	r3, [sp, #80]	; 0x50
   82dc0:	dd7b      	ble.n	82eba <_vfiprintf_r+0x19e>
   82dc2:	2a00      	cmp	r2, #0
   82dc4:	f040 84d5 	bne.w	83772 <_vfiprintf_r+0xa56>
   82dc8:	9809      	ldr	r0, [sp, #36]	; 0x24
   82dca:	9214      	str	r2, [sp, #80]	; 0x50
   82dcc:	4428      	add	r0, r5
   82dce:	464e      	mov	r6, r9
   82dd0:	9009      	str	r0, [sp, #36]	; 0x24
   82dd2:	7823      	ldrb	r3, [r4, #0]
   82dd4:	2b00      	cmp	r3, #0
   82dd6:	f000 83ed 	beq.w	835b4 <_vfiprintf_r+0x898>
   82dda:	2100      	movs	r1, #0
   82ddc:	f04f 0200 	mov.w	r2, #0
   82de0:	f04f 3cff 	mov.w	ip, #4294967295
   82de4:	7863      	ldrb	r3, [r4, #1]
   82de6:	f88d 2047 	strb.w	r2, [sp, #71]	; 0x47
   82dea:	9104      	str	r1, [sp, #16]
   82dec:	468a      	mov	sl, r1
   82dee:	f104 0801 	add.w	r8, r4, #1
   82df2:	4608      	mov	r0, r1
   82df4:	4665      	mov	r5, ip
   82df6:	f108 0801 	add.w	r8, r8, #1
   82dfa:	f1a3 0220 	sub.w	r2, r3, #32
   82dfe:	2a58      	cmp	r2, #88	; 0x58
   82e00:	f200 82d9 	bhi.w	833b6 <_vfiprintf_r+0x69a>
   82e04:	e8df f012 	tbh	[pc, r2, lsl #1]
   82e08:	02d702cb 	.word	0x02d702cb
   82e0c:	02d202d7 	.word	0x02d202d7
   82e10:	02d702d7 	.word	0x02d702d7
   82e14:	02d702d7 	.word	0x02d702d7
   82e18:	02d702d7 	.word	0x02d702d7
   82e1c:	028f0282 	.word	0x028f0282
   82e20:	008402d7 	.word	0x008402d7
   82e24:	02d70293 	.word	0x02d70293
   82e28:	0196012b 	.word	0x0196012b
   82e2c:	01960196 	.word	0x01960196
   82e30:	01960196 	.word	0x01960196
   82e34:	01960196 	.word	0x01960196
   82e38:	01960196 	.word	0x01960196
   82e3c:	02d702d7 	.word	0x02d702d7
   82e40:	02d702d7 	.word	0x02d702d7
   82e44:	02d702d7 	.word	0x02d702d7
   82e48:	02d702d7 	.word	0x02d702d7
   82e4c:	02d702d7 	.word	0x02d702d7
   82e50:	02d70130 	.word	0x02d70130
   82e54:	02d702d7 	.word	0x02d702d7
   82e58:	02d702d7 	.word	0x02d702d7
   82e5c:	02d702d7 	.word	0x02d702d7
   82e60:	02d702d7 	.word	0x02d702d7
   82e64:	017b02d7 	.word	0x017b02d7
   82e68:	02d702d7 	.word	0x02d702d7
   82e6c:	02d702d7 	.word	0x02d702d7
   82e70:	01a402d7 	.word	0x01a402d7
   82e74:	02d702d7 	.word	0x02d702d7
   82e78:	02d701bf 	.word	0x02d701bf
   82e7c:	02d702d7 	.word	0x02d702d7
   82e80:	02d702d7 	.word	0x02d702d7
   82e84:	02d702d7 	.word	0x02d702d7
   82e88:	02d702d7 	.word	0x02d702d7
   82e8c:	01e402d7 	.word	0x01e402d7
   82e90:	02d701fa 	.word	0x02d701fa
   82e94:	02d702d7 	.word	0x02d702d7
   82e98:	01fa0216 	.word	0x01fa0216
   82e9c:	02d702d7 	.word	0x02d702d7
   82ea0:	02d7021b 	.word	0x02d7021b
   82ea4:	00890228 	.word	0x00890228
   82ea8:	027d0266 	.word	0x027d0266
   82eac:	023a02d7 	.word	0x023a02d7
   82eb0:	011902d7 	.word	0x011902d7
   82eb4:	02d702d7 	.word	0x02d702d7
   82eb8:	02af      	.short	0x02af
   82eba:	3608      	adds	r6, #8
   82ebc:	9809      	ldr	r0, [sp, #36]	; 0x24
   82ebe:	4428      	add	r0, r5
   82ec0:	9009      	str	r0, [sp, #36]	; 0x24
   82ec2:	e786      	b.n	82dd2 <_vfiprintf_r+0xb6>
   82ec4:	9806      	ldr	r0, [sp, #24]
   82ec6:	9902      	ldr	r1, [sp, #8]
   82ec8:	f000 fde4 	bl	83a94 <__swsetup_r>
   82ecc:	b9b0      	cbnz	r0, 82efc <_vfiprintf_r+0x1e0>
   82ece:	9d02      	ldr	r5, [sp, #8]
   82ed0:	89aa      	ldrh	r2, [r5, #12]
   82ed2:	f002 021a 	and.w	r2, r2, #26
   82ed6:	2a0a      	cmp	r2, #10
   82ed8:	f47f af49 	bne.w	82d6e <_vfiprintf_r+0x52>
   82edc:	f8dd b008 	ldr.w	fp, [sp, #8]
   82ee0:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
   82ee4:	2b00      	cmp	r3, #0
   82ee6:	f6ff af42 	blt.w	82d6e <_vfiprintf_r+0x52>
   82eea:	9806      	ldr	r0, [sp, #24]
   82eec:	4659      	mov	r1, fp
   82eee:	4642      	mov	r2, r8
   82ef0:	4623      	mov	r3, r4
   82ef2:	f000 fd3d 	bl	83970 <__sbprintf>
   82ef6:	b031      	add	sp, #196	; 0xc4
   82ef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82efc:	f04f 30ff 	mov.w	r0, #4294967295
   82f00:	b031      	add	sp, #196	; 0xc4
   82f02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82f06:	f001 feaf 	bl	84c68 <__sinit>
   82f0a:	e714      	b.n	82d36 <_vfiprintf_r+0x1a>
   82f0c:	4240      	negs	r0, r0
   82f0e:	9308      	str	r3, [sp, #32]
   82f10:	f04a 0a04 	orr.w	sl, sl, #4
   82f14:	f898 3000 	ldrb.w	r3, [r8]
   82f18:	e76d      	b.n	82df6 <_vfiprintf_r+0xda>
   82f1a:	f01a 0320 	ands.w	r3, sl, #32
   82f1e:	9004      	str	r0, [sp, #16]
   82f20:	46ac      	mov	ip, r5
   82f22:	f000 80f4 	beq.w	8310e <_vfiprintf_r+0x3f2>
   82f26:	f8dd b020 	ldr.w	fp, [sp, #32]
   82f2a:	f10b 0307 	add.w	r3, fp, #7
   82f2e:	f023 0307 	bic.w	r3, r3, #7
   82f32:	f103 0408 	add.w	r4, r3, #8
   82f36:	9408      	str	r4, [sp, #32]
   82f38:	e9d3 4500 	ldrd	r4, r5, [r3]
   82f3c:	2300      	movs	r3, #0
   82f3e:	f04f 0000 	mov.w	r0, #0
   82f42:	2100      	movs	r1, #0
   82f44:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
   82f48:	f8cd c014 	str.w	ip, [sp, #20]
   82f4c:	9107      	str	r1, [sp, #28]
   82f4e:	f1bc 0f00 	cmp.w	ip, #0
   82f52:	bfa8      	it	ge
   82f54:	f02a 0a80 	bicge.w	sl, sl, #128	; 0x80
   82f58:	ea54 0205 	orrs.w	r2, r4, r5
   82f5c:	f040 80ad 	bne.w	830ba <_vfiprintf_r+0x39e>
   82f60:	f1bc 0f00 	cmp.w	ip, #0
   82f64:	f040 80a9 	bne.w	830ba <_vfiprintf_r+0x39e>
   82f68:	2b00      	cmp	r3, #0
   82f6a:	f040 83c0 	bne.w	836ee <_vfiprintf_r+0x9d2>
   82f6e:	f01a 0f01 	tst.w	sl, #1
   82f72:	f000 83bc 	beq.w	836ee <_vfiprintf_r+0x9d2>
   82f76:	2330      	movs	r3, #48	; 0x30
   82f78:	af30      	add	r7, sp, #192	; 0xc0
   82f7a:	f807 3d41 	strb.w	r3, [r7, #-65]!
   82f7e:	ebc7 0409 	rsb	r4, r7, r9
   82f82:	9405      	str	r4, [sp, #20]
   82f84:	f8dd b014 	ldr.w	fp, [sp, #20]
   82f88:	9c07      	ldr	r4, [sp, #28]
   82f8a:	45e3      	cmp	fp, ip
   82f8c:	bfb8      	it	lt
   82f8e:	46e3      	movlt	fp, ip
   82f90:	f8cd b00c 	str.w	fp, [sp, #12]
   82f94:	b11c      	cbz	r4, 82f9e <_vfiprintf_r+0x282>
   82f96:	f10b 0b01 	add.w	fp, fp, #1
   82f9a:	f8cd b00c 	str.w	fp, [sp, #12]
   82f9e:	f01a 0502 	ands.w	r5, sl, #2
   82fa2:	9507      	str	r5, [sp, #28]
   82fa4:	d005      	beq.n	82fb2 <_vfiprintf_r+0x296>
   82fa6:	f8dd b00c 	ldr.w	fp, [sp, #12]
   82faa:	f10b 0b02 	add.w	fp, fp, #2
   82fae:	f8cd b00c 	str.w	fp, [sp, #12]
   82fb2:	f01a 0384 	ands.w	r3, sl, #132	; 0x84
   82fb6:	930b      	str	r3, [sp, #44]	; 0x2c
   82fb8:	f040 821b 	bne.w	833f2 <_vfiprintf_r+0x6d6>
   82fbc:	9d04      	ldr	r5, [sp, #16]
   82fbe:	f8dd b00c 	ldr.w	fp, [sp, #12]
   82fc2:	ebcb 0405 	rsb	r4, fp, r5
   82fc6:	2c00      	cmp	r4, #0
   82fc8:	f340 8213 	ble.w	833f2 <_vfiprintf_r+0x6d6>
   82fcc:	2c10      	cmp	r4, #16
   82fce:	f340 8489 	ble.w	838e4 <_vfiprintf_r+0xbc8>
   82fd2:	4dbe      	ldr	r5, [pc, #760]	; (832cc <_vfiprintf_r+0x5b0>)
   82fd4:	9a15      	ldr	r2, [sp, #84]	; 0x54
   82fd6:	462b      	mov	r3, r5
   82fd8:	9814      	ldr	r0, [sp, #80]	; 0x50
   82fda:	4625      	mov	r5, r4
   82fdc:	f04f 0b10 	mov.w	fp, #16
   82fe0:	4664      	mov	r4, ip
   82fe2:	46b4      	mov	ip, r6
   82fe4:	461e      	mov	r6, r3
   82fe6:	e006      	b.n	82ff6 <_vfiprintf_r+0x2da>
   82fe8:	1c83      	adds	r3, r0, #2
   82fea:	f10c 0c08 	add.w	ip, ip, #8
   82fee:	4608      	mov	r0, r1
   82ff0:	3d10      	subs	r5, #16
   82ff2:	2d10      	cmp	r5, #16
   82ff4:	dd11      	ble.n	8301a <_vfiprintf_r+0x2fe>
   82ff6:	1c41      	adds	r1, r0, #1
   82ff8:	3210      	adds	r2, #16
   82ffa:	2907      	cmp	r1, #7
   82ffc:	9215      	str	r2, [sp, #84]	; 0x54
   82ffe:	e88c 0840 	stmia.w	ip, {r6, fp}
   83002:	9114      	str	r1, [sp, #80]	; 0x50
   83004:	ddf0      	ble.n	82fe8 <_vfiprintf_r+0x2cc>
   83006:	2a00      	cmp	r2, #0
   83008:	f040 81e6 	bne.w	833d8 <_vfiprintf_r+0x6bc>
   8300c:	3d10      	subs	r5, #16
   8300e:	2d10      	cmp	r5, #16
   83010:	f04f 0301 	mov.w	r3, #1
   83014:	4610      	mov	r0, r2
   83016:	46cc      	mov	ip, r9
   83018:	dced      	bgt.n	82ff6 <_vfiprintf_r+0x2da>
   8301a:	4631      	mov	r1, r6
   8301c:	4666      	mov	r6, ip
   8301e:	46a4      	mov	ip, r4
   83020:	462c      	mov	r4, r5
   83022:	460d      	mov	r5, r1
   83024:	4422      	add	r2, r4
   83026:	2b07      	cmp	r3, #7
   83028:	9215      	str	r2, [sp, #84]	; 0x54
   8302a:	6035      	str	r5, [r6, #0]
   8302c:	6074      	str	r4, [r6, #4]
   8302e:	9314      	str	r3, [sp, #80]	; 0x50
   83030:	f300 836d 	bgt.w	8370e <_vfiprintf_r+0x9f2>
   83034:	3608      	adds	r6, #8
   83036:	1c59      	adds	r1, r3, #1
   83038:	e1de      	b.n	833f8 <_vfiprintf_r+0x6dc>
   8303a:	f01a 0f20 	tst.w	sl, #32
   8303e:	9004      	str	r0, [sp, #16]
   83040:	46ac      	mov	ip, r5
   83042:	f000 808d 	beq.w	83160 <_vfiprintf_r+0x444>
   83046:	9d08      	ldr	r5, [sp, #32]
   83048:	1deb      	adds	r3, r5, #7
   8304a:	f023 0307 	bic.w	r3, r3, #7
   8304e:	f103 0b08 	add.w	fp, r3, #8
   83052:	e9d3 4500 	ldrd	r4, r5, [r3]
   83056:	f8cd b020 	str.w	fp, [sp, #32]
   8305a:	2301      	movs	r3, #1
   8305c:	e76f      	b.n	82f3e <_vfiprintf_r+0x222>
   8305e:	f04a 0a80 	orr.w	sl, sl, #128	; 0x80
   83062:	f898 3000 	ldrb.w	r3, [r8]
   83066:	e6c6      	b.n	82df6 <_vfiprintf_r+0xda>
   83068:	f04a 0a10 	orr.w	sl, sl, #16
   8306c:	f01a 0f20 	tst.w	sl, #32
   83070:	9004      	str	r0, [sp, #16]
   83072:	46ac      	mov	ip, r5
   83074:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   83078:	f000 80c8 	beq.w	8320c <_vfiprintf_r+0x4f0>
   8307c:	9c08      	ldr	r4, [sp, #32]
   8307e:	1de1      	adds	r1, r4, #7
   83080:	f021 0107 	bic.w	r1, r1, #7
   83084:	e9d1 2300 	ldrd	r2, r3, [r1]
   83088:	3108      	adds	r1, #8
   8308a:	9108      	str	r1, [sp, #32]
   8308c:	4614      	mov	r4, r2
   8308e:	461d      	mov	r5, r3
   83090:	2a00      	cmp	r2, #0
   83092:	f173 0b00 	sbcs.w	fp, r3, #0
   83096:	f2c0 83ce 	blt.w	83836 <_vfiprintf_r+0xb1a>
   8309a:	f1bc 0f00 	cmp.w	ip, #0
   8309e:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
   830a2:	bfa8      	it	ge
   830a4:	f02a 0a80 	bicge.w	sl, sl, #128	; 0x80
   830a8:	ea54 0205 	orrs.w	r2, r4, r5
   830ac:	9007      	str	r0, [sp, #28]
   830ae:	f8cd c014 	str.w	ip, [sp, #20]
   830b2:	f04f 0301 	mov.w	r3, #1
   830b6:	f43f af53 	beq.w	82f60 <_vfiprintf_r+0x244>
   830ba:	2b01      	cmp	r3, #1
   830bc:	f000 8319 	beq.w	836f2 <_vfiprintf_r+0x9d6>
   830c0:	2b02      	cmp	r3, #2
   830c2:	f10d 037f 	add.w	r3, sp, #127	; 0x7f
   830c6:	f040 824c 	bne.w	83562 <_vfiprintf_r+0x846>
   830ca:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
   830ce:	4619      	mov	r1, r3
   830d0:	f004 000f 	and.w	r0, r4, #15
   830d4:	0922      	lsrs	r2, r4, #4
   830d6:	f81b 0000 	ldrb.w	r0, [fp, r0]
   830da:	ea42 7205 	orr.w	r2, r2, r5, lsl #28
   830de:	092b      	lsrs	r3, r5, #4
   830e0:	7008      	strb	r0, [r1, #0]
   830e2:	ea52 0003 	orrs.w	r0, r2, r3
   830e6:	460f      	mov	r7, r1
   830e8:	4614      	mov	r4, r2
   830ea:	461d      	mov	r5, r3
   830ec:	f101 31ff 	add.w	r1, r1, #4294967295
   830f0:	d1ee      	bne.n	830d0 <_vfiprintf_r+0x3b4>
   830f2:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
   830f6:	ebc7 0309 	rsb	r3, r7, r9
   830fa:	9305      	str	r3, [sp, #20]
   830fc:	e742      	b.n	82f84 <_vfiprintf_r+0x268>
   830fe:	f04a 0a10 	orr.w	sl, sl, #16
   83102:	f01a 0320 	ands.w	r3, sl, #32
   83106:	9004      	str	r0, [sp, #16]
   83108:	46ac      	mov	ip, r5
   8310a:	f47f af0c 	bne.w	82f26 <_vfiprintf_r+0x20a>
   8310e:	f01a 0210 	ands.w	r2, sl, #16
   83112:	f040 8311 	bne.w	83738 <_vfiprintf_r+0xa1c>
   83116:	f01a 0340 	ands.w	r3, sl, #64	; 0x40
   8311a:	f000 830d 	beq.w	83738 <_vfiprintf_r+0xa1c>
   8311e:	f8dd b020 	ldr.w	fp, [sp, #32]
   83122:	4613      	mov	r3, r2
   83124:	f8bb 4000 	ldrh.w	r4, [fp]
   83128:	f10b 0b04 	add.w	fp, fp, #4
   8312c:	2500      	movs	r5, #0
   8312e:	f8cd b020 	str.w	fp, [sp, #32]
   83132:	e704      	b.n	82f3e <_vfiprintf_r+0x222>
   83134:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   83138:	2000      	movs	r0, #0
   8313a:	f818 3b01 	ldrb.w	r3, [r8], #1
   8313e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   83142:	eb02 0040 	add.w	r0, r2, r0, lsl #1
   83146:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   8314a:	2a09      	cmp	r2, #9
   8314c:	d9f5      	bls.n	8313a <_vfiprintf_r+0x41e>
   8314e:	e654      	b.n	82dfa <_vfiprintf_r+0xde>
   83150:	f04a 0a10 	orr.w	sl, sl, #16
   83154:	f01a 0f20 	tst.w	sl, #32
   83158:	9004      	str	r0, [sp, #16]
   8315a:	46ac      	mov	ip, r5
   8315c:	f47f af73 	bne.w	83046 <_vfiprintf_r+0x32a>
   83160:	f01a 0f10 	tst.w	sl, #16
   83164:	f040 82ef 	bne.w	83746 <_vfiprintf_r+0xa2a>
   83168:	f01a 0f40 	tst.w	sl, #64	; 0x40
   8316c:	f000 82eb 	beq.w	83746 <_vfiprintf_r+0xa2a>
   83170:	f8dd b020 	ldr.w	fp, [sp, #32]
   83174:	2500      	movs	r5, #0
   83176:	f8bb 4000 	ldrh.w	r4, [fp]
   8317a:	f10b 0b04 	add.w	fp, fp, #4
   8317e:	2301      	movs	r3, #1
   83180:	f8cd b020 	str.w	fp, [sp, #32]
   83184:	e6db      	b.n	82f3e <_vfiprintf_r+0x222>
   83186:	46ac      	mov	ip, r5
   83188:	4d51      	ldr	r5, [pc, #324]	; (832d0 <_vfiprintf_r+0x5b4>)
   8318a:	f01a 0f20 	tst.w	sl, #32
   8318e:	9004      	str	r0, [sp, #16]
   83190:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   83194:	950a      	str	r5, [sp, #40]	; 0x28
   83196:	f000 80f0 	beq.w	8337a <_vfiprintf_r+0x65e>
   8319a:	9d08      	ldr	r5, [sp, #32]
   8319c:	1dea      	adds	r2, r5, #7
   8319e:	f022 0207 	bic.w	r2, r2, #7
   831a2:	f102 0b08 	add.w	fp, r2, #8
   831a6:	f8cd b020 	str.w	fp, [sp, #32]
   831aa:	e9d2 4500 	ldrd	r4, r5, [r2]
   831ae:	f01a 0f01 	tst.w	sl, #1
   831b2:	f000 82aa 	beq.w	8370a <_vfiprintf_r+0x9ee>
   831b6:	ea54 0b05 	orrs.w	fp, r4, r5
   831ba:	f000 82a6 	beq.w	8370a <_vfiprintf_r+0x9ee>
   831be:	2230      	movs	r2, #48	; 0x30
   831c0:	f88d 3049 	strb.w	r3, [sp, #73]	; 0x49
   831c4:	f04a 0a02 	orr.w	sl, sl, #2
   831c8:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   831cc:	2302      	movs	r3, #2
   831ce:	e6b6      	b.n	82f3e <_vfiprintf_r+0x222>
   831d0:	9b08      	ldr	r3, [sp, #32]
   831d2:	f8dd b020 	ldr.w	fp, [sp, #32]
   831d6:	681b      	ldr	r3, [r3, #0]
   831d8:	2401      	movs	r4, #1
   831da:	f04f 0500 	mov.w	r5, #0
   831de:	f10b 0b04 	add.w	fp, fp, #4
   831e2:	9004      	str	r0, [sp, #16]
   831e4:	9403      	str	r4, [sp, #12]
   831e6:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
   831ea:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
   831ee:	f8cd b020 	str.w	fp, [sp, #32]
   831f2:	9405      	str	r4, [sp, #20]
   831f4:	af16      	add	r7, sp, #88	; 0x58
   831f6:	f04f 0c00 	mov.w	ip, #0
   831fa:	e6d0      	b.n	82f9e <_vfiprintf_r+0x282>
   831fc:	f01a 0f20 	tst.w	sl, #32
   83200:	9004      	str	r0, [sp, #16]
   83202:	46ac      	mov	ip, r5
   83204:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   83208:	f47f af38 	bne.w	8307c <_vfiprintf_r+0x360>
   8320c:	f01a 0f10 	tst.w	sl, #16
   83210:	f040 82a7 	bne.w	83762 <_vfiprintf_r+0xa46>
   83214:	f01a 0f40 	tst.w	sl, #64	; 0x40
   83218:	f000 82a3 	beq.w	83762 <_vfiprintf_r+0xa46>
   8321c:	f8dd b020 	ldr.w	fp, [sp, #32]
   83220:	f9bb 4000 	ldrsh.w	r4, [fp]
   83224:	f10b 0b04 	add.w	fp, fp, #4
   83228:	17e5      	asrs	r5, r4, #31
   8322a:	4622      	mov	r2, r4
   8322c:	462b      	mov	r3, r5
   8322e:	f8cd b020 	str.w	fp, [sp, #32]
   83232:	e72d      	b.n	83090 <_vfiprintf_r+0x374>
   83234:	f04a 0a40 	orr.w	sl, sl, #64	; 0x40
   83238:	f898 3000 	ldrb.w	r3, [r8]
   8323c:	e5db      	b.n	82df6 <_vfiprintf_r+0xda>
   8323e:	f898 3000 	ldrb.w	r3, [r8]
   83242:	4642      	mov	r2, r8
   83244:	2b6c      	cmp	r3, #108	; 0x6c
   83246:	bf03      	ittte	eq
   83248:	f108 0801 	addeq.w	r8, r8, #1
   8324c:	f04a 0a20 	orreq.w	sl, sl, #32
   83250:	7853      	ldrbeq	r3, [r2, #1]
   83252:	f04a 0a10 	orrne.w	sl, sl, #16
   83256:	e5ce      	b.n	82df6 <_vfiprintf_r+0xda>
   83258:	f01a 0f20 	tst.w	sl, #32
   8325c:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   83260:	f000 82f7 	beq.w	83852 <_vfiprintf_r+0xb36>
   83264:	9c08      	ldr	r4, [sp, #32]
   83266:	6821      	ldr	r1, [r4, #0]
   83268:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8326a:	17e5      	asrs	r5, r4, #31
   8326c:	462b      	mov	r3, r5
   8326e:	9d08      	ldr	r5, [sp, #32]
   83270:	4622      	mov	r2, r4
   83272:	3504      	adds	r5, #4
   83274:	9508      	str	r5, [sp, #32]
   83276:	e9c1 2300 	strd	r2, r3, [r1]
   8327a:	e582      	b.n	82d82 <_vfiprintf_r+0x66>
   8327c:	9c08      	ldr	r4, [sp, #32]
   8327e:	46ac      	mov	ip, r5
   83280:	6827      	ldr	r7, [r4, #0]
   83282:	f04f 0500 	mov.w	r5, #0
   83286:	9004      	str	r0, [sp, #16]
   83288:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
   8328c:	3404      	adds	r4, #4
   8328e:	2f00      	cmp	r7, #0
   83290:	f000 8332 	beq.w	838f8 <_vfiprintf_r+0xbdc>
   83294:	f1bc 0f00 	cmp.w	ip, #0
   83298:	4638      	mov	r0, r7
   8329a:	f2c0 8307 	blt.w	838ac <_vfiprintf_r+0xb90>
   8329e:	4662      	mov	r2, ip
   832a0:	2100      	movs	r1, #0
   832a2:	f8cd c004 	str.w	ip, [sp, #4]
   832a6:	f002 fbc1 	bl	85a2c <memchr>
   832aa:	f8dd c004 	ldr.w	ip, [sp, #4]
   832ae:	2800      	cmp	r0, #0
   832b0:	f000 833a 	beq.w	83928 <_vfiprintf_r+0xc0c>
   832b4:	1bc0      	subs	r0, r0, r7
   832b6:	f89d 5047 	ldrb.w	r5, [sp, #71]	; 0x47
   832ba:	4560      	cmp	r0, ip
   832bc:	bfa8      	it	ge
   832be:	4660      	movge	r0, ip
   832c0:	9005      	str	r0, [sp, #20]
   832c2:	9408      	str	r4, [sp, #32]
   832c4:	9507      	str	r5, [sp, #28]
   832c6:	f04f 0c00 	mov.w	ip, #0
   832ca:	e65b      	b.n	82f84 <_vfiprintf_r+0x268>
   832cc:	00087a54 	.word	0x00087a54
   832d0:	00087a04 	.word	0x00087a04
   832d4:	9b08      	ldr	r3, [sp, #32]
   832d6:	f8dd b020 	ldr.w	fp, [sp, #32]
   832da:	9004      	str	r0, [sp, #16]
   832dc:	48b2      	ldr	r0, [pc, #712]	; (835a8 <_vfiprintf_r+0x88c>)
   832de:	681c      	ldr	r4, [r3, #0]
   832e0:	2230      	movs	r2, #48	; 0x30
   832e2:	2378      	movs	r3, #120	; 0x78
   832e4:	f10b 0b04 	add.w	fp, fp, #4
   832e8:	46ac      	mov	ip, r5
   832ea:	f88d 3049 	strb.w	r3, [sp, #73]	; 0x49
   832ee:	f04a 0a02 	orr.w	sl, sl, #2
   832f2:	f8cd b020 	str.w	fp, [sp, #32]
   832f6:	2500      	movs	r5, #0
   832f8:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   832fc:	900a      	str	r0, [sp, #40]	; 0x28
   832fe:	2302      	movs	r3, #2
   83300:	e61d      	b.n	82f3e <_vfiprintf_r+0x222>
   83302:	f04a 0a20 	orr.w	sl, sl, #32
   83306:	f898 3000 	ldrb.w	r3, [r8]
   8330a:	e574      	b.n	82df6 <_vfiprintf_r+0xda>
   8330c:	f8dd b020 	ldr.w	fp, [sp, #32]
   83310:	f8db 0000 	ldr.w	r0, [fp]
   83314:	f10b 0304 	add.w	r3, fp, #4
   83318:	2800      	cmp	r0, #0
   8331a:	f6ff adf7 	blt.w	82f0c <_vfiprintf_r+0x1f0>
   8331e:	9308      	str	r3, [sp, #32]
   83320:	f898 3000 	ldrb.w	r3, [r8]
   83324:	e567      	b.n	82df6 <_vfiprintf_r+0xda>
   83326:	f898 3000 	ldrb.w	r3, [r8]
   8332a:	212b      	movs	r1, #43	; 0x2b
   8332c:	e563      	b.n	82df6 <_vfiprintf_r+0xda>
   8332e:	f898 3000 	ldrb.w	r3, [r8]
   83332:	f108 0401 	add.w	r4, r8, #1
   83336:	2b2a      	cmp	r3, #42	; 0x2a
   83338:	f000 8305 	beq.w	83946 <_vfiprintf_r+0xc2a>
   8333c:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   83340:	2a09      	cmp	r2, #9
   83342:	bf98      	it	ls
   83344:	2500      	movls	r5, #0
   83346:	f200 82fa 	bhi.w	8393e <_vfiprintf_r+0xc22>
   8334a:	f814 3b01 	ldrb.w	r3, [r4], #1
   8334e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   83352:	eb02 0545 	add.w	r5, r2, r5, lsl #1
   83356:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   8335a:	2a09      	cmp	r2, #9
   8335c:	d9f5      	bls.n	8334a <_vfiprintf_r+0x62e>
   8335e:	ea45 75e5 	orr.w	r5, r5, r5, asr #31
   83362:	46a0      	mov	r8, r4
   83364:	e549      	b.n	82dfa <_vfiprintf_r+0xde>
   83366:	4c90      	ldr	r4, [pc, #576]	; (835a8 <_vfiprintf_r+0x88c>)
   83368:	f01a 0f20 	tst.w	sl, #32
   8336c:	9004      	str	r0, [sp, #16]
   8336e:	46ac      	mov	ip, r5
   83370:	940a      	str	r4, [sp, #40]	; 0x28
   83372:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   83376:	f47f af10 	bne.w	8319a <_vfiprintf_r+0x47e>
   8337a:	f01a 0f10 	tst.w	sl, #16
   8337e:	f040 81ea 	bne.w	83756 <_vfiprintf_r+0xa3a>
   83382:	f01a 0f40 	tst.w	sl, #64	; 0x40
   83386:	f000 81e6 	beq.w	83756 <_vfiprintf_r+0xa3a>
   8338a:	f8dd b020 	ldr.w	fp, [sp, #32]
   8338e:	2500      	movs	r5, #0
   83390:	f8bb 4000 	ldrh.w	r4, [fp]
   83394:	f10b 0b04 	add.w	fp, fp, #4
   83398:	f8cd b020 	str.w	fp, [sp, #32]
   8339c:	e707      	b.n	831ae <_vfiprintf_r+0x492>
   8339e:	f898 3000 	ldrb.w	r3, [r8]
   833a2:	2900      	cmp	r1, #0
   833a4:	f47f ad27 	bne.w	82df6 <_vfiprintf_r+0xda>
   833a8:	2120      	movs	r1, #32
   833aa:	e524      	b.n	82df6 <_vfiprintf_r+0xda>
   833ac:	f04a 0a01 	orr.w	sl, sl, #1
   833b0:	f898 3000 	ldrb.w	r3, [r8]
   833b4:	e51f      	b.n	82df6 <_vfiprintf_r+0xda>
   833b6:	9004      	str	r0, [sp, #16]
   833b8:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   833bc:	2b00      	cmp	r3, #0
   833be:	f000 80f9 	beq.w	835b4 <_vfiprintf_r+0x898>
   833c2:	2501      	movs	r5, #1
   833c4:	f04f 0b00 	mov.w	fp, #0
   833c8:	9503      	str	r5, [sp, #12]
   833ca:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
   833ce:	f88d b047 	strb.w	fp, [sp, #71]	; 0x47
   833d2:	9505      	str	r5, [sp, #20]
   833d4:	af16      	add	r7, sp, #88	; 0x58
   833d6:	e70e      	b.n	831f6 <_vfiprintf_r+0x4da>
   833d8:	9806      	ldr	r0, [sp, #24]
   833da:	9902      	ldr	r1, [sp, #8]
   833dc:	aa13      	add	r2, sp, #76	; 0x4c
   833de:	f7ff fc61 	bl	82ca4 <__sprint_r.part.0>
   833e2:	2800      	cmp	r0, #0
   833e4:	f040 80ed 	bne.w	835c2 <_vfiprintf_r+0x8a6>
   833e8:	9814      	ldr	r0, [sp, #80]	; 0x50
   833ea:	9a15      	ldr	r2, [sp, #84]	; 0x54
   833ec:	1c43      	adds	r3, r0, #1
   833ee:	46cc      	mov	ip, r9
   833f0:	e5fe      	b.n	82ff0 <_vfiprintf_r+0x2d4>
   833f2:	9b14      	ldr	r3, [sp, #80]	; 0x50
   833f4:	9a15      	ldr	r2, [sp, #84]	; 0x54
   833f6:	1c59      	adds	r1, r3, #1
   833f8:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
   833fc:	b168      	cbz	r0, 8341a <_vfiprintf_r+0x6fe>
   833fe:	3201      	adds	r2, #1
   83400:	f10d 0047 	add.w	r0, sp, #71	; 0x47
   83404:	2301      	movs	r3, #1
   83406:	2907      	cmp	r1, #7
   83408:	9215      	str	r2, [sp, #84]	; 0x54
   8340a:	9114      	str	r1, [sp, #80]	; 0x50
   8340c:	e886 0009 	stmia.w	r6, {r0, r3}
   83410:	f300 8160 	bgt.w	836d4 <_vfiprintf_r+0x9b8>
   83414:	460b      	mov	r3, r1
   83416:	3608      	adds	r6, #8
   83418:	3101      	adds	r1, #1
   8341a:	9c07      	ldr	r4, [sp, #28]
   8341c:	b164      	cbz	r4, 83438 <_vfiprintf_r+0x71c>
   8341e:	3202      	adds	r2, #2
   83420:	a812      	add	r0, sp, #72	; 0x48
   83422:	2302      	movs	r3, #2
   83424:	2907      	cmp	r1, #7
   83426:	9215      	str	r2, [sp, #84]	; 0x54
   83428:	9114      	str	r1, [sp, #80]	; 0x50
   8342a:	e886 0009 	stmia.w	r6, {r0, r3}
   8342e:	f300 8157 	bgt.w	836e0 <_vfiprintf_r+0x9c4>
   83432:	460b      	mov	r3, r1
   83434:	3608      	adds	r6, #8
   83436:	3101      	adds	r1, #1
   83438:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   8343a:	2d80      	cmp	r5, #128	; 0x80
   8343c:	f000 8101 	beq.w	83642 <_vfiprintf_r+0x926>
   83440:	9d05      	ldr	r5, [sp, #20]
   83442:	ebc5 040c 	rsb	r4, r5, ip
   83446:	2c00      	cmp	r4, #0
   83448:	dd2f      	ble.n	834aa <_vfiprintf_r+0x78e>
   8344a:	2c10      	cmp	r4, #16
   8344c:	4d57      	ldr	r5, [pc, #348]	; (835ac <_vfiprintf_r+0x890>)
   8344e:	dd22      	ble.n	83496 <_vfiprintf_r+0x77a>
   83450:	4630      	mov	r0, r6
   83452:	f04f 0b10 	mov.w	fp, #16
   83456:	462e      	mov	r6, r5
   83458:	4625      	mov	r5, r4
   8345a:	9c06      	ldr	r4, [sp, #24]
   8345c:	e006      	b.n	8346c <_vfiprintf_r+0x750>
   8345e:	f103 0c02 	add.w	ip, r3, #2
   83462:	3008      	adds	r0, #8
   83464:	460b      	mov	r3, r1
   83466:	3d10      	subs	r5, #16
   83468:	2d10      	cmp	r5, #16
   8346a:	dd10      	ble.n	8348e <_vfiprintf_r+0x772>
   8346c:	1c59      	adds	r1, r3, #1
   8346e:	3210      	adds	r2, #16
   83470:	2907      	cmp	r1, #7
   83472:	9215      	str	r2, [sp, #84]	; 0x54
   83474:	e880 0840 	stmia.w	r0, {r6, fp}
   83478:	9114      	str	r1, [sp, #80]	; 0x50
   8347a:	ddf0      	ble.n	8345e <_vfiprintf_r+0x742>
   8347c:	2a00      	cmp	r2, #0
   8347e:	d163      	bne.n	83548 <_vfiprintf_r+0x82c>
   83480:	3d10      	subs	r5, #16
   83482:	2d10      	cmp	r5, #16
   83484:	f04f 0c01 	mov.w	ip, #1
   83488:	4613      	mov	r3, r2
   8348a:	4648      	mov	r0, r9
   8348c:	dcee      	bgt.n	8346c <_vfiprintf_r+0x750>
   8348e:	462c      	mov	r4, r5
   83490:	4661      	mov	r1, ip
   83492:	4635      	mov	r5, r6
   83494:	4606      	mov	r6, r0
   83496:	4422      	add	r2, r4
   83498:	2907      	cmp	r1, #7
   8349a:	9215      	str	r2, [sp, #84]	; 0x54
   8349c:	6035      	str	r5, [r6, #0]
   8349e:	6074      	str	r4, [r6, #4]
   834a0:	9114      	str	r1, [sp, #80]	; 0x50
   834a2:	f300 80c1 	bgt.w	83628 <_vfiprintf_r+0x90c>
   834a6:	3608      	adds	r6, #8
   834a8:	3101      	adds	r1, #1
   834aa:	9d05      	ldr	r5, [sp, #20]
   834ac:	2907      	cmp	r1, #7
   834ae:	442a      	add	r2, r5
   834b0:	9215      	str	r2, [sp, #84]	; 0x54
   834b2:	6037      	str	r7, [r6, #0]
   834b4:	6075      	str	r5, [r6, #4]
   834b6:	9114      	str	r1, [sp, #80]	; 0x50
   834b8:	f340 80c1 	ble.w	8363e <_vfiprintf_r+0x922>
   834bc:	2a00      	cmp	r2, #0
   834be:	f040 8130 	bne.w	83722 <_vfiprintf_r+0xa06>
   834c2:	9214      	str	r2, [sp, #80]	; 0x50
   834c4:	464e      	mov	r6, r9
   834c6:	f01a 0f04 	tst.w	sl, #4
   834ca:	f000 808b 	beq.w	835e4 <_vfiprintf_r+0x8c8>
   834ce:	9d04      	ldr	r5, [sp, #16]
   834d0:	f8dd b00c 	ldr.w	fp, [sp, #12]
   834d4:	ebcb 0405 	rsb	r4, fp, r5
   834d8:	2c00      	cmp	r4, #0
   834da:	f340 8083 	ble.w	835e4 <_vfiprintf_r+0x8c8>
   834de:	2c10      	cmp	r4, #16
   834e0:	f340 821e 	ble.w	83920 <_vfiprintf_r+0xc04>
   834e4:	9914      	ldr	r1, [sp, #80]	; 0x50
   834e6:	4d32      	ldr	r5, [pc, #200]	; (835b0 <_vfiprintf_r+0x894>)
   834e8:	2710      	movs	r7, #16
   834ea:	f8dd a018 	ldr.w	sl, [sp, #24]
   834ee:	f8dd b008 	ldr.w	fp, [sp, #8]
   834f2:	e005      	b.n	83500 <_vfiprintf_r+0x7e4>
   834f4:	1c88      	adds	r0, r1, #2
   834f6:	3608      	adds	r6, #8
   834f8:	4619      	mov	r1, r3
   834fa:	3c10      	subs	r4, #16
   834fc:	2c10      	cmp	r4, #16
   834fe:	dd10      	ble.n	83522 <_vfiprintf_r+0x806>
   83500:	1c4b      	adds	r3, r1, #1
   83502:	3210      	adds	r2, #16
   83504:	2b07      	cmp	r3, #7
   83506:	9215      	str	r2, [sp, #84]	; 0x54
   83508:	e886 00a0 	stmia.w	r6, {r5, r7}
   8350c:	9314      	str	r3, [sp, #80]	; 0x50
   8350e:	ddf1      	ble.n	834f4 <_vfiprintf_r+0x7d8>
   83510:	2a00      	cmp	r2, #0
   83512:	d17d      	bne.n	83610 <_vfiprintf_r+0x8f4>
   83514:	3c10      	subs	r4, #16
   83516:	2c10      	cmp	r4, #16
   83518:	f04f 0001 	mov.w	r0, #1
   8351c:	4611      	mov	r1, r2
   8351e:	464e      	mov	r6, r9
   83520:	dcee      	bgt.n	83500 <_vfiprintf_r+0x7e4>
   83522:	4422      	add	r2, r4
   83524:	2807      	cmp	r0, #7
   83526:	9215      	str	r2, [sp, #84]	; 0x54
   83528:	6035      	str	r5, [r6, #0]
   8352a:	6074      	str	r4, [r6, #4]
   8352c:	9014      	str	r0, [sp, #80]	; 0x50
   8352e:	dd59      	ble.n	835e4 <_vfiprintf_r+0x8c8>
   83530:	2a00      	cmp	r2, #0
   83532:	d14f      	bne.n	835d4 <_vfiprintf_r+0x8b8>
   83534:	9c09      	ldr	r4, [sp, #36]	; 0x24
   83536:	f8dd b00c 	ldr.w	fp, [sp, #12]
   8353a:	9d04      	ldr	r5, [sp, #16]
   8353c:	45ab      	cmp	fp, r5
   8353e:	bfac      	ite	ge
   83540:	445c      	addge	r4, fp
   83542:	1964      	addlt	r4, r4, r5
   83544:	9409      	str	r4, [sp, #36]	; 0x24
   83546:	e05e      	b.n	83606 <_vfiprintf_r+0x8ea>
   83548:	4620      	mov	r0, r4
   8354a:	9902      	ldr	r1, [sp, #8]
   8354c:	aa13      	add	r2, sp, #76	; 0x4c
   8354e:	f7ff fba9 	bl	82ca4 <__sprint_r.part.0>
   83552:	2800      	cmp	r0, #0
   83554:	d135      	bne.n	835c2 <_vfiprintf_r+0x8a6>
   83556:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83558:	9a15      	ldr	r2, [sp, #84]	; 0x54
   8355a:	f103 0c01 	add.w	ip, r3, #1
   8355e:	4648      	mov	r0, r9
   83560:	e781      	b.n	83466 <_vfiprintf_r+0x74a>
   83562:	08e0      	lsrs	r0, r4, #3
   83564:	ea40 7045 	orr.w	r0, r0, r5, lsl #29
   83568:	f004 0207 	and.w	r2, r4, #7
   8356c:	08e9      	lsrs	r1, r5, #3
   8356e:	3230      	adds	r2, #48	; 0x30
   83570:	ea50 0b01 	orrs.w	fp, r0, r1
   83574:	461f      	mov	r7, r3
   83576:	701a      	strb	r2, [r3, #0]
   83578:	4604      	mov	r4, r0
   8357a:	460d      	mov	r5, r1
   8357c:	f103 33ff 	add.w	r3, r3, #4294967295
   83580:	d1ef      	bne.n	83562 <_vfiprintf_r+0x846>
   83582:	f01a 0f01 	tst.w	sl, #1
   83586:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   8358a:	4639      	mov	r1, r7
   8358c:	f000 80b9 	beq.w	83702 <_vfiprintf_r+0x9e6>
   83590:	2a30      	cmp	r2, #48	; 0x30
   83592:	f43f acf4 	beq.w	82f7e <_vfiprintf_r+0x262>
   83596:	461f      	mov	r7, r3
   83598:	ebc7 0509 	rsb	r5, r7, r9
   8359c:	2330      	movs	r3, #48	; 0x30
   8359e:	9505      	str	r5, [sp, #20]
   835a0:	f801 3c01 	strb.w	r3, [r1, #-1]
   835a4:	e4ee      	b.n	82f84 <_vfiprintf_r+0x268>
   835a6:	bf00      	nop
   835a8:	00087a18 	.word	0x00087a18
   835ac:	00087a44 	.word	0x00087a44
   835b0:	00087a54 	.word	0x00087a54
   835b4:	9b15      	ldr	r3, [sp, #84]	; 0x54
   835b6:	b123      	cbz	r3, 835c2 <_vfiprintf_r+0x8a6>
   835b8:	9806      	ldr	r0, [sp, #24]
   835ba:	9902      	ldr	r1, [sp, #8]
   835bc:	aa13      	add	r2, sp, #76	; 0x4c
   835be:	f7ff fb71 	bl	82ca4 <__sprint_r.part.0>
   835c2:	9c02      	ldr	r4, [sp, #8]
   835c4:	89a3      	ldrh	r3, [r4, #12]
   835c6:	065b      	lsls	r3, r3, #25
   835c8:	f53f ac98 	bmi.w	82efc <_vfiprintf_r+0x1e0>
   835cc:	9809      	ldr	r0, [sp, #36]	; 0x24
   835ce:	b031      	add	sp, #196	; 0xc4
   835d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   835d4:	9806      	ldr	r0, [sp, #24]
   835d6:	9902      	ldr	r1, [sp, #8]
   835d8:	aa13      	add	r2, sp, #76	; 0x4c
   835da:	f7ff fb63 	bl	82ca4 <__sprint_r.part.0>
   835de:	2800      	cmp	r0, #0
   835e0:	d1ef      	bne.n	835c2 <_vfiprintf_r+0x8a6>
   835e2:	9a15      	ldr	r2, [sp, #84]	; 0x54
   835e4:	9c09      	ldr	r4, [sp, #36]	; 0x24
   835e6:	f8dd b00c 	ldr.w	fp, [sp, #12]
   835ea:	9d04      	ldr	r5, [sp, #16]
   835ec:	45ab      	cmp	fp, r5
   835ee:	bfac      	ite	ge
   835f0:	445c      	addge	r4, fp
   835f2:	1964      	addlt	r4, r4, r5
   835f4:	9409      	str	r4, [sp, #36]	; 0x24
   835f6:	b132      	cbz	r2, 83606 <_vfiprintf_r+0x8ea>
   835f8:	9806      	ldr	r0, [sp, #24]
   835fa:	9902      	ldr	r1, [sp, #8]
   835fc:	aa13      	add	r2, sp, #76	; 0x4c
   835fe:	f7ff fb51 	bl	82ca4 <__sprint_r.part.0>
   83602:	2800      	cmp	r0, #0
   83604:	d1dd      	bne.n	835c2 <_vfiprintf_r+0x8a6>
   83606:	2000      	movs	r0, #0
   83608:	9014      	str	r0, [sp, #80]	; 0x50
   8360a:	464e      	mov	r6, r9
   8360c:	f7ff bbb9 	b.w	82d82 <_vfiprintf_r+0x66>
   83610:	4650      	mov	r0, sl
   83612:	4659      	mov	r1, fp
   83614:	aa13      	add	r2, sp, #76	; 0x4c
   83616:	f7ff fb45 	bl	82ca4 <__sprint_r.part.0>
   8361a:	2800      	cmp	r0, #0
   8361c:	d1d1      	bne.n	835c2 <_vfiprintf_r+0x8a6>
   8361e:	9914      	ldr	r1, [sp, #80]	; 0x50
   83620:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83622:	1c48      	adds	r0, r1, #1
   83624:	464e      	mov	r6, r9
   83626:	e768      	b.n	834fa <_vfiprintf_r+0x7de>
   83628:	2a00      	cmp	r2, #0
   8362a:	f040 80f7 	bne.w	8381c <_vfiprintf_r+0xb00>
   8362e:	9c05      	ldr	r4, [sp, #20]
   83630:	2301      	movs	r3, #1
   83632:	9720      	str	r7, [sp, #128]	; 0x80
   83634:	9421      	str	r4, [sp, #132]	; 0x84
   83636:	9415      	str	r4, [sp, #84]	; 0x54
   83638:	4622      	mov	r2, r4
   8363a:	9314      	str	r3, [sp, #80]	; 0x50
   8363c:	464e      	mov	r6, r9
   8363e:	3608      	adds	r6, #8
   83640:	e741      	b.n	834c6 <_vfiprintf_r+0x7aa>
   83642:	9d04      	ldr	r5, [sp, #16]
   83644:	f8dd b00c 	ldr.w	fp, [sp, #12]
   83648:	ebcb 0405 	rsb	r4, fp, r5
   8364c:	2c00      	cmp	r4, #0
   8364e:	f77f aef7 	ble.w	83440 <_vfiprintf_r+0x724>
   83652:	2c10      	cmp	r4, #16
   83654:	4da6      	ldr	r5, [pc, #664]	; (838f0 <_vfiprintf_r+0xbd4>)
   83656:	f340 8170 	ble.w	8393a <_vfiprintf_r+0xc1e>
   8365a:	4629      	mov	r1, r5
   8365c:	f04f 0b10 	mov.w	fp, #16
   83660:	4625      	mov	r5, r4
   83662:	4664      	mov	r4, ip
   83664:	46b4      	mov	ip, r6
   83666:	460e      	mov	r6, r1
   83668:	e006      	b.n	83678 <_vfiprintf_r+0x95c>
   8366a:	1c98      	adds	r0, r3, #2
   8366c:	f10c 0c08 	add.w	ip, ip, #8
   83670:	460b      	mov	r3, r1
   83672:	3d10      	subs	r5, #16
   83674:	2d10      	cmp	r5, #16
   83676:	dd0f      	ble.n	83698 <_vfiprintf_r+0x97c>
   83678:	1c59      	adds	r1, r3, #1
   8367a:	3210      	adds	r2, #16
   8367c:	2907      	cmp	r1, #7
   8367e:	9215      	str	r2, [sp, #84]	; 0x54
   83680:	e88c 0840 	stmia.w	ip, {r6, fp}
   83684:	9114      	str	r1, [sp, #80]	; 0x50
   83686:	ddf0      	ble.n	8366a <_vfiprintf_r+0x94e>
   83688:	b9ba      	cbnz	r2, 836ba <_vfiprintf_r+0x99e>
   8368a:	3d10      	subs	r5, #16
   8368c:	2d10      	cmp	r5, #16
   8368e:	f04f 0001 	mov.w	r0, #1
   83692:	4613      	mov	r3, r2
   83694:	46cc      	mov	ip, r9
   83696:	dcef      	bgt.n	83678 <_vfiprintf_r+0x95c>
   83698:	4633      	mov	r3, r6
   8369a:	4666      	mov	r6, ip
   8369c:	46a4      	mov	ip, r4
   8369e:	462c      	mov	r4, r5
   836a0:	461d      	mov	r5, r3
   836a2:	4422      	add	r2, r4
   836a4:	2807      	cmp	r0, #7
   836a6:	9215      	str	r2, [sp, #84]	; 0x54
   836a8:	6035      	str	r5, [r6, #0]
   836aa:	6074      	str	r4, [r6, #4]
   836ac:	9014      	str	r0, [sp, #80]	; 0x50
   836ae:	f300 80af 	bgt.w	83810 <_vfiprintf_r+0xaf4>
   836b2:	3608      	adds	r6, #8
   836b4:	1c41      	adds	r1, r0, #1
   836b6:	4603      	mov	r3, r0
   836b8:	e6c2      	b.n	83440 <_vfiprintf_r+0x724>
   836ba:	9806      	ldr	r0, [sp, #24]
   836bc:	9902      	ldr	r1, [sp, #8]
   836be:	aa13      	add	r2, sp, #76	; 0x4c
   836c0:	f7ff faf0 	bl	82ca4 <__sprint_r.part.0>
   836c4:	2800      	cmp	r0, #0
   836c6:	f47f af7c 	bne.w	835c2 <_vfiprintf_r+0x8a6>
   836ca:	9b14      	ldr	r3, [sp, #80]	; 0x50
   836cc:	9a15      	ldr	r2, [sp, #84]	; 0x54
   836ce:	1c58      	adds	r0, r3, #1
   836d0:	46cc      	mov	ip, r9
   836d2:	e7ce      	b.n	83672 <_vfiprintf_r+0x956>
   836d4:	2a00      	cmp	r2, #0
   836d6:	d179      	bne.n	837cc <_vfiprintf_r+0xab0>
   836d8:	4619      	mov	r1, r3
   836da:	464e      	mov	r6, r9
   836dc:	4613      	mov	r3, r2
   836de:	e69c      	b.n	8341a <_vfiprintf_r+0x6fe>
   836e0:	2a00      	cmp	r2, #0
   836e2:	f040 8084 	bne.w	837ee <_vfiprintf_r+0xad2>
   836e6:	2101      	movs	r1, #1
   836e8:	4613      	mov	r3, r2
   836ea:	464e      	mov	r6, r9
   836ec:	e6a4      	b.n	83438 <_vfiprintf_r+0x71c>
   836ee:	464f      	mov	r7, r9
   836f0:	e448      	b.n	82f84 <_vfiprintf_r+0x268>
   836f2:	2d00      	cmp	r5, #0
   836f4:	bf08      	it	eq
   836f6:	2c0a      	cmpeq	r4, #10
   836f8:	d246      	bcs.n	83788 <_vfiprintf_r+0xa6c>
   836fa:	3430      	adds	r4, #48	; 0x30
   836fc:	af30      	add	r7, sp, #192	; 0xc0
   836fe:	f807 4d41 	strb.w	r4, [r7, #-65]!
   83702:	ebc7 0309 	rsb	r3, r7, r9
   83706:	9305      	str	r3, [sp, #20]
   83708:	e43c      	b.n	82f84 <_vfiprintf_r+0x268>
   8370a:	2302      	movs	r3, #2
   8370c:	e417      	b.n	82f3e <_vfiprintf_r+0x222>
   8370e:	2a00      	cmp	r2, #0
   83710:	f040 80af 	bne.w	83872 <_vfiprintf_r+0xb56>
   83714:	4613      	mov	r3, r2
   83716:	2101      	movs	r1, #1
   83718:	464e      	mov	r6, r9
   8371a:	e66d      	b.n	833f8 <_vfiprintf_r+0x6dc>
   8371c:	4644      	mov	r4, r8
   8371e:	f7ff bb58 	b.w	82dd2 <_vfiprintf_r+0xb6>
   83722:	9806      	ldr	r0, [sp, #24]
   83724:	9902      	ldr	r1, [sp, #8]
   83726:	aa13      	add	r2, sp, #76	; 0x4c
   83728:	f7ff fabc 	bl	82ca4 <__sprint_r.part.0>
   8372c:	2800      	cmp	r0, #0
   8372e:	f47f af48 	bne.w	835c2 <_vfiprintf_r+0x8a6>
   83732:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83734:	464e      	mov	r6, r9
   83736:	e6c6      	b.n	834c6 <_vfiprintf_r+0x7aa>
   83738:	9d08      	ldr	r5, [sp, #32]
   8373a:	682c      	ldr	r4, [r5, #0]
   8373c:	3504      	adds	r5, #4
   8373e:	9508      	str	r5, [sp, #32]
   83740:	2500      	movs	r5, #0
   83742:	f7ff bbfc 	b.w	82f3e <_vfiprintf_r+0x222>
   83746:	9d08      	ldr	r5, [sp, #32]
   83748:	2301      	movs	r3, #1
   8374a:	682c      	ldr	r4, [r5, #0]
   8374c:	3504      	adds	r5, #4
   8374e:	9508      	str	r5, [sp, #32]
   83750:	2500      	movs	r5, #0
   83752:	f7ff bbf4 	b.w	82f3e <_vfiprintf_r+0x222>
   83756:	9d08      	ldr	r5, [sp, #32]
   83758:	682c      	ldr	r4, [r5, #0]
   8375a:	3504      	adds	r5, #4
   8375c:	9508      	str	r5, [sp, #32]
   8375e:	2500      	movs	r5, #0
   83760:	e525      	b.n	831ae <_vfiprintf_r+0x492>
   83762:	9d08      	ldr	r5, [sp, #32]
   83764:	682c      	ldr	r4, [r5, #0]
   83766:	3504      	adds	r5, #4
   83768:	9508      	str	r5, [sp, #32]
   8376a:	17e5      	asrs	r5, r4, #31
   8376c:	4622      	mov	r2, r4
   8376e:	462b      	mov	r3, r5
   83770:	e48e      	b.n	83090 <_vfiprintf_r+0x374>
   83772:	9806      	ldr	r0, [sp, #24]
   83774:	9902      	ldr	r1, [sp, #8]
   83776:	aa13      	add	r2, sp, #76	; 0x4c
   83778:	f7ff fa94 	bl	82ca4 <__sprint_r.part.0>
   8377c:	2800      	cmp	r0, #0
   8377e:	f47f af20 	bne.w	835c2 <_vfiprintf_r+0x8a6>
   83782:	464e      	mov	r6, r9
   83784:	f7ff bb9a 	b.w	82ebc <_vfiprintf_r+0x1a0>
   83788:	f10d 0b7f 	add.w	fp, sp, #127	; 0x7f
   8378c:	9603      	str	r6, [sp, #12]
   8378e:	465e      	mov	r6, fp
   83790:	46e3      	mov	fp, ip
   83792:	4620      	mov	r0, r4
   83794:	4629      	mov	r1, r5
   83796:	220a      	movs	r2, #10
   83798:	2300      	movs	r3, #0
   8379a:	f003 fdd1 	bl	87340 <__aeabi_uldivmod>
   8379e:	3230      	adds	r2, #48	; 0x30
   837a0:	7032      	strb	r2, [r6, #0]
   837a2:	4620      	mov	r0, r4
   837a4:	4629      	mov	r1, r5
   837a6:	220a      	movs	r2, #10
   837a8:	2300      	movs	r3, #0
   837aa:	f003 fdc9 	bl	87340 <__aeabi_uldivmod>
   837ae:	4604      	mov	r4, r0
   837b0:	460d      	mov	r5, r1
   837b2:	ea54 0005 	orrs.w	r0, r4, r5
   837b6:	4637      	mov	r7, r6
   837b8:	f106 36ff 	add.w	r6, r6, #4294967295
   837bc:	d1e9      	bne.n	83792 <_vfiprintf_r+0xa76>
   837be:	ebc7 0309 	rsb	r3, r7, r9
   837c2:	46dc      	mov	ip, fp
   837c4:	9e03      	ldr	r6, [sp, #12]
   837c6:	9305      	str	r3, [sp, #20]
   837c8:	f7ff bbdc 	b.w	82f84 <_vfiprintf_r+0x268>
   837cc:	9806      	ldr	r0, [sp, #24]
   837ce:	9902      	ldr	r1, [sp, #8]
   837d0:	aa13      	add	r2, sp, #76	; 0x4c
   837d2:	f8cd c004 	str.w	ip, [sp, #4]
   837d6:	f7ff fa65 	bl	82ca4 <__sprint_r.part.0>
   837da:	f8dd c004 	ldr.w	ip, [sp, #4]
   837de:	2800      	cmp	r0, #0
   837e0:	f47f aeef 	bne.w	835c2 <_vfiprintf_r+0x8a6>
   837e4:	9b14      	ldr	r3, [sp, #80]	; 0x50
   837e6:	9a15      	ldr	r2, [sp, #84]	; 0x54
   837e8:	1c59      	adds	r1, r3, #1
   837ea:	464e      	mov	r6, r9
   837ec:	e615      	b.n	8341a <_vfiprintf_r+0x6fe>
   837ee:	9806      	ldr	r0, [sp, #24]
   837f0:	9902      	ldr	r1, [sp, #8]
   837f2:	aa13      	add	r2, sp, #76	; 0x4c
   837f4:	f8cd c004 	str.w	ip, [sp, #4]
   837f8:	f7ff fa54 	bl	82ca4 <__sprint_r.part.0>
   837fc:	f8dd c004 	ldr.w	ip, [sp, #4]
   83800:	2800      	cmp	r0, #0
   83802:	f47f aede 	bne.w	835c2 <_vfiprintf_r+0x8a6>
   83806:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83808:	9a15      	ldr	r2, [sp, #84]	; 0x54
   8380a:	1c59      	adds	r1, r3, #1
   8380c:	464e      	mov	r6, r9
   8380e:	e613      	b.n	83438 <_vfiprintf_r+0x71c>
   83810:	2a00      	cmp	r2, #0
   83812:	d156      	bne.n	838c2 <_vfiprintf_r+0xba6>
   83814:	2101      	movs	r1, #1
   83816:	4613      	mov	r3, r2
   83818:	464e      	mov	r6, r9
   8381a:	e611      	b.n	83440 <_vfiprintf_r+0x724>
   8381c:	9806      	ldr	r0, [sp, #24]
   8381e:	9902      	ldr	r1, [sp, #8]
   83820:	aa13      	add	r2, sp, #76	; 0x4c
   83822:	f7ff fa3f 	bl	82ca4 <__sprint_r.part.0>
   83826:	2800      	cmp	r0, #0
   83828:	f47f aecb 	bne.w	835c2 <_vfiprintf_r+0x8a6>
   8382c:	9914      	ldr	r1, [sp, #80]	; 0x50
   8382e:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83830:	3101      	adds	r1, #1
   83832:	464e      	mov	r6, r9
   83834:	e639      	b.n	834aa <_vfiprintf_r+0x78e>
   83836:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
   8383a:	4264      	negs	r4, r4
   8383c:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   83840:	f88d b047 	strb.w	fp, [sp, #71]	; 0x47
   83844:	f8cd b01c 	str.w	fp, [sp, #28]
   83848:	f8cd c014 	str.w	ip, [sp, #20]
   8384c:	2301      	movs	r3, #1
   8384e:	f7ff bb7e 	b.w	82f4e <_vfiprintf_r+0x232>
   83852:	f01a 0f10 	tst.w	sl, #16
   83856:	d11d      	bne.n	83894 <_vfiprintf_r+0xb78>
   83858:	f01a 0f40 	tst.w	sl, #64	; 0x40
   8385c:	d058      	beq.n	83910 <_vfiprintf_r+0xbf4>
   8385e:	9d08      	ldr	r5, [sp, #32]
   83860:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   83864:	682b      	ldr	r3, [r5, #0]
   83866:	3504      	adds	r5, #4
   83868:	9508      	str	r5, [sp, #32]
   8386a:	f8a3 b000 	strh.w	fp, [r3]
   8386e:	f7ff ba88 	b.w	82d82 <_vfiprintf_r+0x66>
   83872:	9806      	ldr	r0, [sp, #24]
   83874:	9902      	ldr	r1, [sp, #8]
   83876:	aa13      	add	r2, sp, #76	; 0x4c
   83878:	f8cd c004 	str.w	ip, [sp, #4]
   8387c:	f7ff fa12 	bl	82ca4 <__sprint_r.part.0>
   83880:	f8dd c004 	ldr.w	ip, [sp, #4]
   83884:	2800      	cmp	r0, #0
   83886:	f47f ae9c 	bne.w	835c2 <_vfiprintf_r+0x8a6>
   8388a:	9b14      	ldr	r3, [sp, #80]	; 0x50
   8388c:	9a15      	ldr	r2, [sp, #84]	; 0x54
   8388e:	1c59      	adds	r1, r3, #1
   83890:	464e      	mov	r6, r9
   83892:	e5b1      	b.n	833f8 <_vfiprintf_r+0x6dc>
   83894:	f8dd b020 	ldr.w	fp, [sp, #32]
   83898:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8389a:	f8db 3000 	ldr.w	r3, [fp]
   8389e:	f10b 0b04 	add.w	fp, fp, #4
   838a2:	f8cd b020 	str.w	fp, [sp, #32]
   838a6:	601c      	str	r4, [r3, #0]
   838a8:	f7ff ba6b 	b.w	82d82 <_vfiprintf_r+0x66>
   838ac:	9408      	str	r4, [sp, #32]
   838ae:	f7fd ff59 	bl	81764 <strlen>
   838b2:	f89d 4047 	ldrb.w	r4, [sp, #71]	; 0x47
   838b6:	9005      	str	r0, [sp, #20]
   838b8:	9407      	str	r4, [sp, #28]
   838ba:	f04f 0c00 	mov.w	ip, #0
   838be:	f7ff bb61 	b.w	82f84 <_vfiprintf_r+0x268>
   838c2:	9806      	ldr	r0, [sp, #24]
   838c4:	9902      	ldr	r1, [sp, #8]
   838c6:	aa13      	add	r2, sp, #76	; 0x4c
   838c8:	f8cd c004 	str.w	ip, [sp, #4]
   838cc:	f7ff f9ea 	bl	82ca4 <__sprint_r.part.0>
   838d0:	f8dd c004 	ldr.w	ip, [sp, #4]
   838d4:	2800      	cmp	r0, #0
   838d6:	f47f ae74 	bne.w	835c2 <_vfiprintf_r+0x8a6>
   838da:	9b14      	ldr	r3, [sp, #80]	; 0x50
   838dc:	9a15      	ldr	r2, [sp, #84]	; 0x54
   838de:	1c59      	adds	r1, r3, #1
   838e0:	464e      	mov	r6, r9
   838e2:	e5ad      	b.n	83440 <_vfiprintf_r+0x724>
   838e4:	9b14      	ldr	r3, [sp, #80]	; 0x50
   838e6:	9a15      	ldr	r2, [sp, #84]	; 0x54
   838e8:	3301      	adds	r3, #1
   838ea:	4d02      	ldr	r5, [pc, #8]	; (838f4 <_vfiprintf_r+0xbd8>)
   838ec:	f7ff bb9a 	b.w	83024 <_vfiprintf_r+0x308>
   838f0:	00087a44 	.word	0x00087a44
   838f4:	00087a54 	.word	0x00087a54
   838f8:	f1bc 0f06 	cmp.w	ip, #6
   838fc:	bf34      	ite	cc
   838fe:	4663      	movcc	r3, ip
   83900:	2306      	movcs	r3, #6
   83902:	9408      	str	r4, [sp, #32]
   83904:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
   83908:	9305      	str	r3, [sp, #20]
   8390a:	9403      	str	r4, [sp, #12]
   8390c:	4f16      	ldr	r7, [pc, #88]	; (83968 <_vfiprintf_r+0xc4c>)
   8390e:	e472      	b.n	831f6 <_vfiprintf_r+0x4da>
   83910:	9c08      	ldr	r4, [sp, #32]
   83912:	9d09      	ldr	r5, [sp, #36]	; 0x24
   83914:	6823      	ldr	r3, [r4, #0]
   83916:	3404      	adds	r4, #4
   83918:	9408      	str	r4, [sp, #32]
   8391a:	601d      	str	r5, [r3, #0]
   8391c:	f7ff ba31 	b.w	82d82 <_vfiprintf_r+0x66>
   83920:	9814      	ldr	r0, [sp, #80]	; 0x50
   83922:	4d12      	ldr	r5, [pc, #72]	; (8396c <_vfiprintf_r+0xc50>)
   83924:	3001      	adds	r0, #1
   83926:	e5fc      	b.n	83522 <_vfiprintf_r+0x806>
   83928:	f89d 5047 	ldrb.w	r5, [sp, #71]	; 0x47
   8392c:	f8cd c014 	str.w	ip, [sp, #20]
   83930:	9507      	str	r5, [sp, #28]
   83932:	9408      	str	r4, [sp, #32]
   83934:	4684      	mov	ip, r0
   83936:	f7ff bb25 	b.w	82f84 <_vfiprintf_r+0x268>
   8393a:	4608      	mov	r0, r1
   8393c:	e6b1      	b.n	836a2 <_vfiprintf_r+0x986>
   8393e:	46a0      	mov	r8, r4
   83940:	2500      	movs	r5, #0
   83942:	f7ff ba5a 	b.w	82dfa <_vfiprintf_r+0xde>
   83946:	f8dd b020 	ldr.w	fp, [sp, #32]
   8394a:	f898 3001 	ldrb.w	r3, [r8, #1]
   8394e:	f8db 5000 	ldr.w	r5, [fp]
   83952:	f10b 0204 	add.w	r2, fp, #4
   83956:	2d00      	cmp	r5, #0
   83958:	9208      	str	r2, [sp, #32]
   8395a:	46a0      	mov	r8, r4
   8395c:	f6bf aa4b 	bge.w	82df6 <_vfiprintf_r+0xda>
   83960:	f04f 35ff 	mov.w	r5, #4294967295
   83964:	f7ff ba47 	b.w	82df6 <_vfiprintf_r+0xda>
   83968:	00087a2c 	.word	0x00087a2c
   8396c:	00087a54 	.word	0x00087a54

00083970 <__sbprintf>:
   83970:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   83974:	6e4f      	ldr	r7, [r1, #100]	; 0x64
   83976:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
   8397a:	4688      	mov	r8, r1
   8397c:	9719      	str	r7, [sp, #100]	; 0x64
   8397e:	f8d8 701c 	ldr.w	r7, [r8, #28]
   83982:	f8b1 a00c 	ldrh.w	sl, [r1, #12]
   83986:	f8b1 900e 	ldrh.w	r9, [r1, #14]
   8398a:	9707      	str	r7, [sp, #28]
   8398c:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
   83990:	ac1a      	add	r4, sp, #104	; 0x68
   83992:	f44f 6580 	mov.w	r5, #1024	; 0x400
   83996:	f02a 0a02 	bic.w	sl, sl, #2
   8399a:	2600      	movs	r6, #0
   8399c:	4669      	mov	r1, sp
   8399e:	9400      	str	r4, [sp, #0]
   839a0:	9404      	str	r4, [sp, #16]
   839a2:	9502      	str	r5, [sp, #8]
   839a4:	9505      	str	r5, [sp, #20]
   839a6:	f8ad a00c 	strh.w	sl, [sp, #12]
   839aa:	f8ad 900e 	strh.w	r9, [sp, #14]
   839ae:	9709      	str	r7, [sp, #36]	; 0x24
   839b0:	9606      	str	r6, [sp, #24]
   839b2:	4605      	mov	r5, r0
   839b4:	f7ff f9b2 	bl	82d1c <_vfiprintf_r>
   839b8:	1e04      	subs	r4, r0, #0
   839ba:	db07      	blt.n	839cc <__sbprintf+0x5c>
   839bc:	4628      	mov	r0, r5
   839be:	4669      	mov	r1, sp
   839c0:	f001 f936 	bl	84c30 <_fflush_r>
   839c4:	42b0      	cmp	r0, r6
   839c6:	bf18      	it	ne
   839c8:	f04f 34ff 	movne.w	r4, #4294967295
   839cc:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   839d0:	065b      	lsls	r3, r3, #25
   839d2:	d505      	bpl.n	839e0 <__sbprintf+0x70>
   839d4:	f8b8 300c 	ldrh.w	r3, [r8, #12]
   839d8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   839dc:	f8a8 300c 	strh.w	r3, [r8, #12]
   839e0:	4620      	mov	r0, r4
   839e2:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
   839e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   839ea:	bf00      	nop

000839ec <__swbuf_r>:
   839ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   839ee:	460d      	mov	r5, r1
   839f0:	4614      	mov	r4, r2
   839f2:	4607      	mov	r7, r0
   839f4:	b110      	cbz	r0, 839fc <__swbuf_r+0x10>
   839f6:	6b83      	ldr	r3, [r0, #56]	; 0x38
   839f8:	2b00      	cmp	r3, #0
   839fa:	d048      	beq.n	83a8e <__swbuf_r+0xa2>
   839fc:	89a2      	ldrh	r2, [r4, #12]
   839fe:	69a0      	ldr	r0, [r4, #24]
   83a00:	b293      	uxth	r3, r2
   83a02:	60a0      	str	r0, [r4, #8]
   83a04:	0718      	lsls	r0, r3, #28
   83a06:	d538      	bpl.n	83a7a <__swbuf_r+0x8e>
   83a08:	6926      	ldr	r6, [r4, #16]
   83a0a:	2e00      	cmp	r6, #0
   83a0c:	d035      	beq.n	83a7a <__swbuf_r+0x8e>
   83a0e:	0499      	lsls	r1, r3, #18
   83a10:	b2ed      	uxtb	r5, r5
   83a12:	d515      	bpl.n	83a40 <__swbuf_r+0x54>
   83a14:	6823      	ldr	r3, [r4, #0]
   83a16:	6962      	ldr	r2, [r4, #20]
   83a18:	1b9e      	subs	r6, r3, r6
   83a1a:	4296      	cmp	r6, r2
   83a1c:	da1c      	bge.n	83a58 <__swbuf_r+0x6c>
   83a1e:	3601      	adds	r6, #1
   83a20:	68a2      	ldr	r2, [r4, #8]
   83a22:	1c59      	adds	r1, r3, #1
   83a24:	3a01      	subs	r2, #1
   83a26:	60a2      	str	r2, [r4, #8]
   83a28:	6021      	str	r1, [r4, #0]
   83a2a:	701d      	strb	r5, [r3, #0]
   83a2c:	6963      	ldr	r3, [r4, #20]
   83a2e:	42b3      	cmp	r3, r6
   83a30:	d01a      	beq.n	83a68 <__swbuf_r+0x7c>
   83a32:	89a3      	ldrh	r3, [r4, #12]
   83a34:	07db      	lsls	r3, r3, #31
   83a36:	d501      	bpl.n	83a3c <__swbuf_r+0x50>
   83a38:	2d0a      	cmp	r5, #10
   83a3a:	d015      	beq.n	83a68 <__swbuf_r+0x7c>
   83a3c:	4628      	mov	r0, r5
   83a3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83a40:	6e63      	ldr	r3, [r4, #100]	; 0x64
   83a42:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   83a46:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   83a4a:	6663      	str	r3, [r4, #100]	; 0x64
   83a4c:	6823      	ldr	r3, [r4, #0]
   83a4e:	81a2      	strh	r2, [r4, #12]
   83a50:	6962      	ldr	r2, [r4, #20]
   83a52:	1b9e      	subs	r6, r3, r6
   83a54:	4296      	cmp	r6, r2
   83a56:	dbe2      	blt.n	83a1e <__swbuf_r+0x32>
   83a58:	4638      	mov	r0, r7
   83a5a:	4621      	mov	r1, r4
   83a5c:	f001 f8e8 	bl	84c30 <_fflush_r>
   83a60:	b940      	cbnz	r0, 83a74 <__swbuf_r+0x88>
   83a62:	6823      	ldr	r3, [r4, #0]
   83a64:	2601      	movs	r6, #1
   83a66:	e7db      	b.n	83a20 <__swbuf_r+0x34>
   83a68:	4638      	mov	r0, r7
   83a6a:	4621      	mov	r1, r4
   83a6c:	f001 f8e0 	bl	84c30 <_fflush_r>
   83a70:	2800      	cmp	r0, #0
   83a72:	d0e3      	beq.n	83a3c <__swbuf_r+0x50>
   83a74:	f04f 30ff 	mov.w	r0, #4294967295
   83a78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83a7a:	4638      	mov	r0, r7
   83a7c:	4621      	mov	r1, r4
   83a7e:	f000 f809 	bl	83a94 <__swsetup_r>
   83a82:	2800      	cmp	r0, #0
   83a84:	d1f6      	bne.n	83a74 <__swbuf_r+0x88>
   83a86:	89a2      	ldrh	r2, [r4, #12]
   83a88:	6926      	ldr	r6, [r4, #16]
   83a8a:	b293      	uxth	r3, r2
   83a8c:	e7bf      	b.n	83a0e <__swbuf_r+0x22>
   83a8e:	f001 f8eb 	bl	84c68 <__sinit>
   83a92:	e7b3      	b.n	839fc <__swbuf_r+0x10>

00083a94 <__swsetup_r>:
   83a94:	4b2f      	ldr	r3, [pc, #188]	; (83b54 <__swsetup_r+0xc0>)
   83a96:	b570      	push	{r4, r5, r6, lr}
   83a98:	4606      	mov	r6, r0
   83a9a:	6818      	ldr	r0, [r3, #0]
   83a9c:	460c      	mov	r4, r1
   83a9e:	b110      	cbz	r0, 83aa6 <__swsetup_r+0x12>
   83aa0:	6b82      	ldr	r2, [r0, #56]	; 0x38
   83aa2:	2a00      	cmp	r2, #0
   83aa4:	d036      	beq.n	83b14 <__swsetup_r+0x80>
   83aa6:	89a5      	ldrh	r5, [r4, #12]
   83aa8:	b2ab      	uxth	r3, r5
   83aaa:	0719      	lsls	r1, r3, #28
   83aac:	d50c      	bpl.n	83ac8 <__swsetup_r+0x34>
   83aae:	6922      	ldr	r2, [r4, #16]
   83ab0:	b1aa      	cbz	r2, 83ade <__swsetup_r+0x4a>
   83ab2:	f013 0101 	ands.w	r1, r3, #1
   83ab6:	d01e      	beq.n	83af6 <__swsetup_r+0x62>
   83ab8:	6963      	ldr	r3, [r4, #20]
   83aba:	2100      	movs	r1, #0
   83abc:	425b      	negs	r3, r3
   83abe:	61a3      	str	r3, [r4, #24]
   83ac0:	60a1      	str	r1, [r4, #8]
   83ac2:	b1f2      	cbz	r2, 83b02 <__swsetup_r+0x6e>
   83ac4:	2000      	movs	r0, #0
   83ac6:	bd70      	pop	{r4, r5, r6, pc}
   83ac8:	06da      	lsls	r2, r3, #27
   83aca:	d53a      	bpl.n	83b42 <__swsetup_r+0xae>
   83acc:	075b      	lsls	r3, r3, #29
   83ace:	d424      	bmi.n	83b1a <__swsetup_r+0x86>
   83ad0:	6922      	ldr	r2, [r4, #16]
   83ad2:	f045 0308 	orr.w	r3, r5, #8
   83ad6:	81a3      	strh	r3, [r4, #12]
   83ad8:	b29b      	uxth	r3, r3
   83ada:	2a00      	cmp	r2, #0
   83adc:	d1e9      	bne.n	83ab2 <__swsetup_r+0x1e>
   83ade:	f403 7120 	and.w	r1, r3, #640	; 0x280
   83ae2:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   83ae6:	d0e4      	beq.n	83ab2 <__swsetup_r+0x1e>
   83ae8:	4630      	mov	r0, r6
   83aea:	4621      	mov	r1, r4
   83aec:	f001 fc8a 	bl	85404 <__smakebuf_r>
   83af0:	89a3      	ldrh	r3, [r4, #12]
   83af2:	6922      	ldr	r2, [r4, #16]
   83af4:	e7dd      	b.n	83ab2 <__swsetup_r+0x1e>
   83af6:	0798      	lsls	r0, r3, #30
   83af8:	bf58      	it	pl
   83afa:	6961      	ldrpl	r1, [r4, #20]
   83afc:	60a1      	str	r1, [r4, #8]
   83afe:	2a00      	cmp	r2, #0
   83b00:	d1e0      	bne.n	83ac4 <__swsetup_r+0x30>
   83b02:	89a3      	ldrh	r3, [r4, #12]
   83b04:	061a      	lsls	r2, r3, #24
   83b06:	d5dd      	bpl.n	83ac4 <__swsetup_r+0x30>
   83b08:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   83b0c:	81a3      	strh	r3, [r4, #12]
   83b0e:	f04f 30ff 	mov.w	r0, #4294967295
   83b12:	bd70      	pop	{r4, r5, r6, pc}
   83b14:	f001 f8a8 	bl	84c68 <__sinit>
   83b18:	e7c5      	b.n	83aa6 <__swsetup_r+0x12>
   83b1a:	6b21      	ldr	r1, [r4, #48]	; 0x30
   83b1c:	b149      	cbz	r1, 83b32 <__swsetup_r+0x9e>
   83b1e:	f104 0340 	add.w	r3, r4, #64	; 0x40
   83b22:	4299      	cmp	r1, r3
   83b24:	d003      	beq.n	83b2e <__swsetup_r+0x9a>
   83b26:	4630      	mov	r0, r6
   83b28:	f001 f9e2 	bl	84ef0 <_free_r>
   83b2c:	89a5      	ldrh	r5, [r4, #12]
   83b2e:	2300      	movs	r3, #0
   83b30:	6323      	str	r3, [r4, #48]	; 0x30
   83b32:	6922      	ldr	r2, [r4, #16]
   83b34:	f025 0524 	bic.w	r5, r5, #36	; 0x24
   83b38:	2100      	movs	r1, #0
   83b3a:	b2ad      	uxth	r5, r5
   83b3c:	6022      	str	r2, [r4, #0]
   83b3e:	6061      	str	r1, [r4, #4]
   83b40:	e7c7      	b.n	83ad2 <__swsetup_r+0x3e>
   83b42:	f045 0540 	orr.w	r5, r5, #64	; 0x40
   83b46:	2309      	movs	r3, #9
   83b48:	6033      	str	r3, [r6, #0]
   83b4a:	f04f 30ff 	mov.w	r0, #4294967295
   83b4e:	81a5      	strh	r5, [r4, #12]
   83b50:	bd70      	pop	{r4, r5, r6, pc}
   83b52:	bf00      	nop
   83b54:	200705c0 	.word	0x200705c0

00083b58 <register_fini>:
   83b58:	4b02      	ldr	r3, [pc, #8]	; (83b64 <register_fini+0xc>)
   83b5a:	b113      	cbz	r3, 83b62 <register_fini+0xa>
   83b5c:	4802      	ldr	r0, [pc, #8]	; (83b68 <register_fini+0x10>)
   83b5e:	f000 b805 	b.w	83b6c <atexit>
   83b62:	4770      	bx	lr
   83b64:	00000000 	.word	0x00000000
   83b68:	00084d65 	.word	0x00084d65

00083b6c <atexit>:
   83b6c:	4601      	mov	r1, r0
   83b6e:	2000      	movs	r0, #0
   83b70:	4602      	mov	r2, r0
   83b72:	4603      	mov	r3, r0
   83b74:	f002 be3e 	b.w	867f4 <__register_exitproc>

00083b78 <quorem>:
   83b78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83b7c:	6903      	ldr	r3, [r0, #16]
   83b7e:	690d      	ldr	r5, [r1, #16]
   83b80:	b083      	sub	sp, #12
   83b82:	429d      	cmp	r5, r3
   83b84:	4683      	mov	fp, r0
   83b86:	f300 808c 	bgt.w	83ca2 <quorem+0x12a>
   83b8a:	3d01      	subs	r5, #1
   83b8c:	f101 0414 	add.w	r4, r1, #20
   83b90:	f100 0a14 	add.w	sl, r0, #20
   83b94:	f854 2025 	ldr.w	r2, [r4, r5, lsl #2]
   83b98:	f85a 3025 	ldr.w	r3, [sl, r5, lsl #2]
   83b9c:	3201      	adds	r2, #1
   83b9e:	fbb3 f8f2 	udiv	r8, r3, r2
   83ba2:	00aa      	lsls	r2, r5, #2
   83ba4:	4691      	mov	r9, r2
   83ba6:	9200      	str	r2, [sp, #0]
   83ba8:	4452      	add	r2, sl
   83baa:	44a1      	add	r9, r4
   83bac:	9201      	str	r2, [sp, #4]
   83bae:	f1b8 0f00 	cmp.w	r8, #0
   83bb2:	d03e      	beq.n	83c32 <quorem+0xba>
   83bb4:	2600      	movs	r6, #0
   83bb6:	4630      	mov	r0, r6
   83bb8:	4622      	mov	r2, r4
   83bba:	4653      	mov	r3, sl
   83bbc:	468c      	mov	ip, r1
   83bbe:	f852 7b04 	ldr.w	r7, [r2], #4
   83bc2:	6819      	ldr	r1, [r3, #0]
   83bc4:	fa1f fe87 	uxth.w	lr, r7
   83bc8:	0c3f      	lsrs	r7, r7, #16
   83bca:	fb0e 6e08 	mla	lr, lr, r8, r6
   83bce:	fb07 f608 	mul.w	r6, r7, r8
   83bd2:	eb06 461e 	add.w	r6, r6, lr, lsr #16
   83bd6:	fa1f fe8e 	uxth.w	lr, lr
   83bda:	ebce 0e00 	rsb	lr, lr, r0
   83bde:	b28f      	uxth	r7, r1
   83be0:	b2b0      	uxth	r0, r6
   83be2:	4477      	add	r7, lr
   83be4:	ebc0 4011 	rsb	r0, r0, r1, lsr #16
   83be8:	eb00 4027 	add.w	r0, r0, r7, asr #16
   83bec:	b2bf      	uxth	r7, r7
   83bee:	ea47 4700 	orr.w	r7, r7, r0, lsl #16
   83bf2:	4591      	cmp	r9, r2
   83bf4:	f843 7b04 	str.w	r7, [r3], #4
   83bf8:	ea4f 4020 	mov.w	r0, r0, asr #16
   83bfc:	ea4f 4616 	mov.w	r6, r6, lsr #16
   83c00:	d2dd      	bcs.n	83bbe <quorem+0x46>
   83c02:	9a00      	ldr	r2, [sp, #0]
   83c04:	4661      	mov	r1, ip
   83c06:	f85a 3002 	ldr.w	r3, [sl, r2]
   83c0a:	b993      	cbnz	r3, 83c32 <quorem+0xba>
   83c0c:	9a01      	ldr	r2, [sp, #4]
   83c0e:	1f13      	subs	r3, r2, #4
   83c10:	459a      	cmp	sl, r3
   83c12:	d20c      	bcs.n	83c2e <quorem+0xb6>
   83c14:	f852 3c04 	ldr.w	r3, [r2, #-4]
   83c18:	b94b      	cbnz	r3, 83c2e <quorem+0xb6>
   83c1a:	f1a2 0308 	sub.w	r3, r2, #8
   83c1e:	e002      	b.n	83c26 <quorem+0xae>
   83c20:	681a      	ldr	r2, [r3, #0]
   83c22:	3b04      	subs	r3, #4
   83c24:	b91a      	cbnz	r2, 83c2e <quorem+0xb6>
   83c26:	459a      	cmp	sl, r3
   83c28:	f105 35ff 	add.w	r5, r5, #4294967295
   83c2c:	d3f8      	bcc.n	83c20 <quorem+0xa8>
   83c2e:	f8cb 5010 	str.w	r5, [fp, #16]
   83c32:	4658      	mov	r0, fp
   83c34:	f002 f9ca 	bl	85fcc <__mcmp>
   83c38:	2800      	cmp	r0, #0
   83c3a:	db2e      	blt.n	83c9a <quorem+0x122>
   83c3c:	f108 0801 	add.w	r8, r8, #1
   83c40:	4653      	mov	r3, sl
   83c42:	2200      	movs	r2, #0
   83c44:	f854 6b04 	ldr.w	r6, [r4], #4
   83c48:	6818      	ldr	r0, [r3, #0]
   83c4a:	b2b1      	uxth	r1, r6
   83c4c:	1a51      	subs	r1, r2, r1
   83c4e:	b287      	uxth	r7, r0
   83c50:	0c36      	lsrs	r6, r6, #16
   83c52:	4439      	add	r1, r7
   83c54:	ebc6 4010 	rsb	r0, r6, r0, lsr #16
   83c58:	eb00 4221 	add.w	r2, r0, r1, asr #16
   83c5c:	b289      	uxth	r1, r1
   83c5e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
   83c62:	45a1      	cmp	r9, r4
   83c64:	f843 1b04 	str.w	r1, [r3], #4
   83c68:	ea4f 4222 	mov.w	r2, r2, asr #16
   83c6c:	d2ea      	bcs.n	83c44 <quorem+0xcc>
   83c6e:	f85a 2025 	ldr.w	r2, [sl, r5, lsl #2]
   83c72:	eb0a 0385 	add.w	r3, sl, r5, lsl #2
   83c76:	b982      	cbnz	r2, 83c9a <quorem+0x122>
   83c78:	1f1a      	subs	r2, r3, #4
   83c7a:	4592      	cmp	sl, r2
   83c7c:	d20b      	bcs.n	83c96 <quorem+0x11e>
   83c7e:	f853 2c04 	ldr.w	r2, [r3, #-4]
   83c82:	b942      	cbnz	r2, 83c96 <quorem+0x11e>
   83c84:	3b08      	subs	r3, #8
   83c86:	e002      	b.n	83c8e <quorem+0x116>
   83c88:	681a      	ldr	r2, [r3, #0]
   83c8a:	3b04      	subs	r3, #4
   83c8c:	b91a      	cbnz	r2, 83c96 <quorem+0x11e>
   83c8e:	459a      	cmp	sl, r3
   83c90:	f105 35ff 	add.w	r5, r5, #4294967295
   83c94:	d3f8      	bcc.n	83c88 <quorem+0x110>
   83c96:	f8cb 5010 	str.w	r5, [fp, #16]
   83c9a:	4640      	mov	r0, r8
   83c9c:	b003      	add	sp, #12
   83c9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83ca2:	2000      	movs	r0, #0
   83ca4:	b003      	add	sp, #12
   83ca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83caa:	bf00      	nop
   83cac:	0000      	movs	r0, r0
	...

00083cb0 <_dtoa_r>:
   83cb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83cb4:	6c01      	ldr	r1, [r0, #64]	; 0x40
   83cb6:	b09b      	sub	sp, #108	; 0x6c
   83cb8:	4604      	mov	r4, r0
   83cba:	4692      	mov	sl, r2
   83cbc:	469b      	mov	fp, r3
   83cbe:	9d27      	ldr	r5, [sp, #156]	; 0x9c
   83cc0:	b141      	cbz	r1, 83cd4 <_dtoa_r+0x24>
   83cc2:	6c43      	ldr	r3, [r0, #68]	; 0x44
   83cc4:	2201      	movs	r2, #1
   83cc6:	409a      	lsls	r2, r3
   83cc8:	604b      	str	r3, [r1, #4]
   83cca:	608a      	str	r2, [r1, #8]
   83ccc:	f001 ff88 	bl	85be0 <_Bfree>
   83cd0:	2300      	movs	r3, #0
   83cd2:	6423      	str	r3, [r4, #64]	; 0x40
   83cd4:	f1bb 0f00 	cmp.w	fp, #0
   83cd8:	46d9      	mov	r9, fp
   83cda:	db33      	blt.n	83d44 <_dtoa_r+0x94>
   83cdc:	2300      	movs	r3, #0
   83cde:	602b      	str	r3, [r5, #0]
   83ce0:	4ba5      	ldr	r3, [pc, #660]	; (83f78 <_dtoa_r+0x2c8>)
   83ce2:	461a      	mov	r2, r3
   83ce4:	ea09 0303 	and.w	r3, r9, r3
   83ce8:	4293      	cmp	r3, r2
   83cea:	d014      	beq.n	83d16 <_dtoa_r+0x66>
   83cec:	4650      	mov	r0, sl
   83cee:	4659      	mov	r1, fp
   83cf0:	2200      	movs	r2, #0
   83cf2:	2300      	movs	r3, #0
   83cf4:	f003 faca 	bl	8728c <__aeabi_dcmpeq>
   83cf8:	4680      	mov	r8, r0
   83cfa:	b348      	cbz	r0, 83d50 <_dtoa_r+0xa0>
   83cfc:	9e26      	ldr	r6, [sp, #152]	; 0x98
   83cfe:	9d28      	ldr	r5, [sp, #160]	; 0xa0
   83d00:	2301      	movs	r3, #1
   83d02:	6033      	str	r3, [r6, #0]
   83d04:	2d00      	cmp	r5, #0
   83d06:	f000 80ca 	beq.w	83e9e <_dtoa_r+0x1ee>
   83d0a:	489c      	ldr	r0, [pc, #624]	; (83f7c <_dtoa_r+0x2cc>)
   83d0c:	6028      	str	r0, [r5, #0]
   83d0e:	3801      	subs	r0, #1
   83d10:	b01b      	add	sp, #108	; 0x6c
   83d12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83d16:	9d26      	ldr	r5, [sp, #152]	; 0x98
   83d18:	f242 730f 	movw	r3, #9999	; 0x270f
   83d1c:	602b      	str	r3, [r5, #0]
   83d1e:	f1ba 0f00 	cmp.w	sl, #0
   83d22:	f000 80a5 	beq.w	83e70 <_dtoa_r+0x1c0>
   83d26:	4896      	ldr	r0, [pc, #600]	; (83f80 <_dtoa_r+0x2d0>)
   83d28:	9e28      	ldr	r6, [sp, #160]	; 0xa0
   83d2a:	2e00      	cmp	r6, #0
   83d2c:	d0f0      	beq.n	83d10 <_dtoa_r+0x60>
   83d2e:	78c3      	ldrb	r3, [r0, #3]
   83d30:	2b00      	cmp	r3, #0
   83d32:	f000 80b6 	beq.w	83ea2 <_dtoa_r+0x1f2>
   83d36:	f100 0308 	add.w	r3, r0, #8
   83d3a:	9d28      	ldr	r5, [sp, #160]	; 0xa0
   83d3c:	602b      	str	r3, [r5, #0]
   83d3e:	b01b      	add	sp, #108	; 0x6c
   83d40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83d44:	2301      	movs	r3, #1
   83d46:	f02b 4900 	bic.w	r9, fp, #2147483648	; 0x80000000
   83d4a:	602b      	str	r3, [r5, #0]
   83d4c:	46cb      	mov	fp, r9
   83d4e:	e7c7      	b.n	83ce0 <_dtoa_r+0x30>
   83d50:	aa19      	add	r2, sp, #100	; 0x64
   83d52:	ab18      	add	r3, sp, #96	; 0x60
   83d54:	e88d 000c 	stmia.w	sp, {r2, r3}
   83d58:	4620      	mov	r0, r4
   83d5a:	4652      	mov	r2, sl
   83d5c:	465b      	mov	r3, fp
   83d5e:	f002 f9c5 	bl	860ec <__d2b>
   83d62:	ea5f 5519 	movs.w	r5, r9, lsr #20
   83d66:	900a      	str	r0, [sp, #40]	; 0x28
   83d68:	f040 808b 	bne.w	83e82 <_dtoa_r+0x1d2>
   83d6c:	9f18      	ldr	r7, [sp, #96]	; 0x60
   83d6e:	9d19      	ldr	r5, [sp, #100]	; 0x64
   83d70:	f46f 6382 	mvn.w	r3, #1040	; 0x410
   83d74:	443d      	add	r5, r7
   83d76:	429d      	cmp	r5, r3
   83d78:	f2c0 8295 	blt.w	842a6 <_dtoa_r+0x5f6>
   83d7c:	331f      	adds	r3, #31
   83d7e:	f205 4212 	addw	r2, r5, #1042	; 0x412
   83d82:	1b5b      	subs	r3, r3, r5
   83d84:	fa09 f303 	lsl.w	r3, r9, r3
   83d88:	fa2a f202 	lsr.w	r2, sl, r2
   83d8c:	ea43 0002 	orr.w	r0, r3, r2
   83d90:	f002 ff9e 	bl	86cd0 <__aeabi_ui2d>
   83d94:	2601      	movs	r6, #1
   83d96:	3d01      	subs	r5, #1
   83d98:	46b8      	mov	r8, r7
   83d9a:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   83d9e:	9616      	str	r6, [sp, #88]	; 0x58
   83da0:	2200      	movs	r2, #0
   83da2:	4b78      	ldr	r3, [pc, #480]	; (83f84 <_dtoa_r+0x2d4>)
   83da4:	f002 fe56 	bl	86a54 <__aeabi_dsub>
   83da8:	a36d      	add	r3, pc, #436	; (adr r3, 83f60 <_dtoa_r+0x2b0>)
   83daa:	e9d3 2300 	ldrd	r2, r3, [r3]
   83dae:	f003 f805 	bl	86dbc <__aeabi_dmul>
   83db2:	a36d      	add	r3, pc, #436	; (adr r3, 83f68 <_dtoa_r+0x2b8>)
   83db4:	e9d3 2300 	ldrd	r2, r3, [r3]
   83db8:	f002 fe4e 	bl	86a58 <__adddf3>
   83dbc:	4606      	mov	r6, r0
   83dbe:	4628      	mov	r0, r5
   83dc0:	460f      	mov	r7, r1
   83dc2:	f002 ff95 	bl	86cf0 <__aeabi_i2d>
   83dc6:	a36a      	add	r3, pc, #424	; (adr r3, 83f70 <_dtoa_r+0x2c0>)
   83dc8:	e9d3 2300 	ldrd	r2, r3, [r3]
   83dcc:	f002 fff6 	bl	86dbc <__aeabi_dmul>
   83dd0:	4602      	mov	r2, r0
   83dd2:	460b      	mov	r3, r1
   83dd4:	4630      	mov	r0, r6
   83dd6:	4639      	mov	r1, r7
   83dd8:	f002 fe3e 	bl	86a58 <__adddf3>
   83ddc:	4606      	mov	r6, r0
   83dde:	460f      	mov	r7, r1
   83de0:	f003 fa86 	bl	872f0 <__aeabi_d2iz>
   83de4:	4639      	mov	r1, r7
   83de6:	9007      	str	r0, [sp, #28]
   83de8:	2200      	movs	r2, #0
   83dea:	4630      	mov	r0, r6
   83dec:	2300      	movs	r3, #0
   83dee:	f003 fa57 	bl	872a0 <__aeabi_dcmplt>
   83df2:	2800      	cmp	r0, #0
   83df4:	f040 8229 	bne.w	8424a <_dtoa_r+0x59a>
   83df8:	9e07      	ldr	r6, [sp, #28]
   83dfa:	2e16      	cmp	r6, #22
   83dfc:	f200 8222 	bhi.w	84244 <_dtoa_r+0x594>
   83e00:	4961      	ldr	r1, [pc, #388]	; (83f88 <_dtoa_r+0x2d8>)
   83e02:	4652      	mov	r2, sl
   83e04:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
   83e08:	465b      	mov	r3, fp
   83e0a:	e9d1 0100 	ldrd	r0, r1, [r1]
   83e0e:	f003 fa65 	bl	872dc <__aeabi_dcmpgt>
   83e12:	2800      	cmp	r0, #0
   83e14:	f000 824c 	beq.w	842b0 <_dtoa_r+0x600>
   83e18:	3e01      	subs	r6, #1
   83e1a:	9607      	str	r6, [sp, #28]
   83e1c:	2600      	movs	r6, #0
   83e1e:	960e      	str	r6, [sp, #56]	; 0x38
   83e20:	ebc5 0508 	rsb	r5, r5, r8
   83e24:	3d01      	subs	r5, #1
   83e26:	9506      	str	r5, [sp, #24]
   83e28:	f100 8226 	bmi.w	84278 <_dtoa_r+0x5c8>
   83e2c:	2500      	movs	r5, #0
   83e2e:	9508      	str	r5, [sp, #32]
   83e30:	9e07      	ldr	r6, [sp, #28]
   83e32:	2e00      	cmp	r6, #0
   83e34:	f2c0 8217 	blt.w	84266 <_dtoa_r+0x5b6>
   83e38:	9d06      	ldr	r5, [sp, #24]
   83e3a:	960d      	str	r6, [sp, #52]	; 0x34
   83e3c:	4435      	add	r5, r6
   83e3e:	2600      	movs	r6, #0
   83e40:	9506      	str	r5, [sp, #24]
   83e42:	960c      	str	r6, [sp, #48]	; 0x30
   83e44:	9d24      	ldr	r5, [sp, #144]	; 0x90
   83e46:	2d09      	cmp	r5, #9
   83e48:	d82d      	bhi.n	83ea6 <_dtoa_r+0x1f6>
   83e4a:	2d05      	cmp	r5, #5
   83e4c:	bfc4      	itt	gt
   83e4e:	3d04      	subgt	r5, #4
   83e50:	9524      	strgt	r5, [sp, #144]	; 0x90
   83e52:	9e24      	ldr	r6, [sp, #144]	; 0x90
   83e54:	bfc8      	it	gt
   83e56:	2500      	movgt	r5, #0
   83e58:	f1a6 0302 	sub.w	r3, r6, #2
   83e5c:	bfd8      	it	le
   83e5e:	2501      	movle	r5, #1
   83e60:	2b03      	cmp	r3, #3
   83e62:	d822      	bhi.n	83eaa <_dtoa_r+0x1fa>
   83e64:	e8df f013 	tbh	[pc, r3, lsl #1]
   83e68:	029e03b7 	.word	0x029e03b7
   83e6c:	049a03c0 	.word	0x049a03c0
   83e70:	4a46      	ldr	r2, [pc, #280]	; (83f8c <_dtoa_r+0x2dc>)
   83e72:	4b43      	ldr	r3, [pc, #268]	; (83f80 <_dtoa_r+0x2d0>)
   83e74:	f3c9 0013 	ubfx	r0, r9, #0, #20
   83e78:	2800      	cmp	r0, #0
   83e7a:	bf0c      	ite	eq
   83e7c:	4610      	moveq	r0, r2
   83e7e:	4618      	movne	r0, r3
   83e80:	e752      	b.n	83d28 <_dtoa_r+0x78>
   83e82:	f3cb 0313 	ubfx	r3, fp, #0, #20
   83e86:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   83e8a:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
   83e8e:	4650      	mov	r0, sl
   83e90:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   83e94:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   83e98:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
   83e9c:	e780      	b.n	83da0 <_dtoa_r+0xf0>
   83e9e:	483c      	ldr	r0, [pc, #240]	; (83f90 <_dtoa_r+0x2e0>)
   83ea0:	e736      	b.n	83d10 <_dtoa_r+0x60>
   83ea2:	1cc3      	adds	r3, r0, #3
   83ea4:	e749      	b.n	83d3a <_dtoa_r+0x8a>
   83ea6:	2500      	movs	r5, #0
   83ea8:	9524      	str	r5, [sp, #144]	; 0x90
   83eaa:	2500      	movs	r5, #0
   83eac:	6465      	str	r5, [r4, #68]	; 0x44
   83eae:	4629      	mov	r1, r5
   83eb0:	4620      	mov	r0, r4
   83eb2:	f001 fe6f 	bl	85b94 <_Balloc>
   83eb6:	f04f 39ff 	mov.w	r9, #4294967295
   83eba:	2601      	movs	r6, #1
   83ebc:	9009      	str	r0, [sp, #36]	; 0x24
   83ebe:	9525      	str	r5, [sp, #148]	; 0x94
   83ec0:	6420      	str	r0, [r4, #64]	; 0x40
   83ec2:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
   83ec6:	960b      	str	r6, [sp, #44]	; 0x2c
   83ec8:	9b19      	ldr	r3, [sp, #100]	; 0x64
   83eca:	2b00      	cmp	r3, #0
   83ecc:	f2c0 80d2 	blt.w	84074 <_dtoa_r+0x3c4>
   83ed0:	9e07      	ldr	r6, [sp, #28]
   83ed2:	2e0e      	cmp	r6, #14
   83ed4:	f300 80ce 	bgt.w	84074 <_dtoa_r+0x3c4>
   83ed8:	4b2b      	ldr	r3, [pc, #172]	; (83f88 <_dtoa_r+0x2d8>)
   83eda:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
   83ede:	e9d3 0100 	ldrd	r0, r1, [r3]
   83ee2:	e9cd 0104 	strd	r0, r1, [sp, #16]
   83ee6:	9925      	ldr	r1, [sp, #148]	; 0x94
   83ee8:	2900      	cmp	r1, #0
   83eea:	f2c0 8380 	blt.w	845ee <_dtoa_r+0x93e>
   83eee:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   83ef2:	4659      	mov	r1, fp
   83ef4:	4650      	mov	r0, sl
   83ef6:	f003 f88b 	bl	87010 <__aeabi_ddiv>
   83efa:	f003 f9f9 	bl	872f0 <__aeabi_d2iz>
   83efe:	4605      	mov	r5, r0
   83f00:	f002 fef6 	bl	86cf0 <__aeabi_i2d>
   83f04:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   83f08:	f002 ff58 	bl	86dbc <__aeabi_dmul>
   83f0c:	4602      	mov	r2, r0
   83f0e:	460b      	mov	r3, r1
   83f10:	4650      	mov	r0, sl
   83f12:	4659      	mov	r1, fp
   83f14:	f002 fd9e 	bl	86a54 <__aeabi_dsub>
   83f18:	9a09      	ldr	r2, [sp, #36]	; 0x24
   83f1a:	f105 0330 	add.w	r3, r5, #48	; 0x30
   83f1e:	f1b9 0f01 	cmp.w	r9, #1
   83f22:	4606      	mov	r6, r0
   83f24:	460f      	mov	r7, r1
   83f26:	7013      	strb	r3, [r2, #0]
   83f28:	f102 0b01 	add.w	fp, r2, #1
   83f2c:	d064      	beq.n	83ff8 <_dtoa_r+0x348>
   83f2e:	2200      	movs	r2, #0
   83f30:	4b18      	ldr	r3, [pc, #96]	; (83f94 <_dtoa_r+0x2e4>)
   83f32:	f002 ff43 	bl	86dbc <__aeabi_dmul>
   83f36:	2200      	movs	r2, #0
   83f38:	2300      	movs	r3, #0
   83f3a:	4606      	mov	r6, r0
   83f3c:	460f      	mov	r7, r1
   83f3e:	f003 f9a5 	bl	8728c <__aeabi_dcmpeq>
   83f42:	2800      	cmp	r0, #0
   83f44:	f040 8081 	bne.w	8404a <_dtoa_r+0x39a>
   83f48:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   83f4c:	9d09      	ldr	r5, [sp, #36]	; 0x24
   83f4e:	44c8      	add	r8, r9
   83f50:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
   83f54:	f105 0902 	add.w	r9, r5, #2
   83f58:	9403      	str	r4, [sp, #12]
   83f5a:	e028      	b.n	83fae <_dtoa_r+0x2fe>
   83f5c:	f3af 8000 	nop.w
   83f60:	636f4361 	.word	0x636f4361
   83f64:	3fd287a7 	.word	0x3fd287a7
   83f68:	8b60c8b3 	.word	0x8b60c8b3
   83f6c:	3fc68a28 	.word	0x3fc68a28
   83f70:	509f79fb 	.word	0x509f79fb
   83f74:	3fd34413 	.word	0x3fd34413
   83f78:	7ff00000 	.word	0x7ff00000
   83f7c:	00087945 	.word	0x00087945
   83f80:	00087a70 	.word	0x00087a70
   83f84:	3ff80000 	.word	0x3ff80000
   83f88:	00087a80 	.word	0x00087a80
   83f8c:	00087a64 	.word	0x00087a64
   83f90:	00087944 	.word	0x00087944
   83f94:	40240000 	.word	0x40240000
   83f98:	f002 ff10 	bl	86dbc <__aeabi_dmul>
   83f9c:	2200      	movs	r2, #0
   83f9e:	2300      	movs	r3, #0
   83fa0:	4606      	mov	r6, r0
   83fa2:	460f      	mov	r7, r1
   83fa4:	f003 f972 	bl	8728c <__aeabi_dcmpeq>
   83fa8:	2800      	cmp	r0, #0
   83faa:	f040 83c1 	bne.w	84730 <_dtoa_r+0xa80>
   83fae:	4652      	mov	r2, sl
   83fb0:	465b      	mov	r3, fp
   83fb2:	4630      	mov	r0, r6
   83fb4:	4639      	mov	r1, r7
   83fb6:	f003 f82b 	bl	87010 <__aeabi_ddiv>
   83fba:	f003 f999 	bl	872f0 <__aeabi_d2iz>
   83fbe:	4605      	mov	r5, r0
   83fc0:	f002 fe96 	bl	86cf0 <__aeabi_i2d>
   83fc4:	4652      	mov	r2, sl
   83fc6:	465b      	mov	r3, fp
   83fc8:	f002 fef8 	bl	86dbc <__aeabi_dmul>
   83fcc:	4602      	mov	r2, r0
   83fce:	460b      	mov	r3, r1
   83fd0:	4630      	mov	r0, r6
   83fd2:	4639      	mov	r1, r7
   83fd4:	f002 fd3e 	bl	86a54 <__aeabi_dsub>
   83fd8:	f105 0e30 	add.w	lr, r5, #48	; 0x30
   83fdc:	45c1      	cmp	r9, r8
   83fde:	f809 ec01 	strb.w	lr, [r9, #-1]
   83fe2:	464c      	mov	r4, r9
   83fe4:	4606      	mov	r6, r0
   83fe6:	460f      	mov	r7, r1
   83fe8:	f04f 0200 	mov.w	r2, #0
   83fec:	4ba7      	ldr	r3, [pc, #668]	; (8428c <_dtoa_r+0x5dc>)
   83fee:	f109 0901 	add.w	r9, r9, #1
   83ff2:	d1d1      	bne.n	83f98 <_dtoa_r+0x2e8>
   83ff4:	46a3      	mov	fp, r4
   83ff6:	9c03      	ldr	r4, [sp, #12]
   83ff8:	4632      	mov	r2, r6
   83ffa:	463b      	mov	r3, r7
   83ffc:	4630      	mov	r0, r6
   83ffe:	4639      	mov	r1, r7
   84000:	f002 fd2a 	bl	86a58 <__adddf3>
   84004:	4606      	mov	r6, r0
   84006:	460f      	mov	r7, r1
   84008:	4632      	mov	r2, r6
   8400a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   8400e:	463b      	mov	r3, r7
   84010:	f003 f946 	bl	872a0 <__aeabi_dcmplt>
   84014:	b940      	cbnz	r0, 84028 <_dtoa_r+0x378>
   84016:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   8401a:	4632      	mov	r2, r6
   8401c:	463b      	mov	r3, r7
   8401e:	f003 f935 	bl	8728c <__aeabi_dcmpeq>
   84022:	b190      	cbz	r0, 8404a <_dtoa_r+0x39a>
   84024:	07eb      	lsls	r3, r5, #31
   84026:	d510      	bpl.n	8404a <_dtoa_r+0x39a>
   84028:	f81b 5c01 	ldrb.w	r5, [fp, #-1]
   8402c:	9a09      	ldr	r2, [sp, #36]	; 0x24
   8402e:	e005      	b.n	8403c <_dtoa_r+0x38c>
   84030:	429a      	cmp	r2, r3
   84032:	f000 8429 	beq.w	84888 <_dtoa_r+0xbd8>
   84036:	f813 5c01 	ldrb.w	r5, [r3, #-1]
   8403a:	469b      	mov	fp, r3
   8403c:	2d39      	cmp	r5, #57	; 0x39
   8403e:	f10b 33ff 	add.w	r3, fp, #4294967295
   84042:	d0f5      	beq.n	84030 <_dtoa_r+0x380>
   84044:	1c6a      	adds	r2, r5, #1
   84046:	b2d2      	uxtb	r2, r2
   84048:	701a      	strb	r2, [r3, #0]
   8404a:	4620      	mov	r0, r4
   8404c:	990a      	ldr	r1, [sp, #40]	; 0x28
   8404e:	f001 fdc7 	bl	85be0 <_Bfree>
   84052:	9e07      	ldr	r6, [sp, #28]
   84054:	9d26      	ldr	r5, [sp, #152]	; 0x98
   84056:	1c73      	adds	r3, r6, #1
   84058:	9e28      	ldr	r6, [sp, #160]	; 0xa0
   8405a:	2200      	movs	r2, #0
   8405c:	f88b 2000 	strb.w	r2, [fp]
   84060:	602b      	str	r3, [r5, #0]
   84062:	2e00      	cmp	r6, #0
   84064:	f000 8325 	beq.w	846b2 <_dtoa_r+0xa02>
   84068:	9809      	ldr	r0, [sp, #36]	; 0x24
   8406a:	f8c6 b000 	str.w	fp, [r6]
   8406e:	b01b      	add	sp, #108	; 0x6c
   84070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84074:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   84076:	2d00      	cmp	r5, #0
   84078:	f000 8103 	beq.w	84282 <_dtoa_r+0x5d2>
   8407c:	9e24      	ldr	r6, [sp, #144]	; 0x90
   8407e:	2e01      	cmp	r6, #1
   84080:	f340 82dc 	ble.w	8463c <_dtoa_r+0x98c>
   84084:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   84086:	f109 37ff 	add.w	r7, r9, #4294967295
   8408a:	42be      	cmp	r6, r7
   8408c:	f2c0 8389 	blt.w	847a2 <_dtoa_r+0xaf2>
   84090:	1bf7      	subs	r7, r6, r7
   84092:	f1b9 0f00 	cmp.w	r9, #0
   84096:	f2c0 8487 	blt.w	849a8 <_dtoa_r+0xcf8>
   8409a:	9d08      	ldr	r5, [sp, #32]
   8409c:	464b      	mov	r3, r9
   8409e:	9e08      	ldr	r6, [sp, #32]
   840a0:	4620      	mov	r0, r4
   840a2:	441e      	add	r6, r3
   840a4:	9608      	str	r6, [sp, #32]
   840a6:	9e06      	ldr	r6, [sp, #24]
   840a8:	2101      	movs	r1, #1
   840aa:	441e      	add	r6, r3
   840ac:	9606      	str	r6, [sp, #24]
   840ae:	f001 fe39 	bl	85d24 <__i2b>
   840b2:	4606      	mov	r6, r0
   840b4:	b165      	cbz	r5, 840d0 <_dtoa_r+0x420>
   840b6:	9806      	ldr	r0, [sp, #24]
   840b8:	2800      	cmp	r0, #0
   840ba:	dd09      	ble.n	840d0 <_dtoa_r+0x420>
   840bc:	4603      	mov	r3, r0
   840be:	9908      	ldr	r1, [sp, #32]
   840c0:	42ab      	cmp	r3, r5
   840c2:	bfa8      	it	ge
   840c4:	462b      	movge	r3, r5
   840c6:	1ac9      	subs	r1, r1, r3
   840c8:	1ac0      	subs	r0, r0, r3
   840ca:	9108      	str	r1, [sp, #32]
   840cc:	1aed      	subs	r5, r5, r3
   840ce:	9006      	str	r0, [sp, #24]
   840d0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   840d2:	2a00      	cmp	r2, #0
   840d4:	dd1d      	ble.n	84112 <_dtoa_r+0x462>
   840d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   840d8:	2b00      	cmp	r3, #0
   840da:	f000 8358 	beq.w	8478e <_dtoa_r+0xade>
   840de:	2f00      	cmp	r7, #0
   840e0:	dd11      	ble.n	84106 <_dtoa_r+0x456>
   840e2:	4631      	mov	r1, r6
   840e4:	463a      	mov	r2, r7
   840e6:	4620      	mov	r0, r4
   840e8:	f001 fec4 	bl	85e74 <__pow5mult>
   840ec:	4606      	mov	r6, r0
   840ee:	4631      	mov	r1, r6
   840f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   840f2:	4620      	mov	r0, r4
   840f4:	f001 fe20 	bl	85d38 <__multiply>
   840f8:	990a      	ldr	r1, [sp, #40]	; 0x28
   840fa:	4680      	mov	r8, r0
   840fc:	4620      	mov	r0, r4
   840fe:	f001 fd6f 	bl	85be0 <_Bfree>
   84102:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
   84106:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
   8410a:	ebbe 0207 	subs.w	r2, lr, r7
   8410e:	f040 828f 	bne.w	84630 <_dtoa_r+0x980>
   84112:	4620      	mov	r0, r4
   84114:	2101      	movs	r1, #1
   84116:	f001 fe05 	bl	85d24 <__i2b>
   8411a:	4680      	mov	r8, r0
   8411c:	980d      	ldr	r0, [sp, #52]	; 0x34
   8411e:	2800      	cmp	r0, #0
   84120:	dd05      	ble.n	8412e <_dtoa_r+0x47e>
   84122:	4641      	mov	r1, r8
   84124:	4620      	mov	r0, r4
   84126:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   84128:	f001 fea4 	bl	85e74 <__pow5mult>
   8412c:	4680      	mov	r8, r0
   8412e:	9924      	ldr	r1, [sp, #144]	; 0x90
   84130:	2901      	cmp	r1, #1
   84132:	f340 82c1 	ble.w	846b8 <_dtoa_r+0xa08>
   84136:	2700      	movs	r7, #0
   84138:	980d      	ldr	r0, [sp, #52]	; 0x34
   8413a:	2800      	cmp	r0, #0
   8413c:	f040 82af 	bne.w	8469e <_dtoa_r+0x9ee>
   84140:	2001      	movs	r0, #1
   84142:	9b06      	ldr	r3, [sp, #24]
   84144:	4403      	add	r3, r0
   84146:	f013 031f 	ands.w	r3, r3, #31
   8414a:	f000 80a1 	beq.w	84290 <_dtoa_r+0x5e0>
   8414e:	f1c3 0220 	rsb	r2, r3, #32
   84152:	2a04      	cmp	r2, #4
   84154:	f340 84b7 	ble.w	84ac6 <_dtoa_r+0xe16>
   84158:	9908      	ldr	r1, [sp, #32]
   8415a:	9a06      	ldr	r2, [sp, #24]
   8415c:	f1c3 031c 	rsb	r3, r3, #28
   84160:	4419      	add	r1, r3
   84162:	441a      	add	r2, r3
   84164:	9108      	str	r1, [sp, #32]
   84166:	441d      	add	r5, r3
   84168:	9206      	str	r2, [sp, #24]
   8416a:	9908      	ldr	r1, [sp, #32]
   8416c:	2900      	cmp	r1, #0
   8416e:	dd05      	ble.n	8417c <_dtoa_r+0x4cc>
   84170:	990a      	ldr	r1, [sp, #40]	; 0x28
   84172:	9a08      	ldr	r2, [sp, #32]
   84174:	4620      	mov	r0, r4
   84176:	f001 fecb 	bl	85f10 <__lshift>
   8417a:	900a      	str	r0, [sp, #40]	; 0x28
   8417c:	9a06      	ldr	r2, [sp, #24]
   8417e:	2a00      	cmp	r2, #0
   84180:	dd04      	ble.n	8418c <_dtoa_r+0x4dc>
   84182:	4641      	mov	r1, r8
   84184:	4620      	mov	r0, r4
   84186:	f001 fec3 	bl	85f10 <__lshift>
   8418a:	4680      	mov	r8, r0
   8418c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8418e:	2b00      	cmp	r3, #0
   84190:	f040 826a 	bne.w	84668 <_dtoa_r+0x9b8>
   84194:	f1b9 0f00 	cmp.w	r9, #0
   84198:	f340 82a6 	ble.w	846e8 <_dtoa_r+0xa38>
   8419c:	980b      	ldr	r0, [sp, #44]	; 0x2c
   8419e:	2800      	cmp	r0, #0
   841a0:	f040 8088 	bne.w	842b4 <_dtoa_r+0x604>
   841a4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   841a6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   841a8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   841ac:	e006      	b.n	841bc <_dtoa_r+0x50c>
   841ae:	4639      	mov	r1, r7
   841b0:	4620      	mov	r0, r4
   841b2:	220a      	movs	r2, #10
   841b4:	2300      	movs	r3, #0
   841b6:	f001 fd1d 	bl	85bf4 <__multadd>
   841ba:	4607      	mov	r7, r0
   841bc:	4638      	mov	r0, r7
   841be:	4641      	mov	r1, r8
   841c0:	f7ff fcda 	bl	83b78 <quorem>
   841c4:	3030      	adds	r0, #48	; 0x30
   841c6:	f80b 0005 	strb.w	r0, [fp, r5]
   841ca:	3501      	adds	r5, #1
   841cc:	45a9      	cmp	r9, r5
   841ce:	dcee      	bgt.n	841ae <_dtoa_r+0x4fe>
   841d0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   841d4:	4682      	mov	sl, r0
   841d6:	970a      	str	r7, [sp, #40]	; 0x28
   841d8:	f1b9 0f01 	cmp.w	r9, #1
   841dc:	bfac      	ite	ge
   841de:	44cb      	addge	fp, r9
   841e0:	f10b 0b01 	addlt.w	fp, fp, #1
   841e4:	2500      	movs	r5, #0
   841e6:	990a      	ldr	r1, [sp, #40]	; 0x28
   841e8:	2201      	movs	r2, #1
   841ea:	4620      	mov	r0, r4
   841ec:	f001 fe90 	bl	85f10 <__lshift>
   841f0:	4641      	mov	r1, r8
   841f2:	900a      	str	r0, [sp, #40]	; 0x28
   841f4:	f001 feea 	bl	85fcc <__mcmp>
   841f8:	2800      	cmp	r0, #0
   841fa:	f340 8309 	ble.w	84810 <_dtoa_r+0xb60>
   841fe:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
   84202:	9909      	ldr	r1, [sp, #36]	; 0x24
   84204:	e005      	b.n	84212 <_dtoa_r+0x562>
   84206:	4299      	cmp	r1, r3
   84208:	f000 828b 	beq.w	84722 <_dtoa_r+0xa72>
   8420c:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   84210:	469b      	mov	fp, r3
   84212:	2a39      	cmp	r2, #57	; 0x39
   84214:	f10b 33ff 	add.w	r3, fp, #4294967295
   84218:	d0f5      	beq.n	84206 <_dtoa_r+0x556>
   8421a:	3201      	adds	r2, #1
   8421c:	701a      	strb	r2, [r3, #0]
   8421e:	4641      	mov	r1, r8
   84220:	4620      	mov	r0, r4
   84222:	f001 fcdd 	bl	85be0 <_Bfree>
   84226:	2e00      	cmp	r6, #0
   84228:	f43f af0f 	beq.w	8404a <_dtoa_r+0x39a>
   8422c:	b12d      	cbz	r5, 8423a <_dtoa_r+0x58a>
   8422e:	42b5      	cmp	r5, r6
   84230:	d003      	beq.n	8423a <_dtoa_r+0x58a>
   84232:	4629      	mov	r1, r5
   84234:	4620      	mov	r0, r4
   84236:	f001 fcd3 	bl	85be0 <_Bfree>
   8423a:	4631      	mov	r1, r6
   8423c:	4620      	mov	r0, r4
   8423e:	f001 fccf 	bl	85be0 <_Bfree>
   84242:	e702      	b.n	8404a <_dtoa_r+0x39a>
   84244:	2601      	movs	r6, #1
   84246:	960e      	str	r6, [sp, #56]	; 0x38
   84248:	e5ea      	b.n	83e20 <_dtoa_r+0x170>
   8424a:	9807      	ldr	r0, [sp, #28]
   8424c:	f002 fd50 	bl	86cf0 <__aeabi_i2d>
   84250:	4632      	mov	r2, r6
   84252:	463b      	mov	r3, r7
   84254:	f003 f81a 	bl	8728c <__aeabi_dcmpeq>
   84258:	2800      	cmp	r0, #0
   8425a:	f47f adcd 	bne.w	83df8 <_dtoa_r+0x148>
   8425e:	9e07      	ldr	r6, [sp, #28]
   84260:	3e01      	subs	r6, #1
   84262:	9607      	str	r6, [sp, #28]
   84264:	e5c8      	b.n	83df8 <_dtoa_r+0x148>
   84266:	9e07      	ldr	r6, [sp, #28]
   84268:	9d08      	ldr	r5, [sp, #32]
   8426a:	1bad      	subs	r5, r5, r6
   8426c:	9508      	str	r5, [sp, #32]
   8426e:	4275      	negs	r5, r6
   84270:	2600      	movs	r6, #0
   84272:	950c      	str	r5, [sp, #48]	; 0x30
   84274:	960d      	str	r6, [sp, #52]	; 0x34
   84276:	e5e5      	b.n	83e44 <_dtoa_r+0x194>
   84278:	426d      	negs	r5, r5
   8427a:	2600      	movs	r6, #0
   8427c:	9508      	str	r5, [sp, #32]
   8427e:	9606      	str	r6, [sp, #24]
   84280:	e5d6      	b.n	83e30 <_dtoa_r+0x180>
   84282:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   84284:	9d08      	ldr	r5, [sp, #32]
   84286:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
   84288:	e714      	b.n	840b4 <_dtoa_r+0x404>
   8428a:	bf00      	nop
   8428c:	40240000 	.word	0x40240000
   84290:	231c      	movs	r3, #28
   84292:	f8dd e020 	ldr.w	lr, [sp, #32]
   84296:	9806      	ldr	r0, [sp, #24]
   84298:	449e      	add	lr, r3
   8429a:	4418      	add	r0, r3
   8429c:	f8cd e020 	str.w	lr, [sp, #32]
   842a0:	441d      	add	r5, r3
   842a2:	9006      	str	r0, [sp, #24]
   842a4:	e761      	b.n	8416a <_dtoa_r+0x4ba>
   842a6:	48a7      	ldr	r0, [pc, #668]	; (84544 <_dtoa_r+0x894>)
   842a8:	1b40      	subs	r0, r0, r5
   842aa:	fa0a f000 	lsl.w	r0, sl, r0
   842ae:	e56f      	b.n	83d90 <_dtoa_r+0xe0>
   842b0:	900e      	str	r0, [sp, #56]	; 0x38
   842b2:	e5b5      	b.n	83e20 <_dtoa_r+0x170>
   842b4:	2d00      	cmp	r5, #0
   842b6:	dd05      	ble.n	842c4 <_dtoa_r+0x614>
   842b8:	4631      	mov	r1, r6
   842ba:	462a      	mov	r2, r5
   842bc:	4620      	mov	r0, r4
   842be:	f001 fe27 	bl	85f10 <__lshift>
   842c2:	4606      	mov	r6, r0
   842c4:	2f00      	cmp	r7, #0
   842c6:	f040 82e9 	bne.w	8489c <_dtoa_r+0xbec>
   842ca:	4637      	mov	r7, r6
   842cc:	9d09      	ldr	r5, [sp, #36]	; 0x24
   842ce:	9809      	ldr	r0, [sp, #36]	; 0x24
   842d0:	444d      	add	r5, r9
   842d2:	9508      	str	r5, [sp, #32]
   842d4:	f00a 0501 	and.w	r5, sl, #1
   842d8:	950b      	str	r5, [sp, #44]	; 0x2c
   842da:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   842de:	1c45      	adds	r5, r0, #1
   842e0:	e00a      	b.n	842f8 <_dtoa_r+0x648>
   842e2:	f001 fc87 	bl	85bf4 <__multadd>
   842e6:	4639      	mov	r1, r7
   842e8:	4606      	mov	r6, r0
   842ea:	220a      	movs	r2, #10
   842ec:	4620      	mov	r0, r4
   842ee:	2300      	movs	r3, #0
   842f0:	f001 fc80 	bl	85bf4 <__multadd>
   842f4:	4607      	mov	r7, r0
   842f6:	3501      	adds	r5, #1
   842f8:	4641      	mov	r1, r8
   842fa:	4648      	mov	r0, r9
   842fc:	f7ff fc3c 	bl	83b78 <quorem>
   84300:	4631      	mov	r1, r6
   84302:	4683      	mov	fp, r0
   84304:	4648      	mov	r0, r9
   84306:	f001 fe61 	bl	85fcc <__mcmp>
   8430a:	4641      	mov	r1, r8
   8430c:	9003      	str	r0, [sp, #12]
   8430e:	463a      	mov	r2, r7
   84310:	4620      	mov	r0, r4
   84312:	f001 fe7f 	bl	86014 <__mdiff>
   84316:	68c2      	ldr	r2, [r0, #12]
   84318:	1e69      	subs	r1, r5, #1
   8431a:	4603      	mov	r3, r0
   8431c:	f10b 0a30 	add.w	sl, fp, #48	; 0x30
   84320:	9106      	str	r1, [sp, #24]
   84322:	2a00      	cmp	r2, #0
   84324:	f040 8193 	bne.w	8464e <_dtoa_r+0x99e>
   84328:	4619      	mov	r1, r3
   8432a:	4648      	mov	r0, r9
   8432c:	9302      	str	r3, [sp, #8]
   8432e:	f001 fe4d 	bl	85fcc <__mcmp>
   84332:	9b02      	ldr	r3, [sp, #8]
   84334:	4602      	mov	r2, r0
   84336:	4619      	mov	r1, r3
   84338:	4620      	mov	r0, r4
   8433a:	9202      	str	r2, [sp, #8]
   8433c:	f001 fc50 	bl	85be0 <_Bfree>
   84340:	9a02      	ldr	r2, [sp, #8]
   84342:	b92a      	cbnz	r2, 84350 <_dtoa_r+0x6a0>
   84344:	9b24      	ldr	r3, [sp, #144]	; 0x90
   84346:	b91b      	cbnz	r3, 84350 <_dtoa_r+0x6a0>
   84348:	980b      	ldr	r0, [sp, #44]	; 0x2c
   8434a:	2800      	cmp	r0, #0
   8434c:	f000 8393 	beq.w	84a76 <_dtoa_r+0xdc6>
   84350:	9b03      	ldr	r3, [sp, #12]
   84352:	2b00      	cmp	r3, #0
   84354:	f2c0 8234 	blt.w	847c0 <_dtoa_r+0xb10>
   84358:	d105      	bne.n	84366 <_dtoa_r+0x6b6>
   8435a:	9824      	ldr	r0, [sp, #144]	; 0x90
   8435c:	b918      	cbnz	r0, 84366 <_dtoa_r+0x6b6>
   8435e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84360:	2900      	cmp	r1, #0
   84362:	f000 822d 	beq.w	847c0 <_dtoa_r+0xb10>
   84366:	2a00      	cmp	r2, #0
   84368:	f300 82ac 	bgt.w	848c4 <_dtoa_r+0xc14>
   8436c:	f8dd e020 	ldr.w	lr, [sp, #32]
   84370:	f805 ac01 	strb.w	sl, [r5, #-1]
   84374:	4575      	cmp	r5, lr
   84376:	46ab      	mov	fp, r5
   84378:	f000 82b4 	beq.w	848e4 <_dtoa_r+0xc34>
   8437c:	4649      	mov	r1, r9
   8437e:	220a      	movs	r2, #10
   84380:	2300      	movs	r3, #0
   84382:	4620      	mov	r0, r4
   84384:	f001 fc36 	bl	85bf4 <__multadd>
   84388:	42be      	cmp	r6, r7
   8438a:	4681      	mov	r9, r0
   8438c:	4631      	mov	r1, r6
   8438e:	4620      	mov	r0, r4
   84390:	f04f 020a 	mov.w	r2, #10
   84394:	f04f 0300 	mov.w	r3, #0
   84398:	d1a3      	bne.n	842e2 <_dtoa_r+0x632>
   8439a:	f001 fc2b 	bl	85bf4 <__multadd>
   8439e:	4606      	mov	r6, r0
   843a0:	4607      	mov	r7, r0
   843a2:	e7a8      	b.n	842f6 <_dtoa_r+0x646>
   843a4:	2600      	movs	r6, #0
   843a6:	960b      	str	r6, [sp, #44]	; 0x2c
   843a8:	9e07      	ldr	r6, [sp, #28]
   843aa:	f8dd e094 	ldr.w	lr, [sp, #148]	; 0x94
   843ae:	44b6      	add	lr, r6
   843b0:	f10e 0901 	add.w	r9, lr, #1
   843b4:	f1b9 0f00 	cmp.w	r9, #0
   843b8:	f8cd e03c 	str.w	lr, [sp, #60]	; 0x3c
   843bc:	464e      	mov	r6, r9
   843be:	f340 8150 	ble.w	84662 <_dtoa_r+0x9b2>
   843c2:	2100      	movs	r1, #0
   843c4:	2e17      	cmp	r6, #23
   843c6:	6461      	str	r1, [r4, #68]	; 0x44
   843c8:	d90a      	bls.n	843e0 <_dtoa_r+0x730>
   843ca:	2201      	movs	r2, #1
   843cc:	2304      	movs	r3, #4
   843ce:	005b      	lsls	r3, r3, #1
   843d0:	f103 0014 	add.w	r0, r3, #20
   843d4:	42b0      	cmp	r0, r6
   843d6:	4611      	mov	r1, r2
   843d8:	f102 0201 	add.w	r2, r2, #1
   843dc:	d9f7      	bls.n	843ce <_dtoa_r+0x71e>
   843de:	6461      	str	r1, [r4, #68]	; 0x44
   843e0:	4620      	mov	r0, r4
   843e2:	f001 fbd7 	bl	85b94 <_Balloc>
   843e6:	2e0e      	cmp	r6, #14
   843e8:	9009      	str	r0, [sp, #36]	; 0x24
   843ea:	6420      	str	r0, [r4, #64]	; 0x40
   843ec:	f63f ad6c 	bhi.w	83ec8 <_dtoa_r+0x218>
   843f0:	2d00      	cmp	r5, #0
   843f2:	f43f ad69 	beq.w	83ec8 <_dtoa_r+0x218>
   843f6:	9d07      	ldr	r5, [sp, #28]
   843f8:	e9cd ab12 	strd	sl, fp, [sp, #72]	; 0x48
   843fc:	2d00      	cmp	r5, #0
   843fe:	f340 821c 	ble.w	8483a <_dtoa_r+0xb8a>
   84402:	4b51      	ldr	r3, [pc, #324]	; (84548 <_dtoa_r+0x898>)
   84404:	f005 020f 	and.w	r2, r5, #15
   84408:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8440c:	112d      	asrs	r5, r5, #4
   8440e:	e9d3 6700 	ldrd	r6, r7, [r3]
   84412:	06eb      	lsls	r3, r5, #27
   84414:	f140 81cd 	bpl.w	847b2 <_dtoa_r+0xb02>
   84418:	4b4c      	ldr	r3, [pc, #304]	; (8454c <_dtoa_r+0x89c>)
   8441a:	4650      	mov	r0, sl
   8441c:	4659      	mov	r1, fp
   8441e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   84422:	f002 fdf5 	bl	87010 <__aeabi_ddiv>
   84426:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   8442a:	f005 050f 	and.w	r5, r5, #15
   8442e:	f04f 0803 	mov.w	r8, #3
   84432:	b18d      	cbz	r5, 84458 <_dtoa_r+0x7a8>
   84434:	f8df a114 	ldr.w	sl, [pc, #276]	; 8454c <_dtoa_r+0x89c>
   84438:	4630      	mov	r0, r6
   8443a:	4639      	mov	r1, r7
   8443c:	07ee      	lsls	r6, r5, #31
   8443e:	d505      	bpl.n	8444c <_dtoa_r+0x79c>
   84440:	e9da 2300 	ldrd	r2, r3, [sl]
   84444:	f108 0801 	add.w	r8, r8, #1
   84448:	f002 fcb8 	bl	86dbc <__aeabi_dmul>
   8444c:	106d      	asrs	r5, r5, #1
   8444e:	f10a 0a08 	add.w	sl, sl, #8
   84452:	d1f3      	bne.n	8443c <_dtoa_r+0x78c>
   84454:	4606      	mov	r6, r0
   84456:	460f      	mov	r7, r1
   84458:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   8445c:	4632      	mov	r2, r6
   8445e:	463b      	mov	r3, r7
   84460:	f002 fdd6 	bl	87010 <__aeabi_ddiv>
   84464:	4682      	mov	sl, r0
   84466:	468b      	mov	fp, r1
   84468:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   8446a:	b145      	cbz	r5, 8447e <_dtoa_r+0x7ce>
   8446c:	4650      	mov	r0, sl
   8446e:	4659      	mov	r1, fp
   84470:	2200      	movs	r2, #0
   84472:	4b37      	ldr	r3, [pc, #220]	; (84550 <_dtoa_r+0x8a0>)
   84474:	f002 ff14 	bl	872a0 <__aeabi_dcmplt>
   84478:	2800      	cmp	r0, #0
   8447a:	f040 82aa 	bne.w	849d2 <_dtoa_r+0xd22>
   8447e:	4640      	mov	r0, r8
   84480:	f002 fc36 	bl	86cf0 <__aeabi_i2d>
   84484:	4652      	mov	r2, sl
   84486:	465b      	mov	r3, fp
   84488:	f002 fc98 	bl	86dbc <__aeabi_dmul>
   8448c:	2200      	movs	r2, #0
   8448e:	4b31      	ldr	r3, [pc, #196]	; (84554 <_dtoa_r+0x8a4>)
   84490:	f002 fae2 	bl	86a58 <__adddf3>
   84494:	4606      	mov	r6, r0
   84496:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   8449a:	f1b9 0f00 	cmp.w	r9, #0
   8449e:	f000 815a 	beq.w	84756 <_dtoa_r+0xaa6>
   844a2:	9d07      	ldr	r5, [sp, #28]
   844a4:	46c8      	mov	r8, r9
   844a6:	9517      	str	r5, [sp, #92]	; 0x5c
   844a8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   844aa:	2d00      	cmp	r5, #0
   844ac:	f000 8223 	beq.w	848f6 <_dtoa_r+0xc46>
   844b0:	4b25      	ldr	r3, [pc, #148]	; (84548 <_dtoa_r+0x898>)
   844b2:	2000      	movs	r0, #0
   844b4:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
   844b8:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   844bc:	4926      	ldr	r1, [pc, #152]	; (84558 <_dtoa_r+0x8a8>)
   844be:	f002 fda7 	bl	87010 <__aeabi_ddiv>
   844c2:	4632      	mov	r2, r6
   844c4:	463b      	mov	r3, r7
   844c6:	f002 fac5 	bl	86a54 <__aeabi_dsub>
   844ca:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   844ce:	4659      	mov	r1, fp
   844d0:	4650      	mov	r0, sl
   844d2:	f002 ff0d 	bl	872f0 <__aeabi_d2iz>
   844d6:	4605      	mov	r5, r0
   844d8:	f002 fc0a 	bl	86cf0 <__aeabi_i2d>
   844dc:	4602      	mov	r2, r0
   844de:	460b      	mov	r3, r1
   844e0:	4650      	mov	r0, sl
   844e2:	4659      	mov	r1, fp
   844e4:	f002 fab6 	bl	86a54 <__aeabi_dsub>
   844e8:	3530      	adds	r5, #48	; 0x30
   844ea:	9e09      	ldr	r6, [sp, #36]	; 0x24
   844ec:	e9cd 0104 	strd	r0, r1, [sp, #16]
   844f0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   844f4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   844f8:	b2ed      	uxtb	r5, r5
   844fa:	7035      	strb	r5, [r6, #0]
   844fc:	f106 0b01 	add.w	fp, r6, #1
   84500:	f002 feec 	bl	872dc <__aeabi_dcmpgt>
   84504:	2800      	cmp	r0, #0
   84506:	f040 82ab 	bne.w	84a60 <_dtoa_r+0xdb0>
   8450a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   8450e:	2000      	movs	r0, #0
   84510:	490f      	ldr	r1, [pc, #60]	; (84550 <_dtoa_r+0x8a0>)
   84512:	f002 fa9f 	bl	86a54 <__aeabi_dsub>
   84516:	4602      	mov	r2, r0
   84518:	460b      	mov	r3, r1
   8451a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   8451e:	f002 fedd 	bl	872dc <__aeabi_dcmpgt>
   84522:	2800      	cmp	r0, #0
   84524:	f040 82a2 	bne.w	84a6c <_dtoa_r+0xdbc>
   84528:	f1b8 0f01 	cmp.w	r8, #1
   8452c:	f340 8181 	ble.w	84832 <_dtoa_r+0xb82>
   84530:	44b0      	add	r8, r6
   84532:	f8cd 9050 	str.w	r9, [sp, #80]	; 0x50
   84536:	46a2      	mov	sl, r4
   84538:	46c1      	mov	r9, r8
   8453a:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   8453e:	e9dd 4510 	ldrd	r4, r5, [sp, #64]	; 0x40
   84542:	e019      	b.n	84578 <_dtoa_r+0x8c8>
   84544:	fffffbee 	.word	0xfffffbee
   84548:	00087a80 	.word	0x00087a80
   8454c:	00087b48 	.word	0x00087b48
   84550:	3ff00000 	.word	0x3ff00000
   84554:	401c0000 	.word	0x401c0000
   84558:	3fe00000 	.word	0x3fe00000
   8455c:	2000      	movs	r0, #0
   8455e:	49a8      	ldr	r1, [pc, #672]	; (84800 <_dtoa_r+0xb50>)
   84560:	f002 fa78 	bl	86a54 <__aeabi_dsub>
   84564:	4622      	mov	r2, r4
   84566:	462b      	mov	r3, r5
   84568:	f002 fe9a 	bl	872a0 <__aeabi_dcmplt>
   8456c:	2800      	cmp	r0, #0
   8456e:	f040 827b 	bne.w	84a68 <_dtoa_r+0xdb8>
   84572:	45cb      	cmp	fp, r9
   84574:	f000 815a 	beq.w	8482c <_dtoa_r+0xb7c>
   84578:	4620      	mov	r0, r4
   8457a:	4629      	mov	r1, r5
   8457c:	2200      	movs	r2, #0
   8457e:	4ba1      	ldr	r3, [pc, #644]	; (84804 <_dtoa_r+0xb54>)
   84580:	f002 fc1c 	bl	86dbc <__aeabi_dmul>
   84584:	2200      	movs	r2, #0
   84586:	4b9f      	ldr	r3, [pc, #636]	; (84804 <_dtoa_r+0xb54>)
   84588:	4604      	mov	r4, r0
   8458a:	460d      	mov	r5, r1
   8458c:	4630      	mov	r0, r6
   8458e:	4639      	mov	r1, r7
   84590:	f002 fc14 	bl	86dbc <__aeabi_dmul>
   84594:	460f      	mov	r7, r1
   84596:	4606      	mov	r6, r0
   84598:	f002 feaa 	bl	872f0 <__aeabi_d2iz>
   8459c:	4680      	mov	r8, r0
   8459e:	f002 fba7 	bl	86cf0 <__aeabi_i2d>
   845a2:	4602      	mov	r2, r0
   845a4:	460b      	mov	r3, r1
   845a6:	4630      	mov	r0, r6
   845a8:	4639      	mov	r1, r7
   845aa:	f002 fa53 	bl	86a54 <__aeabi_dsub>
   845ae:	f108 0830 	add.w	r8, r8, #48	; 0x30
   845b2:	fa5f f888 	uxtb.w	r8, r8
   845b6:	4622      	mov	r2, r4
   845b8:	462b      	mov	r3, r5
   845ba:	f80b 8b01 	strb.w	r8, [fp], #1
   845be:	4606      	mov	r6, r0
   845c0:	460f      	mov	r7, r1
   845c2:	f002 fe6d 	bl	872a0 <__aeabi_dcmplt>
   845c6:	4632      	mov	r2, r6
   845c8:	463b      	mov	r3, r7
   845ca:	2800      	cmp	r0, #0
   845cc:	d0c6      	beq.n	8455c <_dtoa_r+0x8ac>
   845ce:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   845d0:	4654      	mov	r4, sl
   845d2:	9607      	str	r6, [sp, #28]
   845d4:	e539      	b.n	8404a <_dtoa_r+0x39a>
   845d6:	2600      	movs	r6, #0
   845d8:	960b      	str	r6, [sp, #44]	; 0x2c
   845da:	9825      	ldr	r0, [sp, #148]	; 0x94
   845dc:	2800      	cmp	r0, #0
   845de:	dd3c      	ble.n	8465a <_dtoa_r+0x9aa>
   845e0:	4606      	mov	r6, r0
   845e2:	900f      	str	r0, [sp, #60]	; 0x3c
   845e4:	4681      	mov	r9, r0
   845e6:	e6ec      	b.n	843c2 <_dtoa_r+0x712>
   845e8:	2601      	movs	r6, #1
   845ea:	960b      	str	r6, [sp, #44]	; 0x2c
   845ec:	e7f5      	b.n	845da <_dtoa_r+0x92a>
   845ee:	f1b9 0f00 	cmp.w	r9, #0
   845f2:	f73f ac7c 	bgt.w	83eee <_dtoa_r+0x23e>
   845f6:	f040 80c6 	bne.w	84786 <_dtoa_r+0xad6>
   845fa:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   845fe:	2200      	movs	r2, #0
   84600:	4b81      	ldr	r3, [pc, #516]	; (84808 <_dtoa_r+0xb58>)
   84602:	f002 fbdb 	bl	86dbc <__aeabi_dmul>
   84606:	4652      	mov	r2, sl
   84608:	465b      	mov	r3, fp
   8460a:	f002 fe5d 	bl	872c8 <__aeabi_dcmpge>
   8460e:	46c8      	mov	r8, r9
   84610:	464e      	mov	r6, r9
   84612:	2800      	cmp	r0, #0
   84614:	d07c      	beq.n	84710 <_dtoa_r+0xa60>
   84616:	9d25      	ldr	r5, [sp, #148]	; 0x94
   84618:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   8461c:	43ed      	mvns	r5, r5
   8461e:	9507      	str	r5, [sp, #28]
   84620:	4641      	mov	r1, r8
   84622:	4620      	mov	r0, r4
   84624:	f001 fadc 	bl	85be0 <_Bfree>
   84628:	2e00      	cmp	r6, #0
   8462a:	f47f ae06 	bne.w	8423a <_dtoa_r+0x58a>
   8462e:	e50c      	b.n	8404a <_dtoa_r+0x39a>
   84630:	990a      	ldr	r1, [sp, #40]	; 0x28
   84632:	4620      	mov	r0, r4
   84634:	f001 fc1e 	bl	85e74 <__pow5mult>
   84638:	900a      	str	r0, [sp, #40]	; 0x28
   8463a:	e56a      	b.n	84112 <_dtoa_r+0x462>
   8463c:	9d16      	ldr	r5, [sp, #88]	; 0x58
   8463e:	2d00      	cmp	r5, #0
   84640:	f000 81b8 	beq.w	849b4 <_dtoa_r+0xd04>
   84644:	f203 4333 	addw	r3, r3, #1075	; 0x433
   84648:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   8464a:	9d08      	ldr	r5, [sp, #32]
   8464c:	e527      	b.n	8409e <_dtoa_r+0x3ee>
   8464e:	4601      	mov	r1, r0
   84650:	4620      	mov	r0, r4
   84652:	f001 fac5 	bl	85be0 <_Bfree>
   84656:	2201      	movs	r2, #1
   84658:	e67a      	b.n	84350 <_dtoa_r+0x6a0>
   8465a:	2601      	movs	r6, #1
   8465c:	9625      	str	r6, [sp, #148]	; 0x94
   8465e:	960f      	str	r6, [sp, #60]	; 0x3c
   84660:	46b1      	mov	r9, r6
   84662:	2100      	movs	r1, #0
   84664:	6461      	str	r1, [r4, #68]	; 0x44
   84666:	e6bb      	b.n	843e0 <_dtoa_r+0x730>
   84668:	980a      	ldr	r0, [sp, #40]	; 0x28
   8466a:	4641      	mov	r1, r8
   8466c:	f001 fcae 	bl	85fcc <__mcmp>
   84670:	2800      	cmp	r0, #0
   84672:	f6bf ad8f 	bge.w	84194 <_dtoa_r+0x4e4>
   84676:	f8dd e01c 	ldr.w	lr, [sp, #28]
   8467a:	990a      	ldr	r1, [sp, #40]	; 0x28
   8467c:	f10e 3eff 	add.w	lr, lr, #4294967295
   84680:	4620      	mov	r0, r4
   84682:	220a      	movs	r2, #10
   84684:	2300      	movs	r3, #0
   84686:	f8cd e01c 	str.w	lr, [sp, #28]
   8468a:	f001 fab3 	bl	85bf4 <__multadd>
   8468e:	900a      	str	r0, [sp, #40]	; 0x28
   84690:	980b      	ldr	r0, [sp, #44]	; 0x2c
   84692:	2800      	cmp	r0, #0
   84694:	f040 8209 	bne.w	84aaa <_dtoa_r+0xdfa>
   84698:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
   8469c:	e57a      	b.n	84194 <_dtoa_r+0x4e4>
   8469e:	f8d8 3010 	ldr.w	r3, [r8, #16]
   846a2:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   846a6:	6918      	ldr	r0, [r3, #16]
   846a8:	f001 faee 	bl	85c88 <__hi0bits>
   846ac:	f1c0 0020 	rsb	r0, r0, #32
   846b0:	e547      	b.n	84142 <_dtoa_r+0x492>
   846b2:	9809      	ldr	r0, [sp, #36]	; 0x24
   846b4:	f7ff bb2c 	b.w	83d10 <_dtoa_r+0x60>
   846b8:	f1ba 0f00 	cmp.w	sl, #0
   846bc:	f47f ad3b 	bne.w	84136 <_dtoa_r+0x486>
   846c0:	f3cb 0313 	ubfx	r3, fp, #0, #20
   846c4:	2b00      	cmp	r3, #0
   846c6:	f040 817c 	bne.w	849c2 <_dtoa_r+0xd12>
   846ca:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   846ce:	0d3f      	lsrs	r7, r7, #20
   846d0:	053f      	lsls	r7, r7, #20
   846d2:	2f00      	cmp	r7, #0
   846d4:	f43f ad30 	beq.w	84138 <_dtoa_r+0x488>
   846d8:	9a08      	ldr	r2, [sp, #32]
   846da:	9b06      	ldr	r3, [sp, #24]
   846dc:	3201      	adds	r2, #1
   846de:	3301      	adds	r3, #1
   846e0:	9208      	str	r2, [sp, #32]
   846e2:	9306      	str	r3, [sp, #24]
   846e4:	2701      	movs	r7, #1
   846e6:	e527      	b.n	84138 <_dtoa_r+0x488>
   846e8:	9924      	ldr	r1, [sp, #144]	; 0x90
   846ea:	2902      	cmp	r1, #2
   846ec:	f77f ad56 	ble.w	8419c <_dtoa_r+0x4ec>
   846f0:	f1b9 0f00 	cmp.w	r9, #0
   846f4:	d18f      	bne.n	84616 <_dtoa_r+0x966>
   846f6:	4641      	mov	r1, r8
   846f8:	464b      	mov	r3, r9
   846fa:	2205      	movs	r2, #5
   846fc:	4620      	mov	r0, r4
   846fe:	f001 fa79 	bl	85bf4 <__multadd>
   84702:	4680      	mov	r8, r0
   84704:	4641      	mov	r1, r8
   84706:	980a      	ldr	r0, [sp, #40]	; 0x28
   84708:	f001 fc60 	bl	85fcc <__mcmp>
   8470c:	2800      	cmp	r0, #0
   8470e:	dd82      	ble.n	84616 <_dtoa_r+0x966>
   84710:	9d07      	ldr	r5, [sp, #28]
   84712:	2331      	movs	r3, #49	; 0x31
   84714:	3501      	adds	r5, #1
   84716:	9507      	str	r5, [sp, #28]
   84718:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8471a:	702b      	strb	r3, [r5, #0]
   8471c:	f105 0b01 	add.w	fp, r5, #1
   84720:	e77e      	b.n	84620 <_dtoa_r+0x970>
   84722:	9807      	ldr	r0, [sp, #28]
   84724:	9909      	ldr	r1, [sp, #36]	; 0x24
   84726:	2331      	movs	r3, #49	; 0x31
   84728:	3001      	adds	r0, #1
   8472a:	9007      	str	r0, [sp, #28]
   8472c:	700b      	strb	r3, [r1, #0]
   8472e:	e576      	b.n	8421e <_dtoa_r+0x56e>
   84730:	46a3      	mov	fp, r4
   84732:	9c03      	ldr	r4, [sp, #12]
   84734:	e489      	b.n	8404a <_dtoa_r+0x39a>
   84736:	4640      	mov	r0, r8
   84738:	f002 fada 	bl	86cf0 <__aeabi_i2d>
   8473c:	4602      	mov	r2, r0
   8473e:	460b      	mov	r3, r1
   84740:	4650      	mov	r0, sl
   84742:	4659      	mov	r1, fp
   84744:	f002 fb3a 	bl	86dbc <__aeabi_dmul>
   84748:	2200      	movs	r2, #0
   8474a:	4b30      	ldr	r3, [pc, #192]	; (8480c <_dtoa_r+0xb5c>)
   8474c:	f002 f984 	bl	86a58 <__adddf3>
   84750:	4606      	mov	r6, r0
   84752:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   84756:	4650      	mov	r0, sl
   84758:	4659      	mov	r1, fp
   8475a:	2200      	movs	r2, #0
   8475c:	4b2a      	ldr	r3, [pc, #168]	; (84808 <_dtoa_r+0xb58>)
   8475e:	f002 f979 	bl	86a54 <__aeabi_dsub>
   84762:	4632      	mov	r2, r6
   84764:	463b      	mov	r3, r7
   84766:	4682      	mov	sl, r0
   84768:	468b      	mov	fp, r1
   8476a:	f002 fdb7 	bl	872dc <__aeabi_dcmpgt>
   8476e:	2800      	cmp	r0, #0
   84770:	f040 80bd 	bne.w	848ee <_dtoa_r+0xc3e>
   84774:	4632      	mov	r2, r6
   84776:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
   8477a:	4650      	mov	r0, sl
   8477c:	4659      	mov	r1, fp
   8477e:	f002 fd8f 	bl	872a0 <__aeabi_dcmplt>
   84782:	2800      	cmp	r0, #0
   84784:	d055      	beq.n	84832 <_dtoa_r+0xb82>
   84786:	f04f 0800 	mov.w	r8, #0
   8478a:	4646      	mov	r6, r8
   8478c:	e743      	b.n	84616 <_dtoa_r+0x966>
   8478e:	990a      	ldr	r1, [sp, #40]	; 0x28
   84790:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   84792:	4620      	mov	r0, r4
   84794:	f001 fb6e 	bl	85e74 <__pow5mult>
   84798:	900a      	str	r0, [sp, #40]	; 0x28
   8479a:	e4ba      	b.n	84112 <_dtoa_r+0x462>
   8479c:	2601      	movs	r6, #1
   8479e:	960b      	str	r6, [sp, #44]	; 0x2c
   847a0:	e602      	b.n	843a8 <_dtoa_r+0x6f8>
   847a2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   847a4:	9e0d      	ldr	r6, [sp, #52]	; 0x34
   847a6:	1b7b      	subs	r3, r7, r5
   847a8:	441e      	add	r6, r3
   847aa:	970c      	str	r7, [sp, #48]	; 0x30
   847ac:	960d      	str	r6, [sp, #52]	; 0x34
   847ae:	2700      	movs	r7, #0
   847b0:	e46f      	b.n	84092 <_dtoa_r+0x3e2>
   847b2:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   847b6:	f04f 0802 	mov.w	r8, #2
   847ba:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   847be:	e638      	b.n	84432 <_dtoa_r+0x782>
   847c0:	2a00      	cmp	r2, #0
   847c2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   847c6:	46d9      	mov	r9, fp
   847c8:	dd11      	ble.n	847ee <_dtoa_r+0xb3e>
   847ca:	990a      	ldr	r1, [sp, #40]	; 0x28
   847cc:	2201      	movs	r2, #1
   847ce:	4620      	mov	r0, r4
   847d0:	f001 fb9e 	bl	85f10 <__lshift>
   847d4:	4641      	mov	r1, r8
   847d6:	900a      	str	r0, [sp, #40]	; 0x28
   847d8:	f001 fbf8 	bl	85fcc <__mcmp>
   847dc:	2800      	cmp	r0, #0
   847de:	f340 815d 	ble.w	84a9c <_dtoa_r+0xdec>
   847e2:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   847e6:	f000 811b 	beq.w	84a20 <_dtoa_r+0xd70>
   847ea:	f109 0a31 	add.w	sl, r9, #49	; 0x31
   847ee:	9b06      	ldr	r3, [sp, #24]
   847f0:	4635      	mov	r5, r6
   847f2:	f883 a000 	strb.w	sl, [r3]
   847f6:	f103 0b01 	add.w	fp, r3, #1
   847fa:	463e      	mov	r6, r7
   847fc:	e50f      	b.n	8421e <_dtoa_r+0x56e>
   847fe:	bf00      	nop
   84800:	3ff00000 	.word	0x3ff00000
   84804:	40240000 	.word	0x40240000
   84808:	40140000 	.word	0x40140000
   8480c:	401c0000 	.word	0x401c0000
   84810:	d103      	bne.n	8481a <_dtoa_r+0xb6a>
   84812:	f01a 0f01 	tst.w	sl, #1
   84816:	f47f acf2 	bne.w	841fe <_dtoa_r+0x54e>
   8481a:	465b      	mov	r3, fp
   8481c:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   84820:	469b      	mov	fp, r3
   84822:	2a30      	cmp	r2, #48	; 0x30
   84824:	f103 33ff 	add.w	r3, r3, #4294967295
   84828:	d0f8      	beq.n	8481c <_dtoa_r+0xb6c>
   8482a:	e4f8      	b.n	8421e <_dtoa_r+0x56e>
   8482c:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
   84830:	4654      	mov	r4, sl
   84832:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
   84836:	f7ff bb47 	b.w	83ec8 <_dtoa_r+0x218>
   8483a:	9e07      	ldr	r6, [sp, #28]
   8483c:	4275      	negs	r5, r6
   8483e:	2d00      	cmp	r5, #0
   84840:	f000 80c2 	beq.w	849c8 <_dtoa_r+0xd18>
   84844:	4ba3      	ldr	r3, [pc, #652]	; (84ad4 <_dtoa_r+0xe24>)
   84846:	f005 020f 	and.w	r2, r5, #15
   8484a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8484e:	e9d3 2300 	ldrd	r2, r3, [r3]
   84852:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   84856:	f002 fab1 	bl	86dbc <__aeabi_dmul>
   8485a:	112d      	asrs	r5, r5, #4
   8485c:	4682      	mov	sl, r0
   8485e:	468b      	mov	fp, r1
   84860:	f000 812e 	beq.w	84ac0 <_dtoa_r+0xe10>
   84864:	4e9c      	ldr	r6, [pc, #624]	; (84ad8 <_dtoa_r+0xe28>)
   84866:	f04f 0802 	mov.w	r8, #2
   8486a:	07ea      	lsls	r2, r5, #31
   8486c:	d505      	bpl.n	8487a <_dtoa_r+0xbca>
   8486e:	e9d6 2300 	ldrd	r2, r3, [r6]
   84872:	f108 0801 	add.w	r8, r8, #1
   84876:	f002 faa1 	bl	86dbc <__aeabi_dmul>
   8487a:	106d      	asrs	r5, r5, #1
   8487c:	f106 0608 	add.w	r6, r6, #8
   84880:	d1f3      	bne.n	8486a <_dtoa_r+0xbba>
   84882:	4682      	mov	sl, r0
   84884:	468b      	mov	fp, r1
   84886:	e5ef      	b.n	84468 <_dtoa_r+0x7b8>
   84888:	9e07      	ldr	r6, [sp, #28]
   8488a:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8488c:	2230      	movs	r2, #48	; 0x30
   8488e:	702a      	strb	r2, [r5, #0]
   84890:	3601      	adds	r6, #1
   84892:	2231      	movs	r2, #49	; 0x31
   84894:	9607      	str	r6, [sp, #28]
   84896:	701a      	strb	r2, [r3, #0]
   84898:	f7ff bbd7 	b.w	8404a <_dtoa_r+0x39a>
   8489c:	6871      	ldr	r1, [r6, #4]
   8489e:	4620      	mov	r0, r4
   848a0:	f001 f978 	bl	85b94 <_Balloc>
   848a4:	6933      	ldr	r3, [r6, #16]
   848a6:	4605      	mov	r5, r0
   848a8:	1c9a      	adds	r2, r3, #2
   848aa:	0092      	lsls	r2, r2, #2
   848ac:	f106 010c 	add.w	r1, r6, #12
   848b0:	300c      	adds	r0, #12
   848b2:	f7fc fde9 	bl	81488 <memcpy>
   848b6:	4620      	mov	r0, r4
   848b8:	4629      	mov	r1, r5
   848ba:	2201      	movs	r2, #1
   848bc:	f001 fb28 	bl	85f10 <__lshift>
   848c0:	4607      	mov	r7, r0
   848c2:	e503      	b.n	842cc <_dtoa_r+0x61c>
   848c4:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   848c8:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   848cc:	f000 80a8 	beq.w	84a20 <_dtoa_r+0xd70>
   848d0:	9d06      	ldr	r5, [sp, #24]
   848d2:	f10a 0301 	add.w	r3, sl, #1
   848d6:	702b      	strb	r3, [r5, #0]
   848d8:	4635      	mov	r5, r6
   848da:	9e06      	ldr	r6, [sp, #24]
   848dc:	f106 0b01 	add.w	fp, r6, #1
   848e0:	463e      	mov	r6, r7
   848e2:	e49c      	b.n	8421e <_dtoa_r+0x56e>
   848e4:	4635      	mov	r5, r6
   848e6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   848ea:	463e      	mov	r6, r7
   848ec:	e47b      	b.n	841e6 <_dtoa_r+0x536>
   848ee:	f04f 0800 	mov.w	r8, #0
   848f2:	4646      	mov	r6, r8
   848f4:	e70c      	b.n	84710 <_dtoa_r+0xa60>
   848f6:	4977      	ldr	r1, [pc, #476]	; (84ad4 <_dtoa_r+0xe24>)
   848f8:	f108 35ff 	add.w	r5, r8, #4294967295
   848fc:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   84900:	4632      	mov	r2, r6
   84902:	463b      	mov	r3, r7
   84904:	e9d1 0100 	ldrd	r0, r1, [r1]
   84908:	9510      	str	r5, [sp, #64]	; 0x40
   8490a:	f002 fa57 	bl	86dbc <__aeabi_dmul>
   8490e:	e9cd 0114 	strd	r0, r1, [sp, #80]	; 0x50
   84912:	4659      	mov	r1, fp
   84914:	4650      	mov	r0, sl
   84916:	f002 fceb 	bl	872f0 <__aeabi_d2iz>
   8491a:	4605      	mov	r5, r0
   8491c:	f002 f9e8 	bl	86cf0 <__aeabi_i2d>
   84920:	4602      	mov	r2, r0
   84922:	460b      	mov	r3, r1
   84924:	4650      	mov	r0, sl
   84926:	4659      	mov	r1, fp
   84928:	f002 f894 	bl	86a54 <__aeabi_dsub>
   8492c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
   84930:	3530      	adds	r5, #48	; 0x30
   84932:	f1b8 0f01 	cmp.w	r8, #1
   84936:	4606      	mov	r6, r0
   84938:	460f      	mov	r7, r1
   8493a:	f88e 5000 	strb.w	r5, [lr]
   8493e:	f10e 0b01 	add.w	fp, lr, #1
   84942:	d01e      	beq.n	84982 <_dtoa_r+0xcd2>
   84944:	9d09      	ldr	r5, [sp, #36]	; 0x24
   84946:	1e6b      	subs	r3, r5, #1
   84948:	eb03 0a08 	add.w	sl, r3, r8
   8494c:	2200      	movs	r2, #0
   8494e:	4b63      	ldr	r3, [pc, #396]	; (84adc <_dtoa_r+0xe2c>)
   84950:	f002 fa34 	bl	86dbc <__aeabi_dmul>
   84954:	460f      	mov	r7, r1
   84956:	4606      	mov	r6, r0
   84958:	f002 fcca 	bl	872f0 <__aeabi_d2iz>
   8495c:	4680      	mov	r8, r0
   8495e:	f002 f9c7 	bl	86cf0 <__aeabi_i2d>
   84962:	f108 0830 	add.w	r8, r8, #48	; 0x30
   84966:	4602      	mov	r2, r0
   84968:	460b      	mov	r3, r1
   8496a:	4630      	mov	r0, r6
   8496c:	4639      	mov	r1, r7
   8496e:	f002 f871 	bl	86a54 <__aeabi_dsub>
   84972:	f805 8f01 	strb.w	r8, [r5, #1]!
   84976:	4555      	cmp	r5, sl
   84978:	d1e8      	bne.n	8494c <_dtoa_r+0xc9c>
   8497a:	9d10      	ldr	r5, [sp, #64]	; 0x40
   8497c:	4606      	mov	r6, r0
   8497e:	460f      	mov	r7, r1
   84980:	44ab      	add	fp, r5
   84982:	2200      	movs	r2, #0
   84984:	4b56      	ldr	r3, [pc, #344]	; (84ae0 <_dtoa_r+0xe30>)
   84986:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   8498a:	f002 f865 	bl	86a58 <__adddf3>
   8498e:	4632      	mov	r2, r6
   84990:	463b      	mov	r3, r7
   84992:	f002 fc85 	bl	872a0 <__aeabi_dcmplt>
   84996:	2800      	cmp	r0, #0
   84998:	d04d      	beq.n	84a36 <_dtoa_r+0xd86>
   8499a:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   8499c:	9a09      	ldr	r2, [sp, #36]	; 0x24
   8499e:	9607      	str	r6, [sp, #28]
   849a0:	f81b 5c01 	ldrb.w	r5, [fp, #-1]
   849a4:	f7ff bb4a 	b.w	8403c <_dtoa_r+0x38c>
   849a8:	9e08      	ldr	r6, [sp, #32]
   849aa:	2300      	movs	r3, #0
   849ac:	ebc9 0506 	rsb	r5, r9, r6
   849b0:	f7ff bb75 	b.w	8409e <_dtoa_r+0x3ee>
   849b4:	9b18      	ldr	r3, [sp, #96]	; 0x60
   849b6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   849b8:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   849bc:	9d08      	ldr	r5, [sp, #32]
   849be:	f7ff bb6e 	b.w	8409e <_dtoa_r+0x3ee>
   849c2:	4657      	mov	r7, sl
   849c4:	f7ff bbb8 	b.w	84138 <_dtoa_r+0x488>
   849c8:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
   849cc:	f04f 0802 	mov.w	r8, #2
   849d0:	e54a      	b.n	84468 <_dtoa_r+0x7b8>
   849d2:	f1b9 0f00 	cmp.w	r9, #0
   849d6:	f43f aeae 	beq.w	84736 <_dtoa_r+0xa86>
   849da:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
   849dc:	2e00      	cmp	r6, #0
   849de:	f77f af28 	ble.w	84832 <_dtoa_r+0xb82>
   849e2:	2200      	movs	r2, #0
   849e4:	4b3d      	ldr	r3, [pc, #244]	; (84adc <_dtoa_r+0xe2c>)
   849e6:	4650      	mov	r0, sl
   849e8:	4659      	mov	r1, fp
   849ea:	f002 f9e7 	bl	86dbc <__aeabi_dmul>
   849ee:	4682      	mov	sl, r0
   849f0:	f108 0001 	add.w	r0, r8, #1
   849f4:	468b      	mov	fp, r1
   849f6:	f002 f97b 	bl	86cf0 <__aeabi_i2d>
   849fa:	4602      	mov	r2, r0
   849fc:	460b      	mov	r3, r1
   849fe:	4650      	mov	r0, sl
   84a00:	4659      	mov	r1, fp
   84a02:	f002 f9db 	bl	86dbc <__aeabi_dmul>
   84a06:	2200      	movs	r2, #0
   84a08:	4b36      	ldr	r3, [pc, #216]	; (84ae4 <_dtoa_r+0xe34>)
   84a0a:	f002 f825 	bl	86a58 <__adddf3>
   84a0e:	9d07      	ldr	r5, [sp, #28]
   84a10:	4606      	mov	r6, r0
   84a12:	3d01      	subs	r5, #1
   84a14:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   84a18:	9517      	str	r5, [sp, #92]	; 0x5c
   84a1a:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
   84a1e:	e543      	b.n	844a8 <_dtoa_r+0x7f8>
   84a20:	4635      	mov	r5, r6
   84a22:	9b06      	ldr	r3, [sp, #24]
   84a24:	9e06      	ldr	r6, [sp, #24]
   84a26:	2239      	movs	r2, #57	; 0x39
   84a28:	7032      	strb	r2, [r6, #0]
   84a2a:	f103 0b01 	add.w	fp, r3, #1
   84a2e:	463e      	mov	r6, r7
   84a30:	9909      	ldr	r1, [sp, #36]	; 0x24
   84a32:	f7ff bbee 	b.w	84212 <_dtoa_r+0x562>
   84a36:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
   84a3a:	2000      	movs	r0, #0
   84a3c:	4928      	ldr	r1, [pc, #160]	; (84ae0 <_dtoa_r+0xe30>)
   84a3e:	f002 f809 	bl	86a54 <__aeabi_dsub>
   84a42:	4632      	mov	r2, r6
   84a44:	463b      	mov	r3, r7
   84a46:	f002 fc49 	bl	872dc <__aeabi_dcmpgt>
   84a4a:	2800      	cmp	r0, #0
   84a4c:	f43f aef1 	beq.w	84832 <_dtoa_r+0xb82>
   84a50:	465b      	mov	r3, fp
   84a52:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   84a56:	469b      	mov	fp, r3
   84a58:	2a30      	cmp	r2, #48	; 0x30
   84a5a:	f103 33ff 	add.w	r3, r3, #4294967295
   84a5e:	d0f8      	beq.n	84a52 <_dtoa_r+0xda2>
   84a60:	9d17      	ldr	r5, [sp, #92]	; 0x5c
   84a62:	9507      	str	r5, [sp, #28]
   84a64:	f7ff baf1 	b.w	8404a <_dtoa_r+0x39a>
   84a68:	4645      	mov	r5, r8
   84a6a:	4654      	mov	r4, sl
   84a6c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   84a6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
   84a70:	9607      	str	r6, [sp, #28]
   84a72:	f7ff bae3 	b.w	8403c <_dtoa_r+0x38c>
   84a76:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   84a7a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   84a7e:	d0cf      	beq.n	84a20 <_dtoa_r+0xd70>
   84a80:	9b03      	ldr	r3, [sp, #12]
   84a82:	4635      	mov	r5, r6
   84a84:	2b00      	cmp	r3, #0
   84a86:	9e06      	ldr	r6, [sp, #24]
   84a88:	bfc8      	it	gt
   84a8a:	f10b 0a31 	addgt.w	sl, fp, #49	; 0x31
   84a8e:	f886 a000 	strb.w	sl, [r6]
   84a92:	f106 0b01 	add.w	fp, r6, #1
   84a96:	463e      	mov	r6, r7
   84a98:	f7ff bbc1 	b.w	8421e <_dtoa_r+0x56e>
   84a9c:	f47f aea7 	bne.w	847ee <_dtoa_r+0xb3e>
   84aa0:	f01a 0f01 	tst.w	sl, #1
   84aa4:	f43f aea3 	beq.w	847ee <_dtoa_r+0xb3e>
   84aa8:	e69b      	b.n	847e2 <_dtoa_r+0xb32>
   84aaa:	4631      	mov	r1, r6
   84aac:	4620      	mov	r0, r4
   84aae:	220a      	movs	r2, #10
   84ab0:	2300      	movs	r3, #0
   84ab2:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
   84ab6:	f001 f89d 	bl	85bf4 <__multadd>
   84aba:	4606      	mov	r6, r0
   84abc:	f7ff bb6a 	b.w	84194 <_dtoa_r+0x4e4>
   84ac0:	f04f 0802 	mov.w	r8, #2
   84ac4:	e4d0      	b.n	84468 <_dtoa_r+0x7b8>
   84ac6:	f43f ab50 	beq.w	8416a <_dtoa_r+0x4ba>
   84aca:	f1c3 033c 	rsb	r3, r3, #60	; 0x3c
   84ace:	f7ff bbe0 	b.w	84292 <_dtoa_r+0x5e2>
   84ad2:	bf00      	nop
   84ad4:	00087a80 	.word	0x00087a80
   84ad8:	00087b48 	.word	0x00087b48
   84adc:	40240000 	.word	0x40240000
   84ae0:	3fe00000 	.word	0x3fe00000
   84ae4:	401c0000 	.word	0x401c0000

00084ae8 <__sflush_r>:
   84ae8:	898b      	ldrh	r3, [r1, #12]
   84aea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84aee:	b29a      	uxth	r2, r3
   84af0:	460d      	mov	r5, r1
   84af2:	0711      	lsls	r1, r2, #28
   84af4:	4680      	mov	r8, r0
   84af6:	d43c      	bmi.n	84b72 <__sflush_r+0x8a>
   84af8:	686a      	ldr	r2, [r5, #4]
   84afa:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   84afe:	2a00      	cmp	r2, #0
   84b00:	81ab      	strh	r3, [r5, #12]
   84b02:	dd59      	ble.n	84bb8 <__sflush_r+0xd0>
   84b04:	6aac      	ldr	r4, [r5, #40]	; 0x28
   84b06:	2c00      	cmp	r4, #0
   84b08:	d04b      	beq.n	84ba2 <__sflush_r+0xba>
   84b0a:	b29b      	uxth	r3, r3
   84b0c:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
   84b10:	2100      	movs	r1, #0
   84b12:	b292      	uxth	r2, r2
   84b14:	f8d8 6000 	ldr.w	r6, [r8]
   84b18:	f8c8 1000 	str.w	r1, [r8]
   84b1c:	2a00      	cmp	r2, #0
   84b1e:	d04f      	beq.n	84bc0 <__sflush_r+0xd8>
   84b20:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   84b22:	075f      	lsls	r7, r3, #29
   84b24:	d505      	bpl.n	84b32 <__sflush_r+0x4a>
   84b26:	6869      	ldr	r1, [r5, #4]
   84b28:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   84b2a:	1a52      	subs	r2, r2, r1
   84b2c:	b10b      	cbz	r3, 84b32 <__sflush_r+0x4a>
   84b2e:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   84b30:	1ad2      	subs	r2, r2, r3
   84b32:	4640      	mov	r0, r8
   84b34:	69e9      	ldr	r1, [r5, #28]
   84b36:	2300      	movs	r3, #0
   84b38:	47a0      	blx	r4
   84b3a:	1c44      	adds	r4, r0, #1
   84b3c:	d04a      	beq.n	84bd4 <__sflush_r+0xec>
   84b3e:	89ab      	ldrh	r3, [r5, #12]
   84b40:	692a      	ldr	r2, [r5, #16]
   84b42:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   84b46:	b29b      	uxth	r3, r3
   84b48:	2100      	movs	r1, #0
   84b4a:	602a      	str	r2, [r5, #0]
   84b4c:	04da      	lsls	r2, r3, #19
   84b4e:	81ab      	strh	r3, [r5, #12]
   84b50:	6069      	str	r1, [r5, #4]
   84b52:	d44c      	bmi.n	84bee <__sflush_r+0x106>
   84b54:	6b29      	ldr	r1, [r5, #48]	; 0x30
   84b56:	f8c8 6000 	str.w	r6, [r8]
   84b5a:	b311      	cbz	r1, 84ba2 <__sflush_r+0xba>
   84b5c:	f105 0340 	add.w	r3, r5, #64	; 0x40
   84b60:	4299      	cmp	r1, r3
   84b62:	d002      	beq.n	84b6a <__sflush_r+0x82>
   84b64:	4640      	mov	r0, r8
   84b66:	f000 f9c3 	bl	84ef0 <_free_r>
   84b6a:	2000      	movs	r0, #0
   84b6c:	6328      	str	r0, [r5, #48]	; 0x30
   84b6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   84b72:	692e      	ldr	r6, [r5, #16]
   84b74:	b1ae      	cbz	r6, 84ba2 <__sflush_r+0xba>
   84b76:	0791      	lsls	r1, r2, #30
   84b78:	682c      	ldr	r4, [r5, #0]
   84b7a:	bf0c      	ite	eq
   84b7c:	696b      	ldreq	r3, [r5, #20]
   84b7e:	2300      	movne	r3, #0
   84b80:	602e      	str	r6, [r5, #0]
   84b82:	1ba4      	subs	r4, r4, r6
   84b84:	60ab      	str	r3, [r5, #8]
   84b86:	e00a      	b.n	84b9e <__sflush_r+0xb6>
   84b88:	4632      	mov	r2, r6
   84b8a:	4623      	mov	r3, r4
   84b8c:	6a6f      	ldr	r7, [r5, #36]	; 0x24
   84b8e:	4640      	mov	r0, r8
   84b90:	69e9      	ldr	r1, [r5, #28]
   84b92:	47b8      	blx	r7
   84b94:	2800      	cmp	r0, #0
   84b96:	ebc0 0404 	rsb	r4, r0, r4
   84b9a:	4406      	add	r6, r0
   84b9c:	dd04      	ble.n	84ba8 <__sflush_r+0xc0>
   84b9e:	2c00      	cmp	r4, #0
   84ba0:	dcf2      	bgt.n	84b88 <__sflush_r+0xa0>
   84ba2:	2000      	movs	r0, #0
   84ba4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   84ba8:	89ab      	ldrh	r3, [r5, #12]
   84baa:	f04f 30ff 	mov.w	r0, #4294967295
   84bae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   84bb2:	81ab      	strh	r3, [r5, #12]
   84bb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   84bb8:	6bea      	ldr	r2, [r5, #60]	; 0x3c
   84bba:	2a00      	cmp	r2, #0
   84bbc:	dca2      	bgt.n	84b04 <__sflush_r+0x1c>
   84bbe:	e7f0      	b.n	84ba2 <__sflush_r+0xba>
   84bc0:	2301      	movs	r3, #1
   84bc2:	4640      	mov	r0, r8
   84bc4:	69e9      	ldr	r1, [r5, #28]
   84bc6:	47a0      	blx	r4
   84bc8:	1c43      	adds	r3, r0, #1
   84bca:	4602      	mov	r2, r0
   84bcc:	d01e      	beq.n	84c0c <__sflush_r+0x124>
   84bce:	89ab      	ldrh	r3, [r5, #12]
   84bd0:	6aac      	ldr	r4, [r5, #40]	; 0x28
   84bd2:	e7a6      	b.n	84b22 <__sflush_r+0x3a>
   84bd4:	f8d8 3000 	ldr.w	r3, [r8]
   84bd8:	b95b      	cbnz	r3, 84bf2 <__sflush_r+0x10a>
   84bda:	89aa      	ldrh	r2, [r5, #12]
   84bdc:	6929      	ldr	r1, [r5, #16]
   84bde:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   84be2:	b292      	uxth	r2, r2
   84be4:	606b      	str	r3, [r5, #4]
   84be6:	04d3      	lsls	r3, r2, #19
   84be8:	81aa      	strh	r2, [r5, #12]
   84bea:	6029      	str	r1, [r5, #0]
   84bec:	d5b2      	bpl.n	84b54 <__sflush_r+0x6c>
   84bee:	6528      	str	r0, [r5, #80]	; 0x50
   84bf0:	e7b0      	b.n	84b54 <__sflush_r+0x6c>
   84bf2:	2b1d      	cmp	r3, #29
   84bf4:	d001      	beq.n	84bfa <__sflush_r+0x112>
   84bf6:	2b16      	cmp	r3, #22
   84bf8:	d113      	bne.n	84c22 <__sflush_r+0x13a>
   84bfa:	89a9      	ldrh	r1, [r5, #12]
   84bfc:	692b      	ldr	r3, [r5, #16]
   84bfe:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
   84c02:	2200      	movs	r2, #0
   84c04:	81a9      	strh	r1, [r5, #12]
   84c06:	602b      	str	r3, [r5, #0]
   84c08:	606a      	str	r2, [r5, #4]
   84c0a:	e7a3      	b.n	84b54 <__sflush_r+0x6c>
   84c0c:	f8d8 3000 	ldr.w	r3, [r8]
   84c10:	2b00      	cmp	r3, #0
   84c12:	d0dc      	beq.n	84bce <__sflush_r+0xe6>
   84c14:	2b1d      	cmp	r3, #29
   84c16:	d001      	beq.n	84c1c <__sflush_r+0x134>
   84c18:	2b16      	cmp	r3, #22
   84c1a:	d1c5      	bne.n	84ba8 <__sflush_r+0xc0>
   84c1c:	f8c8 6000 	str.w	r6, [r8]
   84c20:	e7bf      	b.n	84ba2 <__sflush_r+0xba>
   84c22:	89ab      	ldrh	r3, [r5, #12]
   84c24:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   84c28:	81ab      	strh	r3, [r5, #12]
   84c2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   84c2e:	bf00      	nop

00084c30 <_fflush_r>:
   84c30:	b510      	push	{r4, lr}
   84c32:	4604      	mov	r4, r0
   84c34:	b082      	sub	sp, #8
   84c36:	b108      	cbz	r0, 84c3c <_fflush_r+0xc>
   84c38:	6b83      	ldr	r3, [r0, #56]	; 0x38
   84c3a:	b153      	cbz	r3, 84c52 <_fflush_r+0x22>
   84c3c:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
   84c40:	b908      	cbnz	r0, 84c46 <_fflush_r+0x16>
   84c42:	b002      	add	sp, #8
   84c44:	bd10      	pop	{r4, pc}
   84c46:	4620      	mov	r0, r4
   84c48:	b002      	add	sp, #8
   84c4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   84c4e:	f7ff bf4b 	b.w	84ae8 <__sflush_r>
   84c52:	9101      	str	r1, [sp, #4]
   84c54:	f000 f808 	bl	84c68 <__sinit>
   84c58:	9901      	ldr	r1, [sp, #4]
   84c5a:	e7ef      	b.n	84c3c <_fflush_r+0xc>

00084c5c <_cleanup_r>:
   84c5c:	4901      	ldr	r1, [pc, #4]	; (84c64 <_cleanup_r+0x8>)
   84c5e:	f000 bb9f 	b.w	853a0 <_fwalk>
   84c62:	bf00      	nop
   84c64:	000869a1 	.word	0x000869a1

00084c68 <__sinit>:
   84c68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84c6c:	6b84      	ldr	r4, [r0, #56]	; 0x38
   84c6e:	b083      	sub	sp, #12
   84c70:	4607      	mov	r7, r0
   84c72:	2c00      	cmp	r4, #0
   84c74:	d165      	bne.n	84d42 <__sinit+0xda>
   84c76:	687d      	ldr	r5, [r7, #4]
   84c78:	4833      	ldr	r0, [pc, #204]	; (84d48 <__sinit+0xe0>)
   84c7a:	2304      	movs	r3, #4
   84c7c:	2103      	movs	r1, #3
   84c7e:	f507 723b 	add.w	r2, r7, #748	; 0x2ec
   84c82:	63f8      	str	r0, [r7, #60]	; 0x3c
   84c84:	f8c7 12e4 	str.w	r1, [r7, #740]	; 0x2e4
   84c88:	f8c7 22e8 	str.w	r2, [r7, #744]	; 0x2e8
   84c8c:	f8c7 42e0 	str.w	r4, [r7, #736]	; 0x2e0
   84c90:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   84c94:	81ab      	strh	r3, [r5, #12]
   84c96:	602c      	str	r4, [r5, #0]
   84c98:	606c      	str	r4, [r5, #4]
   84c9a:	60ac      	str	r4, [r5, #8]
   84c9c:	666c      	str	r4, [r5, #100]	; 0x64
   84c9e:	81ec      	strh	r4, [r5, #14]
   84ca0:	612c      	str	r4, [r5, #16]
   84ca2:	616c      	str	r4, [r5, #20]
   84ca4:	61ac      	str	r4, [r5, #24]
   84ca6:	4621      	mov	r1, r4
   84ca8:	2208      	movs	r2, #8
   84caa:	f7fc fc63 	bl	81574 <memset>
   84cae:	f8df b09c 	ldr.w	fp, [pc, #156]	; 84d4c <__sinit+0xe4>
   84cb2:	68be      	ldr	r6, [r7, #8]
   84cb4:	f8df a098 	ldr.w	sl, [pc, #152]	; 84d50 <__sinit+0xe8>
   84cb8:	f8df 9098 	ldr.w	r9, [pc, #152]	; 84d54 <__sinit+0xec>
   84cbc:	f8df 8098 	ldr.w	r8, [pc, #152]	; 84d58 <__sinit+0xf0>
   84cc0:	2301      	movs	r3, #1
   84cc2:	2209      	movs	r2, #9
   84cc4:	61ed      	str	r5, [r5, #28]
   84cc6:	f8c5 b020 	str.w	fp, [r5, #32]
   84cca:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
   84cce:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
   84cd2:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
   84cd6:	4621      	mov	r1, r4
   84cd8:	81f3      	strh	r3, [r6, #14]
   84cda:	81b2      	strh	r2, [r6, #12]
   84cdc:	6034      	str	r4, [r6, #0]
   84cde:	6074      	str	r4, [r6, #4]
   84ce0:	60b4      	str	r4, [r6, #8]
   84ce2:	6674      	str	r4, [r6, #100]	; 0x64
   84ce4:	6134      	str	r4, [r6, #16]
   84ce6:	6174      	str	r4, [r6, #20]
   84ce8:	61b4      	str	r4, [r6, #24]
   84cea:	2208      	movs	r2, #8
   84cec:	f106 005c 	add.w	r0, r6, #92	; 0x5c
   84cf0:	9301      	str	r3, [sp, #4]
   84cf2:	f7fc fc3f 	bl	81574 <memset>
   84cf6:	68fd      	ldr	r5, [r7, #12]
   84cf8:	2012      	movs	r0, #18
   84cfa:	2202      	movs	r2, #2
   84cfc:	61f6      	str	r6, [r6, #28]
   84cfe:	f8c6 b020 	str.w	fp, [r6, #32]
   84d02:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
   84d06:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
   84d0a:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
   84d0e:	4621      	mov	r1, r4
   84d10:	81a8      	strh	r0, [r5, #12]
   84d12:	81ea      	strh	r2, [r5, #14]
   84d14:	602c      	str	r4, [r5, #0]
   84d16:	606c      	str	r4, [r5, #4]
   84d18:	60ac      	str	r4, [r5, #8]
   84d1a:	666c      	str	r4, [r5, #100]	; 0x64
   84d1c:	612c      	str	r4, [r5, #16]
   84d1e:	616c      	str	r4, [r5, #20]
   84d20:	61ac      	str	r4, [r5, #24]
   84d22:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   84d26:	2208      	movs	r2, #8
   84d28:	f7fc fc24 	bl	81574 <memset>
   84d2c:	9b01      	ldr	r3, [sp, #4]
   84d2e:	61ed      	str	r5, [r5, #28]
   84d30:	f8c5 b020 	str.w	fp, [r5, #32]
   84d34:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
   84d38:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
   84d3c:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
   84d40:	63bb      	str	r3, [r7, #56]	; 0x38
   84d42:	b003      	add	sp, #12
   84d44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84d48:	00084c5d 	.word	0x00084c5d
   84d4c:	000865dd 	.word	0x000865dd
   84d50:	00086601 	.word	0x00086601
   84d54:	00086639 	.word	0x00086639
   84d58:	00086659 	.word	0x00086659

00084d5c <__sfp_lock_acquire>:
   84d5c:	4770      	bx	lr
   84d5e:	bf00      	nop

00084d60 <__sfp_lock_release>:
   84d60:	4770      	bx	lr
   84d62:	bf00      	nop

00084d64 <__libc_fini_array>:
   84d64:	b538      	push	{r3, r4, r5, lr}
   84d66:	4d09      	ldr	r5, [pc, #36]	; (84d8c <__libc_fini_array+0x28>)
   84d68:	4c09      	ldr	r4, [pc, #36]	; (84d90 <__libc_fini_array+0x2c>)
   84d6a:	1b64      	subs	r4, r4, r5
   84d6c:	10a4      	asrs	r4, r4, #2
   84d6e:	bf18      	it	ne
   84d70:	eb05 0584 	addne.w	r5, r5, r4, lsl #2
   84d74:	d005      	beq.n	84d82 <__libc_fini_array+0x1e>
   84d76:	3c01      	subs	r4, #1
   84d78:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   84d7c:	4798      	blx	r3
   84d7e:	2c00      	cmp	r4, #0
   84d80:	d1f9      	bne.n	84d76 <__libc_fini_array+0x12>
   84d82:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   84d86:	f002 bf03 	b.w	87b90 <_fini>
   84d8a:	bf00      	nop
   84d8c:	00087b9c 	.word	0x00087b9c
   84d90:	00087ba0 	.word	0x00087ba0

00084d94 <_fputwc_r>:
   84d94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84d98:	8993      	ldrh	r3, [r2, #12]
   84d9a:	460f      	mov	r7, r1
   84d9c:	0499      	lsls	r1, r3, #18
   84d9e:	b082      	sub	sp, #8
   84da0:	4614      	mov	r4, r2
   84da2:	4680      	mov	r8, r0
   84da4:	d406      	bmi.n	84db4 <_fputwc_r+0x20>
   84da6:	6e52      	ldr	r2, [r2, #100]	; 0x64
   84da8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   84dac:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   84db0:	81a3      	strh	r3, [r4, #12]
   84db2:	6662      	str	r2, [r4, #100]	; 0x64
   84db4:	f000 fb1c 	bl	853f0 <__locale_mb_cur_max>
   84db8:	2801      	cmp	r0, #1
   84dba:	d03e      	beq.n	84e3a <_fputwc_r+0xa6>
   84dbc:	463a      	mov	r2, r7
   84dbe:	4640      	mov	r0, r8
   84dc0:	a901      	add	r1, sp, #4
   84dc2:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   84dc6:	f001 fccb 	bl	86760 <_wcrtomb_r>
   84dca:	1c42      	adds	r2, r0, #1
   84dcc:	4606      	mov	r6, r0
   84dce:	d02d      	beq.n	84e2c <_fputwc_r+0x98>
   84dd0:	2800      	cmp	r0, #0
   84dd2:	d03a      	beq.n	84e4a <_fputwc_r+0xb6>
   84dd4:	f89d 1004 	ldrb.w	r1, [sp, #4]
   84dd8:	2500      	movs	r5, #0
   84dda:	e009      	b.n	84df0 <_fputwc_r+0x5c>
   84ddc:	6823      	ldr	r3, [r4, #0]
   84dde:	7019      	strb	r1, [r3, #0]
   84de0:	6823      	ldr	r3, [r4, #0]
   84de2:	3301      	adds	r3, #1
   84de4:	6023      	str	r3, [r4, #0]
   84de6:	3501      	adds	r5, #1
   84de8:	42b5      	cmp	r5, r6
   84dea:	d22e      	bcs.n	84e4a <_fputwc_r+0xb6>
   84dec:	ab01      	add	r3, sp, #4
   84dee:	5ce9      	ldrb	r1, [r5, r3]
   84df0:	68a3      	ldr	r3, [r4, #8]
   84df2:	3b01      	subs	r3, #1
   84df4:	2b00      	cmp	r3, #0
   84df6:	60a3      	str	r3, [r4, #8]
   84df8:	daf0      	bge.n	84ddc <_fputwc_r+0x48>
   84dfa:	69a2      	ldr	r2, [r4, #24]
   84dfc:	4293      	cmp	r3, r2
   84dfe:	db06      	blt.n	84e0e <_fputwc_r+0x7a>
   84e00:	6823      	ldr	r3, [r4, #0]
   84e02:	7019      	strb	r1, [r3, #0]
   84e04:	6823      	ldr	r3, [r4, #0]
   84e06:	7819      	ldrb	r1, [r3, #0]
   84e08:	3301      	adds	r3, #1
   84e0a:	290a      	cmp	r1, #10
   84e0c:	d1ea      	bne.n	84de4 <_fputwc_r+0x50>
   84e0e:	4640      	mov	r0, r8
   84e10:	4622      	mov	r2, r4
   84e12:	f7fe fdeb 	bl	839ec <__swbuf_r>
   84e16:	f1b0 33ff 	subs.w	r3, r0, #4294967295
   84e1a:	4258      	negs	r0, r3
   84e1c:	4158      	adcs	r0, r3
   84e1e:	2800      	cmp	r0, #0
   84e20:	d0e1      	beq.n	84de6 <_fputwc_r+0x52>
   84e22:	f04f 30ff 	mov.w	r0, #4294967295
   84e26:	b002      	add	sp, #8
   84e28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   84e2c:	89a3      	ldrh	r3, [r4, #12]
   84e2e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   84e32:	81a3      	strh	r3, [r4, #12]
   84e34:	b002      	add	sp, #8
   84e36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   84e3a:	1e7b      	subs	r3, r7, #1
   84e3c:	2bfe      	cmp	r3, #254	; 0xfe
   84e3e:	d8bd      	bhi.n	84dbc <_fputwc_r+0x28>
   84e40:	b2f9      	uxtb	r1, r7
   84e42:	4606      	mov	r6, r0
   84e44:	f88d 1004 	strb.w	r1, [sp, #4]
   84e48:	e7c6      	b.n	84dd8 <_fputwc_r+0x44>
   84e4a:	4638      	mov	r0, r7
   84e4c:	b002      	add	sp, #8
   84e4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   84e52:	bf00      	nop

00084e54 <_malloc_trim_r>:
   84e54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   84e56:	4d23      	ldr	r5, [pc, #140]	; (84ee4 <_malloc_trim_r+0x90>)
   84e58:	460f      	mov	r7, r1
   84e5a:	4604      	mov	r4, r0
   84e5c:	f000 fe96 	bl	85b8c <__malloc_lock>
   84e60:	68ab      	ldr	r3, [r5, #8]
   84e62:	685e      	ldr	r6, [r3, #4]
   84e64:	f026 0603 	bic.w	r6, r6, #3
   84e68:	1bf1      	subs	r1, r6, r7
   84e6a:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
   84e6e:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   84e72:	f021 010f 	bic.w	r1, r1, #15
   84e76:	f5a1 5780 	sub.w	r7, r1, #4096	; 0x1000
   84e7a:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
   84e7e:	db07      	blt.n	84e90 <_malloc_trim_r+0x3c>
   84e80:	4620      	mov	r0, r4
   84e82:	2100      	movs	r1, #0
   84e84:	f001 fb98 	bl	865b8 <_sbrk_r>
   84e88:	68ab      	ldr	r3, [r5, #8]
   84e8a:	4433      	add	r3, r6
   84e8c:	4298      	cmp	r0, r3
   84e8e:	d004      	beq.n	84e9a <_malloc_trim_r+0x46>
   84e90:	4620      	mov	r0, r4
   84e92:	f000 fe7d 	bl	85b90 <__malloc_unlock>
   84e96:	2000      	movs	r0, #0
   84e98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84e9a:	4620      	mov	r0, r4
   84e9c:	4279      	negs	r1, r7
   84e9e:	f001 fb8b 	bl	865b8 <_sbrk_r>
   84ea2:	3001      	adds	r0, #1
   84ea4:	d00d      	beq.n	84ec2 <_malloc_trim_r+0x6e>
   84ea6:	4b10      	ldr	r3, [pc, #64]	; (84ee8 <_malloc_trim_r+0x94>)
   84ea8:	68aa      	ldr	r2, [r5, #8]
   84eaa:	6819      	ldr	r1, [r3, #0]
   84eac:	1bf6      	subs	r6, r6, r7
   84eae:	f046 0601 	orr.w	r6, r6, #1
   84eb2:	4620      	mov	r0, r4
   84eb4:	1bc9      	subs	r1, r1, r7
   84eb6:	6056      	str	r6, [r2, #4]
   84eb8:	6019      	str	r1, [r3, #0]
   84eba:	f000 fe69 	bl	85b90 <__malloc_unlock>
   84ebe:	2001      	movs	r0, #1
   84ec0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84ec2:	4620      	mov	r0, r4
   84ec4:	2100      	movs	r1, #0
   84ec6:	f001 fb77 	bl	865b8 <_sbrk_r>
   84eca:	68ab      	ldr	r3, [r5, #8]
   84ecc:	1ac2      	subs	r2, r0, r3
   84ece:	2a0f      	cmp	r2, #15
   84ed0:	ddde      	ble.n	84e90 <_malloc_trim_r+0x3c>
   84ed2:	4d06      	ldr	r5, [pc, #24]	; (84eec <_malloc_trim_r+0x98>)
   84ed4:	4904      	ldr	r1, [pc, #16]	; (84ee8 <_malloc_trim_r+0x94>)
   84ed6:	682d      	ldr	r5, [r5, #0]
   84ed8:	f042 0201 	orr.w	r2, r2, #1
   84edc:	1b40      	subs	r0, r0, r5
   84ede:	605a      	str	r2, [r3, #4]
   84ee0:	6008      	str	r0, [r1, #0]
   84ee2:	e7d5      	b.n	84e90 <_malloc_trim_r+0x3c>
   84ee4:	20070620 	.word	0x20070620
   84ee8:	20070c70 	.word	0x20070c70
   84eec:	20070a2c 	.word	0x20070a2c

00084ef0 <_free_r>:
   84ef0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84ef4:	460d      	mov	r5, r1
   84ef6:	4606      	mov	r6, r0
   84ef8:	2900      	cmp	r1, #0
   84efa:	d055      	beq.n	84fa8 <_free_r+0xb8>
   84efc:	f000 fe46 	bl	85b8c <__malloc_lock>
   84f00:	f855 1c04 	ldr.w	r1, [r5, #-4]
   84f04:	f8df c170 	ldr.w	ip, [pc, #368]	; 85078 <_free_r+0x188>
   84f08:	f1a5 0408 	sub.w	r4, r5, #8
   84f0c:	f021 0301 	bic.w	r3, r1, #1
   84f10:	18e2      	adds	r2, r4, r3
   84f12:	f8dc 0008 	ldr.w	r0, [ip, #8]
   84f16:	6857      	ldr	r7, [r2, #4]
   84f18:	4290      	cmp	r0, r2
   84f1a:	f027 0703 	bic.w	r7, r7, #3
   84f1e:	d068      	beq.n	84ff2 <_free_r+0x102>
   84f20:	f011 0101 	ands.w	r1, r1, #1
   84f24:	6057      	str	r7, [r2, #4]
   84f26:	d032      	beq.n	84f8e <_free_r+0x9e>
   84f28:	2100      	movs	r1, #0
   84f2a:	19d0      	adds	r0, r2, r7
   84f2c:	6840      	ldr	r0, [r0, #4]
   84f2e:	07c0      	lsls	r0, r0, #31
   84f30:	d406      	bmi.n	84f40 <_free_r+0x50>
   84f32:	443b      	add	r3, r7
   84f34:	6890      	ldr	r0, [r2, #8]
   84f36:	2900      	cmp	r1, #0
   84f38:	d04d      	beq.n	84fd6 <_free_r+0xe6>
   84f3a:	68d2      	ldr	r2, [r2, #12]
   84f3c:	60c2      	str	r2, [r0, #12]
   84f3e:	6090      	str	r0, [r2, #8]
   84f40:	f043 0201 	orr.w	r2, r3, #1
   84f44:	6062      	str	r2, [r4, #4]
   84f46:	50e3      	str	r3, [r4, r3]
   84f48:	b9e1      	cbnz	r1, 84f84 <_free_r+0x94>
   84f4a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   84f4e:	d32d      	bcc.n	84fac <_free_r+0xbc>
   84f50:	0a5a      	lsrs	r2, r3, #9
   84f52:	2a04      	cmp	r2, #4
   84f54:	d869      	bhi.n	8502a <_free_r+0x13a>
   84f56:	0998      	lsrs	r0, r3, #6
   84f58:	3038      	adds	r0, #56	; 0x38
   84f5a:	0041      	lsls	r1, r0, #1
   84f5c:	eb0c 0c81 	add.w	ip, ip, r1, lsl #2
   84f60:	f8dc 2008 	ldr.w	r2, [ip, #8]
   84f64:	4944      	ldr	r1, [pc, #272]	; (85078 <_free_r+0x188>)
   84f66:	4562      	cmp	r2, ip
   84f68:	d065      	beq.n	85036 <_free_r+0x146>
   84f6a:	6851      	ldr	r1, [r2, #4]
   84f6c:	f021 0103 	bic.w	r1, r1, #3
   84f70:	428b      	cmp	r3, r1
   84f72:	d202      	bcs.n	84f7a <_free_r+0x8a>
   84f74:	6892      	ldr	r2, [r2, #8]
   84f76:	4594      	cmp	ip, r2
   84f78:	d1f7      	bne.n	84f6a <_free_r+0x7a>
   84f7a:	68d3      	ldr	r3, [r2, #12]
   84f7c:	60e3      	str	r3, [r4, #12]
   84f7e:	60a2      	str	r2, [r4, #8]
   84f80:	609c      	str	r4, [r3, #8]
   84f82:	60d4      	str	r4, [r2, #12]
   84f84:	4630      	mov	r0, r6
   84f86:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   84f8a:	f000 be01 	b.w	85b90 <__malloc_unlock>
   84f8e:	f855 5c08 	ldr.w	r5, [r5, #-8]
   84f92:	f10c 0808 	add.w	r8, ip, #8
   84f96:	1b64      	subs	r4, r4, r5
   84f98:	68a0      	ldr	r0, [r4, #8]
   84f9a:	442b      	add	r3, r5
   84f9c:	4540      	cmp	r0, r8
   84f9e:	d042      	beq.n	85026 <_free_r+0x136>
   84fa0:	68e5      	ldr	r5, [r4, #12]
   84fa2:	60c5      	str	r5, [r0, #12]
   84fa4:	60a8      	str	r0, [r5, #8]
   84fa6:	e7c0      	b.n	84f2a <_free_r+0x3a>
   84fa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   84fac:	08db      	lsrs	r3, r3, #3
   84fae:	109a      	asrs	r2, r3, #2
   84fb0:	2001      	movs	r0, #1
   84fb2:	4090      	lsls	r0, r2
   84fb4:	f8dc 1004 	ldr.w	r1, [ip, #4]
   84fb8:	eb0c 03c3 	add.w	r3, ip, r3, lsl #3
   84fbc:	689a      	ldr	r2, [r3, #8]
   84fbe:	4301      	orrs	r1, r0
   84fc0:	60a2      	str	r2, [r4, #8]
   84fc2:	60e3      	str	r3, [r4, #12]
   84fc4:	f8cc 1004 	str.w	r1, [ip, #4]
   84fc8:	4630      	mov	r0, r6
   84fca:	609c      	str	r4, [r3, #8]
   84fcc:	60d4      	str	r4, [r2, #12]
   84fce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   84fd2:	f000 bddd 	b.w	85b90 <__malloc_unlock>
   84fd6:	4d29      	ldr	r5, [pc, #164]	; (8507c <_free_r+0x18c>)
   84fd8:	42a8      	cmp	r0, r5
   84fda:	d1ae      	bne.n	84f3a <_free_r+0x4a>
   84fdc:	f043 0201 	orr.w	r2, r3, #1
   84fe0:	f8cc 4014 	str.w	r4, [ip, #20]
   84fe4:	f8cc 4010 	str.w	r4, [ip, #16]
   84fe8:	60e0      	str	r0, [r4, #12]
   84fea:	60a0      	str	r0, [r4, #8]
   84fec:	6062      	str	r2, [r4, #4]
   84fee:	50e3      	str	r3, [r4, r3]
   84ff0:	e7c8      	b.n	84f84 <_free_r+0x94>
   84ff2:	441f      	add	r7, r3
   84ff4:	07cb      	lsls	r3, r1, #31
   84ff6:	d407      	bmi.n	85008 <_free_r+0x118>
   84ff8:	f855 1c08 	ldr.w	r1, [r5, #-8]
   84ffc:	1a64      	subs	r4, r4, r1
   84ffe:	68e3      	ldr	r3, [r4, #12]
   85000:	68a2      	ldr	r2, [r4, #8]
   85002:	440f      	add	r7, r1
   85004:	60d3      	str	r3, [r2, #12]
   85006:	609a      	str	r2, [r3, #8]
   85008:	4b1d      	ldr	r3, [pc, #116]	; (85080 <_free_r+0x190>)
   8500a:	f047 0201 	orr.w	r2, r7, #1
   8500e:	681b      	ldr	r3, [r3, #0]
   85010:	6062      	str	r2, [r4, #4]
   85012:	429f      	cmp	r7, r3
   85014:	f8cc 4008 	str.w	r4, [ip, #8]
   85018:	d3b4      	bcc.n	84f84 <_free_r+0x94>
   8501a:	4b1a      	ldr	r3, [pc, #104]	; (85084 <_free_r+0x194>)
   8501c:	4630      	mov	r0, r6
   8501e:	6819      	ldr	r1, [r3, #0]
   85020:	f7ff ff18 	bl	84e54 <_malloc_trim_r>
   85024:	e7ae      	b.n	84f84 <_free_r+0x94>
   85026:	2101      	movs	r1, #1
   85028:	e77f      	b.n	84f2a <_free_r+0x3a>
   8502a:	2a14      	cmp	r2, #20
   8502c:	d80b      	bhi.n	85046 <_free_r+0x156>
   8502e:	f102 005b 	add.w	r0, r2, #91	; 0x5b
   85032:	0041      	lsls	r1, r0, #1
   85034:	e792      	b.n	84f5c <_free_r+0x6c>
   85036:	1080      	asrs	r0, r0, #2
   85038:	2501      	movs	r5, #1
   8503a:	4085      	lsls	r5, r0
   8503c:	6848      	ldr	r0, [r1, #4]
   8503e:	4613      	mov	r3, r2
   85040:	4328      	orrs	r0, r5
   85042:	6048      	str	r0, [r1, #4]
   85044:	e79a      	b.n	84f7c <_free_r+0x8c>
   85046:	2a54      	cmp	r2, #84	; 0x54
   85048:	d803      	bhi.n	85052 <_free_r+0x162>
   8504a:	0b18      	lsrs	r0, r3, #12
   8504c:	306e      	adds	r0, #110	; 0x6e
   8504e:	0041      	lsls	r1, r0, #1
   85050:	e784      	b.n	84f5c <_free_r+0x6c>
   85052:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   85056:	d803      	bhi.n	85060 <_free_r+0x170>
   85058:	0bd8      	lsrs	r0, r3, #15
   8505a:	3077      	adds	r0, #119	; 0x77
   8505c:	0041      	lsls	r1, r0, #1
   8505e:	e77d      	b.n	84f5c <_free_r+0x6c>
   85060:	f240 5154 	movw	r1, #1364	; 0x554
   85064:	428a      	cmp	r2, r1
   85066:	d803      	bhi.n	85070 <_free_r+0x180>
   85068:	0c98      	lsrs	r0, r3, #18
   8506a:	307c      	adds	r0, #124	; 0x7c
   8506c:	0041      	lsls	r1, r0, #1
   8506e:	e775      	b.n	84f5c <_free_r+0x6c>
   85070:	21fc      	movs	r1, #252	; 0xfc
   85072:	207e      	movs	r0, #126	; 0x7e
   85074:	e772      	b.n	84f5c <_free_r+0x6c>
   85076:	bf00      	nop
   85078:	20070620 	.word	0x20070620
   8507c:	20070628 	.word	0x20070628
   85080:	20070a28 	.word	0x20070a28
   85084:	20070c6c 	.word	0x20070c6c

00085088 <__sfvwrite_r>:
   85088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8508c:	6893      	ldr	r3, [r2, #8]
   8508e:	b083      	sub	sp, #12
   85090:	4616      	mov	r6, r2
   85092:	4681      	mov	r9, r0
   85094:	460c      	mov	r4, r1
   85096:	b32b      	cbz	r3, 850e4 <__sfvwrite_r+0x5c>
   85098:	898b      	ldrh	r3, [r1, #12]
   8509a:	0719      	lsls	r1, r3, #28
   8509c:	d526      	bpl.n	850ec <__sfvwrite_r+0x64>
   8509e:	6922      	ldr	r2, [r4, #16]
   850a0:	b322      	cbz	r2, 850ec <__sfvwrite_r+0x64>
   850a2:	f003 0202 	and.w	r2, r3, #2
   850a6:	b292      	uxth	r2, r2
   850a8:	6835      	ldr	r5, [r6, #0]
   850aa:	2a00      	cmp	r2, #0
   850ac:	d02c      	beq.n	85108 <__sfvwrite_r+0x80>
   850ae:	f04f 0a00 	mov.w	sl, #0
   850b2:	f8df b2e8 	ldr.w	fp, [pc, #744]	; 8539c <__sfvwrite_r+0x314>
   850b6:	46d0      	mov	r8, sl
   850b8:	45d8      	cmp	r8, fp
   850ba:	bf34      	ite	cc
   850bc:	4643      	movcc	r3, r8
   850be:	465b      	movcs	r3, fp
   850c0:	4652      	mov	r2, sl
   850c2:	4648      	mov	r0, r9
   850c4:	f1b8 0f00 	cmp.w	r8, #0
   850c8:	d04f      	beq.n	8516a <__sfvwrite_r+0xe2>
   850ca:	69e1      	ldr	r1, [r4, #28]
   850cc:	6a67      	ldr	r7, [r4, #36]	; 0x24
   850ce:	47b8      	blx	r7
   850d0:	2800      	cmp	r0, #0
   850d2:	dd56      	ble.n	85182 <__sfvwrite_r+0xfa>
   850d4:	68b3      	ldr	r3, [r6, #8]
   850d6:	4482      	add	sl, r0
   850d8:	1a1b      	subs	r3, r3, r0
   850da:	ebc0 0808 	rsb	r8, r0, r8
   850de:	60b3      	str	r3, [r6, #8]
   850e0:	2b00      	cmp	r3, #0
   850e2:	d1e9      	bne.n	850b8 <__sfvwrite_r+0x30>
   850e4:	2000      	movs	r0, #0
   850e6:	b003      	add	sp, #12
   850e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   850ec:	4648      	mov	r0, r9
   850ee:	4621      	mov	r1, r4
   850f0:	f7fe fcd0 	bl	83a94 <__swsetup_r>
   850f4:	2800      	cmp	r0, #0
   850f6:	f040 8148 	bne.w	8538a <__sfvwrite_r+0x302>
   850fa:	89a3      	ldrh	r3, [r4, #12]
   850fc:	6835      	ldr	r5, [r6, #0]
   850fe:	f003 0202 	and.w	r2, r3, #2
   85102:	b292      	uxth	r2, r2
   85104:	2a00      	cmp	r2, #0
   85106:	d1d2      	bne.n	850ae <__sfvwrite_r+0x26>
   85108:	f013 0a01 	ands.w	sl, r3, #1
   8510c:	d142      	bne.n	85194 <__sfvwrite_r+0x10c>
   8510e:	46d0      	mov	r8, sl
   85110:	f1b8 0f00 	cmp.w	r8, #0
   85114:	d023      	beq.n	8515e <__sfvwrite_r+0xd6>
   85116:	059a      	lsls	r2, r3, #22
   85118:	68a7      	ldr	r7, [r4, #8]
   8511a:	d576      	bpl.n	8520a <__sfvwrite_r+0x182>
   8511c:	45b8      	cmp	r8, r7
   8511e:	f0c0 80a4 	bcc.w	8526a <__sfvwrite_r+0x1e2>
   85122:	f413 6f90 	tst.w	r3, #1152	; 0x480
   85126:	f040 80b2 	bne.w	8528e <__sfvwrite_r+0x206>
   8512a:	6820      	ldr	r0, [r4, #0]
   8512c:	46bb      	mov	fp, r7
   8512e:	4651      	mov	r1, sl
   85130:	465a      	mov	r2, fp
   85132:	f000 fcc5 	bl	85ac0 <memmove>
   85136:	68a2      	ldr	r2, [r4, #8]
   85138:	6821      	ldr	r1, [r4, #0]
   8513a:	1bd2      	subs	r2, r2, r7
   8513c:	eb01 030b 	add.w	r3, r1, fp
   85140:	60a2      	str	r2, [r4, #8]
   85142:	6023      	str	r3, [r4, #0]
   85144:	4642      	mov	r2, r8
   85146:	68b3      	ldr	r3, [r6, #8]
   85148:	4492      	add	sl, r2
   8514a:	1a9b      	subs	r3, r3, r2
   8514c:	ebc2 0808 	rsb	r8, r2, r8
   85150:	60b3      	str	r3, [r6, #8]
   85152:	2b00      	cmp	r3, #0
   85154:	d0c6      	beq.n	850e4 <__sfvwrite_r+0x5c>
   85156:	89a3      	ldrh	r3, [r4, #12]
   85158:	f1b8 0f00 	cmp.w	r8, #0
   8515c:	d1db      	bne.n	85116 <__sfvwrite_r+0x8e>
   8515e:	f8d5 a000 	ldr.w	sl, [r5]
   85162:	f8d5 8004 	ldr.w	r8, [r5, #4]
   85166:	3508      	adds	r5, #8
   85168:	e7d2      	b.n	85110 <__sfvwrite_r+0x88>
   8516a:	f8d5 a000 	ldr.w	sl, [r5]
   8516e:	f8d5 8004 	ldr.w	r8, [r5, #4]
   85172:	3508      	adds	r5, #8
   85174:	e7a0      	b.n	850b8 <__sfvwrite_r+0x30>
   85176:	4648      	mov	r0, r9
   85178:	4621      	mov	r1, r4
   8517a:	f7ff fd59 	bl	84c30 <_fflush_r>
   8517e:	2800      	cmp	r0, #0
   85180:	d059      	beq.n	85236 <__sfvwrite_r+0x1ae>
   85182:	89a3      	ldrh	r3, [r4, #12]
   85184:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   85188:	f04f 30ff 	mov.w	r0, #4294967295
   8518c:	81a3      	strh	r3, [r4, #12]
   8518e:	b003      	add	sp, #12
   85190:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85194:	4692      	mov	sl, r2
   85196:	9201      	str	r2, [sp, #4]
   85198:	4693      	mov	fp, r2
   8519a:	4690      	mov	r8, r2
   8519c:	f1b8 0f00 	cmp.w	r8, #0
   851a0:	d02b      	beq.n	851fa <__sfvwrite_r+0x172>
   851a2:	9f01      	ldr	r7, [sp, #4]
   851a4:	2f00      	cmp	r7, #0
   851a6:	d064      	beq.n	85272 <__sfvwrite_r+0x1ea>
   851a8:	6820      	ldr	r0, [r4, #0]
   851aa:	6921      	ldr	r1, [r4, #16]
   851ac:	45c2      	cmp	sl, r8
   851ae:	bf34      	ite	cc
   851b0:	4653      	movcc	r3, sl
   851b2:	4643      	movcs	r3, r8
   851b4:	4288      	cmp	r0, r1
   851b6:	461f      	mov	r7, r3
   851b8:	f8d4 c008 	ldr.w	ip, [r4, #8]
   851bc:	6962      	ldr	r2, [r4, #20]
   851be:	d903      	bls.n	851c8 <__sfvwrite_r+0x140>
   851c0:	4494      	add	ip, r2
   851c2:	4563      	cmp	r3, ip
   851c4:	f300 80ae 	bgt.w	85324 <__sfvwrite_r+0x29c>
   851c8:	4293      	cmp	r3, r2
   851ca:	db36      	blt.n	8523a <__sfvwrite_r+0x1b2>
   851cc:	4613      	mov	r3, r2
   851ce:	6a67      	ldr	r7, [r4, #36]	; 0x24
   851d0:	4648      	mov	r0, r9
   851d2:	69e1      	ldr	r1, [r4, #28]
   851d4:	465a      	mov	r2, fp
   851d6:	47b8      	blx	r7
   851d8:	1e07      	subs	r7, r0, #0
   851da:	ddd2      	ble.n	85182 <__sfvwrite_r+0xfa>
   851dc:	ebba 0a07 	subs.w	sl, sl, r7
   851e0:	d03a      	beq.n	85258 <__sfvwrite_r+0x1d0>
   851e2:	68b3      	ldr	r3, [r6, #8]
   851e4:	44bb      	add	fp, r7
   851e6:	1bdb      	subs	r3, r3, r7
   851e8:	ebc7 0808 	rsb	r8, r7, r8
   851ec:	60b3      	str	r3, [r6, #8]
   851ee:	2b00      	cmp	r3, #0
   851f0:	f43f af78 	beq.w	850e4 <__sfvwrite_r+0x5c>
   851f4:	f1b8 0f00 	cmp.w	r8, #0
   851f8:	d1d3      	bne.n	851a2 <__sfvwrite_r+0x11a>
   851fa:	2700      	movs	r7, #0
   851fc:	f8d5 b000 	ldr.w	fp, [r5]
   85200:	f8d5 8004 	ldr.w	r8, [r5, #4]
   85204:	9701      	str	r7, [sp, #4]
   85206:	3508      	adds	r5, #8
   85208:	e7c8      	b.n	8519c <__sfvwrite_r+0x114>
   8520a:	6820      	ldr	r0, [r4, #0]
   8520c:	6923      	ldr	r3, [r4, #16]
   8520e:	4298      	cmp	r0, r3
   85210:	d802      	bhi.n	85218 <__sfvwrite_r+0x190>
   85212:	6963      	ldr	r3, [r4, #20]
   85214:	4598      	cmp	r8, r3
   85216:	d272      	bcs.n	852fe <__sfvwrite_r+0x276>
   85218:	45b8      	cmp	r8, r7
   8521a:	bf38      	it	cc
   8521c:	4647      	movcc	r7, r8
   8521e:	463a      	mov	r2, r7
   85220:	4651      	mov	r1, sl
   85222:	f000 fc4d 	bl	85ac0 <memmove>
   85226:	68a3      	ldr	r3, [r4, #8]
   85228:	6822      	ldr	r2, [r4, #0]
   8522a:	1bdb      	subs	r3, r3, r7
   8522c:	443a      	add	r2, r7
   8522e:	60a3      	str	r3, [r4, #8]
   85230:	6022      	str	r2, [r4, #0]
   85232:	2b00      	cmp	r3, #0
   85234:	d09f      	beq.n	85176 <__sfvwrite_r+0xee>
   85236:	463a      	mov	r2, r7
   85238:	e785      	b.n	85146 <__sfvwrite_r+0xbe>
   8523a:	461a      	mov	r2, r3
   8523c:	4659      	mov	r1, fp
   8523e:	9300      	str	r3, [sp, #0]
   85240:	f000 fc3e 	bl	85ac0 <memmove>
   85244:	9b00      	ldr	r3, [sp, #0]
   85246:	68a1      	ldr	r1, [r4, #8]
   85248:	6822      	ldr	r2, [r4, #0]
   8524a:	1ac9      	subs	r1, r1, r3
   8524c:	ebba 0a07 	subs.w	sl, sl, r7
   85250:	4413      	add	r3, r2
   85252:	60a1      	str	r1, [r4, #8]
   85254:	6023      	str	r3, [r4, #0]
   85256:	d1c4      	bne.n	851e2 <__sfvwrite_r+0x15a>
   85258:	4648      	mov	r0, r9
   8525a:	4621      	mov	r1, r4
   8525c:	f7ff fce8 	bl	84c30 <_fflush_r>
   85260:	2800      	cmp	r0, #0
   85262:	d18e      	bne.n	85182 <__sfvwrite_r+0xfa>
   85264:	f8cd a004 	str.w	sl, [sp, #4]
   85268:	e7bb      	b.n	851e2 <__sfvwrite_r+0x15a>
   8526a:	6820      	ldr	r0, [r4, #0]
   8526c:	4647      	mov	r7, r8
   8526e:	46c3      	mov	fp, r8
   85270:	e75d      	b.n	8512e <__sfvwrite_r+0xa6>
   85272:	4658      	mov	r0, fp
   85274:	210a      	movs	r1, #10
   85276:	4642      	mov	r2, r8
   85278:	f000 fbd8 	bl	85a2c <memchr>
   8527c:	2800      	cmp	r0, #0
   8527e:	d07f      	beq.n	85380 <__sfvwrite_r+0x2f8>
   85280:	f100 0a01 	add.w	sl, r0, #1
   85284:	2701      	movs	r7, #1
   85286:	ebcb 0a0a 	rsb	sl, fp, sl
   8528a:	9701      	str	r7, [sp, #4]
   8528c:	e78c      	b.n	851a8 <__sfvwrite_r+0x120>
   8528e:	6822      	ldr	r2, [r4, #0]
   85290:	6921      	ldr	r1, [r4, #16]
   85292:	6967      	ldr	r7, [r4, #20]
   85294:	ebc1 0c02 	rsb	ip, r1, r2
   85298:	eb07 0747 	add.w	r7, r7, r7, lsl #1
   8529c:	f10c 0201 	add.w	r2, ip, #1
   852a0:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
   852a4:	4442      	add	r2, r8
   852a6:	107f      	asrs	r7, r7, #1
   852a8:	4297      	cmp	r7, r2
   852aa:	bf34      	ite	cc
   852ac:	4617      	movcc	r7, r2
   852ae:	463a      	movcs	r2, r7
   852b0:	055b      	lsls	r3, r3, #21
   852b2:	d54f      	bpl.n	85354 <__sfvwrite_r+0x2cc>
   852b4:	4611      	mov	r1, r2
   852b6:	4648      	mov	r0, r9
   852b8:	f8cd c000 	str.w	ip, [sp]
   852bc:	f000 f91a 	bl	854f4 <_malloc_r>
   852c0:	f8dd c000 	ldr.w	ip, [sp]
   852c4:	4683      	mov	fp, r0
   852c6:	2800      	cmp	r0, #0
   852c8:	d062      	beq.n	85390 <__sfvwrite_r+0x308>
   852ca:	4662      	mov	r2, ip
   852cc:	6921      	ldr	r1, [r4, #16]
   852ce:	f8cd c000 	str.w	ip, [sp]
   852d2:	f7fc f8d9 	bl	81488 <memcpy>
   852d6:	89a2      	ldrh	r2, [r4, #12]
   852d8:	f8dd c000 	ldr.w	ip, [sp]
   852dc:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   852e0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   852e4:	81a2      	strh	r2, [r4, #12]
   852e6:	eb0b 000c 	add.w	r0, fp, ip
   852ea:	ebcc 0207 	rsb	r2, ip, r7
   852ee:	f8c4 b010 	str.w	fp, [r4, #16]
   852f2:	6167      	str	r7, [r4, #20]
   852f4:	6020      	str	r0, [r4, #0]
   852f6:	60a2      	str	r2, [r4, #8]
   852f8:	4647      	mov	r7, r8
   852fa:	46c3      	mov	fp, r8
   852fc:	e717      	b.n	8512e <__sfvwrite_r+0xa6>
   852fe:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
   85302:	4590      	cmp	r8, r2
   85304:	bf38      	it	cc
   85306:	4642      	movcc	r2, r8
   85308:	fb92 f2f3 	sdiv	r2, r2, r3
   8530c:	fb02 f303 	mul.w	r3, r2, r3
   85310:	6a67      	ldr	r7, [r4, #36]	; 0x24
   85312:	4648      	mov	r0, r9
   85314:	69e1      	ldr	r1, [r4, #28]
   85316:	4652      	mov	r2, sl
   85318:	47b8      	blx	r7
   8531a:	2800      	cmp	r0, #0
   8531c:	f77f af31 	ble.w	85182 <__sfvwrite_r+0xfa>
   85320:	4602      	mov	r2, r0
   85322:	e710      	b.n	85146 <__sfvwrite_r+0xbe>
   85324:	4662      	mov	r2, ip
   85326:	4659      	mov	r1, fp
   85328:	f8cd c000 	str.w	ip, [sp]
   8532c:	f000 fbc8 	bl	85ac0 <memmove>
   85330:	f8dd c000 	ldr.w	ip, [sp]
   85334:	6823      	ldr	r3, [r4, #0]
   85336:	4648      	mov	r0, r9
   85338:	4463      	add	r3, ip
   8533a:	6023      	str	r3, [r4, #0]
   8533c:	4621      	mov	r1, r4
   8533e:	f8cd c000 	str.w	ip, [sp]
   85342:	f7ff fc75 	bl	84c30 <_fflush_r>
   85346:	f8dd c000 	ldr.w	ip, [sp]
   8534a:	2800      	cmp	r0, #0
   8534c:	f47f af19 	bne.w	85182 <__sfvwrite_r+0xfa>
   85350:	4667      	mov	r7, ip
   85352:	e743      	b.n	851dc <__sfvwrite_r+0x154>
   85354:	4648      	mov	r0, r9
   85356:	f8cd c000 	str.w	ip, [sp]
   8535a:	f000 ff25 	bl	861a8 <_realloc_r>
   8535e:	f8dd c000 	ldr.w	ip, [sp]
   85362:	4683      	mov	fp, r0
   85364:	2800      	cmp	r0, #0
   85366:	d1be      	bne.n	852e6 <__sfvwrite_r+0x25e>
   85368:	4648      	mov	r0, r9
   8536a:	6921      	ldr	r1, [r4, #16]
   8536c:	f7ff fdc0 	bl	84ef0 <_free_r>
   85370:	89a3      	ldrh	r3, [r4, #12]
   85372:	220c      	movs	r2, #12
   85374:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   85378:	b29b      	uxth	r3, r3
   8537a:	f8c9 2000 	str.w	r2, [r9]
   8537e:	e701      	b.n	85184 <__sfvwrite_r+0xfc>
   85380:	2701      	movs	r7, #1
   85382:	f108 0a01 	add.w	sl, r8, #1
   85386:	9701      	str	r7, [sp, #4]
   85388:	e70e      	b.n	851a8 <__sfvwrite_r+0x120>
   8538a:	f04f 30ff 	mov.w	r0, #4294967295
   8538e:	e6aa      	b.n	850e6 <__sfvwrite_r+0x5e>
   85390:	230c      	movs	r3, #12
   85392:	f8c9 3000 	str.w	r3, [r9]
   85396:	89a3      	ldrh	r3, [r4, #12]
   85398:	e6f4      	b.n	85184 <__sfvwrite_r+0xfc>
   8539a:	bf00      	nop
   8539c:	7ffffc00 	.word	0x7ffffc00

000853a0 <_fwalk>:
   853a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   853a4:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
   853a8:	4688      	mov	r8, r1
   853aa:	d019      	beq.n	853e0 <_fwalk+0x40>
   853ac:	2600      	movs	r6, #0
   853ae:	687d      	ldr	r5, [r7, #4]
   853b0:	68bc      	ldr	r4, [r7, #8]
   853b2:	3d01      	subs	r5, #1
   853b4:	d40e      	bmi.n	853d4 <_fwalk+0x34>
   853b6:	89a3      	ldrh	r3, [r4, #12]
   853b8:	3d01      	subs	r5, #1
   853ba:	2b01      	cmp	r3, #1
   853bc:	d906      	bls.n	853cc <_fwalk+0x2c>
   853be:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   853c2:	4620      	mov	r0, r4
   853c4:	3301      	adds	r3, #1
   853c6:	d001      	beq.n	853cc <_fwalk+0x2c>
   853c8:	47c0      	blx	r8
   853ca:	4306      	orrs	r6, r0
   853cc:	1c6b      	adds	r3, r5, #1
   853ce:	f104 0468 	add.w	r4, r4, #104	; 0x68
   853d2:	d1f0      	bne.n	853b6 <_fwalk+0x16>
   853d4:	683f      	ldr	r7, [r7, #0]
   853d6:	2f00      	cmp	r7, #0
   853d8:	d1e9      	bne.n	853ae <_fwalk+0xe>
   853da:	4630      	mov	r0, r6
   853dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   853e0:	463e      	mov	r6, r7
   853e2:	4630      	mov	r0, r6
   853e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000853e8 <__locale_charset>:
   853e8:	4800      	ldr	r0, [pc, #0]	; (853ec <__locale_charset+0x4>)
   853ea:	4770      	bx	lr
   853ec:	200705fc 	.word	0x200705fc

000853f0 <__locale_mb_cur_max>:
   853f0:	4b01      	ldr	r3, [pc, #4]	; (853f8 <__locale_mb_cur_max+0x8>)
   853f2:	6818      	ldr	r0, [r3, #0]
   853f4:	4770      	bx	lr
   853f6:	bf00      	nop
   853f8:	2007061c 	.word	0x2007061c

000853fc <_localeconv_r>:
   853fc:	4800      	ldr	r0, [pc, #0]	; (85400 <_localeconv_r+0x4>)
   853fe:	4770      	bx	lr
   85400:	200705c4 	.word	0x200705c4

00085404 <__smakebuf_r>:
   85404:	b5f0      	push	{r4, r5, r6, r7, lr}
   85406:	898b      	ldrh	r3, [r1, #12]
   85408:	b091      	sub	sp, #68	; 0x44
   8540a:	b29a      	uxth	r2, r3
   8540c:	0796      	lsls	r6, r2, #30
   8540e:	460c      	mov	r4, r1
   85410:	4605      	mov	r5, r0
   85412:	d437      	bmi.n	85484 <__smakebuf_r+0x80>
   85414:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   85418:	2900      	cmp	r1, #0
   8541a:	db17      	blt.n	8544c <__smakebuf_r+0x48>
   8541c:	aa01      	add	r2, sp, #4
   8541e:	f001 fac7 	bl	869b0 <_fstat_r>
   85422:	2800      	cmp	r0, #0
   85424:	db10      	blt.n	85448 <__smakebuf_r+0x44>
   85426:	9b02      	ldr	r3, [sp, #8]
   85428:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
   8542c:	f5b3 5100 	subs.w	r1, r3, #8192	; 0x2000
   85430:	424f      	negs	r7, r1
   85432:	414f      	adcs	r7, r1
   85434:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   85438:	d02c      	beq.n	85494 <__smakebuf_r+0x90>
   8543a:	89a3      	ldrh	r3, [r4, #12]
   8543c:	f44f 6680 	mov.w	r6, #1024	; 0x400
   85440:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   85444:	81a3      	strh	r3, [r4, #12]
   85446:	e00b      	b.n	85460 <__smakebuf_r+0x5c>
   85448:	89a3      	ldrh	r3, [r4, #12]
   8544a:	b29a      	uxth	r2, r3
   8544c:	f012 0f80 	tst.w	r2, #128	; 0x80
   85450:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   85454:	81a3      	strh	r3, [r4, #12]
   85456:	bf14      	ite	ne
   85458:	2640      	movne	r6, #64	; 0x40
   8545a:	f44f 6680 	moveq.w	r6, #1024	; 0x400
   8545e:	2700      	movs	r7, #0
   85460:	4628      	mov	r0, r5
   85462:	4631      	mov	r1, r6
   85464:	f000 f846 	bl	854f4 <_malloc_r>
   85468:	89a3      	ldrh	r3, [r4, #12]
   8546a:	2800      	cmp	r0, #0
   8546c:	d029      	beq.n	854c2 <__smakebuf_r+0xbe>
   8546e:	4a1b      	ldr	r2, [pc, #108]	; (854dc <__smakebuf_r+0xd8>)
   85470:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   85474:	63ea      	str	r2, [r5, #60]	; 0x3c
   85476:	81a3      	strh	r3, [r4, #12]
   85478:	6020      	str	r0, [r4, #0]
   8547a:	6120      	str	r0, [r4, #16]
   8547c:	6166      	str	r6, [r4, #20]
   8547e:	b9a7      	cbnz	r7, 854aa <__smakebuf_r+0xa6>
   85480:	b011      	add	sp, #68	; 0x44
   85482:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85484:	f101 0343 	add.w	r3, r1, #67	; 0x43
   85488:	2201      	movs	r2, #1
   8548a:	600b      	str	r3, [r1, #0]
   8548c:	610b      	str	r3, [r1, #16]
   8548e:	614a      	str	r2, [r1, #20]
   85490:	b011      	add	sp, #68	; 0x44
   85492:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85494:	4a12      	ldr	r2, [pc, #72]	; (854e0 <__smakebuf_r+0xdc>)
   85496:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   85498:	4293      	cmp	r3, r2
   8549a:	d1ce      	bne.n	8543a <__smakebuf_r+0x36>
   8549c:	89a3      	ldrh	r3, [r4, #12]
   8549e:	f44f 6680 	mov.w	r6, #1024	; 0x400
   854a2:	4333      	orrs	r3, r6
   854a4:	81a3      	strh	r3, [r4, #12]
   854a6:	64e6      	str	r6, [r4, #76]	; 0x4c
   854a8:	e7da      	b.n	85460 <__smakebuf_r+0x5c>
   854aa:	4628      	mov	r0, r5
   854ac:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   854b0:	f001 fa92 	bl	869d8 <_isatty_r>
   854b4:	2800      	cmp	r0, #0
   854b6:	d0e3      	beq.n	85480 <__smakebuf_r+0x7c>
   854b8:	89a3      	ldrh	r3, [r4, #12]
   854ba:	f043 0301 	orr.w	r3, r3, #1
   854be:	81a3      	strh	r3, [r4, #12]
   854c0:	e7de      	b.n	85480 <__smakebuf_r+0x7c>
   854c2:	059a      	lsls	r2, r3, #22
   854c4:	d4dc      	bmi.n	85480 <__smakebuf_r+0x7c>
   854c6:	f104 0243 	add.w	r2, r4, #67	; 0x43
   854ca:	f043 0302 	orr.w	r3, r3, #2
   854ce:	2101      	movs	r1, #1
   854d0:	81a3      	strh	r3, [r4, #12]
   854d2:	6022      	str	r2, [r4, #0]
   854d4:	6122      	str	r2, [r4, #16]
   854d6:	6161      	str	r1, [r4, #20]
   854d8:	e7d2      	b.n	85480 <__smakebuf_r+0x7c>
   854da:	bf00      	nop
   854dc:	00084c5d 	.word	0x00084c5d
   854e0:	00086639 	.word	0x00086639

000854e4 <malloc>:
   854e4:	4b02      	ldr	r3, [pc, #8]	; (854f0 <malloc+0xc>)
   854e6:	4601      	mov	r1, r0
   854e8:	6818      	ldr	r0, [r3, #0]
   854ea:	f000 b803 	b.w	854f4 <_malloc_r>
   854ee:	bf00      	nop
   854f0:	200705c0 	.word	0x200705c0

000854f4 <_malloc_r>:
   854f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   854f8:	f101 050b 	add.w	r5, r1, #11
   854fc:	2d16      	cmp	r5, #22
   854fe:	b083      	sub	sp, #12
   85500:	4606      	mov	r6, r0
   85502:	d927      	bls.n	85554 <_malloc_r+0x60>
   85504:	f035 0507 	bics.w	r5, r5, #7
   85508:	d427      	bmi.n	8555a <_malloc_r+0x66>
   8550a:	42a9      	cmp	r1, r5
   8550c:	d825      	bhi.n	8555a <_malloc_r+0x66>
   8550e:	4630      	mov	r0, r6
   85510:	f000 fb3c 	bl	85b8c <__malloc_lock>
   85514:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
   85518:	d226      	bcs.n	85568 <_malloc_r+0x74>
   8551a:	4fc1      	ldr	r7, [pc, #772]	; (85820 <_malloc_r+0x32c>)
   8551c:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
   85520:	eb07 03cc 	add.w	r3, r7, ip, lsl #3
   85524:	68dc      	ldr	r4, [r3, #12]
   85526:	429c      	cmp	r4, r3
   85528:	f000 81d2 	beq.w	858d0 <_malloc_r+0x3dc>
   8552c:	6863      	ldr	r3, [r4, #4]
   8552e:	68e2      	ldr	r2, [r4, #12]
   85530:	f023 0303 	bic.w	r3, r3, #3
   85534:	4423      	add	r3, r4
   85536:	6858      	ldr	r0, [r3, #4]
   85538:	68a1      	ldr	r1, [r4, #8]
   8553a:	f040 0501 	orr.w	r5, r0, #1
   8553e:	60ca      	str	r2, [r1, #12]
   85540:	4630      	mov	r0, r6
   85542:	6091      	str	r1, [r2, #8]
   85544:	605d      	str	r5, [r3, #4]
   85546:	f000 fb23 	bl	85b90 <__malloc_unlock>
   8554a:	3408      	adds	r4, #8
   8554c:	4620      	mov	r0, r4
   8554e:	b003      	add	sp, #12
   85550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85554:	2510      	movs	r5, #16
   85556:	42a9      	cmp	r1, r5
   85558:	d9d9      	bls.n	8550e <_malloc_r+0x1a>
   8555a:	2400      	movs	r4, #0
   8555c:	230c      	movs	r3, #12
   8555e:	4620      	mov	r0, r4
   85560:	6033      	str	r3, [r6, #0]
   85562:	b003      	add	sp, #12
   85564:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85568:	ea5f 2c55 	movs.w	ip, r5, lsr #9
   8556c:	f000 8089 	beq.w	85682 <_malloc_r+0x18e>
   85570:	f1bc 0f04 	cmp.w	ip, #4
   85574:	f200 8160 	bhi.w	85838 <_malloc_r+0x344>
   85578:	ea4f 1c95 	mov.w	ip, r5, lsr #6
   8557c:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
   85580:	ea4f 014c 	mov.w	r1, ip, lsl #1
   85584:	4fa6      	ldr	r7, [pc, #664]	; (85820 <_malloc_r+0x32c>)
   85586:	eb07 0181 	add.w	r1, r7, r1, lsl #2
   8558a:	68cc      	ldr	r4, [r1, #12]
   8558c:	42a1      	cmp	r1, r4
   8558e:	d105      	bne.n	8559c <_malloc_r+0xa8>
   85590:	e00c      	b.n	855ac <_malloc_r+0xb8>
   85592:	2b00      	cmp	r3, #0
   85594:	da79      	bge.n	8568a <_malloc_r+0x196>
   85596:	68e4      	ldr	r4, [r4, #12]
   85598:	42a1      	cmp	r1, r4
   8559a:	d007      	beq.n	855ac <_malloc_r+0xb8>
   8559c:	6862      	ldr	r2, [r4, #4]
   8559e:	f022 0203 	bic.w	r2, r2, #3
   855a2:	1b53      	subs	r3, r2, r5
   855a4:	2b0f      	cmp	r3, #15
   855a6:	ddf4      	ble.n	85592 <_malloc_r+0x9e>
   855a8:	f10c 3cff 	add.w	ip, ip, #4294967295
   855ac:	f10c 0c01 	add.w	ip, ip, #1
   855b0:	4b9b      	ldr	r3, [pc, #620]	; (85820 <_malloc_r+0x32c>)
   855b2:	693c      	ldr	r4, [r7, #16]
   855b4:	f103 0e08 	add.w	lr, r3, #8
   855b8:	4574      	cmp	r4, lr
   855ba:	f000 817e 	beq.w	858ba <_malloc_r+0x3c6>
   855be:	6861      	ldr	r1, [r4, #4]
   855c0:	f021 0103 	bic.w	r1, r1, #3
   855c4:	1b4a      	subs	r2, r1, r5
   855c6:	2a0f      	cmp	r2, #15
   855c8:	f300 8164 	bgt.w	85894 <_malloc_r+0x3a0>
   855cc:	2a00      	cmp	r2, #0
   855ce:	f8c3 e014 	str.w	lr, [r3, #20]
   855d2:	f8c3 e010 	str.w	lr, [r3, #16]
   855d6:	da69      	bge.n	856ac <_malloc_r+0x1b8>
   855d8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   855dc:	f080 813a 	bcs.w	85854 <_malloc_r+0x360>
   855e0:	08c9      	lsrs	r1, r1, #3
   855e2:	108a      	asrs	r2, r1, #2
   855e4:	f04f 0801 	mov.w	r8, #1
   855e8:	fa08 f802 	lsl.w	r8, r8, r2
   855ec:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   855f0:	685a      	ldr	r2, [r3, #4]
   855f2:	6888      	ldr	r0, [r1, #8]
   855f4:	ea48 0202 	orr.w	r2, r8, r2
   855f8:	60a0      	str	r0, [r4, #8]
   855fa:	60e1      	str	r1, [r4, #12]
   855fc:	605a      	str	r2, [r3, #4]
   855fe:	608c      	str	r4, [r1, #8]
   85600:	60c4      	str	r4, [r0, #12]
   85602:	ea4f 03ac 	mov.w	r3, ip, asr #2
   85606:	2001      	movs	r0, #1
   85608:	4098      	lsls	r0, r3
   8560a:	4290      	cmp	r0, r2
   8560c:	d85b      	bhi.n	856c6 <_malloc_r+0x1d2>
   8560e:	4202      	tst	r2, r0
   85610:	d106      	bne.n	85620 <_malloc_r+0x12c>
   85612:	f02c 0c03 	bic.w	ip, ip, #3
   85616:	0040      	lsls	r0, r0, #1
   85618:	4202      	tst	r2, r0
   8561a:	f10c 0c04 	add.w	ip, ip, #4
   8561e:	d0fa      	beq.n	85616 <_malloc_r+0x122>
   85620:	eb07 08cc 	add.w	r8, r7, ip, lsl #3
   85624:	4644      	mov	r4, r8
   85626:	46e1      	mov	r9, ip
   85628:	68e3      	ldr	r3, [r4, #12]
   8562a:	429c      	cmp	r4, r3
   8562c:	d107      	bne.n	8563e <_malloc_r+0x14a>
   8562e:	e146      	b.n	858be <_malloc_r+0x3ca>
   85630:	2a00      	cmp	r2, #0
   85632:	f280 8157 	bge.w	858e4 <_malloc_r+0x3f0>
   85636:	68db      	ldr	r3, [r3, #12]
   85638:	429c      	cmp	r4, r3
   8563a:	f000 8140 	beq.w	858be <_malloc_r+0x3ca>
   8563e:	6859      	ldr	r1, [r3, #4]
   85640:	f021 0103 	bic.w	r1, r1, #3
   85644:	1b4a      	subs	r2, r1, r5
   85646:	2a0f      	cmp	r2, #15
   85648:	ddf2      	ble.n	85630 <_malloc_r+0x13c>
   8564a:	461c      	mov	r4, r3
   8564c:	f854 cf08 	ldr.w	ip, [r4, #8]!
   85650:	68d9      	ldr	r1, [r3, #12]
   85652:	f045 0901 	orr.w	r9, r5, #1
   85656:	f042 0801 	orr.w	r8, r2, #1
   8565a:	441d      	add	r5, r3
   8565c:	f8c3 9004 	str.w	r9, [r3, #4]
   85660:	4630      	mov	r0, r6
   85662:	f8cc 100c 	str.w	r1, [ip, #12]
   85666:	f8c1 c008 	str.w	ip, [r1, #8]
   8566a:	617d      	str	r5, [r7, #20]
   8566c:	613d      	str	r5, [r7, #16]
   8566e:	f8c5 e00c 	str.w	lr, [r5, #12]
   85672:	f8c5 e008 	str.w	lr, [r5, #8]
   85676:	f8c5 8004 	str.w	r8, [r5, #4]
   8567a:	50aa      	str	r2, [r5, r2]
   8567c:	f000 fa88 	bl	85b90 <__malloc_unlock>
   85680:	e764      	b.n	8554c <_malloc_r+0x58>
   85682:	217e      	movs	r1, #126	; 0x7e
   85684:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
   85688:	e77c      	b.n	85584 <_malloc_r+0x90>
   8568a:	4422      	add	r2, r4
   8568c:	6850      	ldr	r0, [r2, #4]
   8568e:	68e3      	ldr	r3, [r4, #12]
   85690:	68a1      	ldr	r1, [r4, #8]
   85692:	f040 0501 	orr.w	r5, r0, #1
   85696:	60cb      	str	r3, [r1, #12]
   85698:	4630      	mov	r0, r6
   8569a:	6099      	str	r1, [r3, #8]
   8569c:	6055      	str	r5, [r2, #4]
   8569e:	f000 fa77 	bl	85b90 <__malloc_unlock>
   856a2:	3408      	adds	r4, #8
   856a4:	4620      	mov	r0, r4
   856a6:	b003      	add	sp, #12
   856a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   856ac:	4421      	add	r1, r4
   856ae:	684b      	ldr	r3, [r1, #4]
   856b0:	4630      	mov	r0, r6
   856b2:	f043 0301 	orr.w	r3, r3, #1
   856b6:	604b      	str	r3, [r1, #4]
   856b8:	f000 fa6a 	bl	85b90 <__malloc_unlock>
   856bc:	3408      	adds	r4, #8
   856be:	4620      	mov	r0, r4
   856c0:	b003      	add	sp, #12
   856c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   856c6:	68bc      	ldr	r4, [r7, #8]
   856c8:	6863      	ldr	r3, [r4, #4]
   856ca:	f023 0903 	bic.w	r9, r3, #3
   856ce:	45a9      	cmp	r9, r5
   856d0:	d304      	bcc.n	856dc <_malloc_r+0x1e8>
   856d2:	ebc5 0309 	rsb	r3, r5, r9
   856d6:	2b0f      	cmp	r3, #15
   856d8:	f300 8091 	bgt.w	857fe <_malloc_r+0x30a>
   856dc:	4b51      	ldr	r3, [pc, #324]	; (85824 <_malloc_r+0x330>)
   856de:	4a52      	ldr	r2, [pc, #328]	; (85828 <_malloc_r+0x334>)
   856e0:	6819      	ldr	r1, [r3, #0]
   856e2:	6813      	ldr	r3, [r2, #0]
   856e4:	eb05 0a01 	add.w	sl, r5, r1
   856e8:	3301      	adds	r3, #1
   856ea:	eb04 0b09 	add.w	fp, r4, r9
   856ee:	f000 8161 	beq.w	859b4 <_malloc_r+0x4c0>
   856f2:	f50a 5a80 	add.w	sl, sl, #4096	; 0x1000
   856f6:	f10a 0a0f 	add.w	sl, sl, #15
   856fa:	f42a 6a7f 	bic.w	sl, sl, #4080	; 0xff0
   856fe:	f02a 0a0f 	bic.w	sl, sl, #15
   85702:	4630      	mov	r0, r6
   85704:	4651      	mov	r1, sl
   85706:	9201      	str	r2, [sp, #4]
   85708:	f000 ff56 	bl	865b8 <_sbrk_r>
   8570c:	f1b0 3fff 	cmp.w	r0, #4294967295
   85710:	4680      	mov	r8, r0
   85712:	9a01      	ldr	r2, [sp, #4]
   85714:	f000 8101 	beq.w	8591a <_malloc_r+0x426>
   85718:	4583      	cmp	fp, r0
   8571a:	f200 80fb 	bhi.w	85914 <_malloc_r+0x420>
   8571e:	f8df c114 	ldr.w	ip, [pc, #276]	; 85834 <_malloc_r+0x340>
   85722:	45c3      	cmp	fp, r8
   85724:	f8dc 3000 	ldr.w	r3, [ip]
   85728:	4453      	add	r3, sl
   8572a:	f8cc 3000 	str.w	r3, [ip]
   8572e:	f000 814a 	beq.w	859c6 <_malloc_r+0x4d2>
   85732:	6812      	ldr	r2, [r2, #0]
   85734:	493c      	ldr	r1, [pc, #240]	; (85828 <_malloc_r+0x334>)
   85736:	3201      	adds	r2, #1
   85738:	bf1b      	ittet	ne
   8573a:	ebcb 0b08 	rsbne	fp, fp, r8
   8573e:	445b      	addne	r3, fp
   85740:	f8c1 8000 	streq.w	r8, [r1]
   85744:	f8cc 3000 	strne.w	r3, [ip]
   85748:	f018 0307 	ands.w	r3, r8, #7
   8574c:	f000 8114 	beq.w	85978 <_malloc_r+0x484>
   85750:	f1c3 0208 	rsb	r2, r3, #8
   85754:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
   85758:	4490      	add	r8, r2
   8575a:	3308      	adds	r3, #8
   8575c:	44c2      	add	sl, r8
   8575e:	f3ca 0a0b 	ubfx	sl, sl, #0, #12
   85762:	ebca 0a03 	rsb	sl, sl, r3
   85766:	4651      	mov	r1, sl
   85768:	4630      	mov	r0, r6
   8576a:	f8cd c004 	str.w	ip, [sp, #4]
   8576e:	f000 ff23 	bl	865b8 <_sbrk_r>
   85772:	1c43      	adds	r3, r0, #1
   85774:	f8dd c004 	ldr.w	ip, [sp, #4]
   85778:	f000 8135 	beq.w	859e6 <_malloc_r+0x4f2>
   8577c:	ebc8 0200 	rsb	r2, r8, r0
   85780:	4452      	add	r2, sl
   85782:	f042 0201 	orr.w	r2, r2, #1
   85786:	f8dc 3000 	ldr.w	r3, [ip]
   8578a:	42bc      	cmp	r4, r7
   8578c:	4453      	add	r3, sl
   8578e:	f8c7 8008 	str.w	r8, [r7, #8]
   85792:	f8cc 3000 	str.w	r3, [ip]
   85796:	f8c8 2004 	str.w	r2, [r8, #4]
   8579a:	f8df a098 	ldr.w	sl, [pc, #152]	; 85834 <_malloc_r+0x340>
   8579e:	d015      	beq.n	857cc <_malloc_r+0x2d8>
   857a0:	f1b9 0f0f 	cmp.w	r9, #15
   857a4:	f240 80eb 	bls.w	8597e <_malloc_r+0x48a>
   857a8:	6861      	ldr	r1, [r4, #4]
   857aa:	f1a9 020c 	sub.w	r2, r9, #12
   857ae:	f022 0207 	bic.w	r2, r2, #7
   857b2:	f001 0101 	and.w	r1, r1, #1
   857b6:	ea42 0e01 	orr.w	lr, r2, r1
   857ba:	2005      	movs	r0, #5
   857bc:	18a1      	adds	r1, r4, r2
   857be:	2a0f      	cmp	r2, #15
   857c0:	f8c4 e004 	str.w	lr, [r4, #4]
   857c4:	6048      	str	r0, [r1, #4]
   857c6:	6088      	str	r0, [r1, #8]
   857c8:	f200 8111 	bhi.w	859ee <_malloc_r+0x4fa>
   857cc:	4a17      	ldr	r2, [pc, #92]	; (8582c <_malloc_r+0x338>)
   857ce:	68bc      	ldr	r4, [r7, #8]
   857d0:	6811      	ldr	r1, [r2, #0]
   857d2:	428b      	cmp	r3, r1
   857d4:	bf88      	it	hi
   857d6:	6013      	strhi	r3, [r2, #0]
   857d8:	4a15      	ldr	r2, [pc, #84]	; (85830 <_malloc_r+0x33c>)
   857da:	6811      	ldr	r1, [r2, #0]
   857dc:	428b      	cmp	r3, r1
   857de:	bf88      	it	hi
   857e0:	6013      	strhi	r3, [r2, #0]
   857e2:	6862      	ldr	r2, [r4, #4]
   857e4:	f022 0203 	bic.w	r2, r2, #3
   857e8:	4295      	cmp	r5, r2
   857ea:	ebc5 0302 	rsb	r3, r5, r2
   857ee:	d801      	bhi.n	857f4 <_malloc_r+0x300>
   857f0:	2b0f      	cmp	r3, #15
   857f2:	dc04      	bgt.n	857fe <_malloc_r+0x30a>
   857f4:	4630      	mov	r0, r6
   857f6:	f000 f9cb 	bl	85b90 <__malloc_unlock>
   857fa:	2400      	movs	r4, #0
   857fc:	e6a6      	b.n	8554c <_malloc_r+0x58>
   857fe:	f045 0201 	orr.w	r2, r5, #1
   85802:	f043 0301 	orr.w	r3, r3, #1
   85806:	4425      	add	r5, r4
   85808:	6062      	str	r2, [r4, #4]
   8580a:	4630      	mov	r0, r6
   8580c:	60bd      	str	r5, [r7, #8]
   8580e:	606b      	str	r3, [r5, #4]
   85810:	f000 f9be 	bl	85b90 <__malloc_unlock>
   85814:	3408      	adds	r4, #8
   85816:	4620      	mov	r0, r4
   85818:	b003      	add	sp, #12
   8581a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8581e:	bf00      	nop
   85820:	20070620 	.word	0x20070620
   85824:	20070c6c 	.word	0x20070c6c
   85828:	20070a2c 	.word	0x20070a2c
   8582c:	20070c68 	.word	0x20070c68
   85830:	20070c64 	.word	0x20070c64
   85834:	20070c70 	.word	0x20070c70
   85838:	f1bc 0f14 	cmp.w	ip, #20
   8583c:	d961      	bls.n	85902 <_malloc_r+0x40e>
   8583e:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
   85842:	f200 808f 	bhi.w	85964 <_malloc_r+0x470>
   85846:	ea4f 3c15 	mov.w	ip, r5, lsr #12
   8584a:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
   8584e:	ea4f 014c 	mov.w	r1, ip, lsl #1
   85852:	e697      	b.n	85584 <_malloc_r+0x90>
   85854:	0a4b      	lsrs	r3, r1, #9
   85856:	2b04      	cmp	r3, #4
   85858:	d958      	bls.n	8590c <_malloc_r+0x418>
   8585a:	2b14      	cmp	r3, #20
   8585c:	f200 80ad 	bhi.w	859ba <_malloc_r+0x4c6>
   85860:	f103 025b 	add.w	r2, r3, #91	; 0x5b
   85864:	0050      	lsls	r0, r2, #1
   85866:	eb07 0080 	add.w	r0, r7, r0, lsl #2
   8586a:	6883      	ldr	r3, [r0, #8]
   8586c:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 85a28 <_malloc_r+0x534>
   85870:	4283      	cmp	r3, r0
   85872:	f000 808a 	beq.w	8598a <_malloc_r+0x496>
   85876:	685a      	ldr	r2, [r3, #4]
   85878:	f022 0203 	bic.w	r2, r2, #3
   8587c:	4291      	cmp	r1, r2
   8587e:	d202      	bcs.n	85886 <_malloc_r+0x392>
   85880:	689b      	ldr	r3, [r3, #8]
   85882:	4298      	cmp	r0, r3
   85884:	d1f7      	bne.n	85876 <_malloc_r+0x382>
   85886:	68d9      	ldr	r1, [r3, #12]
   85888:	687a      	ldr	r2, [r7, #4]
   8588a:	60e1      	str	r1, [r4, #12]
   8588c:	60a3      	str	r3, [r4, #8]
   8588e:	608c      	str	r4, [r1, #8]
   85890:	60dc      	str	r4, [r3, #12]
   85892:	e6b6      	b.n	85602 <_malloc_r+0x10e>
   85894:	f045 0701 	orr.w	r7, r5, #1
   85898:	f042 0101 	orr.w	r1, r2, #1
   8589c:	4425      	add	r5, r4
   8589e:	6067      	str	r7, [r4, #4]
   858a0:	4630      	mov	r0, r6
   858a2:	615d      	str	r5, [r3, #20]
   858a4:	611d      	str	r5, [r3, #16]
   858a6:	f8c5 e00c 	str.w	lr, [r5, #12]
   858aa:	f8c5 e008 	str.w	lr, [r5, #8]
   858ae:	6069      	str	r1, [r5, #4]
   858b0:	50aa      	str	r2, [r5, r2]
   858b2:	3408      	adds	r4, #8
   858b4:	f000 f96c 	bl	85b90 <__malloc_unlock>
   858b8:	e648      	b.n	8554c <_malloc_r+0x58>
   858ba:	685a      	ldr	r2, [r3, #4]
   858bc:	e6a1      	b.n	85602 <_malloc_r+0x10e>
   858be:	f109 0901 	add.w	r9, r9, #1
   858c2:	f019 0f03 	tst.w	r9, #3
   858c6:	f104 0408 	add.w	r4, r4, #8
   858ca:	f47f aead 	bne.w	85628 <_malloc_r+0x134>
   858ce:	e02d      	b.n	8592c <_malloc_r+0x438>
   858d0:	f104 0308 	add.w	r3, r4, #8
   858d4:	6964      	ldr	r4, [r4, #20]
   858d6:	42a3      	cmp	r3, r4
   858d8:	bf08      	it	eq
   858da:	f10c 0c02 	addeq.w	ip, ip, #2
   858de:	f43f ae67 	beq.w	855b0 <_malloc_r+0xbc>
   858e2:	e623      	b.n	8552c <_malloc_r+0x38>
   858e4:	4419      	add	r1, r3
   858e6:	6848      	ldr	r0, [r1, #4]
   858e8:	461c      	mov	r4, r3
   858ea:	f854 2f08 	ldr.w	r2, [r4, #8]!
   858ee:	68db      	ldr	r3, [r3, #12]
   858f0:	f040 0501 	orr.w	r5, r0, #1
   858f4:	604d      	str	r5, [r1, #4]
   858f6:	4630      	mov	r0, r6
   858f8:	60d3      	str	r3, [r2, #12]
   858fa:	609a      	str	r2, [r3, #8]
   858fc:	f000 f948 	bl	85b90 <__malloc_unlock>
   85900:	e624      	b.n	8554c <_malloc_r+0x58>
   85902:	f10c 0c5b 	add.w	ip, ip, #91	; 0x5b
   85906:	ea4f 014c 	mov.w	r1, ip, lsl #1
   8590a:	e63b      	b.n	85584 <_malloc_r+0x90>
   8590c:	098a      	lsrs	r2, r1, #6
   8590e:	3238      	adds	r2, #56	; 0x38
   85910:	0050      	lsls	r0, r2, #1
   85912:	e7a8      	b.n	85866 <_malloc_r+0x372>
   85914:	42bc      	cmp	r4, r7
   85916:	f43f af02 	beq.w	8571e <_malloc_r+0x22a>
   8591a:	68bc      	ldr	r4, [r7, #8]
   8591c:	6862      	ldr	r2, [r4, #4]
   8591e:	f022 0203 	bic.w	r2, r2, #3
   85922:	e761      	b.n	857e8 <_malloc_r+0x2f4>
   85924:	f8d8 8000 	ldr.w	r8, [r8]
   85928:	4598      	cmp	r8, r3
   8592a:	d17a      	bne.n	85a22 <_malloc_r+0x52e>
   8592c:	f01c 0f03 	tst.w	ip, #3
   85930:	f1a8 0308 	sub.w	r3, r8, #8
   85934:	f10c 3cff 	add.w	ip, ip, #4294967295
   85938:	d1f4      	bne.n	85924 <_malloc_r+0x430>
   8593a:	687b      	ldr	r3, [r7, #4]
   8593c:	ea23 0300 	bic.w	r3, r3, r0
   85940:	607b      	str	r3, [r7, #4]
   85942:	0040      	lsls	r0, r0, #1
   85944:	4298      	cmp	r0, r3
   85946:	f63f aebe 	bhi.w	856c6 <_malloc_r+0x1d2>
   8594a:	2800      	cmp	r0, #0
   8594c:	f43f aebb 	beq.w	856c6 <_malloc_r+0x1d2>
   85950:	4203      	tst	r3, r0
   85952:	46cc      	mov	ip, r9
   85954:	f47f ae64 	bne.w	85620 <_malloc_r+0x12c>
   85958:	0040      	lsls	r0, r0, #1
   8595a:	4203      	tst	r3, r0
   8595c:	f10c 0c04 	add.w	ip, ip, #4
   85960:	d0fa      	beq.n	85958 <_malloc_r+0x464>
   85962:	e65d      	b.n	85620 <_malloc_r+0x12c>
   85964:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
   85968:	d819      	bhi.n	8599e <_malloc_r+0x4aa>
   8596a:	ea4f 3cd5 	mov.w	ip, r5, lsr #15
   8596e:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
   85972:	ea4f 014c 	mov.w	r1, ip, lsl #1
   85976:	e605      	b.n	85584 <_malloc_r+0x90>
   85978:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   8597c:	e6ee      	b.n	8575c <_malloc_r+0x268>
   8597e:	2301      	movs	r3, #1
   85980:	f8c8 3004 	str.w	r3, [r8, #4]
   85984:	4644      	mov	r4, r8
   85986:	2200      	movs	r2, #0
   85988:	e72e      	b.n	857e8 <_malloc_r+0x2f4>
   8598a:	1092      	asrs	r2, r2, #2
   8598c:	2001      	movs	r0, #1
   8598e:	4090      	lsls	r0, r2
   85990:	f8d8 2004 	ldr.w	r2, [r8, #4]
   85994:	4619      	mov	r1, r3
   85996:	4302      	orrs	r2, r0
   85998:	f8c8 2004 	str.w	r2, [r8, #4]
   8599c:	e775      	b.n	8588a <_malloc_r+0x396>
   8599e:	f240 5354 	movw	r3, #1364	; 0x554
   859a2:	459c      	cmp	ip, r3
   859a4:	d81b      	bhi.n	859de <_malloc_r+0x4ea>
   859a6:	ea4f 4c95 	mov.w	ip, r5, lsr #18
   859aa:	f10c 0c7c 	add.w	ip, ip, #124	; 0x7c
   859ae:	ea4f 014c 	mov.w	r1, ip, lsl #1
   859b2:	e5e7      	b.n	85584 <_malloc_r+0x90>
   859b4:	f10a 0a10 	add.w	sl, sl, #16
   859b8:	e6a3      	b.n	85702 <_malloc_r+0x20e>
   859ba:	2b54      	cmp	r3, #84	; 0x54
   859bc:	d81f      	bhi.n	859fe <_malloc_r+0x50a>
   859be:	0b0a      	lsrs	r2, r1, #12
   859c0:	326e      	adds	r2, #110	; 0x6e
   859c2:	0050      	lsls	r0, r2, #1
   859c4:	e74f      	b.n	85866 <_malloc_r+0x372>
   859c6:	f3cb 010b 	ubfx	r1, fp, #0, #12
   859ca:	2900      	cmp	r1, #0
   859cc:	f47f aeb1 	bne.w	85732 <_malloc_r+0x23e>
   859d0:	eb0a 0109 	add.w	r1, sl, r9
   859d4:	68ba      	ldr	r2, [r7, #8]
   859d6:	f041 0101 	orr.w	r1, r1, #1
   859da:	6051      	str	r1, [r2, #4]
   859dc:	e6f6      	b.n	857cc <_malloc_r+0x2d8>
   859de:	21fc      	movs	r1, #252	; 0xfc
   859e0:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
   859e4:	e5ce      	b.n	85584 <_malloc_r+0x90>
   859e6:	2201      	movs	r2, #1
   859e8:	f04f 0a00 	mov.w	sl, #0
   859ec:	e6cb      	b.n	85786 <_malloc_r+0x292>
   859ee:	f104 0108 	add.w	r1, r4, #8
   859f2:	4630      	mov	r0, r6
   859f4:	f7ff fa7c 	bl	84ef0 <_free_r>
   859f8:	f8da 3000 	ldr.w	r3, [sl]
   859fc:	e6e6      	b.n	857cc <_malloc_r+0x2d8>
   859fe:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   85a02:	d803      	bhi.n	85a0c <_malloc_r+0x518>
   85a04:	0bca      	lsrs	r2, r1, #15
   85a06:	3277      	adds	r2, #119	; 0x77
   85a08:	0050      	lsls	r0, r2, #1
   85a0a:	e72c      	b.n	85866 <_malloc_r+0x372>
   85a0c:	f240 5254 	movw	r2, #1364	; 0x554
   85a10:	4293      	cmp	r3, r2
   85a12:	d803      	bhi.n	85a1c <_malloc_r+0x528>
   85a14:	0c8a      	lsrs	r2, r1, #18
   85a16:	327c      	adds	r2, #124	; 0x7c
   85a18:	0050      	lsls	r0, r2, #1
   85a1a:	e724      	b.n	85866 <_malloc_r+0x372>
   85a1c:	20fc      	movs	r0, #252	; 0xfc
   85a1e:	227e      	movs	r2, #126	; 0x7e
   85a20:	e721      	b.n	85866 <_malloc_r+0x372>
   85a22:	687b      	ldr	r3, [r7, #4]
   85a24:	e78d      	b.n	85942 <_malloc_r+0x44e>
   85a26:	bf00      	nop
   85a28:	20070620 	.word	0x20070620

00085a2c <memchr>:
   85a2c:	0783      	lsls	r3, r0, #30
   85a2e:	b470      	push	{r4, r5, r6}
   85a30:	b2c9      	uxtb	r1, r1
   85a32:	d040      	beq.n	85ab6 <memchr+0x8a>
   85a34:	1e54      	subs	r4, r2, #1
   85a36:	b32a      	cbz	r2, 85a84 <memchr+0x58>
   85a38:	7803      	ldrb	r3, [r0, #0]
   85a3a:	428b      	cmp	r3, r1
   85a3c:	d023      	beq.n	85a86 <memchr+0x5a>
   85a3e:	1c43      	adds	r3, r0, #1
   85a40:	e004      	b.n	85a4c <memchr+0x20>
   85a42:	b1fc      	cbz	r4, 85a84 <memchr+0x58>
   85a44:	7805      	ldrb	r5, [r0, #0]
   85a46:	4614      	mov	r4, r2
   85a48:	428d      	cmp	r5, r1
   85a4a:	d01c      	beq.n	85a86 <memchr+0x5a>
   85a4c:	f013 0f03 	tst.w	r3, #3
   85a50:	4618      	mov	r0, r3
   85a52:	f104 32ff 	add.w	r2, r4, #4294967295
   85a56:	f103 0301 	add.w	r3, r3, #1
   85a5a:	d1f2      	bne.n	85a42 <memchr+0x16>
   85a5c:	2c03      	cmp	r4, #3
   85a5e:	d814      	bhi.n	85a8a <memchr+0x5e>
   85a60:	1e65      	subs	r5, r4, #1
   85a62:	b354      	cbz	r4, 85aba <memchr+0x8e>
   85a64:	7803      	ldrb	r3, [r0, #0]
   85a66:	428b      	cmp	r3, r1
   85a68:	d00d      	beq.n	85a86 <memchr+0x5a>
   85a6a:	1c42      	adds	r2, r0, #1
   85a6c:	2300      	movs	r3, #0
   85a6e:	e002      	b.n	85a76 <memchr+0x4a>
   85a70:	7804      	ldrb	r4, [r0, #0]
   85a72:	428c      	cmp	r4, r1
   85a74:	d007      	beq.n	85a86 <memchr+0x5a>
   85a76:	42ab      	cmp	r3, r5
   85a78:	4610      	mov	r0, r2
   85a7a:	f103 0301 	add.w	r3, r3, #1
   85a7e:	f102 0201 	add.w	r2, r2, #1
   85a82:	d1f5      	bne.n	85a70 <memchr+0x44>
   85a84:	2000      	movs	r0, #0
   85a86:	bc70      	pop	{r4, r5, r6}
   85a88:	4770      	bx	lr
   85a8a:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
   85a8e:	4603      	mov	r3, r0
   85a90:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
   85a94:	681a      	ldr	r2, [r3, #0]
   85a96:	4618      	mov	r0, r3
   85a98:	4072      	eors	r2, r6
   85a9a:	f1a2 3501 	sub.w	r5, r2, #16843009	; 0x1010101
   85a9e:	ea25 0202 	bic.w	r2, r5, r2
   85aa2:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
   85aa6:	f103 0304 	add.w	r3, r3, #4
   85aaa:	d1d9      	bne.n	85a60 <memchr+0x34>
   85aac:	3c04      	subs	r4, #4
   85aae:	2c03      	cmp	r4, #3
   85ab0:	4618      	mov	r0, r3
   85ab2:	d8ef      	bhi.n	85a94 <memchr+0x68>
   85ab4:	e7d4      	b.n	85a60 <memchr+0x34>
   85ab6:	4614      	mov	r4, r2
   85ab8:	e7d0      	b.n	85a5c <memchr+0x30>
   85aba:	4620      	mov	r0, r4
   85abc:	e7e3      	b.n	85a86 <memchr+0x5a>
   85abe:	bf00      	nop

00085ac0 <memmove>:
   85ac0:	4288      	cmp	r0, r1
   85ac2:	b4f0      	push	{r4, r5, r6, r7}
   85ac4:	d910      	bls.n	85ae8 <memmove+0x28>
   85ac6:	188c      	adds	r4, r1, r2
   85ac8:	42a0      	cmp	r0, r4
   85aca:	d20d      	bcs.n	85ae8 <memmove+0x28>
   85acc:	1885      	adds	r5, r0, r2
   85ace:	1e53      	subs	r3, r2, #1
   85ad0:	b142      	cbz	r2, 85ae4 <memmove+0x24>
   85ad2:	4621      	mov	r1, r4
   85ad4:	462a      	mov	r2, r5
   85ad6:	f811 4d01 	ldrb.w	r4, [r1, #-1]!
   85ada:	3b01      	subs	r3, #1
   85adc:	f802 4d01 	strb.w	r4, [r2, #-1]!
   85ae0:	1c5c      	adds	r4, r3, #1
   85ae2:	d1f8      	bne.n	85ad6 <memmove+0x16>
   85ae4:	bcf0      	pop	{r4, r5, r6, r7}
   85ae6:	4770      	bx	lr
   85ae8:	2a0f      	cmp	r2, #15
   85aea:	d944      	bls.n	85b76 <memmove+0xb6>
   85aec:	ea40 0301 	orr.w	r3, r0, r1
   85af0:	079b      	lsls	r3, r3, #30
   85af2:	d144      	bne.n	85b7e <memmove+0xbe>
   85af4:	f1a2 0710 	sub.w	r7, r2, #16
   85af8:	093f      	lsrs	r7, r7, #4
   85afa:	eb00 1607 	add.w	r6, r0, r7, lsl #4
   85afe:	3610      	adds	r6, #16
   85b00:	460c      	mov	r4, r1
   85b02:	4603      	mov	r3, r0
   85b04:	6825      	ldr	r5, [r4, #0]
   85b06:	3310      	adds	r3, #16
   85b08:	f843 5c10 	str.w	r5, [r3, #-16]
   85b0c:	6865      	ldr	r5, [r4, #4]
   85b0e:	3410      	adds	r4, #16
   85b10:	f843 5c0c 	str.w	r5, [r3, #-12]
   85b14:	f854 5c08 	ldr.w	r5, [r4, #-8]
   85b18:	f843 5c08 	str.w	r5, [r3, #-8]
   85b1c:	f854 5c04 	ldr.w	r5, [r4, #-4]
   85b20:	f843 5c04 	str.w	r5, [r3, #-4]
   85b24:	42b3      	cmp	r3, r6
   85b26:	d1ed      	bne.n	85b04 <memmove+0x44>
   85b28:	1c7b      	adds	r3, r7, #1
   85b2a:	f002 0c0f 	and.w	ip, r2, #15
   85b2e:	011b      	lsls	r3, r3, #4
   85b30:	f1bc 0f03 	cmp.w	ip, #3
   85b34:	4419      	add	r1, r3
   85b36:	4403      	add	r3, r0
   85b38:	d923      	bls.n	85b82 <memmove+0xc2>
   85b3a:	460e      	mov	r6, r1
   85b3c:	461d      	mov	r5, r3
   85b3e:	4664      	mov	r4, ip
   85b40:	f856 7b04 	ldr.w	r7, [r6], #4
   85b44:	3c04      	subs	r4, #4
   85b46:	2c03      	cmp	r4, #3
   85b48:	f845 7b04 	str.w	r7, [r5], #4
   85b4c:	d8f8      	bhi.n	85b40 <memmove+0x80>
   85b4e:	f1ac 0404 	sub.w	r4, ip, #4
   85b52:	f024 0403 	bic.w	r4, r4, #3
   85b56:	3404      	adds	r4, #4
   85b58:	f002 0203 	and.w	r2, r2, #3
   85b5c:	4423      	add	r3, r4
   85b5e:	4421      	add	r1, r4
   85b60:	2a00      	cmp	r2, #0
   85b62:	d0bf      	beq.n	85ae4 <memmove+0x24>
   85b64:	441a      	add	r2, r3
   85b66:	f811 4b01 	ldrb.w	r4, [r1], #1
   85b6a:	f803 4b01 	strb.w	r4, [r3], #1
   85b6e:	4293      	cmp	r3, r2
   85b70:	d1f9      	bne.n	85b66 <memmove+0xa6>
   85b72:	bcf0      	pop	{r4, r5, r6, r7}
   85b74:	4770      	bx	lr
   85b76:	4603      	mov	r3, r0
   85b78:	2a00      	cmp	r2, #0
   85b7a:	d1f3      	bne.n	85b64 <memmove+0xa4>
   85b7c:	e7b2      	b.n	85ae4 <memmove+0x24>
   85b7e:	4603      	mov	r3, r0
   85b80:	e7f0      	b.n	85b64 <memmove+0xa4>
   85b82:	4662      	mov	r2, ip
   85b84:	2a00      	cmp	r2, #0
   85b86:	d1ed      	bne.n	85b64 <memmove+0xa4>
   85b88:	e7ac      	b.n	85ae4 <memmove+0x24>
   85b8a:	bf00      	nop

00085b8c <__malloc_lock>:
   85b8c:	4770      	bx	lr
   85b8e:	bf00      	nop

00085b90 <__malloc_unlock>:
   85b90:	4770      	bx	lr
   85b92:	bf00      	nop

00085b94 <_Balloc>:
   85b94:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
   85b96:	b570      	push	{r4, r5, r6, lr}
   85b98:	4605      	mov	r5, r0
   85b9a:	460c      	mov	r4, r1
   85b9c:	b14a      	cbz	r2, 85bb2 <_Balloc+0x1e>
   85b9e:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
   85ba2:	b180      	cbz	r0, 85bc6 <_Balloc+0x32>
   85ba4:	6801      	ldr	r1, [r0, #0]
   85ba6:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
   85baa:	2200      	movs	r2, #0
   85bac:	6102      	str	r2, [r0, #16]
   85bae:	60c2      	str	r2, [r0, #12]
   85bb0:	bd70      	pop	{r4, r5, r6, pc}
   85bb2:	2221      	movs	r2, #33	; 0x21
   85bb4:	2104      	movs	r1, #4
   85bb6:	f000 fe71 	bl	8689c <_calloc_r>
   85bba:	64e8      	str	r0, [r5, #76]	; 0x4c
   85bbc:	4602      	mov	r2, r0
   85bbe:	2800      	cmp	r0, #0
   85bc0:	d1ed      	bne.n	85b9e <_Balloc+0xa>
   85bc2:	2000      	movs	r0, #0
   85bc4:	bd70      	pop	{r4, r5, r6, pc}
   85bc6:	2101      	movs	r1, #1
   85bc8:	fa01 f604 	lsl.w	r6, r1, r4
   85bcc:	1d72      	adds	r2, r6, #5
   85bce:	4628      	mov	r0, r5
   85bd0:	0092      	lsls	r2, r2, #2
   85bd2:	f000 fe63 	bl	8689c <_calloc_r>
   85bd6:	2800      	cmp	r0, #0
   85bd8:	d0f3      	beq.n	85bc2 <_Balloc+0x2e>
   85bda:	6044      	str	r4, [r0, #4]
   85bdc:	6086      	str	r6, [r0, #8]
   85bde:	e7e4      	b.n	85baa <_Balloc+0x16>

00085be0 <_Bfree>:
   85be0:	b131      	cbz	r1, 85bf0 <_Bfree+0x10>
   85be2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   85be4:	684a      	ldr	r2, [r1, #4]
   85be6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   85bea:	6008      	str	r0, [r1, #0]
   85bec:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   85bf0:	4770      	bx	lr
   85bf2:	bf00      	nop

00085bf4 <__multadd>:
   85bf4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   85bf8:	690f      	ldr	r7, [r1, #16]
   85bfa:	b083      	sub	sp, #12
   85bfc:	4688      	mov	r8, r1
   85bfe:	4681      	mov	r9, r0
   85c00:	f101 0514 	add.w	r5, r1, #20
   85c04:	2400      	movs	r4, #0
   85c06:	682e      	ldr	r6, [r5, #0]
   85c08:	3401      	adds	r4, #1
   85c0a:	b2b1      	uxth	r1, r6
   85c0c:	0c36      	lsrs	r6, r6, #16
   85c0e:	fb02 3301 	mla	r3, r2, r1, r3
   85c12:	fb02 f606 	mul.w	r6, r2, r6
   85c16:	b299      	uxth	r1, r3
   85c18:	eb06 4313 	add.w	r3, r6, r3, lsr #16
   85c1c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
   85c20:	42a7      	cmp	r7, r4
   85c22:	f845 1b04 	str.w	r1, [r5], #4
   85c26:	ea4f 4313 	mov.w	r3, r3, lsr #16
   85c2a:	dcec      	bgt.n	85c06 <__multadd+0x12>
   85c2c:	b14b      	cbz	r3, 85c42 <__multadd+0x4e>
   85c2e:	f8d8 2008 	ldr.w	r2, [r8, #8]
   85c32:	4297      	cmp	r7, r2
   85c34:	da09      	bge.n	85c4a <__multadd+0x56>
   85c36:	eb08 0287 	add.w	r2, r8, r7, lsl #2
   85c3a:	3701      	adds	r7, #1
   85c3c:	6153      	str	r3, [r2, #20]
   85c3e:	f8c8 7010 	str.w	r7, [r8, #16]
   85c42:	4640      	mov	r0, r8
   85c44:	b003      	add	sp, #12
   85c46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   85c4a:	f8d8 1004 	ldr.w	r1, [r8, #4]
   85c4e:	4648      	mov	r0, r9
   85c50:	3101      	adds	r1, #1
   85c52:	9301      	str	r3, [sp, #4]
   85c54:	f7ff ff9e 	bl	85b94 <_Balloc>
   85c58:	f8d8 2010 	ldr.w	r2, [r8, #16]
   85c5c:	f108 010c 	add.w	r1, r8, #12
   85c60:	3202      	adds	r2, #2
   85c62:	4604      	mov	r4, r0
   85c64:	0092      	lsls	r2, r2, #2
   85c66:	300c      	adds	r0, #12
   85c68:	f7fb fc0e 	bl	81488 <memcpy>
   85c6c:	f8d9 204c 	ldr.w	r2, [r9, #76]	; 0x4c
   85c70:	f8d8 1004 	ldr.w	r1, [r8, #4]
   85c74:	9b01      	ldr	r3, [sp, #4]
   85c76:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   85c7a:	f8c8 0000 	str.w	r0, [r8]
   85c7e:	f842 8021 	str.w	r8, [r2, r1, lsl #2]
   85c82:	46a0      	mov	r8, r4
   85c84:	e7d7      	b.n	85c36 <__multadd+0x42>
   85c86:	bf00      	nop

00085c88 <__hi0bits>:
   85c88:	0c03      	lsrs	r3, r0, #16
   85c8a:	041b      	lsls	r3, r3, #16
   85c8c:	b9b3      	cbnz	r3, 85cbc <__hi0bits+0x34>
   85c8e:	0400      	lsls	r0, r0, #16
   85c90:	2310      	movs	r3, #16
   85c92:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
   85c96:	bf04      	itt	eq
   85c98:	0200      	lsleq	r0, r0, #8
   85c9a:	3308      	addeq	r3, #8
   85c9c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
   85ca0:	bf04      	itt	eq
   85ca2:	0100      	lsleq	r0, r0, #4
   85ca4:	3304      	addeq	r3, #4
   85ca6:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
   85caa:	bf04      	itt	eq
   85cac:	0080      	lsleq	r0, r0, #2
   85cae:	3302      	addeq	r3, #2
   85cb0:	2800      	cmp	r0, #0
   85cb2:	db07      	blt.n	85cc4 <__hi0bits+0x3c>
   85cb4:	0042      	lsls	r2, r0, #1
   85cb6:	d403      	bmi.n	85cc0 <__hi0bits+0x38>
   85cb8:	2020      	movs	r0, #32
   85cba:	4770      	bx	lr
   85cbc:	2300      	movs	r3, #0
   85cbe:	e7e8      	b.n	85c92 <__hi0bits+0xa>
   85cc0:	1c58      	adds	r0, r3, #1
   85cc2:	4770      	bx	lr
   85cc4:	4618      	mov	r0, r3
   85cc6:	4770      	bx	lr

00085cc8 <__lo0bits>:
   85cc8:	6803      	ldr	r3, [r0, #0]
   85cca:	f013 0207 	ands.w	r2, r3, #7
   85cce:	d007      	beq.n	85ce0 <__lo0bits+0x18>
   85cd0:	07d9      	lsls	r1, r3, #31
   85cd2:	d420      	bmi.n	85d16 <__lo0bits+0x4e>
   85cd4:	079a      	lsls	r2, r3, #30
   85cd6:	d420      	bmi.n	85d1a <__lo0bits+0x52>
   85cd8:	089b      	lsrs	r3, r3, #2
   85cda:	6003      	str	r3, [r0, #0]
   85cdc:	2002      	movs	r0, #2
   85cde:	4770      	bx	lr
   85ce0:	b299      	uxth	r1, r3
   85ce2:	b909      	cbnz	r1, 85ce8 <__lo0bits+0x20>
   85ce4:	0c1b      	lsrs	r3, r3, #16
   85ce6:	2210      	movs	r2, #16
   85ce8:	f013 0fff 	tst.w	r3, #255	; 0xff
   85cec:	bf04      	itt	eq
   85cee:	0a1b      	lsreq	r3, r3, #8
   85cf0:	3208      	addeq	r2, #8
   85cf2:	0719      	lsls	r1, r3, #28
   85cf4:	bf04      	itt	eq
   85cf6:	091b      	lsreq	r3, r3, #4
   85cf8:	3204      	addeq	r2, #4
   85cfa:	0799      	lsls	r1, r3, #30
   85cfc:	bf04      	itt	eq
   85cfe:	089b      	lsreq	r3, r3, #2
   85d00:	3202      	addeq	r2, #2
   85d02:	07d9      	lsls	r1, r3, #31
   85d04:	d404      	bmi.n	85d10 <__lo0bits+0x48>
   85d06:	085b      	lsrs	r3, r3, #1
   85d08:	d101      	bne.n	85d0e <__lo0bits+0x46>
   85d0a:	2020      	movs	r0, #32
   85d0c:	4770      	bx	lr
   85d0e:	3201      	adds	r2, #1
   85d10:	6003      	str	r3, [r0, #0]
   85d12:	4610      	mov	r0, r2
   85d14:	4770      	bx	lr
   85d16:	2000      	movs	r0, #0
   85d18:	4770      	bx	lr
   85d1a:	085b      	lsrs	r3, r3, #1
   85d1c:	6003      	str	r3, [r0, #0]
   85d1e:	2001      	movs	r0, #1
   85d20:	4770      	bx	lr
   85d22:	bf00      	nop

00085d24 <__i2b>:
   85d24:	b510      	push	{r4, lr}
   85d26:	460c      	mov	r4, r1
   85d28:	2101      	movs	r1, #1
   85d2a:	f7ff ff33 	bl	85b94 <_Balloc>
   85d2e:	2201      	movs	r2, #1
   85d30:	6144      	str	r4, [r0, #20]
   85d32:	6102      	str	r2, [r0, #16]
   85d34:	bd10      	pop	{r4, pc}
   85d36:	bf00      	nop

00085d38 <__multiply>:
   85d38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85d3c:	690d      	ldr	r5, [r1, #16]
   85d3e:	f8d2 9010 	ldr.w	r9, [r2, #16]
   85d42:	b085      	sub	sp, #20
   85d44:	454d      	cmp	r5, r9
   85d46:	460c      	mov	r4, r1
   85d48:	4692      	mov	sl, r2
   85d4a:	da04      	bge.n	85d56 <__multiply+0x1e>
   85d4c:	462a      	mov	r2, r5
   85d4e:	4654      	mov	r4, sl
   85d50:	464d      	mov	r5, r9
   85d52:	468a      	mov	sl, r1
   85d54:	4691      	mov	r9, r2
   85d56:	68a3      	ldr	r3, [r4, #8]
   85d58:	eb05 0709 	add.w	r7, r5, r9
   85d5c:	6861      	ldr	r1, [r4, #4]
   85d5e:	429f      	cmp	r7, r3
   85d60:	bfc8      	it	gt
   85d62:	3101      	addgt	r1, #1
   85d64:	f7ff ff16 	bl	85b94 <_Balloc>
   85d68:	f100 0614 	add.w	r6, r0, #20
   85d6c:	eb06 0887 	add.w	r8, r6, r7, lsl #2
   85d70:	4546      	cmp	r6, r8
   85d72:	9001      	str	r0, [sp, #4]
   85d74:	d205      	bcs.n	85d82 <__multiply+0x4a>
   85d76:	4633      	mov	r3, r6
   85d78:	2000      	movs	r0, #0
   85d7a:	f843 0b04 	str.w	r0, [r3], #4
   85d7e:	4598      	cmp	r8, r3
   85d80:	d8fb      	bhi.n	85d7a <__multiply+0x42>
   85d82:	f10a 0c14 	add.w	ip, sl, #20
   85d86:	eb0c 0989 	add.w	r9, ip, r9, lsl #2
   85d8a:	3414      	adds	r4, #20
   85d8c:	45cc      	cmp	ip, r9
   85d8e:	9400      	str	r4, [sp, #0]
   85d90:	eb04 0585 	add.w	r5, r4, r5, lsl #2
   85d94:	d25b      	bcs.n	85e4e <__multiply+0x116>
   85d96:	f8cd 8008 	str.w	r8, [sp, #8]
   85d9a:	9703      	str	r7, [sp, #12]
   85d9c:	46c8      	mov	r8, r9
   85d9e:	f85c 3b04 	ldr.w	r3, [ip], #4
   85da2:	b29c      	uxth	r4, r3
   85da4:	b324      	cbz	r4, 85df0 <__multiply+0xb8>
   85da6:	9a00      	ldr	r2, [sp, #0]
   85da8:	4633      	mov	r3, r6
   85daa:	f04f 0900 	mov.w	r9, #0
   85dae:	e000      	b.n	85db2 <__multiply+0x7a>
   85db0:	460b      	mov	r3, r1
   85db2:	f852 7b04 	ldr.w	r7, [r2], #4
   85db6:	6819      	ldr	r1, [r3, #0]
   85db8:	fa1f fb87 	uxth.w	fp, r7
   85dbc:	fa1f fa81 	uxth.w	sl, r1
   85dc0:	0c38      	lsrs	r0, r7, #16
   85dc2:	0c09      	lsrs	r1, r1, #16
   85dc4:	fb04 aa0b 	mla	sl, r4, fp, sl
   85dc8:	fb04 1000 	mla	r0, r4, r0, r1
   85dcc:	44d1      	add	r9, sl
   85dce:	eb00 4019 	add.w	r0, r0, r9, lsr #16
   85dd2:	fa1f f989 	uxth.w	r9, r9
   85dd6:	ea49 4700 	orr.w	r7, r9, r0, lsl #16
   85dda:	4619      	mov	r1, r3
   85ddc:	4295      	cmp	r5, r2
   85dde:	ea4f 4910 	mov.w	r9, r0, lsr #16
   85de2:	f841 7b04 	str.w	r7, [r1], #4
   85de6:	d8e3      	bhi.n	85db0 <__multiply+0x78>
   85de8:	f8c3 9004 	str.w	r9, [r3, #4]
   85dec:	f85c 3c04 	ldr.w	r3, [ip, #-4]
   85df0:	ea5f 4913 	movs.w	r9, r3, lsr #16
   85df4:	d024      	beq.n	85e40 <__multiply+0x108>
   85df6:	f8d6 a000 	ldr.w	sl, [r6]
   85dfa:	9b00      	ldr	r3, [sp, #0]
   85dfc:	4650      	mov	r0, sl
   85dfe:	4631      	mov	r1, r6
   85e00:	f04f 0b00 	mov.w	fp, #0
   85e04:	e000      	b.n	85e08 <__multiply+0xd0>
   85e06:	4611      	mov	r1, r2
   85e08:	881a      	ldrh	r2, [r3, #0]
   85e0a:	0c00      	lsrs	r0, r0, #16
   85e0c:	fb09 0002 	mla	r0, r9, r2, r0
   85e10:	fa1f fa8a 	uxth.w	sl, sl
   85e14:	4483      	add	fp, r0
   85e16:	ea4a 400b 	orr.w	r0, sl, fp, lsl #16
   85e1a:	460a      	mov	r2, r1
   85e1c:	f842 0b04 	str.w	r0, [r2], #4
   85e20:	f853 7b04 	ldr.w	r7, [r3], #4
   85e24:	6848      	ldr	r0, [r1, #4]
   85e26:	ea4f 4a17 	mov.w	sl, r7, lsr #16
   85e2a:	b284      	uxth	r4, r0
   85e2c:	fb09 4a0a 	mla	sl, r9, sl, r4
   85e30:	429d      	cmp	r5, r3
   85e32:	eb0a 4a1b 	add.w	sl, sl, fp, lsr #16
   85e36:	ea4f 4b1a 	mov.w	fp, sl, lsr #16
   85e3a:	d8e4      	bhi.n	85e06 <__multiply+0xce>
   85e3c:	f8c1 a004 	str.w	sl, [r1, #4]
   85e40:	45e0      	cmp	r8, ip
   85e42:	f106 0604 	add.w	r6, r6, #4
   85e46:	d8aa      	bhi.n	85d9e <__multiply+0x66>
   85e48:	f8dd 8008 	ldr.w	r8, [sp, #8]
   85e4c:	9f03      	ldr	r7, [sp, #12]
   85e4e:	2f00      	cmp	r7, #0
   85e50:	dd0a      	ble.n	85e68 <__multiply+0x130>
   85e52:	f858 3c04 	ldr.w	r3, [r8, #-4]
   85e56:	f1a8 0804 	sub.w	r8, r8, #4
   85e5a:	b11b      	cbz	r3, 85e64 <__multiply+0x12c>
   85e5c:	e004      	b.n	85e68 <__multiply+0x130>
   85e5e:	f858 3d04 	ldr.w	r3, [r8, #-4]!
   85e62:	b90b      	cbnz	r3, 85e68 <__multiply+0x130>
   85e64:	3f01      	subs	r7, #1
   85e66:	d1fa      	bne.n	85e5e <__multiply+0x126>
   85e68:	9b01      	ldr	r3, [sp, #4]
   85e6a:	4618      	mov	r0, r3
   85e6c:	611f      	str	r7, [r3, #16]
   85e6e:	b005      	add	sp, #20
   85e70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00085e74 <__pow5mult>:
   85e74:	f012 0303 	ands.w	r3, r2, #3
   85e78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   85e7c:	4614      	mov	r4, r2
   85e7e:	4607      	mov	r7, r0
   85e80:	460e      	mov	r6, r1
   85e82:	d12c      	bne.n	85ede <__pow5mult+0x6a>
   85e84:	10a4      	asrs	r4, r4, #2
   85e86:	d01c      	beq.n	85ec2 <__pow5mult+0x4e>
   85e88:	6cbd      	ldr	r5, [r7, #72]	; 0x48
   85e8a:	2d00      	cmp	r5, #0
   85e8c:	d030      	beq.n	85ef0 <__pow5mult+0x7c>
   85e8e:	f04f 0800 	mov.w	r8, #0
   85e92:	e004      	b.n	85e9e <__pow5mult+0x2a>
   85e94:	1064      	asrs	r4, r4, #1
   85e96:	d014      	beq.n	85ec2 <__pow5mult+0x4e>
   85e98:	6828      	ldr	r0, [r5, #0]
   85e9a:	b1a8      	cbz	r0, 85ec8 <__pow5mult+0x54>
   85e9c:	4605      	mov	r5, r0
   85e9e:	07e3      	lsls	r3, r4, #31
   85ea0:	d5f8      	bpl.n	85e94 <__pow5mult+0x20>
   85ea2:	4638      	mov	r0, r7
   85ea4:	4631      	mov	r1, r6
   85ea6:	462a      	mov	r2, r5
   85ea8:	f7ff ff46 	bl	85d38 <__multiply>
   85eac:	b1ae      	cbz	r6, 85eda <__pow5mult+0x66>
   85eae:	6872      	ldr	r2, [r6, #4]
   85eb0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   85eb2:	1064      	asrs	r4, r4, #1
   85eb4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   85eb8:	6031      	str	r1, [r6, #0]
   85eba:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   85ebe:	4606      	mov	r6, r0
   85ec0:	d1ea      	bne.n	85e98 <__pow5mult+0x24>
   85ec2:	4630      	mov	r0, r6
   85ec4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   85ec8:	4638      	mov	r0, r7
   85eca:	4629      	mov	r1, r5
   85ecc:	462a      	mov	r2, r5
   85ece:	f7ff ff33 	bl	85d38 <__multiply>
   85ed2:	6028      	str	r0, [r5, #0]
   85ed4:	f8c0 8000 	str.w	r8, [r0]
   85ed8:	e7e0      	b.n	85e9c <__pow5mult+0x28>
   85eda:	4606      	mov	r6, r0
   85edc:	e7da      	b.n	85e94 <__pow5mult+0x20>
   85ede:	4a0b      	ldr	r2, [pc, #44]	; (85f0c <__pow5mult+0x98>)
   85ee0:	3b01      	subs	r3, #1
   85ee2:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   85ee6:	2300      	movs	r3, #0
   85ee8:	f7ff fe84 	bl	85bf4 <__multadd>
   85eec:	4606      	mov	r6, r0
   85eee:	e7c9      	b.n	85e84 <__pow5mult+0x10>
   85ef0:	2101      	movs	r1, #1
   85ef2:	4638      	mov	r0, r7
   85ef4:	f7ff fe4e 	bl	85b94 <_Balloc>
   85ef8:	f240 2171 	movw	r1, #625	; 0x271
   85efc:	2201      	movs	r2, #1
   85efe:	2300      	movs	r3, #0
   85f00:	6141      	str	r1, [r0, #20]
   85f02:	6102      	str	r2, [r0, #16]
   85f04:	4605      	mov	r5, r0
   85f06:	64b8      	str	r0, [r7, #72]	; 0x48
   85f08:	6003      	str	r3, [r0, #0]
   85f0a:	e7c0      	b.n	85e8e <__pow5mult+0x1a>
   85f0c:	00087b70 	.word	0x00087b70

00085f10 <__lshift>:
   85f10:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85f14:	690b      	ldr	r3, [r1, #16]
   85f16:	ea4f 1a62 	mov.w	sl, r2, asr #5
   85f1a:	eb0a 0903 	add.w	r9, sl, r3
   85f1e:	688b      	ldr	r3, [r1, #8]
   85f20:	f109 0601 	add.w	r6, r9, #1
   85f24:	429e      	cmp	r6, r3
   85f26:	460f      	mov	r7, r1
   85f28:	4693      	mov	fp, r2
   85f2a:	4680      	mov	r8, r0
   85f2c:	6849      	ldr	r1, [r1, #4]
   85f2e:	dd04      	ble.n	85f3a <__lshift+0x2a>
   85f30:	005b      	lsls	r3, r3, #1
   85f32:	429e      	cmp	r6, r3
   85f34:	f101 0101 	add.w	r1, r1, #1
   85f38:	dcfa      	bgt.n	85f30 <__lshift+0x20>
   85f3a:	4640      	mov	r0, r8
   85f3c:	f7ff fe2a 	bl	85b94 <_Balloc>
   85f40:	f1ba 0f00 	cmp.w	sl, #0
   85f44:	f100 0414 	add.w	r4, r0, #20
   85f48:	dd09      	ble.n	85f5e <__lshift+0x4e>
   85f4a:	2300      	movs	r3, #0
   85f4c:	461a      	mov	r2, r3
   85f4e:	4625      	mov	r5, r4
   85f50:	3301      	adds	r3, #1
   85f52:	4553      	cmp	r3, sl
   85f54:	f845 2b04 	str.w	r2, [r5], #4
   85f58:	d1fa      	bne.n	85f50 <__lshift+0x40>
   85f5a:	eb04 0483 	add.w	r4, r4, r3, lsl #2
   85f5e:	693a      	ldr	r2, [r7, #16]
   85f60:	f107 0314 	add.w	r3, r7, #20
   85f64:	f01b 0b1f 	ands.w	fp, fp, #31
   85f68:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
   85f6c:	d021      	beq.n	85fb2 <__lshift+0xa2>
   85f6e:	f1cb 0a20 	rsb	sl, fp, #32
   85f72:	2200      	movs	r2, #0
   85f74:	e000      	b.n	85f78 <__lshift+0x68>
   85f76:	462c      	mov	r4, r5
   85f78:	6819      	ldr	r1, [r3, #0]
   85f7a:	4625      	mov	r5, r4
   85f7c:	fa01 f10b 	lsl.w	r1, r1, fp
   85f80:	430a      	orrs	r2, r1
   85f82:	f845 2b04 	str.w	r2, [r5], #4
   85f86:	f853 2b04 	ldr.w	r2, [r3], #4
   85f8a:	4563      	cmp	r3, ip
   85f8c:	fa22 f20a 	lsr.w	r2, r2, sl
   85f90:	d3f1      	bcc.n	85f76 <__lshift+0x66>
   85f92:	6062      	str	r2, [r4, #4]
   85f94:	b10a      	cbz	r2, 85f9a <__lshift+0x8a>
   85f96:	f109 0602 	add.w	r6, r9, #2
   85f9a:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
   85f9e:	687a      	ldr	r2, [r7, #4]
   85fa0:	3e01      	subs	r6, #1
   85fa2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   85fa6:	6106      	str	r6, [r0, #16]
   85fa8:	6039      	str	r1, [r7, #0]
   85faa:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   85fae:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85fb2:	f853 2b04 	ldr.w	r2, [r3], #4
   85fb6:	459c      	cmp	ip, r3
   85fb8:	f844 2b04 	str.w	r2, [r4], #4
   85fbc:	d9ed      	bls.n	85f9a <__lshift+0x8a>
   85fbe:	f853 2b04 	ldr.w	r2, [r3], #4
   85fc2:	459c      	cmp	ip, r3
   85fc4:	f844 2b04 	str.w	r2, [r4], #4
   85fc8:	d8f3      	bhi.n	85fb2 <__lshift+0xa2>
   85fca:	e7e6      	b.n	85f9a <__lshift+0x8a>

00085fcc <__mcmp>:
   85fcc:	6902      	ldr	r2, [r0, #16]
   85fce:	690b      	ldr	r3, [r1, #16]
   85fd0:	b410      	push	{r4}
   85fd2:	1ad2      	subs	r2, r2, r3
   85fd4:	d115      	bne.n	86002 <__mcmp+0x36>
   85fd6:	009b      	lsls	r3, r3, #2
   85fd8:	3014      	adds	r0, #20
   85fda:	3114      	adds	r1, #20
   85fdc:	4419      	add	r1, r3
   85fde:	4403      	add	r3, r0
   85fe0:	e001      	b.n	85fe6 <__mcmp+0x1a>
   85fe2:	4298      	cmp	r0, r3
   85fe4:	d211      	bcs.n	8600a <__mcmp+0x3e>
   85fe6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   85fea:	f851 4d04 	ldr.w	r4, [r1, #-4]!
   85fee:	42a2      	cmp	r2, r4
   85ff0:	d0f7      	beq.n	85fe2 <__mcmp+0x16>
   85ff2:	4294      	cmp	r4, r2
   85ff4:	bf94      	ite	ls
   85ff6:	2001      	movls	r0, #1
   85ff8:	f04f 30ff 	movhi.w	r0, #4294967295
   85ffc:	f85d 4b04 	ldr.w	r4, [sp], #4
   86000:	4770      	bx	lr
   86002:	4610      	mov	r0, r2
   86004:	f85d 4b04 	ldr.w	r4, [sp], #4
   86008:	4770      	bx	lr
   8600a:	2000      	movs	r0, #0
   8600c:	f85d 4b04 	ldr.w	r4, [sp], #4
   86010:	4770      	bx	lr
   86012:	bf00      	nop

00086014 <__mdiff>:
   86014:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   86018:	460d      	mov	r5, r1
   8601a:	4604      	mov	r4, r0
   8601c:	4611      	mov	r1, r2
   8601e:	4628      	mov	r0, r5
   86020:	4616      	mov	r6, r2
   86022:	f7ff ffd3 	bl	85fcc <__mcmp>
   86026:	1e07      	subs	r7, r0, #0
   86028:	d056      	beq.n	860d8 <__mdiff+0xc4>
   8602a:	db4f      	blt.n	860cc <__mdiff+0xb8>
   8602c:	f04f 0900 	mov.w	r9, #0
   86030:	6869      	ldr	r1, [r5, #4]
   86032:	4620      	mov	r0, r4
   86034:	f7ff fdae 	bl	85b94 <_Balloc>
   86038:	692f      	ldr	r7, [r5, #16]
   8603a:	6932      	ldr	r2, [r6, #16]
   8603c:	3514      	adds	r5, #20
   8603e:	3614      	adds	r6, #20
   86040:	f8c0 900c 	str.w	r9, [r0, #12]
   86044:	f100 0314 	add.w	r3, r0, #20
   86048:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
   8604c:	eb06 0882 	add.w	r8, r6, r2, lsl #2
   86050:	2100      	movs	r1, #0
   86052:	f855 4b04 	ldr.w	r4, [r5], #4
   86056:	f856 2b04 	ldr.w	r2, [r6], #4
   8605a:	fa1f fa84 	uxth.w	sl, r4
   8605e:	448a      	add	sl, r1
   86060:	fa1f f982 	uxth.w	r9, r2
   86064:	0c11      	lsrs	r1, r2, #16
   86066:	ebc1 4114 	rsb	r1, r1, r4, lsr #16
   8606a:	ebc9 020a 	rsb	r2, r9, sl
   8606e:	eb01 4122 	add.w	r1, r1, r2, asr #16
   86072:	b292      	uxth	r2, r2
   86074:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   86078:	45b0      	cmp	r8, r6
   8607a:	f843 2b04 	str.w	r2, [r3], #4
   8607e:	ea4f 4121 	mov.w	r1, r1, asr #16
   86082:	462c      	mov	r4, r5
   86084:	d8e5      	bhi.n	86052 <__mdiff+0x3e>
   86086:	45ac      	cmp	ip, r5
   86088:	4698      	mov	r8, r3
   8608a:	d915      	bls.n	860b8 <__mdiff+0xa4>
   8608c:	f854 6b04 	ldr.w	r6, [r4], #4
   86090:	b2b2      	uxth	r2, r6
   86092:	4411      	add	r1, r2
   86094:	0c36      	lsrs	r6, r6, #16
   86096:	eb06 4621 	add.w	r6, r6, r1, asr #16
   8609a:	b289      	uxth	r1, r1
   8609c:	ea41 4206 	orr.w	r2, r1, r6, lsl #16
   860a0:	45a4      	cmp	ip, r4
   860a2:	f843 2b04 	str.w	r2, [r3], #4
   860a6:	ea4f 4126 	mov.w	r1, r6, asr #16
   860aa:	d8ef      	bhi.n	8608c <__mdiff+0x78>
   860ac:	43eb      	mvns	r3, r5
   860ae:	4463      	add	r3, ip
   860b0:	f023 0303 	bic.w	r3, r3, #3
   860b4:	3304      	adds	r3, #4
   860b6:	4443      	add	r3, r8
   860b8:	3b04      	subs	r3, #4
   860ba:	b922      	cbnz	r2, 860c6 <__mdiff+0xb2>
   860bc:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   860c0:	3f01      	subs	r7, #1
   860c2:	2a00      	cmp	r2, #0
   860c4:	d0fa      	beq.n	860bc <__mdiff+0xa8>
   860c6:	6107      	str	r7, [r0, #16]
   860c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   860cc:	462b      	mov	r3, r5
   860ce:	f04f 0901 	mov.w	r9, #1
   860d2:	4635      	mov	r5, r6
   860d4:	461e      	mov	r6, r3
   860d6:	e7ab      	b.n	86030 <__mdiff+0x1c>
   860d8:	4620      	mov	r0, r4
   860da:	4639      	mov	r1, r7
   860dc:	f7ff fd5a 	bl	85b94 <_Balloc>
   860e0:	2301      	movs	r3, #1
   860e2:	6147      	str	r7, [r0, #20]
   860e4:	6103      	str	r3, [r0, #16]
   860e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   860ea:	bf00      	nop

000860ec <__d2b>:
   860ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   860f0:	2101      	movs	r1, #1
   860f2:	b083      	sub	sp, #12
   860f4:	461d      	mov	r5, r3
   860f6:	f3c3 560a 	ubfx	r6, r3, #20, #11
   860fa:	4614      	mov	r4, r2
   860fc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   860fe:	f7ff fd49 	bl	85b94 <_Balloc>
   86102:	f3c5 0313 	ubfx	r3, r5, #0, #20
   86106:	4680      	mov	r8, r0
   86108:	b10e      	cbz	r6, 8610e <__d2b+0x22>
   8610a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   8610e:	9301      	str	r3, [sp, #4]
   86110:	b324      	cbz	r4, 8615c <__d2b+0x70>
   86112:	a802      	add	r0, sp, #8
   86114:	f840 4d08 	str.w	r4, [r0, #-8]!
   86118:	4668      	mov	r0, sp
   8611a:	f7ff fdd5 	bl	85cc8 <__lo0bits>
   8611e:	2800      	cmp	r0, #0
   86120:	d135      	bne.n	8618e <__d2b+0xa2>
   86122:	e89d 000c 	ldmia.w	sp, {r2, r3}
   86126:	f8c8 2014 	str.w	r2, [r8, #20]
   8612a:	2b00      	cmp	r3, #0
   8612c:	bf0c      	ite	eq
   8612e:	2401      	moveq	r4, #1
   86130:	2402      	movne	r4, #2
   86132:	f8c8 3018 	str.w	r3, [r8, #24]
   86136:	f8c8 4010 	str.w	r4, [r8, #16]
   8613a:	b9de      	cbnz	r6, 86174 <__d2b+0x88>
   8613c:	eb08 0384 	add.w	r3, r8, r4, lsl #2
   86140:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   86144:	6038      	str	r0, [r7, #0]
   86146:	6918      	ldr	r0, [r3, #16]
   86148:	f7ff fd9e 	bl	85c88 <__hi0bits>
   8614c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8614e:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
   86152:	6018      	str	r0, [r3, #0]
   86154:	4640      	mov	r0, r8
   86156:	b003      	add	sp, #12
   86158:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8615c:	a801      	add	r0, sp, #4
   8615e:	f7ff fdb3 	bl	85cc8 <__lo0bits>
   86162:	9b01      	ldr	r3, [sp, #4]
   86164:	2401      	movs	r4, #1
   86166:	3020      	adds	r0, #32
   86168:	f8c8 3014 	str.w	r3, [r8, #20]
   8616c:	f8c8 4010 	str.w	r4, [r8, #16]
   86170:	2e00      	cmp	r6, #0
   86172:	d0e3      	beq.n	8613c <__d2b+0x50>
   86174:	f2a6 4933 	subw	r9, r6, #1075	; 0x433
   86178:	eb09 0300 	add.w	r3, r9, r0
   8617c:	603b      	str	r3, [r7, #0]
   8617e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   86180:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   86184:	6018      	str	r0, [r3, #0]
   86186:	4640      	mov	r0, r8
   86188:	b003      	add	sp, #12
   8618a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8618e:	9b01      	ldr	r3, [sp, #4]
   86190:	f1c0 0120 	rsb	r1, r0, #32
   86194:	fa03 f101 	lsl.w	r1, r3, r1
   86198:	40c3      	lsrs	r3, r0
   8619a:	9a00      	ldr	r2, [sp, #0]
   8619c:	9301      	str	r3, [sp, #4]
   8619e:	430a      	orrs	r2, r1
   861a0:	f8c8 2014 	str.w	r2, [r8, #20]
   861a4:	e7c1      	b.n	8612a <__d2b+0x3e>
   861a6:	bf00      	nop

000861a8 <_realloc_r>:
   861a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   861ac:	460c      	mov	r4, r1
   861ae:	b083      	sub	sp, #12
   861b0:	4690      	mov	r8, r2
   861b2:	4681      	mov	r9, r0
   861b4:	2900      	cmp	r1, #0
   861b6:	f000 80ba 	beq.w	8632e <_realloc_r+0x186>
   861ba:	f7ff fce7 	bl	85b8c <__malloc_lock>
   861be:	f108 060b 	add.w	r6, r8, #11
   861c2:	f854 3c04 	ldr.w	r3, [r4, #-4]
   861c6:	2e16      	cmp	r6, #22
   861c8:	f023 0503 	bic.w	r5, r3, #3
   861cc:	f1a4 0708 	sub.w	r7, r4, #8
   861d0:	d84b      	bhi.n	8626a <_realloc_r+0xc2>
   861d2:	2110      	movs	r1, #16
   861d4:	460e      	mov	r6, r1
   861d6:	45b0      	cmp	r8, r6
   861d8:	d84c      	bhi.n	86274 <_realloc_r+0xcc>
   861da:	428d      	cmp	r5, r1
   861dc:	da51      	bge.n	86282 <_realloc_r+0xda>
   861de:	f8df b384 	ldr.w	fp, [pc, #900]	; 86564 <_realloc_r+0x3bc>
   861e2:	1978      	adds	r0, r7, r5
   861e4:	f8db e008 	ldr.w	lr, [fp, #8]
   861e8:	4586      	cmp	lr, r0
   861ea:	f000 80a6 	beq.w	8633a <_realloc_r+0x192>
   861ee:	6842      	ldr	r2, [r0, #4]
   861f0:	f022 0c01 	bic.w	ip, r2, #1
   861f4:	4484      	add	ip, r0
   861f6:	f8dc c004 	ldr.w	ip, [ip, #4]
   861fa:	f01c 0f01 	tst.w	ip, #1
   861fe:	d054      	beq.n	862aa <_realloc_r+0x102>
   86200:	2200      	movs	r2, #0
   86202:	4610      	mov	r0, r2
   86204:	07db      	lsls	r3, r3, #31
   86206:	d46f      	bmi.n	862e8 <_realloc_r+0x140>
   86208:	f854 3c08 	ldr.w	r3, [r4, #-8]
   8620c:	ebc3 0a07 	rsb	sl, r3, r7
   86210:	f8da 3004 	ldr.w	r3, [sl, #4]
   86214:	f023 0303 	bic.w	r3, r3, #3
   86218:	442b      	add	r3, r5
   8621a:	2800      	cmp	r0, #0
   8621c:	d062      	beq.n	862e4 <_realloc_r+0x13c>
   8621e:	4570      	cmp	r0, lr
   86220:	f000 80e9 	beq.w	863f6 <_realloc_r+0x24e>
   86224:	eb02 0e03 	add.w	lr, r2, r3
   86228:	458e      	cmp	lr, r1
   8622a:	db5b      	blt.n	862e4 <_realloc_r+0x13c>
   8622c:	68c3      	ldr	r3, [r0, #12]
   8622e:	6882      	ldr	r2, [r0, #8]
   86230:	46d0      	mov	r8, sl
   86232:	60d3      	str	r3, [r2, #12]
   86234:	609a      	str	r2, [r3, #8]
   86236:	f858 1f08 	ldr.w	r1, [r8, #8]!
   8623a:	f8da 300c 	ldr.w	r3, [sl, #12]
   8623e:	1f2a      	subs	r2, r5, #4
   86240:	2a24      	cmp	r2, #36	; 0x24
   86242:	60cb      	str	r3, [r1, #12]
   86244:	6099      	str	r1, [r3, #8]
   86246:	f200 8123 	bhi.w	86490 <_realloc_r+0x2e8>
   8624a:	2a13      	cmp	r2, #19
   8624c:	f240 80b0 	bls.w	863b0 <_realloc_r+0x208>
   86250:	6823      	ldr	r3, [r4, #0]
   86252:	2a1b      	cmp	r2, #27
   86254:	f8ca 3008 	str.w	r3, [sl, #8]
   86258:	6863      	ldr	r3, [r4, #4]
   8625a:	f8ca 300c 	str.w	r3, [sl, #12]
   8625e:	f200 812b 	bhi.w	864b8 <_realloc_r+0x310>
   86262:	3408      	adds	r4, #8
   86264:	f10a 0310 	add.w	r3, sl, #16
   86268:	e0a3      	b.n	863b2 <_realloc_r+0x20a>
   8626a:	f026 0607 	bic.w	r6, r6, #7
   8626e:	2e00      	cmp	r6, #0
   86270:	4631      	mov	r1, r6
   86272:	dab0      	bge.n	861d6 <_realloc_r+0x2e>
   86274:	230c      	movs	r3, #12
   86276:	2000      	movs	r0, #0
   86278:	f8c9 3000 	str.w	r3, [r9]
   8627c:	b003      	add	sp, #12
   8627e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86282:	46a0      	mov	r8, r4
   86284:	1baa      	subs	r2, r5, r6
   86286:	2a0f      	cmp	r2, #15
   86288:	f003 0301 	and.w	r3, r3, #1
   8628c:	d81a      	bhi.n	862c4 <_realloc_r+0x11c>
   8628e:	432b      	orrs	r3, r5
   86290:	607b      	str	r3, [r7, #4]
   86292:	443d      	add	r5, r7
   86294:	686b      	ldr	r3, [r5, #4]
   86296:	f043 0301 	orr.w	r3, r3, #1
   8629a:	606b      	str	r3, [r5, #4]
   8629c:	4648      	mov	r0, r9
   8629e:	f7ff fc77 	bl	85b90 <__malloc_unlock>
   862a2:	4640      	mov	r0, r8
   862a4:	b003      	add	sp, #12
   862a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   862aa:	f022 0203 	bic.w	r2, r2, #3
   862ae:	eb02 0c05 	add.w	ip, r2, r5
   862b2:	458c      	cmp	ip, r1
   862b4:	dba6      	blt.n	86204 <_realloc_r+0x5c>
   862b6:	68c2      	ldr	r2, [r0, #12]
   862b8:	6881      	ldr	r1, [r0, #8]
   862ba:	46a0      	mov	r8, r4
   862bc:	60ca      	str	r2, [r1, #12]
   862be:	4665      	mov	r5, ip
   862c0:	6091      	str	r1, [r2, #8]
   862c2:	e7df      	b.n	86284 <_realloc_r+0xdc>
   862c4:	19b9      	adds	r1, r7, r6
   862c6:	4333      	orrs	r3, r6
   862c8:	f042 0001 	orr.w	r0, r2, #1
   862cc:	607b      	str	r3, [r7, #4]
   862ce:	440a      	add	r2, r1
   862d0:	6048      	str	r0, [r1, #4]
   862d2:	6853      	ldr	r3, [r2, #4]
   862d4:	3108      	adds	r1, #8
   862d6:	f043 0301 	orr.w	r3, r3, #1
   862da:	6053      	str	r3, [r2, #4]
   862dc:	4648      	mov	r0, r9
   862de:	f7fe fe07 	bl	84ef0 <_free_r>
   862e2:	e7db      	b.n	8629c <_realloc_r+0xf4>
   862e4:	428b      	cmp	r3, r1
   862e6:	da33      	bge.n	86350 <_realloc_r+0x1a8>
   862e8:	4641      	mov	r1, r8
   862ea:	4648      	mov	r0, r9
   862ec:	f7ff f902 	bl	854f4 <_malloc_r>
   862f0:	4680      	mov	r8, r0
   862f2:	2800      	cmp	r0, #0
   862f4:	d0d2      	beq.n	8629c <_realloc_r+0xf4>
   862f6:	f854 3c04 	ldr.w	r3, [r4, #-4]
   862fa:	f1a0 0108 	sub.w	r1, r0, #8
   862fe:	f023 0201 	bic.w	r2, r3, #1
   86302:	443a      	add	r2, r7
   86304:	4291      	cmp	r1, r2
   86306:	f000 80bc 	beq.w	86482 <_realloc_r+0x2da>
   8630a:	1f2a      	subs	r2, r5, #4
   8630c:	2a24      	cmp	r2, #36	; 0x24
   8630e:	d86e      	bhi.n	863ee <_realloc_r+0x246>
   86310:	2a13      	cmp	r2, #19
   86312:	d842      	bhi.n	8639a <_realloc_r+0x1f2>
   86314:	4603      	mov	r3, r0
   86316:	4622      	mov	r2, r4
   86318:	6811      	ldr	r1, [r2, #0]
   8631a:	6019      	str	r1, [r3, #0]
   8631c:	6851      	ldr	r1, [r2, #4]
   8631e:	6059      	str	r1, [r3, #4]
   86320:	6892      	ldr	r2, [r2, #8]
   86322:	609a      	str	r2, [r3, #8]
   86324:	4621      	mov	r1, r4
   86326:	4648      	mov	r0, r9
   86328:	f7fe fde2 	bl	84ef0 <_free_r>
   8632c:	e7b6      	b.n	8629c <_realloc_r+0xf4>
   8632e:	4611      	mov	r1, r2
   86330:	b003      	add	sp, #12
   86332:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86336:	f7ff b8dd 	b.w	854f4 <_malloc_r>
   8633a:	f8de 2004 	ldr.w	r2, [lr, #4]
   8633e:	f106 0c10 	add.w	ip, r6, #16
   86342:	f022 0203 	bic.w	r2, r2, #3
   86346:	1950      	adds	r0, r2, r5
   86348:	4560      	cmp	r0, ip
   8634a:	da3d      	bge.n	863c8 <_realloc_r+0x220>
   8634c:	4670      	mov	r0, lr
   8634e:	e759      	b.n	86204 <_realloc_r+0x5c>
   86350:	46d0      	mov	r8, sl
   86352:	f858 0f08 	ldr.w	r0, [r8, #8]!
   86356:	f8da 100c 	ldr.w	r1, [sl, #12]
   8635a:	1f2a      	subs	r2, r5, #4
   8635c:	2a24      	cmp	r2, #36	; 0x24
   8635e:	60c1      	str	r1, [r0, #12]
   86360:	6088      	str	r0, [r1, #8]
   86362:	f200 80a0 	bhi.w	864a6 <_realloc_r+0x2fe>
   86366:	2a13      	cmp	r2, #19
   86368:	f240 809b 	bls.w	864a2 <_realloc_r+0x2fa>
   8636c:	6821      	ldr	r1, [r4, #0]
   8636e:	2a1b      	cmp	r2, #27
   86370:	f8ca 1008 	str.w	r1, [sl, #8]
   86374:	6861      	ldr	r1, [r4, #4]
   86376:	f8ca 100c 	str.w	r1, [sl, #12]
   8637a:	f200 80b2 	bhi.w	864e2 <_realloc_r+0x33a>
   8637e:	3408      	adds	r4, #8
   86380:	f10a 0210 	add.w	r2, sl, #16
   86384:	6821      	ldr	r1, [r4, #0]
   86386:	461d      	mov	r5, r3
   86388:	6011      	str	r1, [r2, #0]
   8638a:	6861      	ldr	r1, [r4, #4]
   8638c:	4657      	mov	r7, sl
   8638e:	6051      	str	r1, [r2, #4]
   86390:	68a3      	ldr	r3, [r4, #8]
   86392:	6093      	str	r3, [r2, #8]
   86394:	f8da 3004 	ldr.w	r3, [sl, #4]
   86398:	e774      	b.n	86284 <_realloc_r+0xdc>
   8639a:	6823      	ldr	r3, [r4, #0]
   8639c:	2a1b      	cmp	r2, #27
   8639e:	6003      	str	r3, [r0, #0]
   863a0:	6863      	ldr	r3, [r4, #4]
   863a2:	6043      	str	r3, [r0, #4]
   863a4:	d862      	bhi.n	8646c <_realloc_r+0x2c4>
   863a6:	f100 0308 	add.w	r3, r0, #8
   863aa:	f104 0208 	add.w	r2, r4, #8
   863ae:	e7b3      	b.n	86318 <_realloc_r+0x170>
   863b0:	4643      	mov	r3, r8
   863b2:	6822      	ldr	r2, [r4, #0]
   863b4:	4675      	mov	r5, lr
   863b6:	601a      	str	r2, [r3, #0]
   863b8:	6862      	ldr	r2, [r4, #4]
   863ba:	4657      	mov	r7, sl
   863bc:	605a      	str	r2, [r3, #4]
   863be:	68a2      	ldr	r2, [r4, #8]
   863c0:	609a      	str	r2, [r3, #8]
   863c2:	f8da 3004 	ldr.w	r3, [sl, #4]
   863c6:	e75d      	b.n	86284 <_realloc_r+0xdc>
   863c8:	1b83      	subs	r3, r0, r6
   863ca:	4437      	add	r7, r6
   863cc:	f043 0301 	orr.w	r3, r3, #1
   863d0:	f8cb 7008 	str.w	r7, [fp, #8]
   863d4:	607b      	str	r3, [r7, #4]
   863d6:	f854 3c04 	ldr.w	r3, [r4, #-4]
   863da:	4648      	mov	r0, r9
   863dc:	f003 0301 	and.w	r3, r3, #1
   863e0:	431e      	orrs	r6, r3
   863e2:	f844 6c04 	str.w	r6, [r4, #-4]
   863e6:	f7ff fbd3 	bl	85b90 <__malloc_unlock>
   863ea:	4620      	mov	r0, r4
   863ec:	e75a      	b.n	862a4 <_realloc_r+0xfc>
   863ee:	4621      	mov	r1, r4
   863f0:	f7ff fb66 	bl	85ac0 <memmove>
   863f4:	e796      	b.n	86324 <_realloc_r+0x17c>
   863f6:	eb02 0c03 	add.w	ip, r2, r3
   863fa:	f106 0210 	add.w	r2, r6, #16
   863fe:	4594      	cmp	ip, r2
   86400:	f6ff af70 	blt.w	862e4 <_realloc_r+0x13c>
   86404:	4657      	mov	r7, sl
   86406:	f857 1f08 	ldr.w	r1, [r7, #8]!
   8640a:	f8da 300c 	ldr.w	r3, [sl, #12]
   8640e:	1f2a      	subs	r2, r5, #4
   86410:	2a24      	cmp	r2, #36	; 0x24
   86412:	60cb      	str	r3, [r1, #12]
   86414:	6099      	str	r1, [r3, #8]
   86416:	f200 8086 	bhi.w	86526 <_realloc_r+0x37e>
   8641a:	2a13      	cmp	r2, #19
   8641c:	d977      	bls.n	8650e <_realloc_r+0x366>
   8641e:	6823      	ldr	r3, [r4, #0]
   86420:	2a1b      	cmp	r2, #27
   86422:	f8ca 3008 	str.w	r3, [sl, #8]
   86426:	6863      	ldr	r3, [r4, #4]
   86428:	f8ca 300c 	str.w	r3, [sl, #12]
   8642c:	f200 8084 	bhi.w	86538 <_realloc_r+0x390>
   86430:	3408      	adds	r4, #8
   86432:	f10a 0310 	add.w	r3, sl, #16
   86436:	6822      	ldr	r2, [r4, #0]
   86438:	601a      	str	r2, [r3, #0]
   8643a:	6862      	ldr	r2, [r4, #4]
   8643c:	605a      	str	r2, [r3, #4]
   8643e:	68a2      	ldr	r2, [r4, #8]
   86440:	609a      	str	r2, [r3, #8]
   86442:	ebc6 020c 	rsb	r2, r6, ip
   86446:	eb0a 0306 	add.w	r3, sl, r6
   8644a:	f042 0201 	orr.w	r2, r2, #1
   8644e:	f8cb 3008 	str.w	r3, [fp, #8]
   86452:	605a      	str	r2, [r3, #4]
   86454:	f8da 3004 	ldr.w	r3, [sl, #4]
   86458:	4648      	mov	r0, r9
   8645a:	f003 0301 	and.w	r3, r3, #1
   8645e:	431e      	orrs	r6, r3
   86460:	f8ca 6004 	str.w	r6, [sl, #4]
   86464:	f7ff fb94 	bl	85b90 <__malloc_unlock>
   86468:	4638      	mov	r0, r7
   8646a:	e71b      	b.n	862a4 <_realloc_r+0xfc>
   8646c:	68a3      	ldr	r3, [r4, #8]
   8646e:	2a24      	cmp	r2, #36	; 0x24
   86470:	6083      	str	r3, [r0, #8]
   86472:	68e3      	ldr	r3, [r4, #12]
   86474:	60c3      	str	r3, [r0, #12]
   86476:	d02b      	beq.n	864d0 <_realloc_r+0x328>
   86478:	f100 0310 	add.w	r3, r0, #16
   8647c:	f104 0210 	add.w	r2, r4, #16
   86480:	e74a      	b.n	86318 <_realloc_r+0x170>
   86482:	f850 2c04 	ldr.w	r2, [r0, #-4]
   86486:	46a0      	mov	r8, r4
   86488:	f022 0203 	bic.w	r2, r2, #3
   8648c:	4415      	add	r5, r2
   8648e:	e6f9      	b.n	86284 <_realloc_r+0xdc>
   86490:	4621      	mov	r1, r4
   86492:	4640      	mov	r0, r8
   86494:	4675      	mov	r5, lr
   86496:	4657      	mov	r7, sl
   86498:	f7ff fb12 	bl	85ac0 <memmove>
   8649c:	f8da 3004 	ldr.w	r3, [sl, #4]
   864a0:	e6f0      	b.n	86284 <_realloc_r+0xdc>
   864a2:	4642      	mov	r2, r8
   864a4:	e76e      	b.n	86384 <_realloc_r+0x1dc>
   864a6:	4621      	mov	r1, r4
   864a8:	4640      	mov	r0, r8
   864aa:	461d      	mov	r5, r3
   864ac:	4657      	mov	r7, sl
   864ae:	f7ff fb07 	bl	85ac0 <memmove>
   864b2:	f8da 3004 	ldr.w	r3, [sl, #4]
   864b6:	e6e5      	b.n	86284 <_realloc_r+0xdc>
   864b8:	68a3      	ldr	r3, [r4, #8]
   864ba:	2a24      	cmp	r2, #36	; 0x24
   864bc:	f8ca 3010 	str.w	r3, [sl, #16]
   864c0:	68e3      	ldr	r3, [r4, #12]
   864c2:	f8ca 3014 	str.w	r3, [sl, #20]
   864c6:	d018      	beq.n	864fa <_realloc_r+0x352>
   864c8:	3410      	adds	r4, #16
   864ca:	f10a 0318 	add.w	r3, sl, #24
   864ce:	e770      	b.n	863b2 <_realloc_r+0x20a>
   864d0:	6922      	ldr	r2, [r4, #16]
   864d2:	f100 0318 	add.w	r3, r0, #24
   864d6:	6102      	str	r2, [r0, #16]
   864d8:	6961      	ldr	r1, [r4, #20]
   864da:	f104 0218 	add.w	r2, r4, #24
   864de:	6141      	str	r1, [r0, #20]
   864e0:	e71a      	b.n	86318 <_realloc_r+0x170>
   864e2:	68a1      	ldr	r1, [r4, #8]
   864e4:	2a24      	cmp	r2, #36	; 0x24
   864e6:	f8ca 1010 	str.w	r1, [sl, #16]
   864ea:	68e1      	ldr	r1, [r4, #12]
   864ec:	f8ca 1014 	str.w	r1, [sl, #20]
   864f0:	d00f      	beq.n	86512 <_realloc_r+0x36a>
   864f2:	3410      	adds	r4, #16
   864f4:	f10a 0218 	add.w	r2, sl, #24
   864f8:	e744      	b.n	86384 <_realloc_r+0x1dc>
   864fa:	6922      	ldr	r2, [r4, #16]
   864fc:	f10a 0320 	add.w	r3, sl, #32
   86500:	f8ca 2018 	str.w	r2, [sl, #24]
   86504:	6962      	ldr	r2, [r4, #20]
   86506:	3418      	adds	r4, #24
   86508:	f8ca 201c 	str.w	r2, [sl, #28]
   8650c:	e751      	b.n	863b2 <_realloc_r+0x20a>
   8650e:	463b      	mov	r3, r7
   86510:	e791      	b.n	86436 <_realloc_r+0x28e>
   86512:	6921      	ldr	r1, [r4, #16]
   86514:	f10a 0220 	add.w	r2, sl, #32
   86518:	f8ca 1018 	str.w	r1, [sl, #24]
   8651c:	6961      	ldr	r1, [r4, #20]
   8651e:	3418      	adds	r4, #24
   86520:	f8ca 101c 	str.w	r1, [sl, #28]
   86524:	e72e      	b.n	86384 <_realloc_r+0x1dc>
   86526:	4621      	mov	r1, r4
   86528:	4638      	mov	r0, r7
   8652a:	f8cd c004 	str.w	ip, [sp, #4]
   8652e:	f7ff fac7 	bl	85ac0 <memmove>
   86532:	f8dd c004 	ldr.w	ip, [sp, #4]
   86536:	e784      	b.n	86442 <_realloc_r+0x29a>
   86538:	68a3      	ldr	r3, [r4, #8]
   8653a:	2a24      	cmp	r2, #36	; 0x24
   8653c:	f8ca 3010 	str.w	r3, [sl, #16]
   86540:	68e3      	ldr	r3, [r4, #12]
   86542:	f8ca 3014 	str.w	r3, [sl, #20]
   86546:	d003      	beq.n	86550 <_realloc_r+0x3a8>
   86548:	3410      	adds	r4, #16
   8654a:	f10a 0318 	add.w	r3, sl, #24
   8654e:	e772      	b.n	86436 <_realloc_r+0x28e>
   86550:	6922      	ldr	r2, [r4, #16]
   86552:	f10a 0320 	add.w	r3, sl, #32
   86556:	f8ca 2018 	str.w	r2, [sl, #24]
   8655a:	6962      	ldr	r2, [r4, #20]
   8655c:	3418      	adds	r4, #24
   8655e:	f8ca 201c 	str.w	r2, [sl, #28]
   86562:	e768      	b.n	86436 <_realloc_r+0x28e>
   86564:	20070620 	.word	0x20070620

00086568 <__fpclassifyd>:
   86568:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   8656c:	b410      	push	{r4}
   8656e:	d008      	beq.n	86582 <__fpclassifyd+0x1a>
   86570:	4a0f      	ldr	r2, [pc, #60]	; (865b0 <__fpclassifyd+0x48>)
   86572:	f5a3 1480 	sub.w	r4, r3, #1048576	; 0x100000
   86576:	4294      	cmp	r4, r2
   86578:	d80a      	bhi.n	86590 <__fpclassifyd+0x28>
   8657a:	2004      	movs	r0, #4
   8657c:	f85d 4b04 	ldr.w	r4, [sp], #4
   86580:	4770      	bx	lr
   86582:	2800      	cmp	r0, #0
   86584:	bf0c      	ite	eq
   86586:	2002      	moveq	r0, #2
   86588:	2003      	movne	r0, #3
   8658a:	f85d 4b04 	ldr.w	r4, [sp], #4
   8658e:	4770      	bx	lr
   86590:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   86594:	d201      	bcs.n	8659a <__fpclassifyd+0x32>
   86596:	2003      	movs	r0, #3
   86598:	e7f7      	b.n	8658a <__fpclassifyd+0x22>
   8659a:	4a06      	ldr	r2, [pc, #24]	; (865b4 <__fpclassifyd+0x4c>)
   8659c:	4293      	cmp	r3, r2
   8659e:	d001      	beq.n	865a4 <__fpclassifyd+0x3c>
   865a0:	2000      	movs	r0, #0
   865a2:	e7f2      	b.n	8658a <__fpclassifyd+0x22>
   865a4:	f1d0 0001 	rsbs	r0, r0, #1
   865a8:	bf38      	it	cc
   865aa:	2000      	movcc	r0, #0
   865ac:	e7ed      	b.n	8658a <__fpclassifyd+0x22>
   865ae:	bf00      	nop
   865b0:	7fdfffff 	.word	0x7fdfffff
   865b4:	7ff00000 	.word	0x7ff00000

000865b8 <_sbrk_r>:
   865b8:	b538      	push	{r3, r4, r5, lr}
   865ba:	4c07      	ldr	r4, [pc, #28]	; (865d8 <_sbrk_r+0x20>)
   865bc:	2300      	movs	r3, #0
   865be:	4605      	mov	r5, r0
   865c0:	4608      	mov	r0, r1
   865c2:	6023      	str	r3, [r4, #0]
   865c4:	f7fa feb6 	bl	81334 <_sbrk>
   865c8:	1c43      	adds	r3, r0, #1
   865ca:	d000      	beq.n	865ce <_sbrk_r+0x16>
   865cc:	bd38      	pop	{r3, r4, r5, pc}
   865ce:	6823      	ldr	r3, [r4, #0]
   865d0:	2b00      	cmp	r3, #0
   865d2:	d0fb      	beq.n	865cc <_sbrk_r+0x14>
   865d4:	602b      	str	r3, [r5, #0]
   865d6:	bd38      	pop	{r3, r4, r5, pc}
   865d8:	20070cac 	.word	0x20070cac

000865dc <__sread>:
   865dc:	b510      	push	{r4, lr}
   865de:	460c      	mov	r4, r1
   865e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   865e4:	f000 fa1e 	bl	86a24 <_read_r>
   865e8:	2800      	cmp	r0, #0
   865ea:	db03      	blt.n	865f4 <__sread+0x18>
   865ec:	6d23      	ldr	r3, [r4, #80]	; 0x50
   865ee:	4403      	add	r3, r0
   865f0:	6523      	str	r3, [r4, #80]	; 0x50
   865f2:	bd10      	pop	{r4, pc}
   865f4:	89a3      	ldrh	r3, [r4, #12]
   865f6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   865fa:	81a3      	strh	r3, [r4, #12]
   865fc:	bd10      	pop	{r4, pc}
   865fe:	bf00      	nop

00086600 <__swrite>:
   86600:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   86604:	460c      	mov	r4, r1
   86606:	8989      	ldrh	r1, [r1, #12]
   86608:	461d      	mov	r5, r3
   8660a:	05cb      	lsls	r3, r1, #23
   8660c:	4616      	mov	r6, r2
   8660e:	4607      	mov	r7, r0
   86610:	d506      	bpl.n	86620 <__swrite+0x20>
   86612:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   86616:	2200      	movs	r2, #0
   86618:	2302      	movs	r3, #2
   8661a:	f000 f9ef 	bl	869fc <_lseek_r>
   8661e:	89a1      	ldrh	r1, [r4, #12]
   86620:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   86624:	81a1      	strh	r1, [r4, #12]
   86626:	4638      	mov	r0, r7
   86628:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   8662c:	4632      	mov	r2, r6
   8662e:	462b      	mov	r3, r5
   86630:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   86634:	f000 b8ca 	b.w	867cc <_write_r>

00086638 <__sseek>:
   86638:	b510      	push	{r4, lr}
   8663a:	460c      	mov	r4, r1
   8663c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   86640:	f000 f9dc 	bl	869fc <_lseek_r>
   86644:	89a3      	ldrh	r3, [r4, #12]
   86646:	1c42      	adds	r2, r0, #1
   86648:	bf0e      	itee	eq
   8664a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   8664e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   86652:	6520      	strne	r0, [r4, #80]	; 0x50
   86654:	81a3      	strh	r3, [r4, #12]
   86656:	bd10      	pop	{r4, pc}

00086658 <__sclose>:
   86658:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   8665c:	f000 b94e 	b.w	868fc <_close_r>

00086660 <__ssprint_r>:
   86660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86664:	6894      	ldr	r4, [r2, #8]
   86666:	b083      	sub	sp, #12
   86668:	4692      	mov	sl, r2
   8666a:	4680      	mov	r8, r0
   8666c:	460d      	mov	r5, r1
   8666e:	6816      	ldr	r6, [r2, #0]
   86670:	2c00      	cmp	r4, #0
   86672:	d06f      	beq.n	86754 <__ssprint_r+0xf4>
   86674:	f04f 0b00 	mov.w	fp, #0
   86678:	6808      	ldr	r0, [r1, #0]
   8667a:	688b      	ldr	r3, [r1, #8]
   8667c:	465c      	mov	r4, fp
   8667e:	2c00      	cmp	r4, #0
   86680:	d043      	beq.n	8670a <__ssprint_r+0xaa>
   86682:	429c      	cmp	r4, r3
   86684:	461f      	mov	r7, r3
   86686:	d345      	bcc.n	86714 <__ssprint_r+0xb4>
   86688:	89ab      	ldrh	r3, [r5, #12]
   8668a:	f413 6f90 	tst.w	r3, #1152	; 0x480
   8668e:	d044      	beq.n	8671a <__ssprint_r+0xba>
   86690:	696f      	ldr	r7, [r5, #20]
   86692:	6929      	ldr	r1, [r5, #16]
   86694:	eb07 0747 	add.w	r7, r7, r7, lsl #1
   86698:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
   8669c:	ebc1 0900 	rsb	r9, r1, r0
   866a0:	1c62      	adds	r2, r4, #1
   866a2:	107f      	asrs	r7, r7, #1
   866a4:	444a      	add	r2, r9
   866a6:	4297      	cmp	r7, r2
   866a8:	bf34      	ite	cc
   866aa:	4617      	movcc	r7, r2
   866ac:	463a      	movcs	r2, r7
   866ae:	055b      	lsls	r3, r3, #21
   866b0:	d535      	bpl.n	8671e <__ssprint_r+0xbe>
   866b2:	4611      	mov	r1, r2
   866b4:	4640      	mov	r0, r8
   866b6:	f7fe ff1d 	bl	854f4 <_malloc_r>
   866ba:	2800      	cmp	r0, #0
   866bc:	d039      	beq.n	86732 <__ssprint_r+0xd2>
   866be:	6929      	ldr	r1, [r5, #16]
   866c0:	464a      	mov	r2, r9
   866c2:	9001      	str	r0, [sp, #4]
   866c4:	f7fa fee0 	bl	81488 <memcpy>
   866c8:	89aa      	ldrh	r2, [r5, #12]
   866ca:	9b01      	ldr	r3, [sp, #4]
   866cc:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   866d0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   866d4:	81aa      	strh	r2, [r5, #12]
   866d6:	ebc9 0207 	rsb	r2, r9, r7
   866da:	eb03 0009 	add.w	r0, r3, r9
   866de:	616f      	str	r7, [r5, #20]
   866e0:	612b      	str	r3, [r5, #16]
   866e2:	6028      	str	r0, [r5, #0]
   866e4:	60aa      	str	r2, [r5, #8]
   866e6:	4627      	mov	r7, r4
   866e8:	46a1      	mov	r9, r4
   866ea:	464a      	mov	r2, r9
   866ec:	4659      	mov	r1, fp
   866ee:	f7ff f9e7 	bl	85ac0 <memmove>
   866f2:	f8da 2008 	ldr.w	r2, [sl, #8]
   866f6:	68ab      	ldr	r3, [r5, #8]
   866f8:	6828      	ldr	r0, [r5, #0]
   866fa:	1bdb      	subs	r3, r3, r7
   866fc:	4448      	add	r0, r9
   866fe:	1b14      	subs	r4, r2, r4
   86700:	60ab      	str	r3, [r5, #8]
   86702:	6028      	str	r0, [r5, #0]
   86704:	f8ca 4008 	str.w	r4, [sl, #8]
   86708:	b324      	cbz	r4, 86754 <__ssprint_r+0xf4>
   8670a:	f8d6 b000 	ldr.w	fp, [r6]
   8670e:	6874      	ldr	r4, [r6, #4]
   86710:	3608      	adds	r6, #8
   86712:	e7b4      	b.n	8667e <__ssprint_r+0x1e>
   86714:	4627      	mov	r7, r4
   86716:	46a1      	mov	r9, r4
   86718:	e7e7      	b.n	866ea <__ssprint_r+0x8a>
   8671a:	46b9      	mov	r9, r7
   8671c:	e7e5      	b.n	866ea <__ssprint_r+0x8a>
   8671e:	4640      	mov	r0, r8
   86720:	f7ff fd42 	bl	861a8 <_realloc_r>
   86724:	4603      	mov	r3, r0
   86726:	2800      	cmp	r0, #0
   86728:	d1d5      	bne.n	866d6 <__ssprint_r+0x76>
   8672a:	4640      	mov	r0, r8
   8672c:	6929      	ldr	r1, [r5, #16]
   8672e:	f7fe fbdf 	bl	84ef0 <_free_r>
   86732:	89aa      	ldrh	r2, [r5, #12]
   86734:	230c      	movs	r3, #12
   86736:	f8c8 3000 	str.w	r3, [r8]
   8673a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   8673e:	2300      	movs	r3, #0
   86740:	f04f 30ff 	mov.w	r0, #4294967295
   86744:	81aa      	strh	r2, [r5, #12]
   86746:	f8ca 3008 	str.w	r3, [sl, #8]
   8674a:	f8ca 3004 	str.w	r3, [sl, #4]
   8674e:	b003      	add	sp, #12
   86750:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86754:	4620      	mov	r0, r4
   86756:	f8ca 4004 	str.w	r4, [sl, #4]
   8675a:	b003      	add	sp, #12
   8675c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00086760 <_wcrtomb_r>:
   86760:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   86764:	461e      	mov	r6, r3
   86766:	b086      	sub	sp, #24
   86768:	460c      	mov	r4, r1
   8676a:	4605      	mov	r5, r0
   8676c:	4617      	mov	r7, r2
   8676e:	4b0f      	ldr	r3, [pc, #60]	; (867ac <_wcrtomb_r+0x4c>)
   86770:	b191      	cbz	r1, 86798 <_wcrtomb_r+0x38>
   86772:	f8d3 8000 	ldr.w	r8, [r3]
   86776:	f7fe fe37 	bl	853e8 <__locale_charset>
   8677a:	9600      	str	r6, [sp, #0]
   8677c:	4603      	mov	r3, r0
   8677e:	4621      	mov	r1, r4
   86780:	463a      	mov	r2, r7
   86782:	4628      	mov	r0, r5
   86784:	47c0      	blx	r8
   86786:	1c43      	adds	r3, r0, #1
   86788:	d103      	bne.n	86792 <_wcrtomb_r+0x32>
   8678a:	2200      	movs	r2, #0
   8678c:	238a      	movs	r3, #138	; 0x8a
   8678e:	6032      	str	r2, [r6, #0]
   86790:	602b      	str	r3, [r5, #0]
   86792:	b006      	add	sp, #24
   86794:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   86798:	681f      	ldr	r7, [r3, #0]
   8679a:	f7fe fe25 	bl	853e8 <__locale_charset>
   8679e:	9600      	str	r6, [sp, #0]
   867a0:	4603      	mov	r3, r0
   867a2:	4622      	mov	r2, r4
   867a4:	4628      	mov	r0, r5
   867a6:	a903      	add	r1, sp, #12
   867a8:	47b8      	blx	r7
   867aa:	e7ec      	b.n	86786 <_wcrtomb_r+0x26>
   867ac:	20070a30 	.word	0x20070a30

000867b0 <__ascii_wctomb>:
   867b0:	b121      	cbz	r1, 867bc <__ascii_wctomb+0xc>
   867b2:	2aff      	cmp	r2, #255	; 0xff
   867b4:	d804      	bhi.n	867c0 <__ascii_wctomb+0x10>
   867b6:	700a      	strb	r2, [r1, #0]
   867b8:	2001      	movs	r0, #1
   867ba:	4770      	bx	lr
   867bc:	4608      	mov	r0, r1
   867be:	4770      	bx	lr
   867c0:	238a      	movs	r3, #138	; 0x8a
   867c2:	6003      	str	r3, [r0, #0]
   867c4:	f04f 30ff 	mov.w	r0, #4294967295
   867c8:	4770      	bx	lr
   867ca:	bf00      	nop

000867cc <_write_r>:
   867cc:	b570      	push	{r4, r5, r6, lr}
   867ce:	4c08      	ldr	r4, [pc, #32]	; (867f0 <_write_r+0x24>)
   867d0:	4606      	mov	r6, r0
   867d2:	2500      	movs	r5, #0
   867d4:	4608      	mov	r0, r1
   867d6:	4611      	mov	r1, r2
   867d8:	461a      	mov	r2, r3
   867da:	6025      	str	r5, [r4, #0]
   867dc:	f7fa f98e 	bl	80afc <_write>
   867e0:	1c43      	adds	r3, r0, #1
   867e2:	d000      	beq.n	867e6 <_write_r+0x1a>
   867e4:	bd70      	pop	{r4, r5, r6, pc}
   867e6:	6823      	ldr	r3, [r4, #0]
   867e8:	2b00      	cmp	r3, #0
   867ea:	d0fb      	beq.n	867e4 <_write_r+0x18>
   867ec:	6033      	str	r3, [r6, #0]
   867ee:	bd70      	pop	{r4, r5, r6, pc}
   867f0:	20070cac 	.word	0x20070cac

000867f4 <__register_exitproc>:
   867f4:	b5f0      	push	{r4, r5, r6, r7, lr}
   867f6:	4c27      	ldr	r4, [pc, #156]	; (86894 <__register_exitproc+0xa0>)
   867f8:	b085      	sub	sp, #20
   867fa:	6826      	ldr	r6, [r4, #0]
   867fc:	4607      	mov	r7, r0
   867fe:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
   86802:	2c00      	cmp	r4, #0
   86804:	d040      	beq.n	86888 <__register_exitproc+0x94>
   86806:	6865      	ldr	r5, [r4, #4]
   86808:	2d1f      	cmp	r5, #31
   8680a:	dd1e      	ble.n	8684a <__register_exitproc+0x56>
   8680c:	4822      	ldr	r0, [pc, #136]	; (86898 <__register_exitproc+0xa4>)
   8680e:	b918      	cbnz	r0, 86818 <__register_exitproc+0x24>
   86810:	f04f 30ff 	mov.w	r0, #4294967295
   86814:	b005      	add	sp, #20
   86816:	bdf0      	pop	{r4, r5, r6, r7, pc}
   86818:	f44f 70c8 	mov.w	r0, #400	; 0x190
   8681c:	9103      	str	r1, [sp, #12]
   8681e:	9202      	str	r2, [sp, #8]
   86820:	9301      	str	r3, [sp, #4]
   86822:	f7fe fe5f 	bl	854e4 <malloc>
   86826:	9903      	ldr	r1, [sp, #12]
   86828:	4604      	mov	r4, r0
   8682a:	9a02      	ldr	r2, [sp, #8]
   8682c:	9b01      	ldr	r3, [sp, #4]
   8682e:	2800      	cmp	r0, #0
   86830:	d0ee      	beq.n	86810 <__register_exitproc+0x1c>
   86832:	f8d6 5148 	ldr.w	r5, [r6, #328]	; 0x148
   86836:	2000      	movs	r0, #0
   86838:	6025      	str	r5, [r4, #0]
   8683a:	6060      	str	r0, [r4, #4]
   8683c:	4605      	mov	r5, r0
   8683e:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   86842:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
   86846:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
   8684a:	b93f      	cbnz	r7, 8685c <__register_exitproc+0x68>
   8684c:	1c6b      	adds	r3, r5, #1
   8684e:	2000      	movs	r0, #0
   86850:	3502      	adds	r5, #2
   86852:	6063      	str	r3, [r4, #4]
   86854:	f844 1025 	str.w	r1, [r4, r5, lsl #2]
   86858:	b005      	add	sp, #20
   8685a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8685c:	2601      	movs	r6, #1
   8685e:	40ae      	lsls	r6, r5
   86860:	eb04 0085 	add.w	r0, r4, r5, lsl #2
   86864:	f8c0 2088 	str.w	r2, [r0, #136]	; 0x88
   86868:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   8686c:	2f02      	cmp	r7, #2
   8686e:	ea42 0206 	orr.w	r2, r2, r6
   86872:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   86876:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108
   8687a:	d1e7      	bne.n	8684c <__register_exitproc+0x58>
   8687c:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   86880:	431e      	orrs	r6, r3
   86882:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
   86886:	e7e1      	b.n	8684c <__register_exitproc+0x58>
   86888:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
   8688c:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   86890:	e7b9      	b.n	86806 <__register_exitproc+0x12>
   86892:	bf00      	nop
   86894:	000879e0 	.word	0x000879e0
   86898:	000854e5 	.word	0x000854e5

0008689c <_calloc_r>:
   8689c:	b510      	push	{r4, lr}
   8689e:	fb02 f101 	mul.w	r1, r2, r1
   868a2:	f7fe fe27 	bl	854f4 <_malloc_r>
   868a6:	4604      	mov	r4, r0
   868a8:	b168      	cbz	r0, 868c6 <_calloc_r+0x2a>
   868aa:	f850 2c04 	ldr.w	r2, [r0, #-4]
   868ae:	f022 0203 	bic.w	r2, r2, #3
   868b2:	3a04      	subs	r2, #4
   868b4:	2a24      	cmp	r2, #36	; 0x24
   868b6:	d818      	bhi.n	868ea <_calloc_r+0x4e>
   868b8:	2a13      	cmp	r2, #19
   868ba:	d806      	bhi.n	868ca <_calloc_r+0x2e>
   868bc:	4603      	mov	r3, r0
   868be:	2200      	movs	r2, #0
   868c0:	601a      	str	r2, [r3, #0]
   868c2:	605a      	str	r2, [r3, #4]
   868c4:	609a      	str	r2, [r3, #8]
   868c6:	4620      	mov	r0, r4
   868c8:	bd10      	pop	{r4, pc}
   868ca:	2300      	movs	r3, #0
   868cc:	2a1b      	cmp	r2, #27
   868ce:	6003      	str	r3, [r0, #0]
   868d0:	6043      	str	r3, [r0, #4]
   868d2:	d90f      	bls.n	868f4 <_calloc_r+0x58>
   868d4:	2a24      	cmp	r2, #36	; 0x24
   868d6:	6083      	str	r3, [r0, #8]
   868d8:	60c3      	str	r3, [r0, #12]
   868da:	bf05      	ittet	eq
   868dc:	6103      	streq	r3, [r0, #16]
   868de:	6143      	streq	r3, [r0, #20]
   868e0:	f100 0310 	addne.w	r3, r0, #16
   868e4:	f100 0318 	addeq.w	r3, r0, #24
   868e8:	e7e9      	b.n	868be <_calloc_r+0x22>
   868ea:	2100      	movs	r1, #0
   868ec:	f7fa fe42 	bl	81574 <memset>
   868f0:	4620      	mov	r0, r4
   868f2:	bd10      	pop	{r4, pc}
   868f4:	f100 0308 	add.w	r3, r0, #8
   868f8:	e7e1      	b.n	868be <_calloc_r+0x22>
   868fa:	bf00      	nop

000868fc <_close_r>:
   868fc:	b538      	push	{r3, r4, r5, lr}
   868fe:	4c07      	ldr	r4, [pc, #28]	; (8691c <_close_r+0x20>)
   86900:	2300      	movs	r3, #0
   86902:	4605      	mov	r5, r0
   86904:	4608      	mov	r0, r1
   86906:	6023      	str	r3, [r4, #0]
   86908:	f7fa fd2e 	bl	81368 <_close>
   8690c:	1c43      	adds	r3, r0, #1
   8690e:	d000      	beq.n	86912 <_close_r+0x16>
   86910:	bd38      	pop	{r3, r4, r5, pc}
   86912:	6823      	ldr	r3, [r4, #0]
   86914:	2b00      	cmp	r3, #0
   86916:	d0fb      	beq.n	86910 <_close_r+0x14>
   86918:	602b      	str	r3, [r5, #0]
   8691a:	bd38      	pop	{r3, r4, r5, pc}
   8691c:	20070cac 	.word	0x20070cac

00086920 <_fclose_r>:
   86920:	b570      	push	{r4, r5, r6, lr}
   86922:	460c      	mov	r4, r1
   86924:	4605      	mov	r5, r0
   86926:	b131      	cbz	r1, 86936 <_fclose_r+0x16>
   86928:	b110      	cbz	r0, 86930 <_fclose_r+0x10>
   8692a:	6b83      	ldr	r3, [r0, #56]	; 0x38
   8692c:	2b00      	cmp	r3, #0
   8692e:	d02f      	beq.n	86990 <_fclose_r+0x70>
   86930:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   86934:	b90b      	cbnz	r3, 8693a <_fclose_r+0x1a>
   86936:	2000      	movs	r0, #0
   86938:	bd70      	pop	{r4, r5, r6, pc}
   8693a:	4628      	mov	r0, r5
   8693c:	4621      	mov	r1, r4
   8693e:	f7fe f977 	bl	84c30 <_fflush_r>
   86942:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   86944:	4606      	mov	r6, r0
   86946:	b133      	cbz	r3, 86956 <_fclose_r+0x36>
   86948:	4628      	mov	r0, r5
   8694a:	69e1      	ldr	r1, [r4, #28]
   8694c:	4798      	blx	r3
   8694e:	2800      	cmp	r0, #0
   86950:	bfb8      	it	lt
   86952:	f04f 36ff 	movlt.w	r6, #4294967295
   86956:	89a3      	ldrh	r3, [r4, #12]
   86958:	061b      	lsls	r3, r3, #24
   8695a:	d41c      	bmi.n	86996 <_fclose_r+0x76>
   8695c:	6b21      	ldr	r1, [r4, #48]	; 0x30
   8695e:	b141      	cbz	r1, 86972 <_fclose_r+0x52>
   86960:	f104 0340 	add.w	r3, r4, #64	; 0x40
   86964:	4299      	cmp	r1, r3
   86966:	d002      	beq.n	8696e <_fclose_r+0x4e>
   86968:	4628      	mov	r0, r5
   8696a:	f7fe fac1 	bl	84ef0 <_free_r>
   8696e:	2300      	movs	r3, #0
   86970:	6323      	str	r3, [r4, #48]	; 0x30
   86972:	6c61      	ldr	r1, [r4, #68]	; 0x44
   86974:	b121      	cbz	r1, 86980 <_fclose_r+0x60>
   86976:	4628      	mov	r0, r5
   86978:	f7fe faba 	bl	84ef0 <_free_r>
   8697c:	2300      	movs	r3, #0
   8697e:	6463      	str	r3, [r4, #68]	; 0x44
   86980:	f7fe f9ec 	bl	84d5c <__sfp_lock_acquire>
   86984:	2300      	movs	r3, #0
   86986:	81a3      	strh	r3, [r4, #12]
   86988:	f7fe f9ea 	bl	84d60 <__sfp_lock_release>
   8698c:	4630      	mov	r0, r6
   8698e:	bd70      	pop	{r4, r5, r6, pc}
   86990:	f7fe f96a 	bl	84c68 <__sinit>
   86994:	e7cc      	b.n	86930 <_fclose_r+0x10>
   86996:	4628      	mov	r0, r5
   86998:	6921      	ldr	r1, [r4, #16]
   8699a:	f7fe faa9 	bl	84ef0 <_free_r>
   8699e:	e7dd      	b.n	8695c <_fclose_r+0x3c>

000869a0 <fclose>:
   869a0:	4b02      	ldr	r3, [pc, #8]	; (869ac <fclose+0xc>)
   869a2:	4601      	mov	r1, r0
   869a4:	6818      	ldr	r0, [r3, #0]
   869a6:	f7ff bfbb 	b.w	86920 <_fclose_r>
   869aa:	bf00      	nop
   869ac:	200705c0 	.word	0x200705c0

000869b0 <_fstat_r>:
   869b0:	b538      	push	{r3, r4, r5, lr}
   869b2:	4c08      	ldr	r4, [pc, #32]	; (869d4 <_fstat_r+0x24>)
   869b4:	2300      	movs	r3, #0
   869b6:	4605      	mov	r5, r0
   869b8:	4608      	mov	r0, r1
   869ba:	4611      	mov	r1, r2
   869bc:	6023      	str	r3, [r4, #0]
   869be:	f7fa fcd7 	bl	81370 <_fstat>
   869c2:	1c43      	adds	r3, r0, #1
   869c4:	d000      	beq.n	869c8 <_fstat_r+0x18>
   869c6:	bd38      	pop	{r3, r4, r5, pc}
   869c8:	6823      	ldr	r3, [r4, #0]
   869ca:	2b00      	cmp	r3, #0
   869cc:	d0fb      	beq.n	869c6 <_fstat_r+0x16>
   869ce:	602b      	str	r3, [r5, #0]
   869d0:	bd38      	pop	{r3, r4, r5, pc}
   869d2:	bf00      	nop
   869d4:	20070cac 	.word	0x20070cac

000869d8 <_isatty_r>:
   869d8:	b538      	push	{r3, r4, r5, lr}
   869da:	4c07      	ldr	r4, [pc, #28]	; (869f8 <_isatty_r+0x20>)
   869dc:	2300      	movs	r3, #0
   869de:	4605      	mov	r5, r0
   869e0:	4608      	mov	r0, r1
   869e2:	6023      	str	r3, [r4, #0]
   869e4:	f7fa fcca 	bl	8137c <_isatty>
   869e8:	1c43      	adds	r3, r0, #1
   869ea:	d000      	beq.n	869ee <_isatty_r+0x16>
   869ec:	bd38      	pop	{r3, r4, r5, pc}
   869ee:	6823      	ldr	r3, [r4, #0]
   869f0:	2b00      	cmp	r3, #0
   869f2:	d0fb      	beq.n	869ec <_isatty_r+0x14>
   869f4:	602b      	str	r3, [r5, #0]
   869f6:	bd38      	pop	{r3, r4, r5, pc}
   869f8:	20070cac 	.word	0x20070cac

000869fc <_lseek_r>:
   869fc:	b570      	push	{r4, r5, r6, lr}
   869fe:	4c08      	ldr	r4, [pc, #32]	; (86a20 <_lseek_r+0x24>)
   86a00:	4606      	mov	r6, r0
   86a02:	2500      	movs	r5, #0
   86a04:	4608      	mov	r0, r1
   86a06:	4611      	mov	r1, r2
   86a08:	461a      	mov	r2, r3
   86a0a:	6025      	str	r5, [r4, #0]
   86a0c:	f7fa fcb8 	bl	81380 <_lseek>
   86a10:	1c43      	adds	r3, r0, #1
   86a12:	d000      	beq.n	86a16 <_lseek_r+0x1a>
   86a14:	bd70      	pop	{r4, r5, r6, pc}
   86a16:	6823      	ldr	r3, [r4, #0]
   86a18:	2b00      	cmp	r3, #0
   86a1a:	d0fb      	beq.n	86a14 <_lseek_r+0x18>
   86a1c:	6033      	str	r3, [r6, #0]
   86a1e:	bd70      	pop	{r4, r5, r6, pc}
   86a20:	20070cac 	.word	0x20070cac

00086a24 <_read_r>:
   86a24:	b570      	push	{r4, r5, r6, lr}
   86a26:	4c08      	ldr	r4, [pc, #32]	; (86a48 <_read_r+0x24>)
   86a28:	4606      	mov	r6, r0
   86a2a:	2500      	movs	r5, #0
   86a2c:	4608      	mov	r0, r1
   86a2e:	4611      	mov	r1, r2
   86a30:	461a      	mov	r2, r3
   86a32:	6025      	str	r5, [r4, #0]
   86a34:	f7f9 fb88 	bl	80148 <_read>
   86a38:	1c43      	adds	r3, r0, #1
   86a3a:	d000      	beq.n	86a3e <_read_r+0x1a>
   86a3c:	bd70      	pop	{r4, r5, r6, pc}
   86a3e:	6823      	ldr	r3, [r4, #0]
   86a40:	2b00      	cmp	r3, #0
   86a42:	d0fb      	beq.n	86a3c <_read_r+0x18>
   86a44:	6033      	str	r3, [r6, #0]
   86a46:	bd70      	pop	{r4, r5, r6, pc}
   86a48:	20070cac 	.word	0x20070cac

00086a4c <__aeabi_drsub>:
   86a4c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   86a50:	e002      	b.n	86a58 <__adddf3>
   86a52:	bf00      	nop

00086a54 <__aeabi_dsub>:
   86a54:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00086a58 <__adddf3>:
   86a58:	b530      	push	{r4, r5, lr}
   86a5a:	ea4f 0441 	mov.w	r4, r1, lsl #1
   86a5e:	ea4f 0543 	mov.w	r5, r3, lsl #1
   86a62:	ea94 0f05 	teq	r4, r5
   86a66:	bf08      	it	eq
   86a68:	ea90 0f02 	teqeq	r0, r2
   86a6c:	bf1f      	itttt	ne
   86a6e:	ea54 0c00 	orrsne.w	ip, r4, r0
   86a72:	ea55 0c02 	orrsne.w	ip, r5, r2
   86a76:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   86a7a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   86a7e:	f000 80e2 	beq.w	86c46 <__adddf3+0x1ee>
   86a82:	ea4f 5454 	mov.w	r4, r4, lsr #21
   86a86:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   86a8a:	bfb8      	it	lt
   86a8c:	426d      	neglt	r5, r5
   86a8e:	dd0c      	ble.n	86aaa <__adddf3+0x52>
   86a90:	442c      	add	r4, r5
   86a92:	ea80 0202 	eor.w	r2, r0, r2
   86a96:	ea81 0303 	eor.w	r3, r1, r3
   86a9a:	ea82 0000 	eor.w	r0, r2, r0
   86a9e:	ea83 0101 	eor.w	r1, r3, r1
   86aa2:	ea80 0202 	eor.w	r2, r0, r2
   86aa6:	ea81 0303 	eor.w	r3, r1, r3
   86aaa:	2d36      	cmp	r5, #54	; 0x36
   86aac:	bf88      	it	hi
   86aae:	bd30      	pophi	{r4, r5, pc}
   86ab0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   86ab4:	ea4f 3101 	mov.w	r1, r1, lsl #12
   86ab8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   86abc:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   86ac0:	d002      	beq.n	86ac8 <__adddf3+0x70>
   86ac2:	4240      	negs	r0, r0
   86ac4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   86ac8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   86acc:	ea4f 3303 	mov.w	r3, r3, lsl #12
   86ad0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   86ad4:	d002      	beq.n	86adc <__adddf3+0x84>
   86ad6:	4252      	negs	r2, r2
   86ad8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   86adc:	ea94 0f05 	teq	r4, r5
   86ae0:	f000 80a7 	beq.w	86c32 <__adddf3+0x1da>
   86ae4:	f1a4 0401 	sub.w	r4, r4, #1
   86ae8:	f1d5 0e20 	rsbs	lr, r5, #32
   86aec:	db0d      	blt.n	86b0a <__adddf3+0xb2>
   86aee:	fa02 fc0e 	lsl.w	ip, r2, lr
   86af2:	fa22 f205 	lsr.w	r2, r2, r5
   86af6:	1880      	adds	r0, r0, r2
   86af8:	f141 0100 	adc.w	r1, r1, #0
   86afc:	fa03 f20e 	lsl.w	r2, r3, lr
   86b00:	1880      	adds	r0, r0, r2
   86b02:	fa43 f305 	asr.w	r3, r3, r5
   86b06:	4159      	adcs	r1, r3
   86b08:	e00e      	b.n	86b28 <__adddf3+0xd0>
   86b0a:	f1a5 0520 	sub.w	r5, r5, #32
   86b0e:	f10e 0e20 	add.w	lr, lr, #32
   86b12:	2a01      	cmp	r2, #1
   86b14:	fa03 fc0e 	lsl.w	ip, r3, lr
   86b18:	bf28      	it	cs
   86b1a:	f04c 0c02 	orrcs.w	ip, ip, #2
   86b1e:	fa43 f305 	asr.w	r3, r3, r5
   86b22:	18c0      	adds	r0, r0, r3
   86b24:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   86b28:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   86b2c:	d507      	bpl.n	86b3e <__adddf3+0xe6>
   86b2e:	f04f 0e00 	mov.w	lr, #0
   86b32:	f1dc 0c00 	rsbs	ip, ip, #0
   86b36:	eb7e 0000 	sbcs.w	r0, lr, r0
   86b3a:	eb6e 0101 	sbc.w	r1, lr, r1
   86b3e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   86b42:	d31b      	bcc.n	86b7c <__adddf3+0x124>
   86b44:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   86b48:	d30c      	bcc.n	86b64 <__adddf3+0x10c>
   86b4a:	0849      	lsrs	r1, r1, #1
   86b4c:	ea5f 0030 	movs.w	r0, r0, rrx
   86b50:	ea4f 0c3c 	mov.w	ip, ip, rrx
   86b54:	f104 0401 	add.w	r4, r4, #1
   86b58:	ea4f 5244 	mov.w	r2, r4, lsl #21
   86b5c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   86b60:	f080 809a 	bcs.w	86c98 <__adddf3+0x240>
   86b64:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   86b68:	bf08      	it	eq
   86b6a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   86b6e:	f150 0000 	adcs.w	r0, r0, #0
   86b72:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   86b76:	ea41 0105 	orr.w	r1, r1, r5
   86b7a:	bd30      	pop	{r4, r5, pc}
   86b7c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   86b80:	4140      	adcs	r0, r0
   86b82:	eb41 0101 	adc.w	r1, r1, r1
   86b86:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   86b8a:	f1a4 0401 	sub.w	r4, r4, #1
   86b8e:	d1e9      	bne.n	86b64 <__adddf3+0x10c>
   86b90:	f091 0f00 	teq	r1, #0
   86b94:	bf04      	itt	eq
   86b96:	4601      	moveq	r1, r0
   86b98:	2000      	moveq	r0, #0
   86b9a:	fab1 f381 	clz	r3, r1
   86b9e:	bf08      	it	eq
   86ba0:	3320      	addeq	r3, #32
   86ba2:	f1a3 030b 	sub.w	r3, r3, #11
   86ba6:	f1b3 0220 	subs.w	r2, r3, #32
   86baa:	da0c      	bge.n	86bc6 <__adddf3+0x16e>
   86bac:	320c      	adds	r2, #12
   86bae:	dd08      	ble.n	86bc2 <__adddf3+0x16a>
   86bb0:	f102 0c14 	add.w	ip, r2, #20
   86bb4:	f1c2 020c 	rsb	r2, r2, #12
   86bb8:	fa01 f00c 	lsl.w	r0, r1, ip
   86bbc:	fa21 f102 	lsr.w	r1, r1, r2
   86bc0:	e00c      	b.n	86bdc <__adddf3+0x184>
   86bc2:	f102 0214 	add.w	r2, r2, #20
   86bc6:	bfd8      	it	le
   86bc8:	f1c2 0c20 	rsble	ip, r2, #32
   86bcc:	fa01 f102 	lsl.w	r1, r1, r2
   86bd0:	fa20 fc0c 	lsr.w	ip, r0, ip
   86bd4:	bfdc      	itt	le
   86bd6:	ea41 010c 	orrle.w	r1, r1, ip
   86bda:	4090      	lslle	r0, r2
   86bdc:	1ae4      	subs	r4, r4, r3
   86bde:	bfa2      	ittt	ge
   86be0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   86be4:	4329      	orrge	r1, r5
   86be6:	bd30      	popge	{r4, r5, pc}
   86be8:	ea6f 0404 	mvn.w	r4, r4
   86bec:	3c1f      	subs	r4, #31
   86bee:	da1c      	bge.n	86c2a <__adddf3+0x1d2>
   86bf0:	340c      	adds	r4, #12
   86bf2:	dc0e      	bgt.n	86c12 <__adddf3+0x1ba>
   86bf4:	f104 0414 	add.w	r4, r4, #20
   86bf8:	f1c4 0220 	rsb	r2, r4, #32
   86bfc:	fa20 f004 	lsr.w	r0, r0, r4
   86c00:	fa01 f302 	lsl.w	r3, r1, r2
   86c04:	ea40 0003 	orr.w	r0, r0, r3
   86c08:	fa21 f304 	lsr.w	r3, r1, r4
   86c0c:	ea45 0103 	orr.w	r1, r5, r3
   86c10:	bd30      	pop	{r4, r5, pc}
   86c12:	f1c4 040c 	rsb	r4, r4, #12
   86c16:	f1c4 0220 	rsb	r2, r4, #32
   86c1a:	fa20 f002 	lsr.w	r0, r0, r2
   86c1e:	fa01 f304 	lsl.w	r3, r1, r4
   86c22:	ea40 0003 	orr.w	r0, r0, r3
   86c26:	4629      	mov	r1, r5
   86c28:	bd30      	pop	{r4, r5, pc}
   86c2a:	fa21 f004 	lsr.w	r0, r1, r4
   86c2e:	4629      	mov	r1, r5
   86c30:	bd30      	pop	{r4, r5, pc}
   86c32:	f094 0f00 	teq	r4, #0
   86c36:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   86c3a:	bf06      	itte	eq
   86c3c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   86c40:	3401      	addeq	r4, #1
   86c42:	3d01      	subne	r5, #1
   86c44:	e74e      	b.n	86ae4 <__adddf3+0x8c>
   86c46:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   86c4a:	bf18      	it	ne
   86c4c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   86c50:	d029      	beq.n	86ca6 <__adddf3+0x24e>
   86c52:	ea94 0f05 	teq	r4, r5
   86c56:	bf08      	it	eq
   86c58:	ea90 0f02 	teqeq	r0, r2
   86c5c:	d005      	beq.n	86c6a <__adddf3+0x212>
   86c5e:	ea54 0c00 	orrs.w	ip, r4, r0
   86c62:	bf04      	itt	eq
   86c64:	4619      	moveq	r1, r3
   86c66:	4610      	moveq	r0, r2
   86c68:	bd30      	pop	{r4, r5, pc}
   86c6a:	ea91 0f03 	teq	r1, r3
   86c6e:	bf1e      	ittt	ne
   86c70:	2100      	movne	r1, #0
   86c72:	2000      	movne	r0, #0
   86c74:	bd30      	popne	{r4, r5, pc}
   86c76:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   86c7a:	d105      	bne.n	86c88 <__adddf3+0x230>
   86c7c:	0040      	lsls	r0, r0, #1
   86c7e:	4149      	adcs	r1, r1
   86c80:	bf28      	it	cs
   86c82:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   86c86:	bd30      	pop	{r4, r5, pc}
   86c88:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   86c8c:	bf3c      	itt	cc
   86c8e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   86c92:	bd30      	popcc	{r4, r5, pc}
   86c94:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   86c98:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   86c9c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   86ca0:	f04f 0000 	mov.w	r0, #0
   86ca4:	bd30      	pop	{r4, r5, pc}
   86ca6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   86caa:	bf1a      	itte	ne
   86cac:	4619      	movne	r1, r3
   86cae:	4610      	movne	r0, r2
   86cb0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   86cb4:	bf1c      	itt	ne
   86cb6:	460b      	movne	r3, r1
   86cb8:	4602      	movne	r2, r0
   86cba:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   86cbe:	bf06      	itte	eq
   86cc0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   86cc4:	ea91 0f03 	teqeq	r1, r3
   86cc8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   86ccc:	bd30      	pop	{r4, r5, pc}
   86cce:	bf00      	nop

00086cd0 <__aeabi_ui2d>:
   86cd0:	f090 0f00 	teq	r0, #0
   86cd4:	bf04      	itt	eq
   86cd6:	2100      	moveq	r1, #0
   86cd8:	4770      	bxeq	lr
   86cda:	b530      	push	{r4, r5, lr}
   86cdc:	f44f 6480 	mov.w	r4, #1024	; 0x400
   86ce0:	f104 0432 	add.w	r4, r4, #50	; 0x32
   86ce4:	f04f 0500 	mov.w	r5, #0
   86ce8:	f04f 0100 	mov.w	r1, #0
   86cec:	e750      	b.n	86b90 <__adddf3+0x138>
   86cee:	bf00      	nop

00086cf0 <__aeabi_i2d>:
   86cf0:	f090 0f00 	teq	r0, #0
   86cf4:	bf04      	itt	eq
   86cf6:	2100      	moveq	r1, #0
   86cf8:	4770      	bxeq	lr
   86cfa:	b530      	push	{r4, r5, lr}
   86cfc:	f44f 6480 	mov.w	r4, #1024	; 0x400
   86d00:	f104 0432 	add.w	r4, r4, #50	; 0x32
   86d04:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   86d08:	bf48      	it	mi
   86d0a:	4240      	negmi	r0, r0
   86d0c:	f04f 0100 	mov.w	r1, #0
   86d10:	e73e      	b.n	86b90 <__adddf3+0x138>
   86d12:	bf00      	nop

00086d14 <__aeabi_f2d>:
   86d14:	0042      	lsls	r2, r0, #1
   86d16:	ea4f 01e2 	mov.w	r1, r2, asr #3
   86d1a:	ea4f 0131 	mov.w	r1, r1, rrx
   86d1e:	ea4f 7002 	mov.w	r0, r2, lsl #28
   86d22:	bf1f      	itttt	ne
   86d24:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   86d28:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   86d2c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   86d30:	4770      	bxne	lr
   86d32:	f092 0f00 	teq	r2, #0
   86d36:	bf14      	ite	ne
   86d38:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   86d3c:	4770      	bxeq	lr
   86d3e:	b530      	push	{r4, r5, lr}
   86d40:	f44f 7460 	mov.w	r4, #896	; 0x380
   86d44:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   86d48:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   86d4c:	e720      	b.n	86b90 <__adddf3+0x138>
   86d4e:	bf00      	nop

00086d50 <__aeabi_ul2d>:
   86d50:	ea50 0201 	orrs.w	r2, r0, r1
   86d54:	bf08      	it	eq
   86d56:	4770      	bxeq	lr
   86d58:	b530      	push	{r4, r5, lr}
   86d5a:	f04f 0500 	mov.w	r5, #0
   86d5e:	e00a      	b.n	86d76 <__aeabi_l2d+0x16>

00086d60 <__aeabi_l2d>:
   86d60:	ea50 0201 	orrs.w	r2, r0, r1
   86d64:	bf08      	it	eq
   86d66:	4770      	bxeq	lr
   86d68:	b530      	push	{r4, r5, lr}
   86d6a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   86d6e:	d502      	bpl.n	86d76 <__aeabi_l2d+0x16>
   86d70:	4240      	negs	r0, r0
   86d72:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   86d76:	f44f 6480 	mov.w	r4, #1024	; 0x400
   86d7a:	f104 0432 	add.w	r4, r4, #50	; 0x32
   86d7e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   86d82:	f43f aedc 	beq.w	86b3e <__adddf3+0xe6>
   86d86:	f04f 0203 	mov.w	r2, #3
   86d8a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   86d8e:	bf18      	it	ne
   86d90:	3203      	addne	r2, #3
   86d92:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   86d96:	bf18      	it	ne
   86d98:	3203      	addne	r2, #3
   86d9a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   86d9e:	f1c2 0320 	rsb	r3, r2, #32
   86da2:	fa00 fc03 	lsl.w	ip, r0, r3
   86da6:	fa20 f002 	lsr.w	r0, r0, r2
   86daa:	fa01 fe03 	lsl.w	lr, r1, r3
   86dae:	ea40 000e 	orr.w	r0, r0, lr
   86db2:	fa21 f102 	lsr.w	r1, r1, r2
   86db6:	4414      	add	r4, r2
   86db8:	e6c1      	b.n	86b3e <__adddf3+0xe6>
   86dba:	bf00      	nop

00086dbc <__aeabi_dmul>:
   86dbc:	b570      	push	{r4, r5, r6, lr}
   86dbe:	f04f 0cff 	mov.w	ip, #255	; 0xff
   86dc2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   86dc6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   86dca:	bf1d      	ittte	ne
   86dcc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   86dd0:	ea94 0f0c 	teqne	r4, ip
   86dd4:	ea95 0f0c 	teqne	r5, ip
   86dd8:	f000 f8de 	bleq	86f98 <__aeabi_dmul+0x1dc>
   86ddc:	442c      	add	r4, r5
   86dde:	ea81 0603 	eor.w	r6, r1, r3
   86de2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   86de6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   86dea:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   86dee:	bf18      	it	ne
   86df0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   86df4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   86df8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   86dfc:	d038      	beq.n	86e70 <__aeabi_dmul+0xb4>
   86dfe:	fba0 ce02 	umull	ip, lr, r0, r2
   86e02:	f04f 0500 	mov.w	r5, #0
   86e06:	fbe1 e502 	umlal	lr, r5, r1, r2
   86e0a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   86e0e:	fbe0 e503 	umlal	lr, r5, r0, r3
   86e12:	f04f 0600 	mov.w	r6, #0
   86e16:	fbe1 5603 	umlal	r5, r6, r1, r3
   86e1a:	f09c 0f00 	teq	ip, #0
   86e1e:	bf18      	it	ne
   86e20:	f04e 0e01 	orrne.w	lr, lr, #1
   86e24:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   86e28:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   86e2c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   86e30:	d204      	bcs.n	86e3c <__aeabi_dmul+0x80>
   86e32:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   86e36:	416d      	adcs	r5, r5
   86e38:	eb46 0606 	adc.w	r6, r6, r6
   86e3c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   86e40:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   86e44:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   86e48:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   86e4c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   86e50:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   86e54:	bf88      	it	hi
   86e56:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   86e5a:	d81e      	bhi.n	86e9a <__aeabi_dmul+0xde>
   86e5c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   86e60:	bf08      	it	eq
   86e62:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   86e66:	f150 0000 	adcs.w	r0, r0, #0
   86e6a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   86e6e:	bd70      	pop	{r4, r5, r6, pc}
   86e70:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   86e74:	ea46 0101 	orr.w	r1, r6, r1
   86e78:	ea40 0002 	orr.w	r0, r0, r2
   86e7c:	ea81 0103 	eor.w	r1, r1, r3
   86e80:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   86e84:	bfc2      	ittt	gt
   86e86:	ebd4 050c 	rsbsgt	r5, r4, ip
   86e8a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   86e8e:	bd70      	popgt	{r4, r5, r6, pc}
   86e90:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   86e94:	f04f 0e00 	mov.w	lr, #0
   86e98:	3c01      	subs	r4, #1
   86e9a:	f300 80ab 	bgt.w	86ff4 <__aeabi_dmul+0x238>
   86e9e:	f114 0f36 	cmn.w	r4, #54	; 0x36
   86ea2:	bfde      	ittt	le
   86ea4:	2000      	movle	r0, #0
   86ea6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   86eaa:	bd70      	pople	{r4, r5, r6, pc}
   86eac:	f1c4 0400 	rsb	r4, r4, #0
   86eb0:	3c20      	subs	r4, #32
   86eb2:	da35      	bge.n	86f20 <__aeabi_dmul+0x164>
   86eb4:	340c      	adds	r4, #12
   86eb6:	dc1b      	bgt.n	86ef0 <__aeabi_dmul+0x134>
   86eb8:	f104 0414 	add.w	r4, r4, #20
   86ebc:	f1c4 0520 	rsb	r5, r4, #32
   86ec0:	fa00 f305 	lsl.w	r3, r0, r5
   86ec4:	fa20 f004 	lsr.w	r0, r0, r4
   86ec8:	fa01 f205 	lsl.w	r2, r1, r5
   86ecc:	ea40 0002 	orr.w	r0, r0, r2
   86ed0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   86ed4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   86ed8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   86edc:	fa21 f604 	lsr.w	r6, r1, r4
   86ee0:	eb42 0106 	adc.w	r1, r2, r6
   86ee4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   86ee8:	bf08      	it	eq
   86eea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   86eee:	bd70      	pop	{r4, r5, r6, pc}
   86ef0:	f1c4 040c 	rsb	r4, r4, #12
   86ef4:	f1c4 0520 	rsb	r5, r4, #32
   86ef8:	fa00 f304 	lsl.w	r3, r0, r4
   86efc:	fa20 f005 	lsr.w	r0, r0, r5
   86f00:	fa01 f204 	lsl.w	r2, r1, r4
   86f04:	ea40 0002 	orr.w	r0, r0, r2
   86f08:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   86f0c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   86f10:	f141 0100 	adc.w	r1, r1, #0
   86f14:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   86f18:	bf08      	it	eq
   86f1a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   86f1e:	bd70      	pop	{r4, r5, r6, pc}
   86f20:	f1c4 0520 	rsb	r5, r4, #32
   86f24:	fa00 f205 	lsl.w	r2, r0, r5
   86f28:	ea4e 0e02 	orr.w	lr, lr, r2
   86f2c:	fa20 f304 	lsr.w	r3, r0, r4
   86f30:	fa01 f205 	lsl.w	r2, r1, r5
   86f34:	ea43 0302 	orr.w	r3, r3, r2
   86f38:	fa21 f004 	lsr.w	r0, r1, r4
   86f3c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   86f40:	fa21 f204 	lsr.w	r2, r1, r4
   86f44:	ea20 0002 	bic.w	r0, r0, r2
   86f48:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   86f4c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   86f50:	bf08      	it	eq
   86f52:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   86f56:	bd70      	pop	{r4, r5, r6, pc}
   86f58:	f094 0f00 	teq	r4, #0
   86f5c:	d10f      	bne.n	86f7e <__aeabi_dmul+0x1c2>
   86f5e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   86f62:	0040      	lsls	r0, r0, #1
   86f64:	eb41 0101 	adc.w	r1, r1, r1
   86f68:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   86f6c:	bf08      	it	eq
   86f6e:	3c01      	subeq	r4, #1
   86f70:	d0f7      	beq.n	86f62 <__aeabi_dmul+0x1a6>
   86f72:	ea41 0106 	orr.w	r1, r1, r6
   86f76:	f095 0f00 	teq	r5, #0
   86f7a:	bf18      	it	ne
   86f7c:	4770      	bxne	lr
   86f7e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   86f82:	0052      	lsls	r2, r2, #1
   86f84:	eb43 0303 	adc.w	r3, r3, r3
   86f88:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   86f8c:	bf08      	it	eq
   86f8e:	3d01      	subeq	r5, #1
   86f90:	d0f7      	beq.n	86f82 <__aeabi_dmul+0x1c6>
   86f92:	ea43 0306 	orr.w	r3, r3, r6
   86f96:	4770      	bx	lr
   86f98:	ea94 0f0c 	teq	r4, ip
   86f9c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   86fa0:	bf18      	it	ne
   86fa2:	ea95 0f0c 	teqne	r5, ip
   86fa6:	d00c      	beq.n	86fc2 <__aeabi_dmul+0x206>
   86fa8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   86fac:	bf18      	it	ne
   86fae:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   86fb2:	d1d1      	bne.n	86f58 <__aeabi_dmul+0x19c>
   86fb4:	ea81 0103 	eor.w	r1, r1, r3
   86fb8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   86fbc:	f04f 0000 	mov.w	r0, #0
   86fc0:	bd70      	pop	{r4, r5, r6, pc}
   86fc2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   86fc6:	bf06      	itte	eq
   86fc8:	4610      	moveq	r0, r2
   86fca:	4619      	moveq	r1, r3
   86fcc:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   86fd0:	d019      	beq.n	87006 <__aeabi_dmul+0x24a>
   86fd2:	ea94 0f0c 	teq	r4, ip
   86fd6:	d102      	bne.n	86fde <__aeabi_dmul+0x222>
   86fd8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   86fdc:	d113      	bne.n	87006 <__aeabi_dmul+0x24a>
   86fde:	ea95 0f0c 	teq	r5, ip
   86fe2:	d105      	bne.n	86ff0 <__aeabi_dmul+0x234>
   86fe4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   86fe8:	bf1c      	itt	ne
   86fea:	4610      	movne	r0, r2
   86fec:	4619      	movne	r1, r3
   86fee:	d10a      	bne.n	87006 <__aeabi_dmul+0x24a>
   86ff0:	ea81 0103 	eor.w	r1, r1, r3
   86ff4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   86ff8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   86ffc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   87000:	f04f 0000 	mov.w	r0, #0
   87004:	bd70      	pop	{r4, r5, r6, pc}
   87006:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8700a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8700e:	bd70      	pop	{r4, r5, r6, pc}

00087010 <__aeabi_ddiv>:
   87010:	b570      	push	{r4, r5, r6, lr}
   87012:	f04f 0cff 	mov.w	ip, #255	; 0xff
   87016:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   8701a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8701e:	bf1d      	ittte	ne
   87020:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   87024:	ea94 0f0c 	teqne	r4, ip
   87028:	ea95 0f0c 	teqne	r5, ip
   8702c:	f000 f8a7 	bleq	8717e <__aeabi_ddiv+0x16e>
   87030:	eba4 0405 	sub.w	r4, r4, r5
   87034:	ea81 0e03 	eor.w	lr, r1, r3
   87038:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   8703c:	ea4f 3101 	mov.w	r1, r1, lsl #12
   87040:	f000 8088 	beq.w	87154 <__aeabi_ddiv+0x144>
   87044:	ea4f 3303 	mov.w	r3, r3, lsl #12
   87048:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   8704c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   87050:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   87054:	ea4f 2202 	mov.w	r2, r2, lsl #8
   87058:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   8705c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   87060:	ea4f 2600 	mov.w	r6, r0, lsl #8
   87064:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   87068:	429d      	cmp	r5, r3
   8706a:	bf08      	it	eq
   8706c:	4296      	cmpeq	r6, r2
   8706e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   87072:	f504 7440 	add.w	r4, r4, #768	; 0x300
   87076:	d202      	bcs.n	8707e <__aeabi_ddiv+0x6e>
   87078:	085b      	lsrs	r3, r3, #1
   8707a:	ea4f 0232 	mov.w	r2, r2, rrx
   8707e:	1ab6      	subs	r6, r6, r2
   87080:	eb65 0503 	sbc.w	r5, r5, r3
   87084:	085b      	lsrs	r3, r3, #1
   87086:	ea4f 0232 	mov.w	r2, r2, rrx
   8708a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   8708e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   87092:	ebb6 0e02 	subs.w	lr, r6, r2
   87096:	eb75 0e03 	sbcs.w	lr, r5, r3
   8709a:	bf22      	ittt	cs
   8709c:	1ab6      	subcs	r6, r6, r2
   8709e:	4675      	movcs	r5, lr
   870a0:	ea40 000c 	orrcs.w	r0, r0, ip
   870a4:	085b      	lsrs	r3, r3, #1
   870a6:	ea4f 0232 	mov.w	r2, r2, rrx
   870aa:	ebb6 0e02 	subs.w	lr, r6, r2
   870ae:	eb75 0e03 	sbcs.w	lr, r5, r3
   870b2:	bf22      	ittt	cs
   870b4:	1ab6      	subcs	r6, r6, r2
   870b6:	4675      	movcs	r5, lr
   870b8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   870bc:	085b      	lsrs	r3, r3, #1
   870be:	ea4f 0232 	mov.w	r2, r2, rrx
   870c2:	ebb6 0e02 	subs.w	lr, r6, r2
   870c6:	eb75 0e03 	sbcs.w	lr, r5, r3
   870ca:	bf22      	ittt	cs
   870cc:	1ab6      	subcs	r6, r6, r2
   870ce:	4675      	movcs	r5, lr
   870d0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   870d4:	085b      	lsrs	r3, r3, #1
   870d6:	ea4f 0232 	mov.w	r2, r2, rrx
   870da:	ebb6 0e02 	subs.w	lr, r6, r2
   870de:	eb75 0e03 	sbcs.w	lr, r5, r3
   870e2:	bf22      	ittt	cs
   870e4:	1ab6      	subcs	r6, r6, r2
   870e6:	4675      	movcs	r5, lr
   870e8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   870ec:	ea55 0e06 	orrs.w	lr, r5, r6
   870f0:	d018      	beq.n	87124 <__aeabi_ddiv+0x114>
   870f2:	ea4f 1505 	mov.w	r5, r5, lsl #4
   870f6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   870fa:	ea4f 1606 	mov.w	r6, r6, lsl #4
   870fe:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   87102:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   87106:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   8710a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   8710e:	d1c0      	bne.n	87092 <__aeabi_ddiv+0x82>
   87110:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   87114:	d10b      	bne.n	8712e <__aeabi_ddiv+0x11e>
   87116:	ea41 0100 	orr.w	r1, r1, r0
   8711a:	f04f 0000 	mov.w	r0, #0
   8711e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   87122:	e7b6      	b.n	87092 <__aeabi_ddiv+0x82>
   87124:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   87128:	bf04      	itt	eq
   8712a:	4301      	orreq	r1, r0
   8712c:	2000      	moveq	r0, #0
   8712e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   87132:	bf88      	it	hi
   87134:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   87138:	f63f aeaf 	bhi.w	86e9a <__aeabi_dmul+0xde>
   8713c:	ebb5 0c03 	subs.w	ip, r5, r3
   87140:	bf04      	itt	eq
   87142:	ebb6 0c02 	subseq.w	ip, r6, r2
   87146:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8714a:	f150 0000 	adcs.w	r0, r0, #0
   8714e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   87152:	bd70      	pop	{r4, r5, r6, pc}
   87154:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   87158:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   8715c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   87160:	bfc2      	ittt	gt
   87162:	ebd4 050c 	rsbsgt	r5, r4, ip
   87166:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8716a:	bd70      	popgt	{r4, r5, r6, pc}
   8716c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   87170:	f04f 0e00 	mov.w	lr, #0
   87174:	3c01      	subs	r4, #1
   87176:	e690      	b.n	86e9a <__aeabi_dmul+0xde>
   87178:	ea45 0e06 	orr.w	lr, r5, r6
   8717c:	e68d      	b.n	86e9a <__aeabi_dmul+0xde>
   8717e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   87182:	ea94 0f0c 	teq	r4, ip
   87186:	bf08      	it	eq
   87188:	ea95 0f0c 	teqeq	r5, ip
   8718c:	f43f af3b 	beq.w	87006 <__aeabi_dmul+0x24a>
   87190:	ea94 0f0c 	teq	r4, ip
   87194:	d10a      	bne.n	871ac <__aeabi_ddiv+0x19c>
   87196:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8719a:	f47f af34 	bne.w	87006 <__aeabi_dmul+0x24a>
   8719e:	ea95 0f0c 	teq	r5, ip
   871a2:	f47f af25 	bne.w	86ff0 <__aeabi_dmul+0x234>
   871a6:	4610      	mov	r0, r2
   871a8:	4619      	mov	r1, r3
   871aa:	e72c      	b.n	87006 <__aeabi_dmul+0x24a>
   871ac:	ea95 0f0c 	teq	r5, ip
   871b0:	d106      	bne.n	871c0 <__aeabi_ddiv+0x1b0>
   871b2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   871b6:	f43f aefd 	beq.w	86fb4 <__aeabi_dmul+0x1f8>
   871ba:	4610      	mov	r0, r2
   871bc:	4619      	mov	r1, r3
   871be:	e722      	b.n	87006 <__aeabi_dmul+0x24a>
   871c0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   871c4:	bf18      	it	ne
   871c6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   871ca:	f47f aec5 	bne.w	86f58 <__aeabi_dmul+0x19c>
   871ce:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   871d2:	f47f af0d 	bne.w	86ff0 <__aeabi_dmul+0x234>
   871d6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   871da:	f47f aeeb 	bne.w	86fb4 <__aeabi_dmul+0x1f8>
   871de:	e712      	b.n	87006 <__aeabi_dmul+0x24a>

000871e0 <__gedf2>:
   871e0:	f04f 3cff 	mov.w	ip, #4294967295
   871e4:	e006      	b.n	871f4 <__cmpdf2+0x4>
   871e6:	bf00      	nop

000871e8 <__ledf2>:
   871e8:	f04f 0c01 	mov.w	ip, #1
   871ec:	e002      	b.n	871f4 <__cmpdf2+0x4>
   871ee:	bf00      	nop

000871f0 <__cmpdf2>:
   871f0:	f04f 0c01 	mov.w	ip, #1
   871f4:	f84d cd04 	str.w	ip, [sp, #-4]!
   871f8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   871fc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   87200:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   87204:	bf18      	it	ne
   87206:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   8720a:	d01b      	beq.n	87244 <__cmpdf2+0x54>
   8720c:	b001      	add	sp, #4
   8720e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   87212:	bf0c      	ite	eq
   87214:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   87218:	ea91 0f03 	teqne	r1, r3
   8721c:	bf02      	ittt	eq
   8721e:	ea90 0f02 	teqeq	r0, r2
   87222:	2000      	moveq	r0, #0
   87224:	4770      	bxeq	lr
   87226:	f110 0f00 	cmn.w	r0, #0
   8722a:	ea91 0f03 	teq	r1, r3
   8722e:	bf58      	it	pl
   87230:	4299      	cmppl	r1, r3
   87232:	bf08      	it	eq
   87234:	4290      	cmpeq	r0, r2
   87236:	bf2c      	ite	cs
   87238:	17d8      	asrcs	r0, r3, #31
   8723a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   8723e:	f040 0001 	orr.w	r0, r0, #1
   87242:	4770      	bx	lr
   87244:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   87248:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8724c:	d102      	bne.n	87254 <__cmpdf2+0x64>
   8724e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   87252:	d107      	bne.n	87264 <__cmpdf2+0x74>
   87254:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   87258:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8725c:	d1d6      	bne.n	8720c <__cmpdf2+0x1c>
   8725e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   87262:	d0d3      	beq.n	8720c <__cmpdf2+0x1c>
   87264:	f85d 0b04 	ldr.w	r0, [sp], #4
   87268:	4770      	bx	lr
   8726a:	bf00      	nop

0008726c <__aeabi_cdrcmple>:
   8726c:	4684      	mov	ip, r0
   8726e:	4610      	mov	r0, r2
   87270:	4662      	mov	r2, ip
   87272:	468c      	mov	ip, r1
   87274:	4619      	mov	r1, r3
   87276:	4663      	mov	r3, ip
   87278:	e000      	b.n	8727c <__aeabi_cdcmpeq>
   8727a:	bf00      	nop

0008727c <__aeabi_cdcmpeq>:
   8727c:	b501      	push	{r0, lr}
   8727e:	f7ff ffb7 	bl	871f0 <__cmpdf2>
   87282:	2800      	cmp	r0, #0
   87284:	bf48      	it	mi
   87286:	f110 0f00 	cmnmi.w	r0, #0
   8728a:	bd01      	pop	{r0, pc}

0008728c <__aeabi_dcmpeq>:
   8728c:	f84d ed08 	str.w	lr, [sp, #-8]!
   87290:	f7ff fff4 	bl	8727c <__aeabi_cdcmpeq>
   87294:	bf0c      	ite	eq
   87296:	2001      	moveq	r0, #1
   87298:	2000      	movne	r0, #0
   8729a:	f85d fb08 	ldr.w	pc, [sp], #8
   8729e:	bf00      	nop

000872a0 <__aeabi_dcmplt>:
   872a0:	f84d ed08 	str.w	lr, [sp, #-8]!
   872a4:	f7ff ffea 	bl	8727c <__aeabi_cdcmpeq>
   872a8:	bf34      	ite	cc
   872aa:	2001      	movcc	r0, #1
   872ac:	2000      	movcs	r0, #0
   872ae:	f85d fb08 	ldr.w	pc, [sp], #8
   872b2:	bf00      	nop

000872b4 <__aeabi_dcmple>:
   872b4:	f84d ed08 	str.w	lr, [sp, #-8]!
   872b8:	f7ff ffe0 	bl	8727c <__aeabi_cdcmpeq>
   872bc:	bf94      	ite	ls
   872be:	2001      	movls	r0, #1
   872c0:	2000      	movhi	r0, #0
   872c2:	f85d fb08 	ldr.w	pc, [sp], #8
   872c6:	bf00      	nop

000872c8 <__aeabi_dcmpge>:
   872c8:	f84d ed08 	str.w	lr, [sp, #-8]!
   872cc:	f7ff ffce 	bl	8726c <__aeabi_cdrcmple>
   872d0:	bf94      	ite	ls
   872d2:	2001      	movls	r0, #1
   872d4:	2000      	movhi	r0, #0
   872d6:	f85d fb08 	ldr.w	pc, [sp], #8
   872da:	bf00      	nop

000872dc <__aeabi_dcmpgt>:
   872dc:	f84d ed08 	str.w	lr, [sp, #-8]!
   872e0:	f7ff ffc4 	bl	8726c <__aeabi_cdrcmple>
   872e4:	bf34      	ite	cc
   872e6:	2001      	movcc	r0, #1
   872e8:	2000      	movcs	r0, #0
   872ea:	f85d fb08 	ldr.w	pc, [sp], #8
   872ee:	bf00      	nop

000872f0 <__aeabi_d2iz>:
   872f0:	ea4f 0241 	mov.w	r2, r1, lsl #1
   872f4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   872f8:	d215      	bcs.n	87326 <__aeabi_d2iz+0x36>
   872fa:	d511      	bpl.n	87320 <__aeabi_d2iz+0x30>
   872fc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   87300:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   87304:	d912      	bls.n	8732c <__aeabi_d2iz+0x3c>
   87306:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   8730a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   8730e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   87312:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   87316:	fa23 f002 	lsr.w	r0, r3, r2
   8731a:	bf18      	it	ne
   8731c:	4240      	negne	r0, r0
   8731e:	4770      	bx	lr
   87320:	f04f 0000 	mov.w	r0, #0
   87324:	4770      	bx	lr
   87326:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   8732a:	d105      	bne.n	87338 <__aeabi_d2iz+0x48>
   8732c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   87330:	bf08      	it	eq
   87332:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   87336:	4770      	bx	lr
   87338:	f04f 0000 	mov.w	r0, #0
   8733c:	4770      	bx	lr
   8733e:	bf00      	nop

00087340 <__aeabi_uldivmod>:
   87340:	b94b      	cbnz	r3, 87356 <__aeabi_uldivmod+0x16>
   87342:	b942      	cbnz	r2, 87356 <__aeabi_uldivmod+0x16>
   87344:	2900      	cmp	r1, #0
   87346:	bf08      	it	eq
   87348:	2800      	cmpeq	r0, #0
   8734a:	d002      	beq.n	87352 <__aeabi_uldivmod+0x12>
   8734c:	f04f 31ff 	mov.w	r1, #4294967295
   87350:	4608      	mov	r0, r1
   87352:	f000 b83b 	b.w	873cc <__aeabi_idiv0>
   87356:	b082      	sub	sp, #8
   87358:	46ec      	mov	ip, sp
   8735a:	e92d 5000 	stmdb	sp!, {ip, lr}
   8735e:	f000 f81d 	bl	8739c <__gnu_uldivmod_helper>
   87362:	f8dd e004 	ldr.w	lr, [sp, #4]
   87366:	b002      	add	sp, #8
   87368:	bc0c      	pop	{r2, r3}
   8736a:	4770      	bx	lr

0008736c <__gnu_ldivmod_helper>:
   8736c:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   87370:	9e08      	ldr	r6, [sp, #32]
   87372:	4614      	mov	r4, r2
   87374:	461d      	mov	r5, r3
   87376:	4680      	mov	r8, r0
   87378:	4689      	mov	r9, r1
   8737a:	f000 f829 	bl	873d0 <__divdi3>
   8737e:	fb04 f301 	mul.w	r3, r4, r1
   87382:	fba4 ab00 	umull	sl, fp, r4, r0
   87386:	fb00 3205 	mla	r2, r0, r5, r3
   8738a:	4493      	add	fp, r2
   8738c:	ebb8 080a 	subs.w	r8, r8, sl
   87390:	eb69 090b 	sbc.w	r9, r9, fp
   87394:	e9c6 8900 	strd	r8, r9, [r6]
   87398:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

0008739c <__gnu_uldivmod_helper>:
   8739c:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   873a0:	9e08      	ldr	r6, [sp, #32]
   873a2:	4614      	mov	r4, r2
   873a4:	461d      	mov	r5, r3
   873a6:	4680      	mov	r8, r0
   873a8:	4689      	mov	r9, r1
   873aa:	f000 f961 	bl	87670 <__udivdi3>
   873ae:	fb00 f505 	mul.w	r5, r0, r5
   873b2:	fba0 ab04 	umull	sl, fp, r0, r4
   873b6:	fb04 5401 	mla	r4, r4, r1, r5
   873ba:	44a3      	add	fp, r4
   873bc:	ebb8 080a 	subs.w	r8, r8, sl
   873c0:	eb69 090b 	sbc.w	r9, r9, fp
   873c4:	e9c6 8900 	strd	r8, r9, [r6]
   873c8:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

000873cc <__aeabi_idiv0>:
   873cc:	4770      	bx	lr
   873ce:	bf00      	nop

000873d0 <__divdi3>:
   873d0:	2900      	cmp	r1, #0
   873d2:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   873d6:	f2c0 80a1 	blt.w	8751c <__divdi3+0x14c>
   873da:	2400      	movs	r4, #0
   873dc:	2b00      	cmp	r3, #0
   873de:	f2c0 8098 	blt.w	87512 <__divdi3+0x142>
   873e2:	4615      	mov	r5, r2
   873e4:	4606      	mov	r6, r0
   873e6:	460f      	mov	r7, r1
   873e8:	2b00      	cmp	r3, #0
   873ea:	d13f      	bne.n	8746c <__divdi3+0x9c>
   873ec:	428a      	cmp	r2, r1
   873ee:	d958      	bls.n	874a2 <__divdi3+0xd2>
   873f0:	fab2 f382 	clz	r3, r2
   873f4:	b14b      	cbz	r3, 8740a <__divdi3+0x3a>
   873f6:	f1c3 0220 	rsb	r2, r3, #32
   873fa:	fa01 f703 	lsl.w	r7, r1, r3
   873fe:	fa20 f202 	lsr.w	r2, r0, r2
   87402:	409d      	lsls	r5, r3
   87404:	fa00 f603 	lsl.w	r6, r0, r3
   87408:	4317      	orrs	r7, r2
   8740a:	0c29      	lsrs	r1, r5, #16
   8740c:	fbb7 f2f1 	udiv	r2, r7, r1
   87410:	fb01 7712 	mls	r7, r1, r2, r7
   87414:	b2a8      	uxth	r0, r5
   87416:	fb00 f302 	mul.w	r3, r0, r2
   8741a:	ea4f 4c16 	mov.w	ip, r6, lsr #16
   8741e:	ea4c 4707 	orr.w	r7, ip, r7, lsl #16
   87422:	42bb      	cmp	r3, r7
   87424:	d909      	bls.n	8743a <__divdi3+0x6a>
   87426:	197f      	adds	r7, r7, r5
   87428:	f102 3cff 	add.w	ip, r2, #4294967295
   8742c:	f080 8105 	bcs.w	8763a <__divdi3+0x26a>
   87430:	42bb      	cmp	r3, r7
   87432:	f240 8102 	bls.w	8763a <__divdi3+0x26a>
   87436:	3a02      	subs	r2, #2
   87438:	442f      	add	r7, r5
   8743a:	1aff      	subs	r7, r7, r3
   8743c:	fbb7 f3f1 	udiv	r3, r7, r1
   87440:	fb01 7113 	mls	r1, r1, r3, r7
   87444:	fb00 f003 	mul.w	r0, r0, r3
   87448:	b2b6      	uxth	r6, r6
   8744a:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
   8744e:	4288      	cmp	r0, r1
   87450:	d908      	bls.n	87464 <__divdi3+0x94>
   87452:	1949      	adds	r1, r1, r5
   87454:	f103 37ff 	add.w	r7, r3, #4294967295
   87458:	f080 80f1 	bcs.w	8763e <__divdi3+0x26e>
   8745c:	4288      	cmp	r0, r1
   8745e:	f240 80ee 	bls.w	8763e <__divdi3+0x26e>
   87462:	3b02      	subs	r3, #2
   87464:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   87468:	2300      	movs	r3, #0
   8746a:	e003      	b.n	87474 <__divdi3+0xa4>
   8746c:	428b      	cmp	r3, r1
   8746e:	d90a      	bls.n	87486 <__divdi3+0xb6>
   87470:	2300      	movs	r3, #0
   87472:	461a      	mov	r2, r3
   87474:	4610      	mov	r0, r2
   87476:	4619      	mov	r1, r3
   87478:	b114      	cbz	r4, 87480 <__divdi3+0xb0>
   8747a:	4240      	negs	r0, r0
   8747c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   87480:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   87484:	4770      	bx	lr
   87486:	fab3 f883 	clz	r8, r3
   8748a:	f1b8 0f00 	cmp.w	r8, #0
   8748e:	f040 8088 	bne.w	875a2 <__divdi3+0x1d2>
   87492:	428b      	cmp	r3, r1
   87494:	d302      	bcc.n	8749c <__divdi3+0xcc>
   87496:	4282      	cmp	r2, r0
   87498:	f200 80e2 	bhi.w	87660 <__divdi3+0x290>
   8749c:	2300      	movs	r3, #0
   8749e:	2201      	movs	r2, #1
   874a0:	e7e8      	b.n	87474 <__divdi3+0xa4>
   874a2:	b912      	cbnz	r2, 874aa <__divdi3+0xda>
   874a4:	2301      	movs	r3, #1
   874a6:	fbb3 f5f2 	udiv	r5, r3, r2
   874aa:	fab5 f285 	clz	r2, r5
   874ae:	2a00      	cmp	r2, #0
   874b0:	d13a      	bne.n	87528 <__divdi3+0x158>
   874b2:	1b7f      	subs	r7, r7, r5
   874b4:	0c28      	lsrs	r0, r5, #16
   874b6:	fa1f fc85 	uxth.w	ip, r5
   874ba:	2301      	movs	r3, #1
   874bc:	fbb7 f1f0 	udiv	r1, r7, r0
   874c0:	fb00 7711 	mls	r7, r0, r1, r7
   874c4:	fb0c f201 	mul.w	r2, ip, r1
   874c8:	ea4f 4816 	mov.w	r8, r6, lsr #16
   874cc:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   874d0:	42ba      	cmp	r2, r7
   874d2:	d907      	bls.n	874e4 <__divdi3+0x114>
   874d4:	197f      	adds	r7, r7, r5
   874d6:	f101 38ff 	add.w	r8, r1, #4294967295
   874da:	d202      	bcs.n	874e2 <__divdi3+0x112>
   874dc:	42ba      	cmp	r2, r7
   874de:	f200 80c4 	bhi.w	8766a <__divdi3+0x29a>
   874e2:	4641      	mov	r1, r8
   874e4:	1abf      	subs	r7, r7, r2
   874e6:	fbb7 f2f0 	udiv	r2, r7, r0
   874ea:	fb00 7012 	mls	r0, r0, r2, r7
   874ee:	fb0c fc02 	mul.w	ip, ip, r2
   874f2:	b2b6      	uxth	r6, r6
   874f4:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
   874f8:	4584      	cmp	ip, r0
   874fa:	d907      	bls.n	8750c <__divdi3+0x13c>
   874fc:	1940      	adds	r0, r0, r5
   874fe:	f102 37ff 	add.w	r7, r2, #4294967295
   87502:	d202      	bcs.n	8750a <__divdi3+0x13a>
   87504:	4584      	cmp	ip, r0
   87506:	f200 80ae 	bhi.w	87666 <__divdi3+0x296>
   8750a:	463a      	mov	r2, r7
   8750c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   87510:	e7b0      	b.n	87474 <__divdi3+0xa4>
   87512:	43e4      	mvns	r4, r4
   87514:	4252      	negs	r2, r2
   87516:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   8751a:	e762      	b.n	873e2 <__divdi3+0x12>
   8751c:	4240      	negs	r0, r0
   8751e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   87522:	f04f 34ff 	mov.w	r4, #4294967295
   87526:	e759      	b.n	873dc <__divdi3+0xc>
   87528:	4095      	lsls	r5, r2
   8752a:	f1c2 0920 	rsb	r9, r2, #32
   8752e:	fa27 f109 	lsr.w	r1, r7, r9
   87532:	fa26 f909 	lsr.w	r9, r6, r9
   87536:	4097      	lsls	r7, r2
   87538:	0c28      	lsrs	r0, r5, #16
   8753a:	fbb1 f8f0 	udiv	r8, r1, r0
   8753e:	fb00 1118 	mls	r1, r0, r8, r1
   87542:	fa1f fc85 	uxth.w	ip, r5
   87546:	fb0c f308 	mul.w	r3, ip, r8
   8754a:	ea49 0907 	orr.w	r9, r9, r7
   8754e:	ea4f 4719 	mov.w	r7, r9, lsr #16
   87552:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
   87556:	428b      	cmp	r3, r1
   87558:	fa06 f602 	lsl.w	r6, r6, r2
   8755c:	d908      	bls.n	87570 <__divdi3+0x1a0>
   8755e:	1949      	adds	r1, r1, r5
   87560:	f108 32ff 	add.w	r2, r8, #4294967295
   87564:	d27a      	bcs.n	8765c <__divdi3+0x28c>
   87566:	428b      	cmp	r3, r1
   87568:	d978      	bls.n	8765c <__divdi3+0x28c>
   8756a:	f1a8 0802 	sub.w	r8, r8, #2
   8756e:	4429      	add	r1, r5
   87570:	1ac9      	subs	r1, r1, r3
   87572:	fbb1 f3f0 	udiv	r3, r1, r0
   87576:	fb00 1713 	mls	r7, r0, r3, r1
   8757a:	fb0c f203 	mul.w	r2, ip, r3
   8757e:	fa1f f989 	uxth.w	r9, r9
   87582:	ea49 4707 	orr.w	r7, r9, r7, lsl #16
   87586:	42ba      	cmp	r2, r7
   87588:	d907      	bls.n	8759a <__divdi3+0x1ca>
   8758a:	197f      	adds	r7, r7, r5
   8758c:	f103 31ff 	add.w	r1, r3, #4294967295
   87590:	d260      	bcs.n	87654 <__divdi3+0x284>
   87592:	42ba      	cmp	r2, r7
   87594:	d95e      	bls.n	87654 <__divdi3+0x284>
   87596:	3b02      	subs	r3, #2
   87598:	442f      	add	r7, r5
   8759a:	1abf      	subs	r7, r7, r2
   8759c:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   875a0:	e78c      	b.n	874bc <__divdi3+0xec>
   875a2:	f1c8 0220 	rsb	r2, r8, #32
   875a6:	fa25 f102 	lsr.w	r1, r5, r2
   875aa:	fa03 fc08 	lsl.w	ip, r3, r8
   875ae:	fa27 f302 	lsr.w	r3, r7, r2
   875b2:	fa20 f202 	lsr.w	r2, r0, r2
   875b6:	fa07 f708 	lsl.w	r7, r7, r8
   875ba:	ea41 0c0c 	orr.w	ip, r1, ip
   875be:	ea4f 491c 	mov.w	r9, ip, lsr #16
   875c2:	fbb3 f1f9 	udiv	r1, r3, r9
   875c6:	fb09 3311 	mls	r3, r9, r1, r3
   875ca:	fa1f fa8c 	uxth.w	sl, ip
   875ce:	fb0a fb01 	mul.w	fp, sl, r1
   875d2:	4317      	orrs	r7, r2
   875d4:	0c3a      	lsrs	r2, r7, #16
   875d6:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   875da:	459b      	cmp	fp, r3
   875dc:	fa05 f008 	lsl.w	r0, r5, r8
   875e0:	d908      	bls.n	875f4 <__divdi3+0x224>
   875e2:	eb13 030c 	adds.w	r3, r3, ip
   875e6:	f101 32ff 	add.w	r2, r1, #4294967295
   875ea:	d235      	bcs.n	87658 <__divdi3+0x288>
   875ec:	459b      	cmp	fp, r3
   875ee:	d933      	bls.n	87658 <__divdi3+0x288>
   875f0:	3902      	subs	r1, #2
   875f2:	4463      	add	r3, ip
   875f4:	ebcb 0303 	rsb	r3, fp, r3
   875f8:	fbb3 f2f9 	udiv	r2, r3, r9
   875fc:	fb09 3312 	mls	r3, r9, r2, r3
   87600:	fb0a fa02 	mul.w	sl, sl, r2
   87604:	b2bf      	uxth	r7, r7
   87606:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
   8760a:	45ba      	cmp	sl, r7
   8760c:	d908      	bls.n	87620 <__divdi3+0x250>
   8760e:	eb17 070c 	adds.w	r7, r7, ip
   87612:	f102 33ff 	add.w	r3, r2, #4294967295
   87616:	d21b      	bcs.n	87650 <__divdi3+0x280>
   87618:	45ba      	cmp	sl, r7
   8761a:	d919      	bls.n	87650 <__divdi3+0x280>
   8761c:	3a02      	subs	r2, #2
   8761e:	4467      	add	r7, ip
   87620:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
   87624:	fba5 0100 	umull	r0, r1, r5, r0
   87628:	ebca 0707 	rsb	r7, sl, r7
   8762c:	428f      	cmp	r7, r1
   8762e:	f04f 0300 	mov.w	r3, #0
   87632:	d30a      	bcc.n	8764a <__divdi3+0x27a>
   87634:	d005      	beq.n	87642 <__divdi3+0x272>
   87636:	462a      	mov	r2, r5
   87638:	e71c      	b.n	87474 <__divdi3+0xa4>
   8763a:	4662      	mov	r2, ip
   8763c:	e6fd      	b.n	8743a <__divdi3+0x6a>
   8763e:	463b      	mov	r3, r7
   87640:	e710      	b.n	87464 <__divdi3+0x94>
   87642:	fa06 f608 	lsl.w	r6, r6, r8
   87646:	4286      	cmp	r6, r0
   87648:	d2f5      	bcs.n	87636 <__divdi3+0x266>
   8764a:	1e6a      	subs	r2, r5, #1
   8764c:	2300      	movs	r3, #0
   8764e:	e711      	b.n	87474 <__divdi3+0xa4>
   87650:	461a      	mov	r2, r3
   87652:	e7e5      	b.n	87620 <__divdi3+0x250>
   87654:	460b      	mov	r3, r1
   87656:	e7a0      	b.n	8759a <__divdi3+0x1ca>
   87658:	4611      	mov	r1, r2
   8765a:	e7cb      	b.n	875f4 <__divdi3+0x224>
   8765c:	4690      	mov	r8, r2
   8765e:	e787      	b.n	87570 <__divdi3+0x1a0>
   87660:	4643      	mov	r3, r8
   87662:	4642      	mov	r2, r8
   87664:	e706      	b.n	87474 <__divdi3+0xa4>
   87666:	3a02      	subs	r2, #2
   87668:	e750      	b.n	8750c <__divdi3+0x13c>
   8766a:	3902      	subs	r1, #2
   8766c:	442f      	add	r7, r5
   8766e:	e739      	b.n	874e4 <__divdi3+0x114>

00087670 <__udivdi3>:
   87670:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   87674:	4614      	mov	r4, r2
   87676:	4605      	mov	r5, r0
   87678:	460e      	mov	r6, r1
   8767a:	2b00      	cmp	r3, #0
   8767c:	d143      	bne.n	87706 <__udivdi3+0x96>
   8767e:	428a      	cmp	r2, r1
   87680:	d953      	bls.n	8772a <__udivdi3+0xba>
   87682:	fab2 f782 	clz	r7, r2
   87686:	b157      	cbz	r7, 8769e <__udivdi3+0x2e>
   87688:	f1c7 0620 	rsb	r6, r7, #32
   8768c:	fa20 f606 	lsr.w	r6, r0, r6
   87690:	fa01 f307 	lsl.w	r3, r1, r7
   87694:	fa02 f407 	lsl.w	r4, r2, r7
   87698:	fa00 f507 	lsl.w	r5, r0, r7
   8769c:	431e      	orrs	r6, r3
   8769e:	0c21      	lsrs	r1, r4, #16
   876a0:	fbb6 f2f1 	udiv	r2, r6, r1
   876a4:	fb01 6612 	mls	r6, r1, r2, r6
   876a8:	b2a0      	uxth	r0, r4
   876aa:	fb00 f302 	mul.w	r3, r0, r2
   876ae:	0c2f      	lsrs	r7, r5, #16
   876b0:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
   876b4:	42b3      	cmp	r3, r6
   876b6:	d909      	bls.n	876cc <__udivdi3+0x5c>
   876b8:	1936      	adds	r6, r6, r4
   876ba:	f102 37ff 	add.w	r7, r2, #4294967295
   876be:	f080 80fd 	bcs.w	878bc <__udivdi3+0x24c>
   876c2:	42b3      	cmp	r3, r6
   876c4:	f240 80fa 	bls.w	878bc <__udivdi3+0x24c>
   876c8:	3a02      	subs	r2, #2
   876ca:	4426      	add	r6, r4
   876cc:	1af6      	subs	r6, r6, r3
   876ce:	fbb6 f3f1 	udiv	r3, r6, r1
   876d2:	fb01 6113 	mls	r1, r1, r3, r6
   876d6:	fb00 f003 	mul.w	r0, r0, r3
   876da:	b2ad      	uxth	r5, r5
   876dc:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
   876e0:	4288      	cmp	r0, r1
   876e2:	d908      	bls.n	876f6 <__udivdi3+0x86>
   876e4:	1909      	adds	r1, r1, r4
   876e6:	f103 36ff 	add.w	r6, r3, #4294967295
   876ea:	f080 80e9 	bcs.w	878c0 <__udivdi3+0x250>
   876ee:	4288      	cmp	r0, r1
   876f0:	f240 80e6 	bls.w	878c0 <__udivdi3+0x250>
   876f4:	3b02      	subs	r3, #2
   876f6:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   876fa:	2300      	movs	r3, #0
   876fc:	4610      	mov	r0, r2
   876fe:	4619      	mov	r1, r3
   87700:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   87704:	4770      	bx	lr
   87706:	428b      	cmp	r3, r1
   87708:	d84c      	bhi.n	877a4 <__udivdi3+0x134>
   8770a:	fab3 f683 	clz	r6, r3
   8770e:	2e00      	cmp	r6, #0
   87710:	d14f      	bne.n	877b2 <__udivdi3+0x142>
   87712:	428b      	cmp	r3, r1
   87714:	d302      	bcc.n	8771c <__udivdi3+0xac>
   87716:	4282      	cmp	r2, r0
   87718:	f200 80dd 	bhi.w	878d6 <__udivdi3+0x266>
   8771c:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   87720:	2300      	movs	r3, #0
   87722:	2201      	movs	r2, #1
   87724:	4610      	mov	r0, r2
   87726:	4619      	mov	r1, r3
   87728:	4770      	bx	lr
   8772a:	b912      	cbnz	r2, 87732 <__udivdi3+0xc2>
   8772c:	2401      	movs	r4, #1
   8772e:	fbb4 f4f2 	udiv	r4, r4, r2
   87732:	fab4 f284 	clz	r2, r4
   87736:	2a00      	cmp	r2, #0
   87738:	f040 8082 	bne.w	87840 <__udivdi3+0x1d0>
   8773c:	1b09      	subs	r1, r1, r4
   8773e:	0c26      	lsrs	r6, r4, #16
   87740:	b2a7      	uxth	r7, r4
   87742:	2301      	movs	r3, #1
   87744:	fbb1 f0f6 	udiv	r0, r1, r6
   87748:	fb06 1110 	mls	r1, r6, r0, r1
   8774c:	fb07 f200 	mul.w	r2, r7, r0
   87750:	ea4f 4c15 	mov.w	ip, r5, lsr #16
   87754:	ea4c 4101 	orr.w	r1, ip, r1, lsl #16
   87758:	428a      	cmp	r2, r1
   8775a:	d907      	bls.n	8776c <__udivdi3+0xfc>
   8775c:	1909      	adds	r1, r1, r4
   8775e:	f100 3cff 	add.w	ip, r0, #4294967295
   87762:	d202      	bcs.n	8776a <__udivdi3+0xfa>
   87764:	428a      	cmp	r2, r1
   87766:	f200 80c8 	bhi.w	878fa <__udivdi3+0x28a>
   8776a:	4660      	mov	r0, ip
   8776c:	1a89      	subs	r1, r1, r2
   8776e:	fbb1 f2f6 	udiv	r2, r1, r6
   87772:	fb06 1112 	mls	r1, r6, r2, r1
   87776:	fb07 f702 	mul.w	r7, r7, r2
   8777a:	b2ad      	uxth	r5, r5
   8777c:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
   87780:	42af      	cmp	r7, r5
   87782:	d908      	bls.n	87796 <__udivdi3+0x126>
   87784:	192c      	adds	r4, r5, r4
   87786:	f102 31ff 	add.w	r1, r2, #4294967295
   8778a:	f080 809b 	bcs.w	878c4 <__udivdi3+0x254>
   8778e:	42a7      	cmp	r7, r4
   87790:	f240 8098 	bls.w	878c4 <__udivdi3+0x254>
   87794:	3a02      	subs	r2, #2
   87796:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
   8779a:	4610      	mov	r0, r2
   8779c:	4619      	mov	r1, r3
   8779e:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   877a2:	4770      	bx	lr
   877a4:	2300      	movs	r3, #0
   877a6:	461a      	mov	r2, r3
   877a8:	4610      	mov	r0, r2
   877aa:	4619      	mov	r1, r3
   877ac:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   877b0:	4770      	bx	lr
   877b2:	f1c6 0520 	rsb	r5, r6, #32
   877b6:	fa22 f705 	lsr.w	r7, r2, r5
   877ba:	fa03 f406 	lsl.w	r4, r3, r6
   877be:	fa21 f305 	lsr.w	r3, r1, r5
   877c2:	fa01 fb06 	lsl.w	fp, r1, r6
   877c6:	fa20 f505 	lsr.w	r5, r0, r5
   877ca:	433c      	orrs	r4, r7
   877cc:	ea4f 4814 	mov.w	r8, r4, lsr #16
   877d0:	fbb3 fcf8 	udiv	ip, r3, r8
   877d4:	fb08 331c 	mls	r3, r8, ip, r3
   877d8:	fa1f f984 	uxth.w	r9, r4
   877dc:	fb09 fa0c 	mul.w	sl, r9, ip
   877e0:	ea45 0b0b 	orr.w	fp, r5, fp
   877e4:	ea4f 451b 	mov.w	r5, fp, lsr #16
   877e8:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
   877ec:	459a      	cmp	sl, r3
   877ee:	fa02 f206 	lsl.w	r2, r2, r6
   877f2:	d904      	bls.n	877fe <__udivdi3+0x18e>
   877f4:	191b      	adds	r3, r3, r4
   877f6:	f10c 35ff 	add.w	r5, ip, #4294967295
   877fa:	d36f      	bcc.n	878dc <__udivdi3+0x26c>
   877fc:	46ac      	mov	ip, r5
   877fe:	ebca 0303 	rsb	r3, sl, r3
   87802:	fbb3 f5f8 	udiv	r5, r3, r8
   87806:	fb08 3315 	mls	r3, r8, r5, r3
   8780a:	fb09 f905 	mul.w	r9, r9, r5
   8780e:	fa1f fb8b 	uxth.w	fp, fp
   87812:	ea4b 4703 	orr.w	r7, fp, r3, lsl #16
   87816:	45b9      	cmp	r9, r7
   87818:	d904      	bls.n	87824 <__udivdi3+0x1b4>
   8781a:	193f      	adds	r7, r7, r4
   8781c:	f105 33ff 	add.w	r3, r5, #4294967295
   87820:	d362      	bcc.n	878e8 <__udivdi3+0x278>
   87822:	461d      	mov	r5, r3
   87824:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
   87828:	fbac 2302 	umull	r2, r3, ip, r2
   8782c:	ebc9 0707 	rsb	r7, r9, r7
   87830:	429f      	cmp	r7, r3
   87832:	f04f 0500 	mov.w	r5, #0
   87836:	d34a      	bcc.n	878ce <__udivdi3+0x25e>
   87838:	d046      	beq.n	878c8 <__udivdi3+0x258>
   8783a:	4662      	mov	r2, ip
   8783c:	462b      	mov	r3, r5
   8783e:	e75d      	b.n	876fc <__udivdi3+0x8c>
   87840:	4094      	lsls	r4, r2
   87842:	f1c2 0920 	rsb	r9, r2, #32
   87846:	fa21 fc09 	lsr.w	ip, r1, r9
   8784a:	4091      	lsls	r1, r2
   8784c:	fa20 f909 	lsr.w	r9, r0, r9
   87850:	0c26      	lsrs	r6, r4, #16
   87852:	fbbc f8f6 	udiv	r8, ip, r6
   87856:	fb06 cc18 	mls	ip, r6, r8, ip
   8785a:	b2a7      	uxth	r7, r4
   8785c:	fb07 f308 	mul.w	r3, r7, r8
   87860:	ea49 0901 	orr.w	r9, r9, r1
   87864:	ea4f 4119 	mov.w	r1, r9, lsr #16
   87868:	ea41 4c0c 	orr.w	ip, r1, ip, lsl #16
   8786c:	4563      	cmp	r3, ip
   8786e:	fa00 f502 	lsl.w	r5, r0, r2
   87872:	d909      	bls.n	87888 <__udivdi3+0x218>
   87874:	eb1c 0c04 	adds.w	ip, ip, r4
   87878:	f108 32ff 	add.w	r2, r8, #4294967295
   8787c:	d23b      	bcs.n	878f6 <__udivdi3+0x286>
   8787e:	4563      	cmp	r3, ip
   87880:	d939      	bls.n	878f6 <__udivdi3+0x286>
   87882:	f1a8 0802 	sub.w	r8, r8, #2
   87886:	44a4      	add	ip, r4
   87888:	ebc3 0c0c 	rsb	ip, r3, ip
   8788c:	fbbc f3f6 	udiv	r3, ip, r6
   87890:	fb06 c113 	mls	r1, r6, r3, ip
   87894:	fb07 f203 	mul.w	r2, r7, r3
   87898:	fa1f f989 	uxth.w	r9, r9
   8789c:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
   878a0:	428a      	cmp	r2, r1
   878a2:	d907      	bls.n	878b4 <__udivdi3+0x244>
   878a4:	1909      	adds	r1, r1, r4
   878a6:	f103 30ff 	add.w	r0, r3, #4294967295
   878aa:	d222      	bcs.n	878f2 <__udivdi3+0x282>
   878ac:	428a      	cmp	r2, r1
   878ae:	d920      	bls.n	878f2 <__udivdi3+0x282>
   878b0:	3b02      	subs	r3, #2
   878b2:	4421      	add	r1, r4
   878b4:	1a89      	subs	r1, r1, r2
   878b6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   878ba:	e743      	b.n	87744 <__udivdi3+0xd4>
   878bc:	463a      	mov	r2, r7
   878be:	e705      	b.n	876cc <__udivdi3+0x5c>
   878c0:	4633      	mov	r3, r6
   878c2:	e718      	b.n	876f6 <__udivdi3+0x86>
   878c4:	460a      	mov	r2, r1
   878c6:	e766      	b.n	87796 <__udivdi3+0x126>
   878c8:	40b0      	lsls	r0, r6
   878ca:	4290      	cmp	r0, r2
   878cc:	d2b5      	bcs.n	8783a <__udivdi3+0x1ca>
   878ce:	f10c 32ff 	add.w	r2, ip, #4294967295
   878d2:	2300      	movs	r3, #0
   878d4:	e712      	b.n	876fc <__udivdi3+0x8c>
   878d6:	4633      	mov	r3, r6
   878d8:	4632      	mov	r2, r6
   878da:	e70f      	b.n	876fc <__udivdi3+0x8c>
   878dc:	459a      	cmp	sl, r3
   878de:	d98d      	bls.n	877fc <__udivdi3+0x18c>
   878e0:	f1ac 0c02 	sub.w	ip, ip, #2
   878e4:	4423      	add	r3, r4
   878e6:	e78a      	b.n	877fe <__udivdi3+0x18e>
   878e8:	45b9      	cmp	r9, r7
   878ea:	d99a      	bls.n	87822 <__udivdi3+0x1b2>
   878ec:	3d02      	subs	r5, #2
   878ee:	4427      	add	r7, r4
   878f0:	e798      	b.n	87824 <__udivdi3+0x1b4>
   878f2:	4603      	mov	r3, r0
   878f4:	e7de      	b.n	878b4 <__udivdi3+0x244>
   878f6:	4690      	mov	r8, r2
   878f8:	e7c6      	b.n	87888 <__udivdi3+0x218>
   878fa:	3802      	subs	r0, #2
   878fc:	4421      	add	r1, r4
   878fe:	e735      	b.n	8776c <__udivdi3+0xfc>
   87900:	73206e69 	.word	0x73206e69
   87904:	0a646e65 	.word	0x0a646e65
   87908:	00000000 	.word	0x00000000
   8790c:	2056414e 	.word	0x2056414e
   87910:	4b434150 	.word	0x4b434150
   87914:	00000000 	.word	0x00000000
   87918:	49595254 	.word	0x49595254
   8791c:	5420474e 	.word	0x5420474e
   87920:	4553204f 	.word	0x4553204f
   87924:	000a444e 	.word	0x000a444e
   87928:	656e6f64 	.word	0x656e6f64
   8792c:	6e657320 	.word	0x6e657320
   87930:	676e6964 	.word	0x676e6964
   87934:	76616e20 	.word	0x76616e20
   87938:	0000000a 	.word	0x0000000a
   8793c:	20424150 	.word	0x20424150
   87940:	4b434150 	.word	0x4b434150
   87944:	00000030 	.word	0x00000030
   87948:	656e6f64 	.word	0x656e6f64
   8794c:	6e657320 	.word	0x6e657320
   87950:	676e6964 	.word	0x676e6964
   87954:	62617020 	.word	0x62617020
   87958:	0000000a 	.word	0x0000000a
   8795c:	72617453 	.word	0x72617453
   87960:	666f2074 	.word	0x666f2074
   87964:	63657220 	.word	0x63657220
   87968:	65766965 	.word	0x65766965
   8796c:	0000000a 	.word	0x0000000a
   87970:	69595254 	.word	0x69595254
   87974:	7420676e 	.word	0x7420676e
   87978:	6572206f 	.word	0x6572206f
   8797c:	76696563 	.word	0x76696563
   87980:	616e2065 	.word	0x616e2065
   87984:	00000076 	.word	0x00000076
   87988:	656e6f64 	.word	0x656e6f64
   8798c:	6e657320 	.word	0x6e657320
   87990:	676e6964 	.word	0x676e6964
   87994:	00000000 	.word	0x00000000
   87998:	69595254 	.word	0x69595254
   8799c:	7420676e 	.word	0x7420676e
   879a0:	6572206f 	.word	0x6572206f
   879a4:	76696563 	.word	0x76696563
   879a8:	61502065 	.word	0x61502065
   879ac:	00000000 	.word	0x00000000
   879b0:	72617473 	.word	0x72617473
   879b4:	65732074 	.word	0x65732074
   879b8:	6e69646e 	.word	0x6e69646e
   879bc:	6f742067 	.word	0x6f742067
   879c0:	76616e20 	.word	0x76616e20
   879c4:	74616769 	.word	0x74616769
   879c8:	006e6f69 	.word	0x006e6f69
   879cc:	61746144 	.word	0x61746144
   879d0:	63657220 	.word	0x63657220
   879d4:	65766965 	.word	0x65766965
   879d8:	00642520 	.word	0x00642520
   879dc:	00000043 	.word	0x00000043

000879e0 <_global_impure_ptr>:
   879e0:	20070198                                ... 

000879e4 <zeroes.6763>:
   879e4:	30303030 30303030 30303030 30303030     0000000000000000
   879f4:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   87a04:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   87a14:	00000000 33323130 37363534 62613938     ....0123456789ab
   87a24:	66656463 00000000 6c756e28 0000296c     cdef....(null)..

00087a34 <blanks.6762>:
   87a34:	20202020 20202020 20202020 20202020                     

00087a44 <zeroes.6721>:
   87a44:	30303030 30303030 30303030 30303030     0000000000000000

00087a54 <blanks.6720>:
   87a54:	20202020 20202020 20202020 20202020                     
   87a64:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   87a74:	49534f50 00000058 0000002e              POSIX.......

00087a80 <__mprec_tens>:
   87a80:	00000000 3ff00000 00000000 40240000     .......?......$@
   87a90:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   87aa0:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   87ab0:	00000000 412e8480 00000000 416312d0     .......A......cA
   87ac0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   87ad0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   87ae0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   87af0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   87b00:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   87b10:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   87b20:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   87b30:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   87b40:	79d99db4 44ea7843                       ...yCx.D

00087b48 <__mprec_bigtens>:
   87b48:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   87b58:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   87b68:	7f73bf3c 75154fdd                       <.s..O.u

00087b70 <p05.5269>:
   87b70:	00000005 00000019 0000007d              ........}...

00087b7c <_init>:
   87b7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87b7e:	bf00      	nop
   87b80:	bcf8      	pop	{r3, r4, r5, r6, r7}
   87b82:	bc08      	pop	{r3}
   87b84:	469e      	mov	lr, r3
   87b86:	4770      	bx	lr

00087b88 <__init_array_start>:
   87b88:	00083b59 	.word	0x00083b59

00087b8c <__frame_dummy_init_array_entry>:
   87b8c:	00080119                                ....

00087b90 <_fini>:
   87b90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87b92:	bf00      	nop
   87b94:	bcf8      	pop	{r3, r4, r5, r6, r7}
   87b96:	bc08      	pop	{r3}
   87b98:	469e      	mov	lr, r3
   87b9a:	4770      	bx	lr

00087b9c <__fini_array_start>:
   87b9c:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20070000:	f3bf 8f5f 	dmb	sy
20070004:	3801      	subs	r0, #1
20070006:	d1fb      	bne.n	20070000 <portable_delay_cycles>
20070008:	4770      	bx	lr
2007000a:	bf00      	nop

2007000c <SystemInit>:
__no_inline
RAMFUNC
void SystemInit(void)
{
	/* Set FWS according to SYS_BOARD_MCKR configuration */
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070010:	4a20      	ldr	r2, [pc, #128]	; (20070094 <SystemInit+0x88>)
20070012:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070018:	6013      	str	r3, [r2, #0]

	/* Initialize main oscillator */
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007001a:	4b1f      	ldr	r3, [pc, #124]	; (20070098 <SystemInit+0x8c>)
2007001c:	6a1b      	ldr	r3, [r3, #32]
2007001e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070022:	d107      	bne.n	20070034 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070024:	4a1d      	ldr	r2, [pc, #116]	; (2007009c <SystemInit+0x90>)
20070026:	4b1c      	ldr	r3, [pc, #112]	; (20070098 <SystemInit+0x8c>)
20070028:	621a      	str	r2, [r3, #32]
			                     CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007002a:	461a      	mov	r2, r3
2007002c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007002e:	f013 0f01 	tst.w	r3, #1
20070032:	d0fb      	beq.n	2007002c <SystemInit+0x20>
		}
	}

	/* Switch to 3-20MHz Xtal oscillator */
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070034:	4a1a      	ldr	r2, [pc, #104]	; (200700a0 <SystemInit+0x94>)
20070036:	4b18      	ldr	r3, [pc, #96]	; (20070098 <SystemInit+0x8c>)
20070038:	621a      	str	r2, [r3, #32]
	                           CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;

	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007003a:	461a      	mov	r2, r3
2007003c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007003e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070042:	d0fb      	beq.n	2007003c <SystemInit+0x30>
	}
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070044:	4b14      	ldr	r3, [pc, #80]	; (20070098 <SystemInit+0x8c>)
20070046:	6b1a      	ldr	r2, [r3, #48]	; 0x30
20070048:	f022 0203 	bic.w	r2, r2, #3
2007004c:	f042 0201 	orr.w	r2, r2, #1
20070050:	631a      	str	r2, [r3, #48]	; 0x30
		                     PMC_MCKR_CSS_MAIN_CLK;
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070052:	461a      	mov	r2, r3
20070054:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070056:	f013 0f08 	tst.w	r3, #8
2007005a:	d0fb      	beq.n	20070054 <SystemInit+0x48>
	}

	/* Initialize PLLA */
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007005c:	4a11      	ldr	r2, [pc, #68]	; (200700a4 <SystemInit+0x98>)
2007005e:	4b0e      	ldr	r3, [pc, #56]	; (20070098 <SystemInit+0x8c>)
20070060:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070062:	461a      	mov	r2, r3
20070064:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070066:	f013 0f02 	tst.w	r3, #2
2007006a:	d0fb      	beq.n	20070064 <SystemInit+0x58>
	}

	/* Switch to main clock */
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007006c:	2211      	movs	r2, #17
2007006e:	4b0a      	ldr	r3, [pc, #40]	; (20070098 <SystemInit+0x8c>)
20070070:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070072:	461a      	mov	r2, r3
20070074:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070076:	f013 0f08 	tst.w	r3, #8
2007007a:	d0fb      	beq.n	20070074 <SystemInit+0x68>
	}

	/* Switch to PLLA */
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007007c:	2212      	movs	r2, #18
2007007e:	4b06      	ldr	r3, [pc, #24]	; (20070098 <SystemInit+0x8c>)
20070080:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070082:	461a      	mov	r2, r3
20070084:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070086:	f013 0f08 	tst.w	r3, #8
2007008a:	d0fb      	beq.n	20070084 <SystemInit+0x78>
	}

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007008c:	4a06      	ldr	r2, [pc, #24]	; (200700a8 <SystemInit+0x9c>)
2007008e:	4b07      	ldr	r3, [pc, #28]	; (200700ac <SystemInit+0xa0>)
20070090:	601a      	str	r2, [r3, #0]
20070092:	4770      	bx	lr
20070094:	400e0a00 	.word	0x400e0a00
20070098:	400e0600 	.word	0x400e0600
2007009c:	00370809 	.word	0x00370809
200700a0:	01370809 	.word	0x01370809
200700a4:	200d3f01 	.word	0x200d3f01
200700a8:	0501bd00 	.word	0x0501bd00
200700ac:	20070190 	.word	0x20070190

200700b0 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700b0:	4b1b      	ldr	r3, [pc, #108]	; (20070120 <system_init_flash+0x70>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d806      	bhi.n	200700c4 <system_init_flash+0x14>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700b6:	2300      	movs	r3, #0
200700b8:	4a1a      	ldr	r2, [pc, #104]	; (20070124 <system_init_flash+0x74>)
200700ba:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700bc:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700c0:	6013      	str	r3, [r2, #0]
200700c2:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700c4:	4b18      	ldr	r3, [pc, #96]	; (20070128 <system_init_flash+0x78>)
200700c6:	4298      	cmp	r0, r3
200700c8:	d807      	bhi.n	200700da <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700ca:	f44f 7380 	mov.w	r3, #256	; 0x100
200700ce:	4a15      	ldr	r2, [pc, #84]	; (20070124 <system_init_flash+0x74>)
200700d0:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700d2:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700d6:	6013      	str	r3, [r2, #0]
200700d8:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700da:	4b14      	ldr	r3, [pc, #80]	; (2007012c <system_init_flash+0x7c>)
200700dc:	4298      	cmp	r0, r3
200700de:	d807      	bhi.n	200700f0 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
200700e0:	f44f 7300 	mov.w	r3, #512	; 0x200
200700e4:	4a0f      	ldr	r2, [pc, #60]	; (20070124 <system_init_flash+0x74>)
200700e6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
200700e8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ec:	6013      	str	r3, [r2, #0]
200700ee:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700f0:	4b0f      	ldr	r3, [pc, #60]	; (20070130 <system_init_flash+0x80>)
200700f2:	4298      	cmp	r0, r3
200700f4:	d807      	bhi.n	20070106 <system_init_flash+0x56>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
200700f6:	f44f 7340 	mov.w	r3, #768	; 0x300
200700fa:	4a0a      	ldr	r2, [pc, #40]	; (20070124 <system_init_flash+0x74>)
200700fc:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
200700fe:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070102:	6013      	str	r3, [r2, #0]
20070104:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
20070106:	4b0b      	ldr	r3, [pc, #44]	; (20070134 <system_init_flash+0x84>)
20070108:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007010a:	bf94      	ite	ls
2007010c:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
20070110:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
20070114:	4a03      	ldr	r2, [pc, #12]	; (20070124 <system_init_flash+0x74>)
20070116:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
20070118:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007011c:	6013      	str	r3, [r2, #0]
2007011e:	4770      	bx	lr
20070120:	0121eabf 	.word	0x0121eabf
20070124:	400e0a00 	.word	0x400e0a00
20070128:	02faf07f 	.word	0x02faf07f
2007012c:	03d08fff 	.word	0x03d08fff
20070130:	04c4b3ff 	.word	0x04c4b3ff
20070134:	055d4a7f 	.word	0x055d4a7f

20070138 <xNextTaskUnblockTime>:
20070138:	0000ffff                                ....

2007013c <packet_received_pab>:
	...
20070144:	20070be4 00000003 00000002              ... ........

20070150 <packet_received_nav>:
	...
20070158:	20070be8 00000003 00000003              ... ........

20070164 <packet_pab>:
	...
2007016c:	20070bdc 00000003 00000002              ... ........

20070178 <packet_nav>:
	...
20070180:	20070be0 00000003 00000003              ... ........

2007018c <g_interrupt_enabled>:
2007018c:	00000001                                ....

20070190 <SystemCoreClock>:
20070190:	003d0900 00000000                       ..=.....

20070198 <impure_data>:
20070198:	00000000 20070484 200704ec 20070554     ....... ... T.. 
	...
200701cc:	000879dc 00000000 00000000 00000000     .y..............
	...
20070240:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20070250:	0005deec 0000000b 00000000 00000000     ................
	...

200705c0 <_impure_ptr>:
200705c0:	20070198                                ... 

200705c4 <lconv>:
200705c4:	00087a7c 00087908 00087908 00087908     |z...y...y...y..
200705d4:	00087908 00087908 00087908 00087908     .y...y...y...y..
200705e4:	00087908 00087908 ffffffff ffffffff     .y...y..........
200705f4:	ffffffff 0000ffff                       ........

200705fc <lc_ctype_charset>:
200705fc:	49435341 00000049 00000000 00000000     ASCII...........
	...

2007061c <__mb_cur_max>:
2007061c:	00000001                                ....

20070620 <__malloc_av_>:
	...
20070628:	20070620 20070620 20070628 20070628      ..  .. (.. (.. 
20070638:	20070630 20070630 20070638 20070638     0.. 0.. 8.. 8.. 
20070648:	20070640 20070640 20070648 20070648     @.. @.. H.. H.. 
20070658:	20070650 20070650 20070658 20070658     P.. P.. X.. X.. 
20070668:	20070660 20070660 20070668 20070668     `.. `.. h.. h.. 
20070678:	20070670 20070670 20070678 20070678     p.. p.. x.. x.. 
20070688:	20070680 20070680 20070688 20070688     ... ... ... ... 
20070698:	20070690 20070690 20070698 20070698     ... ... ... ... 
200706a8:	200706a0 200706a0 200706a8 200706a8     ... ... ... ... 
200706b8:	200706b0 200706b0 200706b8 200706b8     ... ... ... ... 
200706c8:	200706c0 200706c0 200706c8 200706c8     ... ... ... ... 
200706d8:	200706d0 200706d0 200706d8 200706d8     ... ... ... ... 
200706e8:	200706e0 200706e0 200706e8 200706e8     ... ... ... ... 
200706f8:	200706f0 200706f0 200706f8 200706f8     ... ... ... ... 
20070708:	20070700 20070700 20070708 20070708     ... ... ... ... 
20070718:	20070710 20070710 20070718 20070718     ... ... ... ... 
20070728:	20070720 20070720 20070728 20070728      ..  .. (.. (.. 
20070738:	20070730 20070730 20070738 20070738     0.. 0.. 8.. 8.. 
20070748:	20070740 20070740 20070748 20070748     @.. @.. H.. H.. 
20070758:	20070750 20070750 20070758 20070758     P.. P.. X.. X.. 
20070768:	20070760 20070760 20070768 20070768     `.. `.. h.. h.. 
20070778:	20070770 20070770 20070778 20070778     p.. p.. x.. x.. 
20070788:	20070780 20070780 20070788 20070788     ... ... ... ... 
20070798:	20070790 20070790 20070798 20070798     ... ... ... ... 
200707a8:	200707a0 200707a0 200707a8 200707a8     ... ... ... ... 
200707b8:	200707b0 200707b0 200707b8 200707b8     ... ... ... ... 
200707c8:	200707c0 200707c0 200707c8 200707c8     ... ... ... ... 
200707d8:	200707d0 200707d0 200707d8 200707d8     ... ... ... ... 
200707e8:	200707e0 200707e0 200707e8 200707e8     ... ... ... ... 
200707f8:	200707f0 200707f0 200707f8 200707f8     ... ... ... ... 
20070808:	20070800 20070800 20070808 20070808     ... ... ... ... 
20070818:	20070810 20070810 20070818 20070818     ... ... ... ... 
20070828:	20070820 20070820 20070828 20070828      ..  .. (.. (.. 
20070838:	20070830 20070830 20070838 20070838     0.. 0.. 8.. 8.. 
20070848:	20070840 20070840 20070848 20070848     @.. @.. H.. H.. 
20070858:	20070850 20070850 20070858 20070858     P.. P.. X.. X.. 
20070868:	20070860 20070860 20070868 20070868     `.. `.. h.. h.. 
20070878:	20070870 20070870 20070878 20070878     p.. p.. x.. x.. 
20070888:	20070880 20070880 20070888 20070888     ... ... ... ... 
20070898:	20070890 20070890 20070898 20070898     ... ... ... ... 
200708a8:	200708a0 200708a0 200708a8 200708a8     ... ... ... ... 
200708b8:	200708b0 200708b0 200708b8 200708b8     ... ... ... ... 
200708c8:	200708c0 200708c0 200708c8 200708c8     ... ... ... ... 
200708d8:	200708d0 200708d0 200708d8 200708d8     ... ... ... ... 
200708e8:	200708e0 200708e0 200708e8 200708e8     ... ... ... ... 
200708f8:	200708f0 200708f0 200708f8 200708f8     ... ... ... ... 
20070908:	20070900 20070900 20070908 20070908     ... ... ... ... 
20070918:	20070910 20070910 20070918 20070918     ... ... ... ... 
20070928:	20070920 20070920 20070928 20070928      ..  .. (.. (.. 
20070938:	20070930 20070930 20070938 20070938     0.. 0.. 8.. 8.. 
20070948:	20070940 20070940 20070948 20070948     @.. @.. H.. H.. 
20070958:	20070950 20070950 20070958 20070958     P.. P.. X.. X.. 
20070968:	20070960 20070960 20070968 20070968     `.. `.. h.. h.. 
20070978:	20070970 20070970 20070978 20070978     p.. p.. x.. x.. 
20070988:	20070980 20070980 20070988 20070988     ... ... ... ... 
20070998:	20070990 20070990 20070998 20070998     ... ... ... ... 
200709a8:	200709a0 200709a0 200709a8 200709a8     ... ... ... ... 
200709b8:	200709b0 200709b0 200709b8 200709b8     ... ... ... ... 
200709c8:	200709c0 200709c0 200709c8 200709c8     ... ... ... ... 
200709d8:	200709d0 200709d0 200709d8 200709d8     ... ... ... ... 
200709e8:	200709e0 200709e0 200709e8 200709e8     ... ... ... ... 
200709f8:	200709f0 200709f0 200709f8 200709f8     ... ... ... ... 
20070a08:	20070a00 20070a00 20070a08 20070a08     ... ... ... ... 
20070a18:	20070a10 20070a10 20070a18 20070a18     ... ... ... ... 

20070a28 <__malloc_trim_threshold>:
20070a28:	00020000                                ....

20070a2c <__malloc_sbrk_base>:
20070a2c:	ffffffff                                ....

20070a30 <__wctomb>:
20070a30:	000867b1                                .g..
