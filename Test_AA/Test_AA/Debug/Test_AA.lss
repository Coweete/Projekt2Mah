
Test_AA.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007c90  00080000  00080000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00087c90  00087c90  0000fc90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d4  20070000  00087c98  00010000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          0000018c  200709d4  0008866c  000109d4  2**2
                  ALLOC
  4 .stack        00002000  20070b60  000887f8  000109d4  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  000109d4  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  000109fd  2**0
                  CONTENTS, READONLY
  7 .debug_info   00015891  00000000  00000000  00010a58  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003926  00000000  00000000  000262e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00005c00  00000000  00000000  00029c0f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000c80  00000000  00000000  0002f80f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000dd8  00000000  00000000  0003048f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00019f6d  00000000  00000000  00031267  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00016043  00000000  00000000  0004b1d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00063f68  00000000  00000000  00061217  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000028c0  00000000  00000000  000c5180  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <_sfixed>:
   80000:	20072b60 	.word	0x20072b60
   80004:	00080eed 	.word	0x00080eed
   80008:	00080ee9 	.word	0x00080ee9
   8000c:	00080ee9 	.word	0x00080ee9
   80010:	00080ee9 	.word	0x00080ee9
   80014:	00080ee9 	.word	0x00080ee9
   80018:	00080ee9 	.word	0x00080ee9
	...
   8002c:	00080ee9 	.word	0x00080ee9
   80030:	00080ee9 	.word	0x00080ee9
   80034:	00000000 	.word	0x00000000
   80038:	00080ee9 	.word	0x00080ee9
   8003c:	00080ee9 	.word	0x00080ee9
   80040:	00080ee9 	.word	0x00080ee9
   80044:	00080ee9 	.word	0x00080ee9
   80048:	00080ee9 	.word	0x00080ee9
   8004c:	00080ee9 	.word	0x00080ee9
   80050:	00080ee9 	.word	0x00080ee9
   80054:	00080ee9 	.word	0x00080ee9
   80058:	00080ee9 	.word	0x00080ee9
   8005c:	00080ee9 	.word	0x00080ee9
   80060:	00080ee9 	.word	0x00080ee9
   80064:	00080ee9 	.word	0x00080ee9
   80068:	00000000 	.word	0x00000000
   8006c:	00080d59 	.word	0x00080d59
   80070:	00080d6d 	.word	0x00080d6d
   80074:	00080d81 	.word	0x00080d81
   80078:	00080d95 	.word	0x00080d95
	...
   80084:	00080459 	.word	0x00080459
   80088:	00080ee9 	.word	0x00080ee9
   8008c:	00080ee9 	.word	0x00080ee9
   80090:	00080ee9 	.word	0x00080ee9
   80094:	00080ee9 	.word	0x00080ee9
   80098:	00080ee9 	.word	0x00080ee9
   8009c:	00080ee9 	.word	0x00080ee9
   800a0:	00080ee9 	.word	0x00080ee9
   800a4:	00000000 	.word	0x00000000
   800a8:	00080ee9 	.word	0x00080ee9
   800ac:	00080ee9 	.word	0x00080ee9
   800b0:	00080ee9 	.word	0x00080ee9
   800b4:	00080ee9 	.word	0x00080ee9
   800b8:	00080ee9 	.word	0x00080ee9
   800bc:	00080ee9 	.word	0x00080ee9
   800c0:	00080ee9 	.word	0x00080ee9
   800c4:	00080ee9 	.word	0x00080ee9
   800c8:	00080ee9 	.word	0x00080ee9
   800cc:	00080ee9 	.word	0x00080ee9
   800d0:	00080ee9 	.word	0x00080ee9
   800d4:	00080ee9 	.word	0x00080ee9
   800d8:	00080ee9 	.word	0x00080ee9
   800dc:	00080ee9 	.word	0x00080ee9
   800e0:	00080ee9 	.word	0x00080ee9
   800e4:	00080ee9 	.word	0x00080ee9
   800e8:	00080ee9 	.word	0x00080ee9
   800ec:	00080ee9 	.word	0x00080ee9
   800f0:	00080ee9 	.word	0x00080ee9

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	200709d4 	.word	0x200709d4
   80110:	00000000 	.word	0x00000000
   80114:	00087c98 	.word	0x00087c98

00080118 <frame_dummy>:
   80118:	b508      	push	{r3, lr}
   8011a:	4b06      	ldr	r3, [pc, #24]	; (80134 <frame_dummy+0x1c>)
   8011c:	b11b      	cbz	r3, 80126 <frame_dummy+0xe>
   8011e:	4806      	ldr	r0, [pc, #24]	; (80138 <frame_dummy+0x20>)
   80120:	4906      	ldr	r1, [pc, #24]	; (8013c <frame_dummy+0x24>)
   80122:	f3af 8000 	nop.w
   80126:	4806      	ldr	r0, [pc, #24]	; (80140 <frame_dummy+0x28>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b113      	cbz	r3, 80132 <frame_dummy+0x1a>
   8012c:	4b05      	ldr	r3, [pc, #20]	; (80144 <frame_dummy+0x2c>)
   8012e:	b103      	cbz	r3, 80132 <frame_dummy+0x1a>
   80130:	4798      	blx	r3
   80132:	bd08      	pop	{r3, pc}
   80134:	00000000 	.word	0x00000000
   80138:	00087c98 	.word	0x00087c98
   8013c:	200709d8 	.word	0x200709d8
   80140:	00087c98 	.word	0x00087c98
   80144:	00000000 	.word	0x00000000

00080148 <twi_set_speed>:
uint32_t twi_set_speed(Twi *p_twi, uint32_t ul_speed, uint32_t ul_mck)
{
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
   80148:	4b0f      	ldr	r3, [pc, #60]	; (80188 <twi_set_speed+0x40>)
   8014a:	4299      	cmp	r1, r3
   8014c:	d819      	bhi.n	80182 <twi_set_speed+0x3a>
		return FAIL;
	}

	c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
   8014e:	0049      	lsls	r1, r1, #1
   80150:	fbb2 f2f1 	udiv	r2, r2, r1
   80154:	3a04      	subs	r2, #4

	/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
	while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
   80156:	2aff      	cmp	r2, #255	; 0xff
   80158:	d907      	bls.n	8016a <twi_set_speed+0x22>
 * \retval PASS New speed setting is accepted.
 * \retval FAIL New speed setting is rejected.
 */
uint32_t twi_set_speed(Twi *p_twi, uint32_t ul_speed, uint32_t ul_mck)
{
	uint32_t ckdiv = 0;
   8015a:	2300      	movs	r3, #0
	c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;

	/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
	while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
		/* Increase clock divider */
		ckdiv++;
   8015c:	3301      	adds	r3, #1
		/* Divide cldiv value */
		c_lh_div /= TWI_CLK_DIVIDER;
   8015e:	0852      	lsrs	r2, r2, #1
	}

	c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;

	/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
	while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
   80160:	2aff      	cmp	r2, #255	; 0xff
   80162:	d903      	bls.n	8016c <twi_set_speed+0x24>
   80164:	2b07      	cmp	r3, #7
   80166:	d1f9      	bne.n	8015c <twi_set_speed+0x14>
   80168:	e000      	b.n	8016c <twi_set_speed+0x24>
 * \retval PASS New speed setting is accepted.
 * \retval FAIL New speed setting is rejected.
 */
uint32_t twi_set_speed(Twi *p_twi, uint32_t ul_speed, uint32_t ul_mck)
{
	uint32_t ckdiv = 0;
   8016a:	2300      	movs	r3, #0
		c_lh_div /= TWI_CLK_DIVIDER;
	}

	/* set clock waveform generator register */
	p_twi->TWI_CWGR =
			TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
   8016c:	0211      	lsls	r1, r2, #8
   8016e:	b289      	uxth	r1, r1
			TWI_CWGR_CKDIV(ckdiv);
   80170:	041b      	lsls	r3, r3, #16
   80172:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
		c_lh_div /= TWI_CLK_DIVIDER;
	}

	/* set clock waveform generator register */
	p_twi->TWI_CWGR =
			TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
   80176:	430b      	orrs	r3, r1
   80178:	b2d2      	uxtb	r2, r2
   8017a:	431a      	orrs	r2, r3
		/* Divide cldiv value */
		c_lh_div /= TWI_CLK_DIVIDER;
	}

	/* set clock waveform generator register */
	p_twi->TWI_CWGR =
   8017c:	6102      	str	r2, [r0, #16]
			TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
			TWI_CWGR_CKDIV(ckdiv);

	return PASS;
   8017e:	2000      	movs	r0, #0
   80180:	4770      	bx	lr
{
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
		return FAIL;
   80182:	2001      	movs	r0, #1
	p_twi->TWI_CWGR =
			TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
			TWI_CWGR_CKDIV(ckdiv);

	return PASS;
}
   80184:	4770      	bx	lr
   80186:	bf00      	nop
   80188:	00061a80 	.word	0x00061a80

0008018c <twi_master_init>:
 * \param p_opt Options for initializing the TWI module (see \ref twi_options_t).
 *
 * \return TWI_SUCCESS if initialization is complete, error code otherwise.
 */
uint32_t twi_master_init(Twi *p_twi, const twi_options_t *p_opt)
{
   8018c:	b538      	push	{r3, r4, r5, lr}
   8018e:	4604      	mov	r4, r0
   80190:	460d      	mov	r5, r1
	uint32_t status = TWI_SUCCESS;

	/* Disable TWI interrupts */
	p_twi->TWI_IDR = ~0UL;
   80192:	f04f 33ff 	mov.w	r3, #4294967295
   80196:	6283      	str	r3, [r0, #40]	; 0x28

	/* Dummy read in status register */
	p_twi->TWI_SR;
   80198:	6a03      	ldr	r3, [r0, #32]
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
   8019a:	2380      	movs	r3, #128	; 0x80
   8019c:	6003      	str	r3, [r0, #0]
	p_twi->TWI_RHR;
   8019e:	6b03      	ldr	r3, [r0, #48]	; 0x30
 * \param p_twi Pointer to a TWI instance.
 */
void twi_enable_master_mode(Twi *p_twi)
{
	/* Set Master Disable bit and Slave Disable bit */
	p_twi->TWI_CR = TWI_CR_MSDIS;
   801a0:	2308      	movs	r3, #8
   801a2:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
   801a4:	2320      	movs	r3, #32
   801a6:	6003      	str	r3, [r0, #0]

	/* Set Master Enable bit */
	p_twi->TWI_CR = TWI_CR_MSEN;
   801a8:	2304      	movs	r3, #4
   801aa:	6003      	str	r3, [r0, #0]
	twi_reset(p_twi);

	twi_enable_master_mode(p_twi);

	/* Select the speed */
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
   801ac:	6849      	ldr	r1, [r1, #4]
   801ae:	682a      	ldr	r2, [r5, #0]
   801b0:	4b05      	ldr	r3, [pc, #20]	; (801c8 <twi_master_init+0x3c>)
   801b2:	4798      	blx	r3
   801b4:	2801      	cmp	r0, #1
   801b6:	bf14      	ite	ne
   801b8:	2000      	movne	r0, #0
   801ba:	2001      	moveq	r0, #1
		/* The desired speed setting is rejected */
		status = TWI_INVALID_ARGUMENT;
	}

	if (p_opt->smbus == 1) {
   801bc:	7a6b      	ldrb	r3, [r5, #9]
   801be:	2b01      	cmp	r3, #1
		p_twi->TWI_CR = TWI_CR_QUICK;
   801c0:	bf04      	itt	eq
   801c2:	2340      	moveq	r3, #64	; 0x40
   801c4:	6023      	streq	r3, [r4, #0]
	}

	return status;
}
   801c6:	bd38      	pop	{r3, r4, r5, pc}
   801c8:	00080149 	.word	0x00080149

000801cc <init_sensor>:
#define EchoPin PIO_PC23_IDX
//DigitalPin 8
#define TriggerPin PIO_PC22_IDX


void init_sensor(){
   801cc:	b510      	push	{r4, lr}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   801ce:	200b      	movs	r0, #11
   801d0:	4c09      	ldr	r4, [pc, #36]	; (801f8 <init_sensor+0x2c>)
   801d2:	47a0      	blx	r4
   801d4:	200c      	movs	r0, #12
   801d6:	47a0      	blx	r4
   801d8:	200d      	movs	r0, #13
   801da:	47a0      	blx	r4
   801dc:	200e      	movs	r0, #14
   801de:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   801e0:	4b06      	ldr	r3, [pc, #24]	; (801fc <init_sensor+0x30>)
   801e2:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
   801e6:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   801e8:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   801ec:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
   801f0:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   801f2:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
   801f6:	bd10      	pop	{r4, pc}
   801f8:	00080e91 	.word	0x00080e91
   801fc:	400e1200 	.word	0x400e1200

00080200 <init_twi_functions>:
	.chip			= TWI_SLAVE_NAVIGERING,
	.buffer			= (void*) data_received_nav,
	.length			= TWI_DATA_RECIEVE_LENGTH
};

void init_twi_functions(){
   80200:	b500      	push	{lr}
   80202:	b085      	sub	sp, #20
	twi_master_options_t opt;
	opt.speed = TWI_SPEED;
   80204:	4b08      	ldr	r3, [pc, #32]	; (80228 <init_twi_functions+0x28>)
   80206:	9302      	str	r3, [sp, #8]
typedef twi_packet_t twi_package_t;

static inline uint32_t twi_master_setup(twi_master_t p_twi,
		twi_master_options_t *p_opt)
{
	p_opt->master_clk = sysclk_get_cpu_hz();
   80208:	4b08      	ldr	r3, [pc, #32]	; (8022c <init_twi_functions+0x2c>)
   8020a:	9301      	str	r3, [sp, #4]
	p_opt->smbus      = 0;
   8020c:	2300      	movs	r3, #0
   8020e:	f88d 300d 	strb.w	r3, [sp, #13]
   80212:	2016      	movs	r0, #22
   80214:	4b06      	ldr	r3, [pc, #24]	; (80230 <init_twi_functions+0x30>)
   80216:	4798      	blx	r3
#endif
	} else {
		// Do Nothing
	}

	return (twi_master_init(p_twi, p_opt));
   80218:	4806      	ldr	r0, [pc, #24]	; (80234 <init_twi_functions+0x34>)
   8021a:	a901      	add	r1, sp, #4
   8021c:	4b06      	ldr	r3, [pc, #24]	; (80238 <init_twi_functions+0x38>)
   8021e:	4798      	blx	r3
	if(twi_master_setup(TWI_MASTER,&opt) == TWI_SUCCESS){
		//pa_sendstatus(TWI_CMD_ARM_INIT,0);
	}
}
   80220:	b005      	add	sp, #20
   80222:	f85d fb04 	ldr.w	pc, [sp], #4
   80226:	bf00      	nop
   80228:	000186a0 	.word	0x000186a0
   8022c:	0501bd00 	.word	0x0501bd00
   80230:	00080e91 	.word	0x00080e91
   80234:	4008c000 	.word	0x4008c000
   80238:	0008018d 	.word	0x0008018d

0008023c <usart_serial_read_packet>:
 * \param len    Length of data
 *
 */
status_code_t usart_serial_read_packet(usart_if usart, uint8_t *data,
		size_t len)
{
   8023c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   80240:	b083      	sub	sp, #12
   80242:	4605      	mov	r5, r0
	while (len) {
   80244:	4690      	mov	r8, r2
   80246:	2a00      	cmp	r2, #0
   80248:	d047      	beq.n	802da <usart_serial_read_packet+0x9e>
   8024a:	1c4e      	adds	r6, r1, #1
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   8024c:	4f25      	ldr	r7, [pc, #148]	; (802e4 <usart_serial_read_packet+0xa8>)
		while (usart_read(p_usart, &val));
   8024e:	4c26      	ldr	r4, [pc, #152]	; (802e8 <usart_serial_read_packet+0xac>)
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   80250:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 802fc <usart_serial_read_packet+0xc0>
	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
   80254:	f8df b094 	ldr.w	fp, [pc, #148]	; 802ec <usart_serial_read_packet+0xb0>
   80258:	f106 39ff 	add.w	r9, r6, #4294967295
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
	uint32_t val = 0;
   8025c:	2300      	movs	r3, #0
   8025e:	9301      	str	r3, [sp, #4]

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   80260:	4b22      	ldr	r3, [pc, #136]	; (802ec <usart_serial_read_packet+0xb0>)
   80262:	429d      	cmp	r5, r3
   80264:	d106      	bne.n	80274 <usart_serial_read_packet+0x38>
		while (uart_read((Uart*)p_usart, data));
   80266:	4658      	mov	r0, fp
   80268:	4649      	mov	r1, r9
   8026a:	4b21      	ldr	r3, [pc, #132]	; (802f0 <usart_serial_read_packet+0xb4>)
   8026c:	4798      	blx	r3
   8026e:	2800      	cmp	r0, #0
   80270:	d1f9      	bne.n	80266 <usart_serial_read_packet+0x2a>
   80272:	e019      	b.n	802a8 <usart_serial_read_packet+0x6c>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   80274:	4b1f      	ldr	r3, [pc, #124]	; (802f4 <usart_serial_read_packet+0xb8>)
   80276:	429d      	cmp	r5, r3
   80278:	d109      	bne.n	8028e <usart_serial_read_packet+0x52>
		while (usart_read(p_usart, &val));
   8027a:	4699      	mov	r9, r3
   8027c:	4648      	mov	r0, r9
   8027e:	a901      	add	r1, sp, #4
   80280:	47a0      	blx	r4
   80282:	2800      	cmp	r0, #0
   80284:	d1fa      	bne.n	8027c <usart_serial_read_packet+0x40>
		*data = (uint8_t)(val & 0xFF);
   80286:	9b01      	ldr	r3, [sp, #4]
   80288:	f806 3c01 	strb.w	r3, [r6, #-1]
   8028c:	e017      	b.n	802be <usart_serial_read_packet+0x82>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   8028e:	4b1a      	ldr	r3, [pc, #104]	; (802f8 <usart_serial_read_packet+0xbc>)
   80290:	429d      	cmp	r5, r3
   80292:	d109      	bne.n	802a8 <usart_serial_read_packet+0x6c>
		while (usart_read(p_usart, &val));
   80294:	4699      	mov	r9, r3
   80296:	4648      	mov	r0, r9
   80298:	a901      	add	r1, sp, #4
   8029a:	47a0      	blx	r4
   8029c:	2800      	cmp	r0, #0
   8029e:	d1fa      	bne.n	80296 <usart_serial_read_packet+0x5a>
		*data = (uint8_t)(val & 0xFF);
   802a0:	9b01      	ldr	r3, [sp, #4]
   802a2:	f806 3c01 	strb.w	r3, [r6, #-1]
   802a6:	e014      	b.n	802d2 <usart_serial_read_packet+0x96>
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   802a8:	4555      	cmp	r5, sl
   802aa:	d108      	bne.n	802be <usart_serial_read_packet+0x82>
		while (usart_read(p_usart, &val));
   802ac:	4650      	mov	r0, sl
   802ae:	a901      	add	r1, sp, #4
   802b0:	47a0      	blx	r4
   802b2:	2800      	cmp	r0, #0
   802b4:	d1fa      	bne.n	802ac <usart_serial_read_packet+0x70>
		*data = (uint8_t)(val & 0xFF);
   802b6:	9b01      	ldr	r3, [sp, #4]
   802b8:	f806 3c01 	strb.w	r3, [r6, #-1]
   802bc:	e009      	b.n	802d2 <usart_serial_read_packet+0x96>
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   802be:	42bd      	cmp	r5, r7
   802c0:	d107      	bne.n	802d2 <usart_serial_read_packet+0x96>
		while (usart_read(p_usart, &val));
   802c2:	4638      	mov	r0, r7
   802c4:	a901      	add	r1, sp, #4
   802c6:	47a0      	blx	r4
   802c8:	2800      	cmp	r0, #0
   802ca:	d1fa      	bne.n	802c2 <usart_serial_read_packet+0x86>
		*data = (uint8_t)(val & 0xFF);
   802cc:	9b01      	ldr	r3, [sp, #4]
   802ce:	f806 3c01 	strb.w	r3, [r6, #-1]
   802d2:	3601      	adds	r6, #1
   802d4:	f1b8 0801 	subs.w	r8, r8, #1
   802d8:	d1be      	bne.n	80258 <usart_serial_read_packet+0x1c>
		usart_serial_getchar(usart, data);
		len--;
		data++;
	}
	return STATUS_OK;
}
   802da:	2000      	movs	r0, #0
   802dc:	b003      	add	sp, #12
   802de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   802e2:	bf00      	nop
   802e4:	400a4000 	.word	0x400a4000
   802e8:	00080441 	.word	0x00080441
   802ec:	400e0800 	.word	0x400e0800
   802f0:	00080419 	.word	0x00080419
   802f4:	40098000 	.word	0x40098000
   802f8:	4009c000 	.word	0x4009c000
   802fc:	400a0000 	.word	0x400a0000

00080300 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
   80300:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80304:	460c      	mov	r4, r1
   80306:	4690      	mov	r8, r2
	int nChars = 0;

	if (file != 0) {
   80308:	b960      	cbnz	r0, 80324 <_read+0x24>
		return -1;
	}

	for (; len > 0; --len) {
   8030a:	2a00      	cmp	r2, #0
   8030c:	dd0e      	ble.n	8032c <_read+0x2c>
   8030e:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
   80310:	4e09      	ldr	r6, [pc, #36]	; (80338 <_read+0x38>)
   80312:	4d0a      	ldr	r5, [pc, #40]	; (8033c <_read+0x3c>)
   80314:	6830      	ldr	r0, [r6, #0]
   80316:	4621      	mov	r1, r4
   80318:	682b      	ldr	r3, [r5, #0]
   8031a:	4798      	blx	r3
		ptr++;
   8031c:	3401      	adds	r4, #1

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
   8031e:	42bc      	cmp	r4, r7
   80320:	d1f8      	bne.n	80314 <_read+0x14>
   80322:	e006      	b.n	80332 <_read+0x32>
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
		return -1;
   80324:	f04f 30ff 	mov.w	r0, #4294967295
   80328:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}

	for (; len > 0; --len) {
   8032c:	2000      	movs	r0, #0
   8032e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
   80332:	4640      	mov	r0, r8
	}
	return nChars;
}
   80334:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80338:	20070b58 	.word	0x20070b58
   8033c:	20070b50 	.word	0x20070b50

00080340 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len);

int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
   80340:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80344:	460e      	mov	r6, r1
   80346:	4615      	mov	r5, r2
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
   80348:	3801      	subs	r0, #1
   8034a:	2802      	cmp	r0, #2
   8034c:	d80f      	bhi.n	8036e <_write+0x2e>
		return -1;
	}

	for (; len != 0; --len) {
   8034e:	b192      	cbz	r2, 80376 <_write+0x36>
   80350:	2400      	movs	r4, #0
		if (ptr_put(stdio_base, *ptr++) < 0) {
   80352:	f8df 803c 	ldr.w	r8, [pc, #60]	; 80390 <_write+0x50>
   80356:	4f0d      	ldr	r7, [pc, #52]	; (8038c <_write+0x4c>)
   80358:	f8d8 0000 	ldr.w	r0, [r8]
   8035c:	5d31      	ldrb	r1, [r6, r4]
   8035e:	683b      	ldr	r3, [r7, #0]
   80360:	4798      	blx	r3
   80362:	2800      	cmp	r0, #0
   80364:	db0a      	blt.n	8037c <_write+0x3c>
			return -1;
		}
		++nChars;
   80366:	3401      	adds	r4, #1

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
   80368:	42a5      	cmp	r5, r4
   8036a:	d1f5      	bne.n	80358 <_write+0x18>
   8036c:	e00a      	b.n	80384 <_write+0x44>
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
   8036e:	f04f 30ff 	mov.w	r0, #4294967295
   80372:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}

	for (; len != 0; --len) {
   80376:	2000      	movs	r0, #0
   80378:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
   8037c:	f04f 30ff 	mov.w	r0, #4294967295
   80380:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		}
		++nChars;
   80384:	4620      	mov	r0, r4
	}
	return nChars;
}
   80386:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8038a:	bf00      	nop
   8038c:	20070b54 	.word	0x20070b54
   80390:	20070b58 	.word	0x20070b58

00080394 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   80394:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80396:	0189      	lsls	r1, r1, #6
   80398:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   8039a:	2402      	movs	r4, #2
   8039c:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   8039e:	f04f 31ff 	mov.w	r1, #4294967295
   803a2:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   803a4:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   803a6:	605a      	str	r2, [r3, #4]
}
   803a8:	f85d 4b04 	ldr.w	r4, [sp], #4
   803ac:	4770      	bx	lr
   803ae:	bf00      	nop

000803b0 <tc_set_block_mode>:
		uint32_t ul_blockmode)
{
	/* Validate inputs. */
	Assert(p_tc);
	
	p_tc->TC_BMR = ul_blockmode;
   803b0:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
   803b4:	4770      	bx	lr
   803b6:	bf00      	nop

000803b8 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   803b8:	0189      	lsls	r1, r1, #6
   803ba:	2305      	movs	r3, #5
   803bc:	5043      	str	r3, [r0, r1]
   803be:	4770      	bx	lr

000803c0 <tc_stop>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKDIS;
   803c0:	0189      	lsls	r1, r1, #6
   803c2:	2302      	movs	r3, #2
   803c4:	5043      	str	r3, [r0, r1]
   803c6:	4770      	bx	lr

000803c8 <tc_read_cv>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	return p_tc->TC_CHANNEL[ul_channel].TC_CV;
   803c8:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   803cc:	6908      	ldr	r0, [r1, #16]
}
   803ce:	4770      	bx	lr

000803d0 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
   803d0:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
   803d2:	23ac      	movs	r3, #172	; 0xac
   803d4:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   803d6:	680a      	ldr	r2, [r1, #0]
   803d8:	684b      	ldr	r3, [r1, #4]
   803da:	fbb2 f3f3 	udiv	r3, r2, r3
   803de:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   803e0:	1e5c      	subs	r4, r3, #1
   803e2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
   803e6:	4294      	cmp	r4, r2
   803e8:	d80a      	bhi.n	80400 <uart_init+0x30>
		return 1;

	p_uart->UART_BRGR = cd;
   803ea:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
   803ec:	688b      	ldr	r3, [r1, #8]
   803ee:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   803f0:	f240 2302 	movw	r3, #514	; 0x202
   803f4:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   803f8:	2350      	movs	r3, #80	; 0x50
   803fa:	6003      	str	r3, [r0, #0]

	return 0;
   803fc:	2000      	movs	r0, #0
   803fe:	e000      	b.n	80402 <uart_init+0x32>

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
		return 1;
   80400:	2001      	movs	r0, #1

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;

	return 0;
}
   80402:	f85d 4b04 	ldr.w	r4, [sp], #4
   80406:	4770      	bx	lr

00080408 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
   80408:	6943      	ldr	r3, [r0, #20]
   8040a:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
   8040e:	bf1a      	itte	ne
   80410:	61c1      	strne	r1, [r0, #28]
	return 0;
   80412:	2000      	movne	r0, #0
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
		return 1;
   80414:	2001      	moveq	r0, #1

	/* Send character */
	p_uart->UART_THR = uc_data;
	return 0;
}
   80416:	4770      	bx	lr

00080418 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
   80418:	6943      	ldr	r3, [r0, #20]
   8041a:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
   8041e:	bf1d      	ittte	ne
   80420:	6983      	ldrne	r3, [r0, #24]
   80422:	700b      	strbne	r3, [r1, #0]
	return 0;
   80424:	2000      	movne	r0, #0
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
		return 1;
   80426:	2001      	moveq	r0, #1

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
	return 0;
}
   80428:	4770      	bx	lr
   8042a:	bf00      	nop

0008042c <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
   8042c:	6943      	ldr	r3, [r0, #20]
   8042e:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
   80432:	bf1d      	ittte	ne
   80434:	f3c1 0108 	ubfxne	r1, r1, #0, #9
   80438:	61c1      	strne	r1, [r0, #28]
	return 0;
   8043a:	2000      	movne	r0, #0
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
		return 1;
   8043c:	2001      	moveq	r0, #1
	}

	p_usart->US_THR = US_THR_TXCHR(c);
	return 0;
}
   8043e:	4770      	bx	lr

00080440 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
   80440:	6943      	ldr	r3, [r0, #20]
   80442:	f013 0f01 	tst.w	r3, #1
   80446:	d005      	beq.n	80454 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
   80448:	6983      	ldr	r3, [r0, #24]
   8044a:	f3c3 0308 	ubfx	r3, r3, #0, #9
   8044e:	600b      	str	r3, [r1, #0]

	return 0;
   80450:	2000      	movs	r0, #0
   80452:	4770      	bx	lr
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
		return 1;
   80454:	2001      	movs	r0, #1

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;

	return 0;
}
   80456:	4770      	bx	lr

00080458 <USART0_Handler>:
#if SAMD || SAMR21 || SAML21
void USART_HOST_ISR_VECT(uint8_t instance)
#else
USART_HOST_ISR_VECT()
#endif
{
   80458:	b500      	push	{lr}
   8045a:	b083      	sub	sp, #12
	uint8_t temp;
#if SAMD || SAMR21 || SAML21
	usart_serial_read_packet(&host_uart_module, &temp, 1);
#else
	usart_serial_read_packet(USART_HOST, &temp, 1);
   8045c:	4811      	ldr	r0, [pc, #68]	; (804a4 <USART0_Handler+0x4c>)
   8045e:	f10d 0107 	add.w	r1, sp, #7
   80462:	2201      	movs	r2, #1
   80464:	4b10      	ldr	r3, [pc, #64]	; (804a8 <USART0_Handler+0x50>)
   80466:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
   80468:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   8046a:	f3bf 8f5f 	dmb	sy
#endif

	/* Introducing critical section to avoid buffer corruption. */
	cpu_irq_disable();
   8046e:	2200      	movs	r2, #0
   80470:	4b0e      	ldr	r3, [pc, #56]	; (804ac <USART0_Handler+0x54>)
   80472:	701a      	strb	r2, [r3, #0]

	/* The number of data in the receive buffer is incremented and the
	 * buffer is updated. */

	serial_rx_buf[serial_rx_buf_tail] = temp;
   80474:	4b0e      	ldr	r3, [pc, #56]	; (804b0 <USART0_Handler+0x58>)
   80476:	781b      	ldrb	r3, [r3, #0]
   80478:	f89d 1007 	ldrb.w	r1, [sp, #7]
   8047c:	4a0d      	ldr	r2, [pc, #52]	; (804b4 <USART0_Handler+0x5c>)
   8047e:	54d1      	strb	r1, [r2, r3]

	if ((SERIAL_RX_BUF_SIZE_HOST - 1) == serial_rx_buf_tail) {
   80480:	2b9b      	cmp	r3, #155	; 0x9b
   80482:	d103      	bne.n	8048c <USART0_Handler+0x34>
		/* Reached the end of buffer, revert back to beginning of
		 * buffer. */
		serial_rx_buf_tail = 0x00;
   80484:	2200      	movs	r2, #0
   80486:	4b0a      	ldr	r3, [pc, #40]	; (804b0 <USART0_Handler+0x58>)
   80488:	701a      	strb	r2, [r3, #0]
   8048a:	e002      	b.n	80492 <USART0_Handler+0x3a>
	} else {
		serial_rx_buf_tail++;
   8048c:	3301      	adds	r3, #1
   8048e:	4a08      	ldr	r2, [pc, #32]	; (804b0 <USART0_Handler+0x58>)
   80490:	7013      	strb	r3, [r2, #0]
	}

	cpu_irq_enable();
   80492:	2201      	movs	r2, #1
   80494:	4b05      	ldr	r3, [pc, #20]	; (804ac <USART0_Handler+0x54>)
   80496:	701a      	strb	r2, [r3, #0]
   80498:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
   8049c:	b662      	cpsie	i
}
   8049e:	b003      	add	sp, #12
   804a0:	f85d fb04 	ldr.w	pc, [sp], #4
   804a4:	40098000 	.word	0x40098000
   804a8:	0008023d 	.word	0x0008023d
   804ac:	2007012c 	.word	0x2007012c
   804b0:	20070a8c 	.word	0x20070a8c
   804b4:	200709f0 	.word	0x200709f0

000804b8 <initDrive>:





void initDrive(void){
   804b8:	b470      	push	{r4, r5, r6}
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   804ba:	4b20      	ldr	r3, [pc, #128]	; (8053c <initDrive+0x84>)
   804bc:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
   804c0:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   804c2:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   804c6:	491e      	ldr	r1, [pc, #120]	; (80540 <initDrive+0x88>)
   804c8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
   804cc:	610b      	str	r3, [r1, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   804ce:	f8c1 30a0 	str.w	r3, [r1, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   804d2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   804d6:	614b      	str	r3, [r1, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   804d8:	f8c1 30a0 	str.w	r3, [r1, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   804dc:	4b19      	ldr	r3, [pc, #100]	; (80544 <initDrive+0x8c>)
   804de:	2402      	movs	r4, #2
   804e0:	615c      	str	r4, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   804e2:	f8c3 40a0 	str.w	r4, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   804e6:	2008      	movs	r0, #8
   804e8:	6158      	str	r0, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   804ea:	f8c3 00a0 	str.w	r0, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   804ee:	f44f 7200 	mov.w	r2, #512	; 0x200
   804f2:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   804f4:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   804f8:	f44f 6280 	mov.w	r2, #1024	; 0x400
   804fc:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   804fe:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80502:	4a11      	ldr	r2, [pc, #68]	; (80548 <initDrive+0x90>)
   80504:	2504      	movs	r5, #4
   80506:	6155      	str	r5, [r2, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80508:	f8c2 50a0 	str.w	r5, [r2, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   8050c:	2601      	movs	r6, #1
   8050e:	615e      	str	r6, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80510:	f8c3 60a0 	str.w	r6, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80514:	615d      	str	r5, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80516:	f8c3 50a0 	str.w	r5, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   8051a:	2540      	movs	r5, #64	; 0x40
   8051c:	615d      	str	r5, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8051e:	f8c3 50a0 	str.w	r5, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80522:	2380      	movs	r3, #128	; 0x80
   80524:	614b      	str	r3, [r1, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80526:	f8c1 30a0 	str.w	r3, [r1, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   8052a:	6154      	str	r4, [r2, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8052c:	f8c2 40a0 	str.w	r4, [r2, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80530:	6150      	str	r0, [r2, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80532:	f8c2 00a0 	str.w	r0, [r2, #160]	; 0xa0
	ioport_set_pin_dir(L1,IOPORT_DIR_INPUT);
	ioport_set_pin_dir(L2,IOPORT_DIR_INPUT);
	ioport_set_pin_dir(L3,IOPORT_DIR_INPUT);
	ioport_set_pin_dir(L4,IOPORT_DIR_INPUT);
	ioport_set_pin_dir(L5,IOPORT_DIR_INPUT);
}
   80536:	bc70      	pop	{r4, r5, r6}
   80538:	4770      	bx	lr
   8053a:	bf00      	nop
   8053c:	400e1000 	.word	0x400e1000
   80540:	400e0e00 	.word	0x400e0e00
   80544:	400e1400 	.word	0x400e1400
   80548:	400e1200 	.word	0x400e1200

0008054c <initRegulator>:
int speed=1650;
int r_speed=0;
int l_speed=0;


void initRegulator(void){
   8054c:	4770      	bx	lr
   8054e:	bf00      	nop

00080550 <delayInit>:

#include "asf.h"
#include "DelayFunctions.h"

void delayInit(void)		/* Initializes the timer used for delays */
{
   80550:	b510      	push	{r4, lr}
	pmc_enable_periph_clk(ID_TC0);
   80552:	201b      	movs	r0, #27
   80554:	4b08      	ldr	r3, [pc, #32]	; (80578 <delayInit+0x28>)
   80556:	4798      	blx	r3
	tc_init(TC0,0,0);		 /* TC0, channel 0, TCLK1 och capturemode */
   80558:	4c08      	ldr	r4, [pc, #32]	; (8057c <delayInit+0x2c>)
   8055a:	4620      	mov	r0, r4
   8055c:	2100      	movs	r1, #0
   8055e:	460a      	mov	r2, r1
   80560:	4b07      	ldr	r3, [pc, #28]	; (80580 <delayInit+0x30>)
   80562:	4798      	blx	r3
	tc_set_block_mode(TC0,0);
   80564:	4620      	mov	r0, r4
   80566:	2100      	movs	r1, #0
   80568:	4b06      	ldr	r3, [pc, #24]	; (80584 <delayInit+0x34>)
   8056a:	4798      	blx	r3
	tc_stop(TC0,0);			/* making sure the timer does not run  */
   8056c:	4620      	mov	r0, r4
   8056e:	2100      	movs	r1, #0
   80570:	4b05      	ldr	r3, [pc, #20]	; (80588 <delayInit+0x38>)
   80572:	4798      	blx	r3
   80574:	bd10      	pop	{r4, pc}
   80576:	bf00      	nop
   80578:	00080e91 	.word	0x00080e91
   8057c:	40080000 	.word	0x40080000
   80580:	00080395 	.word	0x00080395
   80584:	000803b1 	.word	0x000803b1
   80588:	000803c1 	.word	0x000803c1

0008058c <delayMicroseconds>:
}


void delayMicroseconds(uint32_t us)		/* A simple implementation for a delay in us (not calibrated) */
{
   8058c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8058e:	4604      	mov	r4, r0
	tc_start(TC0,0);
   80590:	4809      	ldr	r0, [pc, #36]	; (805b8 <delayMicroseconds+0x2c>)
   80592:	2100      	movs	r1, #0
   80594:	4b09      	ldr	r3, [pc, #36]	; (805bc <delayMicroseconds+0x30>)
   80596:	4798      	blx	r3
	while (tc_read_cv(TC0,0) < us*42); /* Only works in newere version of ASF */
   80598:	272a      	movs	r7, #42	; 0x2a
   8059a:	fb07 f704 	mul.w	r7, r7, r4
   8059e:	4e06      	ldr	r6, [pc, #24]	; (805b8 <delayMicroseconds+0x2c>)
   805a0:	2500      	movs	r5, #0
   805a2:	4c07      	ldr	r4, [pc, #28]	; (805c0 <delayMicroseconds+0x34>)
   805a4:	4630      	mov	r0, r6
   805a6:	4629      	mov	r1, r5
   805a8:	47a0      	blx	r4
   805aa:	42b8      	cmp	r0, r7
   805ac:	d3fa      	bcc.n	805a4 <delayMicroseconds+0x18>
	tc_stop(TC0,0);
   805ae:	4802      	ldr	r0, [pc, #8]	; (805b8 <delayMicroseconds+0x2c>)
   805b0:	2100      	movs	r1, #0
   805b2:	4b04      	ldr	r3, [pc, #16]	; (805c4 <delayMicroseconds+0x38>)
   805b4:	4798      	blx	r3
   805b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   805b8:	40080000 	.word	0x40080000
   805bc:	000803b9 	.word	0x000803b9
   805c0:	000803c9 	.word	0x000803c9
   805c4:	000803c1 	.word	0x000803c1

000805c8 <initMotor>:
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   805c8:	4b04      	ldr	r3, [pc, #16]	; (805dc <initMotor+0x14>)
   805ca:	2210      	movs	r2, #16
   805cc:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   805ce:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   805d2:	2220      	movs	r2, #32
   805d4:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   805d6:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
   805da:	4770      	bx	lr
   805dc:	400e1200 	.word	0x400e1200

000805e0 <pulseLeft>:
}




void pulseLeft(int p1){
   805e0:	b538      	push	{r3, r4, r5, lr}
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   805e2:	4c03      	ldr	r4, [pc, #12]	; (805f0 <pulseLeft+0x10>)
   805e4:	2510      	movs	r5, #16
   805e6:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LEFT,HIGH);
	delayMicroseconds(p1);
   805e8:	4b02      	ldr	r3, [pc, #8]	; (805f4 <pulseLeft+0x14>)
   805ea:	4798      	blx	r3
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   805ec:	6365      	str	r5, [r4, #52]	; 0x34
   805ee:	bd38      	pop	{r3, r4, r5, pc}
   805f0:	400e1200 	.word	0x400e1200
   805f4:	0008058d 	.word	0x0008058d

000805f8 <pulseRight>:
	ioport_set_pin_level(LEFT,LOW);
}
void pulseRight(int p2){
   805f8:	b538      	push	{r3, r4, r5, lr}
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   805fa:	4c03      	ldr	r4, [pc, #12]	; (80608 <pulseRight+0x10>)
   805fc:	2520      	movs	r5, #32
   805fe:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(RIGHT,HIGH);
	delayMicroseconds(p2);
   80600:	4b02      	ldr	r3, [pc, #8]	; (8060c <pulseRight+0x14>)
   80602:	4798      	blx	r3
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80604:	6365      	str	r5, [r4, #52]	; 0x34
   80606:	bd38      	pop	{r3, r4, r5, pc}
   80608:	400e1200 	.word	0x400e1200
   8060c:	0008058d 	.word	0x0008058d

00080610 <moveForward>:
	ioport_set_pin_level(RIGHT,LOW);
}

void moveForward(int l,int r){
   80610:	b510      	push	{r4, lr}
   80612:	460c      	mov	r4, r1
	pulseLeft(l);
   80614:	4b04      	ldr	r3, [pc, #16]	; (80628 <moveForward+0x18>)
   80616:	4798      	blx	r3
	pulseRight(r);
   80618:	4620      	mov	r0, r4
   8061a:	4b04      	ldr	r3, [pc, #16]	; (8062c <moveForward+0x1c>)
   8061c:	4798      	blx	r3
	delayMicroseconds(5250);
   8061e:	f241 4082 	movw	r0, #5250	; 0x1482
   80622:	4b03      	ldr	r3, [pc, #12]	; (80630 <moveForward+0x20>)
   80624:	4798      	blx	r3
   80626:	bd10      	pop	{r4, pc}
   80628:	000805e1 	.word	0x000805e1
   8062c:	000805f9 	.word	0x000805f9
   80630:	0008058d 	.word	0x0008058d

00080634 <initRotateMotor>:
uint16_t firstx = 0;
uint16_t firsty = 0;
uint16_t secondx = 0;
uint16_t secondy = 0;

void initRotateMotor(void){
   80634:	b470      	push	{r4, r5, r6}
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   80636:	4b20      	ldr	r3, [pc, #128]	; (806b8 <initRotateMotor+0x84>)
   80638:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
   8063c:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8063e:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   80642:	491e      	ldr	r1, [pc, #120]	; (806bc <initRotateMotor+0x88>)
   80644:	f44f 4380 	mov.w	r3, #16384	; 0x4000
   80648:	610b      	str	r3, [r1, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8064a:	f8c1 30a0 	str.w	r3, [r1, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   8064e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   80652:	614b      	str	r3, [r1, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80654:	f8c1 30a0 	str.w	r3, [r1, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80658:	4b19      	ldr	r3, [pc, #100]	; (806c0 <initRotateMotor+0x8c>)
   8065a:	2402      	movs	r4, #2
   8065c:	615c      	str	r4, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8065e:	f8c3 40a0 	str.w	r4, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80662:	2008      	movs	r0, #8
   80664:	6158      	str	r0, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80666:	f8c3 00a0 	str.w	r0, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   8066a:	f44f 7200 	mov.w	r2, #512	; 0x200
   8066e:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80670:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80674:	f44f 6280 	mov.w	r2, #1024	; 0x400
   80678:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8067a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   8067e:	4a11      	ldr	r2, [pc, #68]	; (806c4 <initRotateMotor+0x90>)
   80680:	2504      	movs	r5, #4
   80682:	6155      	str	r5, [r2, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80684:	f8c2 50a0 	str.w	r5, [r2, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80688:	2601      	movs	r6, #1
   8068a:	615e      	str	r6, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8068c:	f8c3 60a0 	str.w	r6, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80690:	615d      	str	r5, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80692:	f8c3 50a0 	str.w	r5, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80696:	2540      	movs	r5, #64	; 0x40
   80698:	615d      	str	r5, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8069a:	f8c3 50a0 	str.w	r5, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   8069e:	2380      	movs	r3, #128	; 0x80
   806a0:	614b      	str	r3, [r1, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   806a2:	f8c1 30a0 	str.w	r3, [r1, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   806a6:	6154      	str	r4, [r2, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   806a8:	f8c2 40a0 	str.w	r4, [r2, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   806ac:	6150      	str	r0, [r2, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   806ae:	f8c2 00a0 	str.w	r0, [r2, #160]	; 0xa0
    ioport_set_pin_dir(L4,IOPORT_DIR_INPUT);
    ioport_set_pin_dir(L5,IOPORT_DIR_INPUT);

	
    
}
   806b2:	bc70      	pop	{r4, r5, r6}
   806b4:	4770      	bx	lr
   806b6:	bf00      	nop
   806b8:	400e1000 	.word	0x400e1000
   806bc:	400e0e00 	.word	0x400e0e00
   806c0:	400e1400 	.word	0x400e1400
   806c4:	400e1200 	.word	0x400e1200

000806c8 <updateDirection>:
	char str[20];
	sprintf(str,"\nDirection: %d",direction);
	printf (str);
}

void updateDirection(int d){
   806c8:	b500      	push	{lr}
   806ca:	b087      	sub	sp, #28
   806cc:	4602      	mov	r2, r0
	direction = d;	
   806ce:	4b06      	ldr	r3, [pc, #24]	; (806e8 <updateDirection+0x20>)
   806d0:	6018      	str	r0, [r3, #0]
	//direction = (d + 360 - direction) % 360;
	char str[20];
	sprintf(str,"\nNew direction: %d",direction);
   806d2:	a801      	add	r0, sp, #4
   806d4:	4905      	ldr	r1, [pc, #20]	; (806ec <updateDirection+0x24>)
   806d6:	4b06      	ldr	r3, [pc, #24]	; (806f0 <updateDirection+0x28>)
   806d8:	4798      	blx	r3
	printf (str);
   806da:	a801      	add	r0, sp, #4
   806dc:	4b05      	ldr	r3, [pc, #20]	; (806f4 <updateDirection+0x2c>)
   806de:	4798      	blx	r3
}
   806e0:	b007      	add	sp, #28
   806e2:	f85d fb04 	ldr.w	pc, [sp], #4
   806e6:	bf00      	nop
   806e8:	20070a94 	.word	0x20070a94
   806ec:	00087998 	.word	0x00087998
   806f0:	00081ff9 	.word	0x00081ff9
   806f4:	00081e2d 	.word	0x00081e2d

000806f8 <rotate>:

	
    
}

void rotate(int d){					//Minimum d is 4
   806f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   806fc:	b086      	sub	sp, #24
   806fe:	4680      	mov	r8, r0
    //double ticks = d * 0.25;
	
	int reverse_angle = (direction + 180) % 360;
   80700:	4b8c      	ldr	r3, [pc, #560]	; (80934 <rotate+0x23c>)
   80702:	681a      	ldr	r2, [r3, #0]
   80704:	32b4      	adds	r2, #180	; 0xb4
   80706:	4c8c      	ldr	r4, [pc, #560]	; (80938 <rotate+0x240>)
   80708:	fb82 6704 	smull	r6, r7, r2, r4
   8070c:	19d1      	adds	r1, r2, r7
   8070e:	17d3      	asrs	r3, r2, #31
   80710:	ebc3 2321 	rsb	r3, r3, r1, asr #8
   80714:	f44f 71b4 	mov.w	r1, #360	; 0x168
   80718:	fb01 2313 	mls	r3, r1, r3, r2
	
	int direct_angle = ((abs(reverse_angle - 360) + d) % 360) - 180;
   8071c:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
   80720:	2b00      	cmp	r3, #0
   80722:	bfb8      	it	lt
   80724:	425b      	neglt	r3, r3
   80726:	4403      	add	r3, r0
   80728:	fb83 4504 	smull	r4, r5, r3, r4
   8072c:	195c      	adds	r4, r3, r5
   8072e:	17da      	asrs	r2, r3, #31
   80730:	ebc2 2424 	rsb	r4, r2, r4, asr #8
   80734:	fb01 3314 	mls	r3, r1, r4, r3
   80738:	f1a3 04b4 	sub.w	r4, r3, #180	; 0xb4
	
	char str[20];
	
	sprintf(str,"\nNew angle: %d", d);
   8073c:	a801      	add	r0, sp, #4
   8073e:	497f      	ldr	r1, [pc, #508]	; (8093c <rotate+0x244>)
   80740:	4642      	mov	r2, r8
   80742:	4e7f      	ldr	r6, [pc, #508]	; (80940 <rotate+0x248>)
   80744:	47b0      	blx	r6
	printf(str);
   80746:	a801      	add	r0, sp, #4
   80748:	4d7e      	ldr	r5, [pc, #504]	; (80944 <rotate+0x24c>)
   8074a:	47a8      	blx	r5
	
	sprintf(str,"\ndirect_angle = %d", direct_angle);
   8074c:	a801      	add	r0, sp, #4
   8074e:	497e      	ldr	r1, [pc, #504]	; (80948 <rotate+0x250>)
   80750:	4622      	mov	r2, r4
   80752:	47b0      	blx	r6
	printf(str);
   80754:	a801      	add	r0, sp, #4
   80756:	47a8      	blx	r5
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80758:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   8075c:	4b7b      	ldr	r3, [pc, #492]	; (8094c <rotate+0x254>)
   8075e:	635a      	str	r2, [r3, #52]	; 0x34
   80760:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
   80764:	f503 7300 	add.w	r3, r3, #512	; 0x200
   80768:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(L_RESET,LOW);
	ioport_set_pin_level(R_RESET,LOW);
	
	//Turn left
	
	if(direct_angle > 0){								
   8076a:	2c00      	cmp	r4, #0
   8076c:	dd63      	ble.n	80836 <rotate+0x13e>
		while(r_count < (abs(direct_angle) * 0.25)){
   8076e:	4b78      	ldr	r3, [pc, #480]	; (80950 <rotate+0x258>)
   80770:	681f      	ldr	r7, [r3, #0]
   80772:	4e78      	ldr	r6, [pc, #480]	; (80954 <rotate+0x25c>)
   80774:	ea84 70e4 	eor.w	r0, r4, r4, asr #31
   80778:	eba0 70e4 	sub.w	r0, r0, r4, asr #31
   8077c:	47b0      	blx	r6
   8077e:	2200      	movs	r2, #0
   80780:	4b75      	ldr	r3, [pc, #468]	; (80958 <rotate+0x260>)
   80782:	4c76      	ldr	r4, [pc, #472]	; (8095c <rotate+0x264>)
   80784:	47a0      	blx	r4
   80786:	4604      	mov	r4, r0
   80788:	460d      	mov	r5, r1
   8078a:	4638      	mov	r0, r7
   8078c:	47b0      	blx	r6
   8078e:	4622      	mov	r2, r4
   80790:	462b      	mov	r3, r5
   80792:	4e73      	ldr	r6, [pc, #460]	; (80960 <rotate+0x268>)
   80794:	47b0      	blx	r6
   80796:	2800      	cmp	r0, #0
   80798:	d036      	beq.n	80808 <rotate+0x110>
	base->PIO_CODR = mask & ~level;
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   8079a:	f8df a1b0 	ldr.w	sl, [pc, #432]	; 8094c <rotate+0x254>
   8079e:	4e71      	ldr	r6, [pc, #452]	; (80964 <rotate+0x26c>)
   807a0:	f8df 91e0 	ldr.w	r9, [pc, #480]	; 80984 <rotate+0x28c>
   807a4:	f8da c03c 	ldr.w	ip, [sl, #60]	; 0x3c
   807a8:	f8d6 e03c 	ldr.w	lr, [r6, #60]	; 0x3c
   807ac:	6bf0      	ldr	r0, [r6, #60]	; 0x3c
   807ae:	6bf1      	ldr	r1, [r6, #60]	; 0x3c
   807b0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
   807b2:	f8d9 303c 	ldr.w	r3, [r9, #60]	; 0x3c
			r_count = ioport_get_pin_level(R0)+ioport_get_pin_level(R1)*2+ioport_get_pin_level(R2)*4+ioport_get_pin_level(R3)*8
   807b6:	4f66      	ldr	r7, [pc, #408]	; (80950 <rotate+0x258>)
   807b8:	f3cc 3cc0 	ubfx	ip, ip, #15, #1
   807bc:	f3ce 0e40 	ubfx	lr, lr, #1, #1
   807c0:	eb0c 0e4e 	add.w	lr, ip, lr, lsl #1
   807c4:	f3c0 00c0 	ubfx	r0, r0, #3, #1
   807c8:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
   807cc:	f3c1 2140 	ubfx	r1, r1, #9, #1
   807d0:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
   807d4:	f3c2 2280 	ubfx	r2, r2, #10, #1
			+ioport_get_pin_level(R4)*16+ioport_get_pin_level(R5)*32;
   807d8:	eb01 1202 	add.w	r2, r1, r2, lsl #4
   807dc:	f3c3 0380 	ubfx	r3, r3, #2, #1
   807e0:	eb02 1343 	add.w	r3, r2, r3, lsl #5
	
	//Turn left
	
	if(direct_angle > 0){								
		while(r_count < (abs(direct_angle) * 0.25)){
			r_count = ioport_get_pin_level(R0)+ioport_get_pin_level(R1)*2+ioport_get_pin_level(R2)*4+ioport_get_pin_level(R3)*8
   807e4:	603b      	str	r3, [r7, #0]
			+ioport_get_pin_level(R4)*16+ioport_get_pin_level(R5)*32;
			//ioport_set_pin_level(R_RESET,HIGH);
			
			moveForward(1400,1600);
   807e6:	f44f 60af 	mov.w	r0, #1400	; 0x578
   807ea:	f44f 61c8 	mov.w	r1, #1600	; 0x640
   807ee:	4b5e      	ldr	r3, [pc, #376]	; (80968 <rotate+0x270>)
   807f0:	4798      	blx	r3
	ioport_set_pin_level(R_RESET,LOW);
	
	//Turn left
	
	if(direct_angle > 0){								
		while(r_count < (abs(direct_angle) * 0.25)){
   807f2:	683f      	ldr	r7, [r7, #0]
   807f4:	4638      	mov	r0, r7
   807f6:	4b57      	ldr	r3, [pc, #348]	; (80954 <rotate+0x25c>)
   807f8:	4798      	blx	r3
   807fa:	4622      	mov	r2, r4
   807fc:	462b      	mov	r3, r5
   807fe:	f8df c160 	ldr.w	ip, [pc, #352]	; 80960 <rotate+0x268>
   80802:	47e0      	blx	ip
   80804:	2800      	cmp	r0, #0
   80806:	d1cd      	bne.n	807a4 <rotate+0xac>
			moveForward(1400,1600);
			
		}
		
		int count_right = r_count * 4;
		sprintf(str,"\nr_count = %d", r_count);
   80808:	a801      	add	r0, sp, #4
   8080a:	4958      	ldr	r1, [pc, #352]	; (8096c <rotate+0x274>)
   8080c:	463a      	mov	r2, r7
   8080e:	4d4c      	ldr	r5, [pc, #304]	; (80940 <rotate+0x248>)
   80810:	47a8      	blx	r5
		printf(str);
   80812:	a801      	add	r0, sp, #4
   80814:	4c4b      	ldr	r4, [pc, #300]	; (80944 <rotate+0x24c>)
   80816:	47a0      	blx	r4
		sprintf(str,"\ncount_right = %d", count_right);
   80818:	a801      	add	r0, sp, #4
   8081a:	4955      	ldr	r1, [pc, #340]	; (80970 <rotate+0x278>)
   8081c:	00ba      	lsls	r2, r7, #2
   8081e:	47a8      	blx	r5
		printf(str);
   80820:	a801      	add	r0, sp, #4
   80822:	47a0      	blx	r4
		updateDirection(d);
   80824:	4640      	mov	r0, r8
   80826:	4b53      	ldr	r3, [pc, #332]	; (80974 <rotate+0x27c>)
   80828:	4798      	blx	r3
		//direction = (d + 360 - direction) % 360;
		moveForward(1500,1500);	
   8082a:	f240 50dc 	movw	r0, #1500	; 0x5dc
   8082e:	4601      	mov	r1, r0
   80830:	4b4d      	ldr	r3, [pc, #308]	; (80968 <rotate+0x270>)
   80832:	4798      	blx	r3
   80834:	e06c      	b.n	80910 <rotate+0x218>
	}
	
	//Turn right
	
	else if(direct_angle < 0){
   80836:	2c00      	cmp	r4, #0
   80838:	da65      	bge.n	80906 <rotate+0x20e>
		while(l_count < (abs(direct_angle) * 0.25)){			
   8083a:	4b4f      	ldr	r3, [pc, #316]	; (80978 <rotate+0x280>)
   8083c:	681f      	ldr	r7, [r3, #0]
   8083e:	4e45      	ldr	r6, [pc, #276]	; (80954 <rotate+0x25c>)
   80840:	ea84 70e4 	eor.w	r0, r4, r4, asr #31
   80844:	eba0 70e4 	sub.w	r0, r0, r4, asr #31
   80848:	47b0      	blx	r6
   8084a:	2200      	movs	r2, #0
   8084c:	4b42      	ldr	r3, [pc, #264]	; (80958 <rotate+0x260>)
   8084e:	4c43      	ldr	r4, [pc, #268]	; (8095c <rotate+0x264>)
   80850:	47a0      	blx	r4
   80852:	4604      	mov	r4, r0
   80854:	460d      	mov	r5, r1
   80856:	4638      	mov	r0, r7
   80858:	47b0      	blx	r6
   8085a:	4622      	mov	r2, r4
   8085c:	462b      	mov	r3, r5
   8085e:	4e40      	ldr	r6, [pc, #256]	; (80960 <rotate+0x268>)
   80860:	47b0      	blx	r6
   80862:	2800      	cmp	r0, #0
   80864:	d038      	beq.n	808d8 <rotate+0x1e0>
   80866:	4e3f      	ldr	r6, [pc, #252]	; (80964 <rotate+0x26c>)
   80868:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 8094c <rotate+0x254>
   8086c:	f8df 9114 	ldr.w	r9, [pc, #276]	; 80984 <rotate+0x28c>
   80870:	f8d6 c03c 	ldr.w	ip, [r6, #60]	; 0x3c
   80874:	f8d6 e03c 	ldr.w	lr, [r6, #60]	; 0x3c
   80878:	6bf0      	ldr	r0, [r6, #60]	; 0x3c
   8087a:	f8da 103c 	ldr.w	r1, [sl, #60]	; 0x3c
   8087e:	f8d9 203c 	ldr.w	r2, [r9, #60]	; 0x3c
   80882:	f8d9 303c 	ldr.w	r3, [r9, #60]	; 0x3c
			l_count = ioport_get_pin_level(L0)+ioport_get_pin_level(L1)*2+ioport_get_pin_level(L2)*4+ioport_get_pin_level(L3)*8
   80886:	4f3c      	ldr	r7, [pc, #240]	; (80978 <rotate+0x280>)
   80888:	f00c 0c01 	and.w	ip, ip, #1
   8088c:	f3ce 0e80 	ubfx	lr, lr, #2, #1
   80890:	eb0c 0e4e 	add.w	lr, ip, lr, lsl #1
   80894:	f3c0 1080 	ubfx	r0, r0, #6, #1
   80898:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
   8089c:	f3c1 11c0 	ubfx	r1, r1, #7, #1
   808a0:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
   808a4:	f3c2 0240 	ubfx	r2, r2, #1, #1
			+ioport_get_pin_level(L4)*16+ioport_get_pin_level(L5)*32;
   808a8:	eb01 1202 	add.w	r2, r1, r2, lsl #4
   808ac:	f3c3 03c0 	ubfx	r3, r3, #3, #1
   808b0:	eb02 1343 	add.w	r3, r2, r3, lsl #5
	
	//Turn right
	
	else if(direct_angle < 0){
		while(l_count < (abs(direct_angle) * 0.25)){			
			l_count = ioport_get_pin_level(L0)+ioport_get_pin_level(L1)*2+ioport_get_pin_level(L2)*4+ioport_get_pin_level(L3)*8
   808b4:	603b      	str	r3, [r7, #0]
			+ioport_get_pin_level(L4)*16+ioport_get_pin_level(L5)*32;
			//ioport_set_pin_level(L_RESET,HIGH);
			
			moveForward(1600,1400);
   808b6:	f44f 60c8 	mov.w	r0, #1600	; 0x640
   808ba:	f44f 61af 	mov.w	r1, #1400	; 0x578
   808be:	4b2a      	ldr	r3, [pc, #168]	; (80968 <rotate+0x270>)
   808c0:	4798      	blx	r3
	}
	
	//Turn right
	
	else if(direct_angle < 0){
		while(l_count < (abs(direct_angle) * 0.25)){			
   808c2:	683f      	ldr	r7, [r7, #0]
   808c4:	4638      	mov	r0, r7
   808c6:	4b23      	ldr	r3, [pc, #140]	; (80954 <rotate+0x25c>)
   808c8:	4798      	blx	r3
   808ca:	4622      	mov	r2, r4
   808cc:	462b      	mov	r3, r5
   808ce:	f8df c090 	ldr.w	ip, [pc, #144]	; 80960 <rotate+0x268>
   808d2:	47e0      	blx	ip
   808d4:	2800      	cmp	r0, #0
   808d6:	d1cb      	bne.n	80870 <rotate+0x178>
			moveForward(1600,1400);

		}
		
		int count_left = l_count * 4;
		sprintf(str,"\nl_count = %d", l_count);
   808d8:	a801      	add	r0, sp, #4
   808da:	4928      	ldr	r1, [pc, #160]	; (8097c <rotate+0x284>)
   808dc:	463a      	mov	r2, r7
   808de:	4d18      	ldr	r5, [pc, #96]	; (80940 <rotate+0x248>)
   808e0:	47a8      	blx	r5
		printf(str);
   808e2:	a801      	add	r0, sp, #4
   808e4:	4c17      	ldr	r4, [pc, #92]	; (80944 <rotate+0x24c>)
   808e6:	47a0      	blx	r4
		sprintf(str,"\ncount_left = %d", count_left);
   808e8:	a801      	add	r0, sp, #4
   808ea:	4925      	ldr	r1, [pc, #148]	; (80980 <rotate+0x288>)
   808ec:	00ba      	lsls	r2, r7, #2
   808ee:	47a8      	blx	r5
		printf(str);
   808f0:	a801      	add	r0, sp, #4
   808f2:	47a0      	blx	r4
		updateDirection(d);
   808f4:	4640      	mov	r0, r8
   808f6:	4b1f      	ldr	r3, [pc, #124]	; (80974 <rotate+0x27c>)
   808f8:	4798      	blx	r3
		//direction = (d + 360 - direction) % 360;
		moveForward(1500,1500);	
   808fa:	f240 50dc 	movw	r0, #1500	; 0x5dc
   808fe:	4601      	mov	r1, r0
   80900:	4b19      	ldr	r3, [pc, #100]	; (80968 <rotate+0x270>)
   80902:	4798      	blx	r3
   80904:	e004      	b.n	80910 <rotate+0x218>
	}
	
	else{
		moveForward(1500,1500);
   80906:	f240 50dc 	movw	r0, #1500	; 0x5dc
   8090a:	4601      	mov	r1, r0
   8090c:	4b16      	ldr	r3, [pc, #88]	; (80968 <rotate+0x270>)
   8090e:	4798      	blx	r3
	}
	
	l_count = 0;
   80910:	2300      	movs	r3, #0
   80912:	4a19      	ldr	r2, [pc, #100]	; (80978 <rotate+0x280>)
   80914:	6013      	str	r3, [r2, #0]
	r_count = 0;
   80916:	4a0e      	ldr	r2, [pc, #56]	; (80950 <rotate+0x258>)
   80918:	6013      	str	r3, [r2, #0]
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   8091a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   8091e:	4b0b      	ldr	r3, [pc, #44]	; (8094c <rotate+0x254>)
   80920:	631a      	str	r2, [r3, #48]	; 0x30
   80922:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
   80926:	f503 7300 	add.w	r3, r3, #512	; 0x200
   8092a:	631a      	str	r2, [r3, #48]	; 0x30
// 	sprintf(str,"\nVinkel: %d",d);
// 	printf (str);
// 	sprintf(str,"\nTicks: %f",ticks);
// 	printf (str);
	
}
   8092c:	b006      	add	sp, #24
   8092e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   80932:	bf00      	nop
   80934:	20070a94 	.word	0x20070a94
   80938:	b60b60b7 	.word	0xb60b60b7
   8093c:	000879ac 	.word	0x000879ac
   80940:	00081ff9 	.word	0x00081ff9
   80944:	00081e2d 	.word	0x00081e2d
   80948:	000879bc 	.word	0x000879bc
   8094c:	400e0e00 	.word	0x400e0e00
   80950:	20070a98 	.word	0x20070a98
   80954:	0008178d 	.word	0x0008178d
   80958:	3fd00000 	.word	0x3fd00000
   8095c:	00081859 	.word	0x00081859
   80960:	00081d3d 	.word	0x00081d3d
   80964:	400e1400 	.word	0x400e1400
   80968:	00080611 	.word	0x00080611
   8096c:	000879d0 	.word	0x000879d0
   80970:	000879e0 	.word	0x000879e0
   80974:	000806c9 	.word	0x000806c9
   80978:	20070a90 	.word	0x20070a90
   8097c:	000879f4 	.word	0x000879f4
   80980:	00087a04 	.word	0x00087a04
   80984:	400e1200 	.word	0x400e1200

00080988 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   80988:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   8098a:	480e      	ldr	r0, [pc, #56]	; (809c4 <sysclk_init+0x3c>)
   8098c:	4b0e      	ldr	r3, [pc, #56]	; (809c8 <sysclk_init+0x40>)
   8098e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   80990:	2000      	movs	r0, #0
   80992:	213e      	movs	r1, #62	; 0x3e
   80994:	4b0d      	ldr	r3, [pc, #52]	; (809cc <sysclk_init+0x44>)
   80996:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   80998:	4c0d      	ldr	r4, [pc, #52]	; (809d0 <sysclk_init+0x48>)
   8099a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   8099c:	2800      	cmp	r0, #0
   8099e:	d0fc      	beq.n	8099a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   809a0:	4b0c      	ldr	r3, [pc, #48]	; (809d4 <sysclk_init+0x4c>)
   809a2:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   809a4:	4a0c      	ldr	r2, [pc, #48]	; (809d8 <sysclk_init+0x50>)
   809a6:	4b0d      	ldr	r3, [pc, #52]	; (809dc <sysclk_init+0x54>)
   809a8:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   809aa:	4c0d      	ldr	r4, [pc, #52]	; (809e0 <sysclk_init+0x58>)
   809ac:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   809ae:	2800      	cmp	r0, #0
   809b0:	d0fc      	beq.n	809ac <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   809b2:	2010      	movs	r0, #16
   809b4:	4b0b      	ldr	r3, [pc, #44]	; (809e4 <sysclk_init+0x5c>)
   809b6:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   809b8:	4b0b      	ldr	r3, [pc, #44]	; (809e8 <sysclk_init+0x60>)
   809ba:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   809bc:	4801      	ldr	r0, [pc, #4]	; (809c4 <sysclk_init+0x3c>)
   809be:	4b02      	ldr	r3, [pc, #8]	; (809c8 <sysclk_init+0x40>)
   809c0:	4798      	blx	r3
   809c2:	bd10      	pop	{r4, pc}
   809c4:	0501bd00 	.word	0x0501bd00
   809c8:	200700a5 	.word	0x200700a5
   809cc:	00080e0d 	.word	0x00080e0d
   809d0:	00080e61 	.word	0x00080e61
   809d4:	00080e71 	.word	0x00080e71
   809d8:	200d3f01 	.word	0x200d3f01
   809dc:	400e0600 	.word	0x400e0600
   809e0:	00080e81 	.word	0x00080e81
   809e4:	00080da9 	.word	0x00080da9
   809e8:	00080f9d 	.word	0x00080f9d

000809ec <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   809ec:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   809ee:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   809f2:	4b18      	ldr	r3, [pc, #96]	; (80a54 <board_init+0x68>)
   809f4:	605a      	str	r2, [r3, #4]
   809f6:	200b      	movs	r0, #11
   809f8:	4c17      	ldr	r4, [pc, #92]	; (80a58 <board_init+0x6c>)
   809fa:	47a0      	blx	r4
   809fc:	200c      	movs	r0, #12
   809fe:	47a0      	blx	r4
   80a00:	200d      	movs	r0, #13
   80a02:	47a0      	blx	r4
   80a04:	200e      	movs	r0, #14
   80a06:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   80a08:	203b      	movs	r0, #59	; 0x3b
   80a0a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80a0e:	4c13      	ldr	r4, [pc, #76]	; (80a5c <board_init+0x70>)
   80a10:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   80a12:	2055      	movs	r0, #85	; 0x55
   80a14:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80a18:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   80a1a:	2056      	movs	r0, #86	; 0x56
   80a1c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80a20:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   80a22:	2068      	movs	r0, #104	; 0x68
   80a24:	490e      	ldr	r1, [pc, #56]	; (80a60 <board_init+0x74>)
   80a26:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   80a28:	205c      	movs	r0, #92	; 0x5c
   80a2a:	490e      	ldr	r1, [pc, #56]	; (80a64 <board_init+0x78>)
   80a2c:	47a0      	blx	r4
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
   80a2e:	480e      	ldr	r0, [pc, #56]	; (80a68 <board_init+0x7c>)
   80a30:	f44f 5340 	mov.w	r3, #12288	; 0x3000
   80a34:	6603      	str	r3, [r0, #96]	; 0x60
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
   80a36:	6543      	str	r3, [r0, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
   80a38:	6243      	str	r3, [r0, #36]	; 0x24
#else
		base->PIO_IFSCER = mask;
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
   80a3a:	f8c0 3080 	str.w	r3, [r0, #128]	; 0x80

#if !defined(IOPORT_MODE_MUX_BIT1)
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABSR |= mask;
	} else {
		base->PIO_ABSR &= ~mask;
   80a3e:	6f02      	ldr	r2, [r0, #112]	; 0x70
   80a40:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
   80a44:	6702      	str	r2, [r0, #112]	; 0x70
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   80a46:	6043      	str	r3, [r0, #4]

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	ioport_set_port_mode(IOPORT_PIOA, PIO_PA12A_RXD1 | PIO_PA13A_TXD1, IOPORT_MODE_MUX_A);
	ioport_disable_port(IOPORT_PIOA, PIO_PA12A_RXD1 | PIO_PA13A_TXD1);
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   80a48:	f44f 7140 	mov.w	r1, #768	; 0x300
   80a4c:	4a07      	ldr	r2, [pc, #28]	; (80a6c <board_init+0x80>)
   80a4e:	4b08      	ldr	r3, [pc, #32]	; (80a70 <board_init+0x84>)
   80a50:	4798      	blx	r3
   80a52:	bd10      	pop	{r4, pc}
   80a54:	400e1a50 	.word	0x400e1a50
   80a58:	00080e91 	.word	0x00080e91
   80a5c:	00080b51 	.word	0x00080b51
   80a60:	28000079 	.word	0x28000079
   80a64:	28000001 	.word	0x28000001
   80a68:	400e0e00 	.word	0x400e0e00
   80a6c:	08000001 	.word	0x08000001
   80a70:	00080c25 	.word	0x00080c25

00080a74 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   80a74:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   80a76:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   80a7a:	d016      	beq.n	80aaa <pio_set_peripheral+0x36>
   80a7c:	d804      	bhi.n	80a88 <pio_set_peripheral+0x14>
   80a7e:	b1c1      	cbz	r1, 80ab2 <pio_set_peripheral+0x3e>
   80a80:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   80a84:	d00a      	beq.n	80a9c <pio_set_peripheral+0x28>
   80a86:	e013      	b.n	80ab0 <pio_set_peripheral+0x3c>
   80a88:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   80a8c:	d011      	beq.n	80ab2 <pio_set_peripheral+0x3e>
   80a8e:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   80a92:	d00e      	beq.n	80ab2 <pio_set_peripheral+0x3e>
   80a94:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   80a98:	d10a      	bne.n	80ab0 <pio_set_peripheral+0x3c>
   80a9a:	4770      	bx	lr
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   80a9c:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   80a9e:	6f01      	ldr	r1, [r0, #112]	; 0x70
   80aa0:	400b      	ands	r3, r1
   80aa2:	ea23 0302 	bic.w	r3, r3, r2
   80aa6:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   80aa8:	e002      	b.n	80ab0 <pio_set_peripheral+0x3c>

	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABSR;
   80aaa:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   80aac:	4313      	orrs	r3, r2
   80aae:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   80ab0:	6042      	str	r2, [r0, #4]
   80ab2:	4770      	bx	lr

00080ab4 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80ab4:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80ab6:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   80aba:	bf14      	ite	ne
   80abc:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80abe:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   80ac0:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   80ac4:	bf14      	ite	ne
   80ac6:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
   80ac8:	6241      	streq	r1, [r0, #36]	; 0x24
			p_pio->PIO_IFSCER = ul_mask;
		}
	}
#elif (SAM3XA|| SAM3U)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
   80aca:	f012 0f02 	tst.w	r2, #2
   80ace:	d002      	beq.n	80ad6 <pio_set_input+0x22>
		p_pio->PIO_SCIFSR = ul_mask;
   80ad0:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   80ad4:	e004      	b.n	80ae0 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
   80ad6:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   80ada:	bf18      	it	ne
   80adc:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
   80ae0:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   80ae2:	6001      	str	r1, [r0, #0]
   80ae4:	4770      	bx	lr
   80ae6:	bf00      	nop

00080ae8 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
   80ae8:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80aea:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80aec:	9c01      	ldr	r4, [sp, #4]
   80aee:	b10c      	cbz	r4, 80af4 <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
   80af0:	6641      	str	r1, [r0, #100]	; 0x64
   80af2:	e000      	b.n	80af6 <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80af4:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
   80af6:	b10b      	cbz	r3, 80afc <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
   80af8:	6501      	str	r1, [r0, #80]	; 0x50
   80afa:	e000      	b.n	80afe <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
   80afc:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
   80afe:	b10a      	cbz	r2, 80b04 <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
   80b00:	6301      	str	r1, [r0, #48]	; 0x30
   80b02:	e000      	b.n	80b06 <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
   80b04:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
   80b06:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   80b08:	6001      	str	r1, [r0, #0]
}
   80b0a:	f85d 4b04 	ldr.w	r4, [sp], #4
   80b0e:	4770      	bx	lr

00080b10 <pio_configure_interrupt>:
 */
void pio_configure_interrupt(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_attr)
{
	/* Configure additional interrupt mode registers. */
	if (ul_attr & PIO_IT_AIME) {
   80b10:	f012 0f10 	tst.w	r2, #16
   80b14:	d010      	beq.n	80b38 <pio_configure_interrupt+0x28>
		/* Enable additional interrupt mode. */
		p_pio->PIO_AIMER = ul_mask;
   80b16:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0

		/* If bit field of the selected pin is 1, set as
		   Rising Edge/High level detection event. */
		if (ul_attr & PIO_IT_RE_OR_HL) {
   80b1a:	f012 0f20 	tst.w	r2, #32
			/* Rising Edge or High Level */
			p_pio->PIO_REHLSR = ul_mask;
   80b1e:	bf14      	ite	ne
   80b20:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
		} else {
			/* Falling Edge or Low Level */
			p_pio->PIO_FELLSR = ul_mask;
   80b24:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		}

		/* If bit field of the selected pin is 1, set as
		   edge detection source. */
		if (ul_attr & PIO_IT_EDGE) {
   80b28:	f012 0f40 	tst.w	r2, #64	; 0x40
			/* Edge select */
			p_pio->PIO_ESR = ul_mask;
   80b2c:	bf14      	ite	ne
   80b2e:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
		} else {
			/* Level select */
			p_pio->PIO_LSR = ul_mask;
   80b32:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
   80b36:	4770      	bx	lr
		}
	} else {
		/* Disable additional interrupt mode. */
		p_pio->PIO_AIMDR = ul_mask;
   80b38:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
   80b3c:	4770      	bx	lr
   80b3e:	bf00      	nop

00080b40 <pio_enable_interrupt>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_enable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_ISR;
   80b40:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
	p_pio->PIO_IER = ul_mask;
   80b42:	6401      	str	r1, [r0, #64]	; 0x40
   80b44:	4770      	bx	lr
   80b46:	bf00      	nop

00080b48 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   80b48:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   80b4a:	4770      	bx	lr

00080b4c <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   80b4c:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   80b4e:	4770      	bx	lr

00080b50 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   80b50:	b570      	push	{r4, r5, r6, lr}
   80b52:	b082      	sub	sp, #8
   80b54:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80b56:	0944      	lsrs	r4, r0, #5
   80b58:	f504 1400 	add.w	r4, r4, #2097152	; 0x200000
   80b5c:	f204 7407 	addw	r4, r4, #1799	; 0x707
   80b60:	0266      	lsls	r6, r4, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80b62:	f001 44f0 	and.w	r4, r1, #2013265920	; 0x78000000
   80b66:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80b6a:	d030      	beq.n	80bce <pio_configure_pin+0x7e>
   80b6c:	d806      	bhi.n	80b7c <pio_configure_pin+0x2c>
   80b6e:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80b72:	d00a      	beq.n	80b8a <pio_configure_pin+0x3a>
   80b74:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80b78:	d018      	beq.n	80bac <pio_configure_pin+0x5c>
   80b7a:	e049      	b.n	80c10 <pio_configure_pin+0xc0>
   80b7c:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80b80:	d030      	beq.n	80be4 <pio_configure_pin+0x94>
   80b82:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   80b86:	d02d      	beq.n	80be4 <pio_configure_pin+0x94>
   80b88:	e042      	b.n	80c10 <pio_configure_pin+0xc0>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   80b8a:	f000 001f 	and.w	r0, r0, #31
   80b8e:	2401      	movs	r4, #1
   80b90:	4084      	lsls	r4, r0
   80b92:	4630      	mov	r0, r6
   80b94:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80b98:	4622      	mov	r2, r4
   80b9a:	4b1f      	ldr	r3, [pc, #124]	; (80c18 <pio_configure_pin+0xc8>)
   80b9c:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80b9e:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80ba2:	bf14      	ite	ne
   80ba4:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80ba6:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80ba8:	2001      	movs	r0, #1
   80baa:	e032      	b.n	80c12 <pio_configure_pin+0xc2>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   80bac:	f000 001f 	and.w	r0, r0, #31
   80bb0:	2401      	movs	r4, #1
   80bb2:	4084      	lsls	r4, r0
   80bb4:	4630      	mov	r0, r6
   80bb6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80bba:	4622      	mov	r2, r4
   80bbc:	4b16      	ldr	r3, [pc, #88]	; (80c18 <pio_configure_pin+0xc8>)
   80bbe:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80bc0:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80bc4:	bf14      	ite	ne
   80bc6:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80bc8:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80bca:	2001      	movs	r0, #1
   80bcc:	e021      	b.n	80c12 <pio_configure_pin+0xc2>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   80bce:	f000 011f 	and.w	r1, r0, #31
   80bd2:	2401      	movs	r4, #1
   80bd4:	4630      	mov	r0, r6
   80bd6:	fa04 f101 	lsl.w	r1, r4, r1
   80bda:	462a      	mov	r2, r5
   80bdc:	4b0f      	ldr	r3, [pc, #60]	; (80c1c <pio_configure_pin+0xcc>)
   80bde:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80be0:	4620      	mov	r0, r4
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
   80be2:	e016      	b.n	80c12 <pio_configure_pin+0xc2>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80be4:	f000 011f 	and.w	r1, r0, #31
   80be8:	2401      	movs	r4, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80bea:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80bee:	ea05 0304 	and.w	r3, r5, r4
   80bf2:	9300      	str	r3, [sp, #0]
   80bf4:	4630      	mov	r0, r6
   80bf6:	fa04 f101 	lsl.w	r1, r4, r1
   80bfa:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80bfe:	bf14      	ite	ne
   80c00:	2200      	movne	r2, #0
   80c02:	2201      	moveq	r2, #1
   80c04:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80c08:	4d05      	ldr	r5, [pc, #20]	; (80c20 <pio_configure_pin+0xd0>)
   80c0a:	47a8      	blx	r5

	default:
		return 0;
	}

	return 1;
   80c0c:	4620      	mov	r0, r4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80c0e:	e000      	b.n	80c12 <pio_configure_pin+0xc2>

	default:
		return 0;
   80c10:	2000      	movs	r0, #0
	}

	return 1;
}
   80c12:	b002      	add	sp, #8
   80c14:	bd70      	pop	{r4, r5, r6, pc}
   80c16:	bf00      	nop
   80c18:	00080a75 	.word	0x00080a75
   80c1c:	00080ab5 	.word	0x00080ab5
   80c20:	00080ae9 	.word	0x00080ae9

00080c24 <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
   80c24:	b5f0      	push	{r4, r5, r6, r7, lr}
   80c26:	b083      	sub	sp, #12
   80c28:	4607      	mov	r7, r0
   80c2a:	460e      	mov	r6, r1
   80c2c:	4615      	mov	r5, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80c2e:	f002 44f0 	and.w	r4, r2, #2013265920	; 0x78000000
   80c32:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80c36:	d026      	beq.n	80c86 <pio_configure_pin_group+0x62>
   80c38:	d806      	bhi.n	80c48 <pio_configure_pin_group+0x24>
   80c3a:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80c3e:	d00a      	beq.n	80c56 <pio_configure_pin_group+0x32>
   80c40:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80c44:	d013      	beq.n	80c6e <pio_configure_pin_group+0x4a>
   80c46:	e034      	b.n	80cb2 <pio_configure_pin_group+0x8e>
   80c48:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80c4c:	d01f      	beq.n	80c8e <pio_configure_pin_group+0x6a>
   80c4e:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   80c52:	d01c      	beq.n	80c8e <pio_configure_pin_group+0x6a>
   80c54:	e02d      	b.n	80cb2 <pio_configure_pin_group+0x8e>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   80c56:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80c5a:	4632      	mov	r2, r6
   80c5c:	4b16      	ldr	r3, [pc, #88]	; (80cb8 <pio_configure_pin_group+0x94>)
   80c5e:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80c60:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80c64:	bf14      	ite	ne
   80c66:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80c68:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80c6a:	2001      	movs	r0, #1
   80c6c:	e022      	b.n	80cb4 <pio_configure_pin_group+0x90>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   80c6e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80c72:	4632      	mov	r2, r6
   80c74:	4b10      	ldr	r3, [pc, #64]	; (80cb8 <pio_configure_pin_group+0x94>)
   80c76:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80c78:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80c7c:	bf14      	ite	ne
   80c7e:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80c80:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80c82:	2001      	movs	r0, #1
   80c84:	e016      	b.n	80cb4 <pio_configure_pin_group+0x90>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
   80c86:	4b0d      	ldr	r3, [pc, #52]	; (80cbc <pio_configure_pin_group+0x98>)
   80c88:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80c8a:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
   80c8c:	e012      	b.n	80cb4 <pio_configure_pin_group+0x90>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80c8e:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
   80c92:	f005 0301 	and.w	r3, r5, #1
   80c96:	9300      	str	r3, [sp, #0]
   80c98:	4638      	mov	r0, r7
   80c9a:	4631      	mov	r1, r6
   80c9c:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80ca0:	bf14      	ite	ne
   80ca2:	2200      	movne	r2, #0
   80ca4:	2201      	moveq	r2, #1
   80ca6:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80caa:	4c05      	ldr	r4, [pc, #20]	; (80cc0 <pio_configure_pin_group+0x9c>)
   80cac:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
   80cae:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80cb0:	e000      	b.n	80cb4 <pio_configure_pin_group+0x90>

	default:
		return 0;
   80cb2:	2000      	movs	r0, #0
	}

	return 1;
}
   80cb4:	b003      	add	sp, #12
   80cb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80cb8:	00080a75 	.word	0x00080a75
   80cbc:	00080ab5 	.word	0x00080ab5
   80cc0:	00080ae9 	.word	0x00080ae9

00080cc4 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   80cc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80cc8:	4604      	mov	r4, r0
   80cca:	460e      	mov	r6, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   80ccc:	4b10      	ldr	r3, [pc, #64]	; (80d10 <pio_handler_process+0x4c>)
   80cce:	4798      	blx	r3
   80cd0:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80cd2:	4620      	mov	r0, r4
   80cd4:	4b0f      	ldr	r3, [pc, #60]	; (80d14 <pio_handler_process+0x50>)
   80cd6:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   80cd8:	4005      	ands	r5, r0
   80cda:	d017      	beq.n	80d0c <pio_handler_process+0x48>
   80cdc:	4f0e      	ldr	r7, [pc, #56]	; (80d18 <pio_handler_process+0x54>)
   80cde:	f107 040c 	add.w	r4, r7, #12
   80ce2:	376c      	adds	r7, #108	; 0x6c
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
   80ce4:	f854 3c0c 	ldr.w	r3, [r4, #-12]
   80ce8:	42b3      	cmp	r3, r6
   80cea:	d10a      	bne.n	80d02 <pio_handler_process+0x3e>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80cec:	f854 1c08 	ldr.w	r1, [r4, #-8]
   80cf0:	4229      	tst	r1, r5
   80cf2:	d006      	beq.n	80d02 <pio_handler_process+0x3e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80cf4:	6823      	ldr	r3, [r4, #0]
   80cf6:	4630      	mov	r0, r6
   80cf8:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
   80cfa:	f854 3c08 	ldr.w	r3, [r4, #-8]
   80cfe:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   80d02:	42bc      	cmp	r4, r7
   80d04:	d002      	beq.n	80d0c <pio_handler_process+0x48>
   80d06:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
   80d08:	2d00      	cmp	r5, #0
   80d0a:	d1eb      	bne.n	80ce4 <pio_handler_process+0x20>
   80d0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80d10:	00080b49 	.word	0x00080b49
   80d14:	00080b4d 	.word	0x00080b4d
   80d18:	20070aa0 	.word	0x20070aa0

00080d1c <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
   80d1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
   80d1e:	4c0b      	ldr	r4, [pc, #44]	; (80d4c <pio_handler_set+0x30>)
   80d20:	6824      	ldr	r4, [r4, #0]
   80d22:	2c06      	cmp	r4, #6
   80d24:	d810      	bhi.n	80d48 <pio_handler_set+0x2c>
		return 1;

	/* Define new source */
	pSource = &(gs_interrupt_sources[gs_ul_nb_sources]);
   80d26:	4f0a      	ldr	r7, [pc, #40]	; (80d50 <pio_handler_set+0x34>)
   80d28:	0126      	lsls	r6, r4, #4
   80d2a:	19bd      	adds	r5, r7, r6
	pSource->id = ul_id;
   80d2c:	51b9      	str	r1, [r7, r6]
	pSource->mask = ul_mask;
   80d2e:	606a      	str	r2, [r5, #4]
	pSource->attr = ul_attr;
   80d30:	60ab      	str	r3, [r5, #8]
	pSource->handler = p_handler;
   80d32:	9906      	ldr	r1, [sp, #24]
   80d34:	60e9      	str	r1, [r5, #12]
	gs_ul_nb_sources++;
   80d36:	3401      	adds	r4, #1
   80d38:	4904      	ldr	r1, [pc, #16]	; (80d4c <pio_handler_set+0x30>)
   80d3a:	600c      	str	r4, [r1, #0]

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
   80d3c:	4611      	mov	r1, r2
   80d3e:	461a      	mov	r2, r3
   80d40:	4b04      	ldr	r3, [pc, #16]	; (80d54 <pio_handler_set+0x38>)
   80d42:	4798      	blx	r3

	return 0;
   80d44:	2000      	movs	r0, #0
   80d46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
		return 1;
   80d48:	2001      	movs	r0, #1

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);

	return 0;
}
   80d4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80d4c:	20070a9c 	.word	0x20070a9c
   80d50:	20070aa0 	.word	0x20070aa0
   80d54:	00080b11 	.word	0x00080b11

00080d58 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80d58:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   80d5a:	4802      	ldr	r0, [pc, #8]	; (80d64 <PIOA_Handler+0xc>)
   80d5c:	210b      	movs	r1, #11
   80d5e:	4b02      	ldr	r3, [pc, #8]	; (80d68 <PIOA_Handler+0x10>)
   80d60:	4798      	blx	r3
   80d62:	bd08      	pop	{r3, pc}
   80d64:	400e0e00 	.word	0x400e0e00
   80d68:	00080cc5 	.word	0x00080cc5

00080d6c <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80d6c:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80d6e:	4802      	ldr	r0, [pc, #8]	; (80d78 <PIOB_Handler+0xc>)
   80d70:	210c      	movs	r1, #12
   80d72:	4b02      	ldr	r3, [pc, #8]	; (80d7c <PIOB_Handler+0x10>)
   80d74:	4798      	blx	r3
   80d76:	bd08      	pop	{r3, pc}
   80d78:	400e1000 	.word	0x400e1000
   80d7c:	00080cc5 	.word	0x00080cc5

00080d80 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80d80:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   80d82:	4802      	ldr	r0, [pc, #8]	; (80d8c <PIOC_Handler+0xc>)
   80d84:	210d      	movs	r1, #13
   80d86:	4b02      	ldr	r3, [pc, #8]	; (80d90 <PIOC_Handler+0x10>)
   80d88:	4798      	blx	r3
   80d8a:	bd08      	pop	{r3, pc}
   80d8c:	400e1200 	.word	0x400e1200
   80d90:	00080cc5 	.word	0x00080cc5

00080d94 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   80d94:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   80d96:	4802      	ldr	r0, [pc, #8]	; (80da0 <PIOD_Handler+0xc>)
   80d98:	210e      	movs	r1, #14
   80d9a:	4b02      	ldr	r3, [pc, #8]	; (80da4 <PIOD_Handler+0x10>)
   80d9c:	4798      	blx	r3
   80d9e:	bd08      	pop	{r3, pc}
   80da0:	400e1400 	.word	0x400e1400
   80da4:	00080cc5 	.word	0x00080cc5

00080da8 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   80da8:	4b17      	ldr	r3, [pc, #92]	; (80e08 <pmc_switch_mck_to_pllack+0x60>)
   80daa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80dac:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   80db0:	4310      	orrs	r0, r2
   80db2:	6318      	str	r0, [r3, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80db4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80db6:	f013 0f08 	tst.w	r3, #8
   80dba:	d109      	bne.n	80dd0 <pmc_switch_mck_to_pllack+0x28>
   80dbc:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80dc0:	4911      	ldr	r1, [pc, #68]	; (80e08 <pmc_switch_mck_to_pllack+0x60>)
   80dc2:	e001      	b.n	80dc8 <pmc_switch_mck_to_pllack+0x20>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80dc4:	3b01      	subs	r3, #1
   80dc6:	d019      	beq.n	80dfc <pmc_switch_mck_to_pllack+0x54>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80dc8:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80dca:	f012 0f08 	tst.w	r2, #8
   80dce:	d0f9      	beq.n	80dc4 <pmc_switch_mck_to_pllack+0x1c>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   80dd0:	4b0d      	ldr	r3, [pc, #52]	; (80e08 <pmc_switch_mck_to_pllack+0x60>)
   80dd2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80dd4:	f022 0203 	bic.w	r2, r2, #3
   80dd8:	f042 0202 	orr.w	r2, r2, #2
   80ddc:	631a      	str	r2, [r3, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80dde:	6e98      	ldr	r0, [r3, #104]	; 0x68
   80de0:	f010 0008 	ands.w	r0, r0, #8
   80de4:	d10c      	bne.n	80e00 <pmc_switch_mck_to_pllack+0x58>
   80de6:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80dea:	4907      	ldr	r1, [pc, #28]	; (80e08 <pmc_switch_mck_to_pllack+0x60>)
   80dec:	e001      	b.n	80df2 <pmc_switch_mck_to_pllack+0x4a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80dee:	3b01      	subs	r3, #1
   80df0:	d008      	beq.n	80e04 <pmc_switch_mck_to_pllack+0x5c>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80df2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80df4:	f012 0f08 	tst.w	r2, #8
   80df8:	d0f9      	beq.n	80dee <pmc_switch_mck_to_pllack+0x46>
   80dfa:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80dfc:	2001      	movs	r0, #1
   80dfe:	4770      	bx	lr
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
   80e00:	2000      	movs	r0, #0
   80e02:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80e04:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   80e06:	4770      	bx	lr
   80e08:	400e0600 	.word	0x400e0600

00080e0c <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   80e0c:	b138      	cbz	r0, 80e1e <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80e0e:	4911      	ldr	r1, [pc, #68]	; (80e54 <pmc_switch_mainck_to_xtal+0x48>)
   80e10:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   80e12:	4a11      	ldr	r2, [pc, #68]	; (80e58 <pmc_switch_mainck_to_xtal+0x4c>)
   80e14:	401a      	ands	r2, r3
   80e16:	4b11      	ldr	r3, [pc, #68]	; (80e5c <pmc_switch_mainck_to_xtal+0x50>)
   80e18:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80e1a:	620b      	str	r3, [r1, #32]
   80e1c:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80e1e:	4a0d      	ldr	r2, [pc, #52]	; (80e54 <pmc_switch_mainck_to_xtal+0x48>)
   80e20:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80e22:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   80e26:	f023 0303 	bic.w	r3, r3, #3
   80e2a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   80e2e:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   80e32:	0209      	lsls	r1, r1, #8
   80e34:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80e36:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80e38:	6213      	str	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   80e3a:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80e3c:	f013 0f01 	tst.w	r3, #1
   80e40:	d0fb      	beq.n	80e3a <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   80e42:	4a04      	ldr	r2, [pc, #16]	; (80e54 <pmc_switch_mainck_to_xtal+0x48>)
   80e44:	6a13      	ldr	r3, [r2, #32]
   80e46:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   80e4a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   80e4e:	6213      	str	r3, [r2, #32]
   80e50:	4770      	bx	lr
   80e52:	bf00      	nop
   80e54:	400e0600 	.word	0x400e0600
   80e58:	fec8fffc 	.word	0xfec8fffc
   80e5c:	01370002 	.word	0x01370002

00080e60 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   80e60:	4b02      	ldr	r3, [pc, #8]	; (80e6c <pmc_osc_is_ready_mainck+0xc>)
   80e62:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80e64:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80e68:	4770      	bx	lr
   80e6a:	bf00      	nop
   80e6c:	400e0600 	.word	0x400e0600

00080e70 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   80e70:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   80e74:	4b01      	ldr	r3, [pc, #4]	; (80e7c <pmc_disable_pllack+0xc>)
   80e76:	629a      	str	r2, [r3, #40]	; 0x28
   80e78:	4770      	bx	lr
   80e7a:	bf00      	nop
   80e7c:	400e0600 	.word	0x400e0600

00080e80 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   80e80:	4b02      	ldr	r3, [pc, #8]	; (80e8c <pmc_is_locked_pllack+0xc>)
   80e82:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80e84:	f000 0002 	and.w	r0, r0, #2
   80e88:	4770      	bx	lr
   80e8a:	bf00      	nop
   80e8c:	400e0600 	.word	0x400e0600

00080e90 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   80e90:	282c      	cmp	r0, #44	; 0x2c
   80e92:	d820      	bhi.n	80ed6 <pmc_enable_periph_clk+0x46>
		return 1;
	}

	if (ul_id < 32) {
   80e94:	281f      	cmp	r0, #31
   80e96:	d80d      	bhi.n	80eb4 <pmc_enable_periph_clk+0x24>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   80e98:	4b12      	ldr	r3, [pc, #72]	; (80ee4 <pmc_enable_periph_clk+0x54>)
   80e9a:	699a      	ldr	r2, [r3, #24]
   80e9c:	2301      	movs	r3, #1
   80e9e:	4083      	lsls	r3, r0
   80ea0:	401a      	ands	r2, r3
   80ea2:	4293      	cmp	r3, r2
   80ea4:	d019      	beq.n	80eda <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER0 = 1 << ul_id;
   80ea6:	2301      	movs	r3, #1
   80ea8:	fa03 f000 	lsl.w	r0, r3, r0
   80eac:	4b0d      	ldr	r3, [pc, #52]	; (80ee4 <pmc_enable_periph_clk+0x54>)
   80eae:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80eb0:	2000      	movs	r0, #0
   80eb2:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80eb4:	4b0b      	ldr	r3, [pc, #44]	; (80ee4 <pmc_enable_periph_clk+0x54>)
   80eb6:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
   80eba:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80ebc:	2301      	movs	r3, #1
   80ebe:	4083      	lsls	r3, r0
   80ec0:	401a      	ands	r2, r3
   80ec2:	4293      	cmp	r3, r2
   80ec4:	d00b      	beq.n	80ede <pmc_enable_periph_clk+0x4e>
			PMC->PMC_PCER1 = 1 << ul_id;
   80ec6:	2301      	movs	r3, #1
   80ec8:	fa03 f000 	lsl.w	r0, r3, r0
   80ecc:	4b05      	ldr	r3, [pc, #20]	; (80ee4 <pmc_enable_periph_clk+0x54>)
   80ece:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
   80ed2:	2000      	movs	r0, #0
   80ed4:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
   80ed6:	2001      	movs	r0, #1
   80ed8:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80eda:	2000      	movs	r0, #0
   80edc:	4770      	bx	lr
   80ede:	2000      	movs	r0, #0
}
   80ee0:	4770      	bx	lr
   80ee2:	bf00      	nop
   80ee4:	400e0600 	.word	0x400e0600

00080ee8 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80ee8:	e7fe      	b.n	80ee8 <Dummy_Handler>
   80eea:	bf00      	nop

00080eec <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80eec:	b510      	push	{r4, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   80eee:	4b1e      	ldr	r3, [pc, #120]	; (80f68 <Reset_Handler+0x7c>)
   80ef0:	4a1e      	ldr	r2, [pc, #120]	; (80f6c <Reset_Handler+0x80>)
   80ef2:	429a      	cmp	r2, r3
   80ef4:	d003      	beq.n	80efe <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
   80ef6:	4b1e      	ldr	r3, [pc, #120]	; (80f70 <Reset_Handler+0x84>)
   80ef8:	4a1b      	ldr	r2, [pc, #108]	; (80f68 <Reset_Handler+0x7c>)
   80efa:	429a      	cmp	r2, r3
   80efc:	d304      	bcc.n	80f08 <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80efe:	4b1d      	ldr	r3, [pc, #116]	; (80f74 <Reset_Handler+0x88>)
   80f00:	4a1d      	ldr	r2, [pc, #116]	; (80f78 <Reset_Handler+0x8c>)
   80f02:	429a      	cmp	r2, r3
   80f04:	d30f      	bcc.n	80f26 <Reset_Handler+0x3a>
   80f06:	e01a      	b.n	80f3e <Reset_Handler+0x52>
   80f08:	4b1c      	ldr	r3, [pc, #112]	; (80f7c <Reset_Handler+0x90>)
   80f0a:	4c1d      	ldr	r4, [pc, #116]	; (80f80 <Reset_Handler+0x94>)
   80f0c:	1ae4      	subs	r4, r4, r3
   80f0e:	f024 0403 	bic.w	r4, r4, #3
   80f12:	3404      	adds	r4, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80f14:	2300      	movs	r3, #0
			*pDest++ = *pSrc++;
   80f16:	4814      	ldr	r0, [pc, #80]	; (80f68 <Reset_Handler+0x7c>)
   80f18:	4914      	ldr	r1, [pc, #80]	; (80f6c <Reset_Handler+0x80>)
   80f1a:	585a      	ldr	r2, [r3, r1]
   80f1c:	501a      	str	r2, [r3, r0]
   80f1e:	3304      	adds	r3, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80f20:	42a3      	cmp	r3, r4
   80f22:	d1fa      	bne.n	80f1a <Reset_Handler+0x2e>
   80f24:	e7eb      	b.n	80efe <Reset_Handler+0x12>
   80f26:	4b17      	ldr	r3, [pc, #92]	; (80f84 <Reset_Handler+0x98>)
   80f28:	4917      	ldr	r1, [pc, #92]	; (80f88 <Reset_Handler+0x9c>)
   80f2a:	1ac9      	subs	r1, r1, r3
   80f2c:	f021 0103 	bic.w	r1, r1, #3
   80f30:	1d1a      	adds	r2, r3, #4
   80f32:	4411      	add	r1, r2
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
		*pDest++ = 0;
   80f34:	2200      	movs	r2, #0
   80f36:	f843 2f04 	str.w	r2, [r3, #4]!
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80f3a:	428b      	cmp	r3, r1
   80f3c:	d1fb      	bne.n	80f36 <Reset_Handler+0x4a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80f3e:	4a13      	ldr	r2, [pc, #76]	; (80f8c <Reset_Handler+0xa0>)
   80f40:	f022 4360 	bic.w	r3, r2, #3758096384	; 0xe0000000
   80f44:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   80f48:	4911      	ldr	r1, [pc, #68]	; (80f90 <Reset_Handler+0xa4>)
   80f4a:	608b      	str	r3, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80f4c:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
   80f50:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
   80f54:	d203      	bcs.n	80f5e <Reset_Handler+0x72>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80f56:	688a      	ldr	r2, [r1, #8]
   80f58:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
   80f5c:	608a      	str	r2, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   80f5e:	4b0d      	ldr	r3, [pc, #52]	; (80f94 <Reset_Handler+0xa8>)
   80f60:	4798      	blx	r3

	/* Branch to main function */
	main();
   80f62:	4b0d      	ldr	r3, [pc, #52]	; (80f98 <Reset_Handler+0xac>)
   80f64:	4798      	blx	r3
   80f66:	e7fe      	b.n	80f66 <Reset_Handler+0x7a>
   80f68:	20070000 	.word	0x20070000
   80f6c:	00087c98 	.word	0x00087c98
   80f70:	200709d4 	.word	0x200709d4
   80f74:	20070b60 	.word	0x20070b60
   80f78:	200709d4 	.word	0x200709d4
   80f7c:	20070004 	.word	0x20070004
   80f80:	200709d7 	.word	0x200709d7
   80f84:	200709d0 	.word	0x200709d0
   80f88:	20070b5b 	.word	0x20070b5b
   80f8c:	00080000 	.word	0x00080000
   80f90:	e000ed00 	.word	0xe000ed00
   80f94:	00081ddd 	.word	0x00081ddd
   80f98:	0008131d 	.word	0x0008131d

00080f9c <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   80f9c:	4b3e      	ldr	r3, [pc, #248]	; (81098 <SystemCoreClockUpdate+0xfc>)
   80f9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80fa0:	f003 0303 	and.w	r3, r3, #3
   80fa4:	2b03      	cmp	r3, #3
   80fa6:	d85f      	bhi.n	81068 <SystemCoreClockUpdate+0xcc>
   80fa8:	e8df f003 	tbb	[pc, r3]
   80fac:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   80fb0:	4b3a      	ldr	r3, [pc, #232]	; (8109c <SystemCoreClockUpdate+0x100>)
   80fb2:	695b      	ldr	r3, [r3, #20]
   80fb4:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   80fb8:	bf14      	ite	ne
   80fba:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   80fbe:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   80fc2:	4b37      	ldr	r3, [pc, #220]	; (810a0 <SystemCoreClockUpdate+0x104>)
   80fc4:	601a      	str	r2, [r3, #0]
   80fc6:	e04f      	b.n	81068 <SystemCoreClockUpdate+0xcc>
		}
		break;
	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80fc8:	4b33      	ldr	r3, [pc, #204]	; (81098 <SystemCoreClockUpdate+0xfc>)
   80fca:	6a1b      	ldr	r3, [r3, #32]
   80fcc:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80fd0:	d003      	beq.n	80fda <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80fd2:	4a34      	ldr	r2, [pc, #208]	; (810a4 <SystemCoreClockUpdate+0x108>)
   80fd4:	4b32      	ldr	r3, [pc, #200]	; (810a0 <SystemCoreClockUpdate+0x104>)
   80fd6:	601a      	str	r2, [r3, #0]
   80fd8:	e046      	b.n	81068 <SystemCoreClockUpdate+0xcc>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80fda:	4a33      	ldr	r2, [pc, #204]	; (810a8 <SystemCoreClockUpdate+0x10c>)
   80fdc:	4b30      	ldr	r3, [pc, #192]	; (810a0 <SystemCoreClockUpdate+0x104>)
   80fde:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80fe0:	4b2d      	ldr	r3, [pc, #180]	; (81098 <SystemCoreClockUpdate+0xfc>)
   80fe2:	6a1b      	ldr	r3, [r3, #32]
   80fe4:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80fe8:	2b10      	cmp	r3, #16
   80fea:	d002      	beq.n	80ff2 <SystemCoreClockUpdate+0x56>
   80fec:	2b20      	cmp	r3, #32
   80fee:	d004      	beq.n	80ffa <SystemCoreClockUpdate+0x5e>
   80ff0:	e03a      	b.n	81068 <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80ff2:	4a2e      	ldr	r2, [pc, #184]	; (810ac <SystemCoreClockUpdate+0x110>)
   80ff4:	4b2a      	ldr	r3, [pc, #168]	; (810a0 <SystemCoreClockUpdate+0x104>)
   80ff6:	601a      	str	r2, [r3, #0]
				break;
   80ff8:	e036      	b.n	81068 <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80ffa:	4a2a      	ldr	r2, [pc, #168]	; (810a4 <SystemCoreClockUpdate+0x108>)
   80ffc:	4b28      	ldr	r3, [pc, #160]	; (810a0 <SystemCoreClockUpdate+0x104>)
   80ffe:	601a      	str	r2, [r3, #0]
				break;
   81000:	e032      	b.n	81068 <SystemCoreClockUpdate+0xcc>
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   81002:	4b25      	ldr	r3, [pc, #148]	; (81098 <SystemCoreClockUpdate+0xfc>)
   81004:	6a1b      	ldr	r3, [r3, #32]
   81006:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   8100a:	d003      	beq.n	81014 <SystemCoreClockUpdate+0x78>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   8100c:	4a25      	ldr	r2, [pc, #148]	; (810a4 <SystemCoreClockUpdate+0x108>)
   8100e:	4b24      	ldr	r3, [pc, #144]	; (810a0 <SystemCoreClockUpdate+0x104>)
   81010:	601a      	str	r2, [r3, #0]
   81012:	e012      	b.n	8103a <SystemCoreClockUpdate+0x9e>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   81014:	4a24      	ldr	r2, [pc, #144]	; (810a8 <SystemCoreClockUpdate+0x10c>)
   81016:	4b22      	ldr	r3, [pc, #136]	; (810a0 <SystemCoreClockUpdate+0x104>)
   81018:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   8101a:	4b1f      	ldr	r3, [pc, #124]	; (81098 <SystemCoreClockUpdate+0xfc>)
   8101c:	6a1b      	ldr	r3, [r3, #32]
   8101e:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81022:	2b10      	cmp	r3, #16
   81024:	d002      	beq.n	8102c <SystemCoreClockUpdate+0x90>
   81026:	2b20      	cmp	r3, #32
   81028:	d004      	beq.n	81034 <SystemCoreClockUpdate+0x98>
   8102a:	e006      	b.n	8103a <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   8102c:	4a1f      	ldr	r2, [pc, #124]	; (810ac <SystemCoreClockUpdate+0x110>)
   8102e:	4b1c      	ldr	r3, [pc, #112]	; (810a0 <SystemCoreClockUpdate+0x104>)
   81030:	601a      	str	r2, [r3, #0]
				break;
   81032:	e002      	b.n	8103a <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   81034:	4a1b      	ldr	r2, [pc, #108]	; (810a4 <SystemCoreClockUpdate+0x108>)
   81036:	4b1a      	ldr	r3, [pc, #104]	; (810a0 <SystemCoreClockUpdate+0x104>)
   81038:	601a      	str	r2, [r3, #0]
				break;
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   8103a:	4b17      	ldr	r3, [pc, #92]	; (81098 <SystemCoreClockUpdate+0xfc>)
   8103c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   8103e:	f003 0303 	and.w	r3, r3, #3
   81042:	2b02      	cmp	r3, #2
   81044:	d10d      	bne.n	81062 <SystemCoreClockUpdate+0xc6>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   81046:	4b14      	ldr	r3, [pc, #80]	; (81098 <SystemCoreClockUpdate+0xfc>)
   81048:	6a98      	ldr	r0, [r3, #40]	; 0x28
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   8104a:	6a99      	ldr	r1, [r3, #40]	; 0x28
   8104c:	4b14      	ldr	r3, [pc, #80]	; (810a0 <SystemCoreClockUpdate+0x104>)
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   8104e:	f3c0 400a 	ubfx	r0, r0, #16, #11
   81052:	681a      	ldr	r2, [r3, #0]
   81054:	fb00 2202 	mla	r2, r0, r2, r2
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   81058:	b2c9      	uxtb	r1, r1
   8105a:	fbb2 f2f1 	udiv	r2, r2, r1
   8105e:	601a      	str	r2, [r3, #0]
   81060:	e002      	b.n	81068 <SystemCoreClockUpdate+0xcc>
				                             CKGR_PLLAR_DIVA_Pos));
		} else {
			SystemCoreClock = SYS_UTMIPLL / 2U;
   81062:	4a13      	ldr	r2, [pc, #76]	; (810b0 <SystemCoreClockUpdate+0x114>)
   81064:	4b0e      	ldr	r3, [pc, #56]	; (810a0 <SystemCoreClockUpdate+0x104>)
   81066:	601a      	str	r2, [r3, #0]
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   81068:	4b0b      	ldr	r3, [pc, #44]	; (81098 <SystemCoreClockUpdate+0xfc>)
   8106a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   8106c:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81070:	2b70      	cmp	r3, #112	; 0x70
   81072:	d107      	bne.n	81084 <SystemCoreClockUpdate+0xe8>
		SystemCoreClock /= 3U;
   81074:	4b0a      	ldr	r3, [pc, #40]	; (810a0 <SystemCoreClockUpdate+0x104>)
   81076:	681a      	ldr	r2, [r3, #0]
   81078:	490e      	ldr	r1, [pc, #56]	; (810b4 <SystemCoreClockUpdate+0x118>)
   8107a:	fba1 0202 	umull	r0, r2, r1, r2
   8107e:	0852      	lsrs	r2, r2, #1
   81080:	601a      	str	r2, [r3, #0]
   81082:	4770      	bx	lr
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   81084:	4b04      	ldr	r3, [pc, #16]	; (81098 <SystemCoreClockUpdate+0xfc>)
   81086:	6b19      	ldr	r1, [r3, #48]	; 0x30
   81088:	4b05      	ldr	r3, [pc, #20]	; (810a0 <SystemCoreClockUpdate+0x104>)
   8108a:	f3c1 1102 	ubfx	r1, r1, #4, #3
   8108e:	681a      	ldr	r2, [r3, #0]
   81090:	40ca      	lsrs	r2, r1
   81092:	601a      	str	r2, [r3, #0]
   81094:	4770      	bx	lr
   81096:	bf00      	nop
   81098:	400e0600 	.word	0x400e0600
   8109c:	400e1a10 	.word	0x400e1a10
   810a0:	20070130 	.word	0x20070130
   810a4:	00b71b00 	.word	0x00b71b00
   810a8:	003d0900 	.word	0x003d0900
   810ac:	007a1200 	.word	0x007a1200
   810b0:	0e4e1c00 	.word	0x0e4e1c00
   810b4:	aaaaaaab 	.word	0xaaaaaaab

000810b8 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   810b8:	4b09      	ldr	r3, [pc, #36]	; (810e0 <_sbrk+0x28>)
   810ba:	681b      	ldr	r3, [r3, #0]
   810bc:	b913      	cbnz	r3, 810c4 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
   810be:	4a09      	ldr	r2, [pc, #36]	; (810e4 <_sbrk+0x2c>)
   810c0:	4b07      	ldr	r3, [pc, #28]	; (810e0 <_sbrk+0x28>)
   810c2:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
   810c4:	4b06      	ldr	r3, [pc, #24]	; (810e0 <_sbrk+0x28>)
   810c6:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   810c8:	181a      	adds	r2, r3, r0
   810ca:	4907      	ldr	r1, [pc, #28]	; (810e8 <_sbrk+0x30>)
   810cc:	4291      	cmp	r1, r2
   810ce:	db04      	blt.n	810da <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
   810d0:	4610      	mov	r0, r2
   810d2:	4a03      	ldr	r2, [pc, #12]	; (810e0 <_sbrk+0x28>)
   810d4:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   810d6:	4618      	mov	r0, r3
   810d8:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
   810da:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
   810de:	4770      	bx	lr
   810e0:	20070b10 	.word	0x20070b10
   810e4:	20072b60 	.word	0x20072b60
   810e8:	20087ffc 	.word	0x20087ffc

000810ec <_close>:
}

extern int _close(int file)
{
	return -1;
}
   810ec:	f04f 30ff 	mov.w	r0, #4294967295
   810f0:	4770      	bx	lr
   810f2:	bf00      	nop

000810f4 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
   810f4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   810f8:	604b      	str	r3, [r1, #4]

	return 0;
}
   810fa:	2000      	movs	r0, #0
   810fc:	4770      	bx	lr
   810fe:	bf00      	nop

00081100 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
   81100:	2001      	movs	r0, #1
   81102:	4770      	bx	lr

00081104 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
   81104:	2000      	movs	r0, #0
   81106:	4770      	bx	lr

00081108 <addOne>:
// 			*p_variable = *p_variable + (*p_string++ - '0') * 100;
// 			*p_variable = *p_variable + (*p_string++ - '0') * 10;
// 			*p_variable = *p_variable + (*p_string - '0');
// }

void addOne(const uint32_t id, const uint32_t index){
   81108:	b530      	push	{r4, r5, lr}
   8110a:	b087      	sub	sp, #28
   8110c:	4604      	mov	r4, r0
   8110e:	460d      	mov	r5, r1
	char str[20];
	printf("\nInterrupt");
   81110:	480b      	ldr	r0, [pc, #44]	; (81140 <addOne+0x38>)
   81112:	4b0c      	ldr	r3, [pc, #48]	; (81144 <addOne+0x3c>)
   81114:	4798      	blx	r3
	if ((id == ID_PIOC) && (index == INTERRUPT)){
   81116:	2c0d      	cmp	r4, #13
   81118:	d10d      	bne.n	81136 <addOne+0x2e>
   8111a:	2d50      	cmp	r5, #80	; 0x50
   8111c:	d10b      	bne.n	81136 <addOne+0x2e>
		count_test++;
   8111e:	4b0a      	ldr	r3, [pc, #40]	; (81148 <addOne+0x40>)
   81120:	681a      	ldr	r2, [r3, #0]
   81122:	3201      	adds	r2, #1
   81124:	601a      	str	r2, [r3, #0]
		sprintf(str,"\nCount_test: %d",count_test);
   81126:	a801      	add	r0, sp, #4
   81128:	4908      	ldr	r1, [pc, #32]	; (8114c <addOne+0x44>)
   8112a:	4b09      	ldr	r3, [pc, #36]	; (81150 <addOne+0x48>)
   8112c:	4798      	blx	r3
		printf (str);
   8112e:	a801      	add	r0, sp, #4
   81130:	4b04      	ldr	r3, [pc, #16]	; (81144 <addOne+0x3c>)
   81132:	4798      	blx	r3
   81134:	e002      	b.n	8113c <addOne+0x34>
	}else{
		printf("\nError");
   81136:	4807      	ldr	r0, [pc, #28]	; (81154 <addOne+0x4c>)
   81138:	4b02      	ldr	r3, [pc, #8]	; (81144 <addOne+0x3c>)
   8113a:	4798      	blx	r3
	}
}
   8113c:	b007      	add	sp, #28
   8113e:	bd30      	pop	{r4, r5, pc}
   81140:	00087a18 	.word	0x00087a18
   81144:	00081e2d 	.word	0x00081e2d
   81148:	20070b14 	.word	0x20070b14
   8114c:	00087a24 	.word	0x00087a24
   81150:	00081ff9 	.word	0x00081ff9
   81154:	00087a34 	.word	0x00087a34

00081158 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
   81158:	b5f0      	push	{r4, r5, r6, r7, lr}
   8115a:	b083      	sub	sp, #12
   8115c:	4604      	mov	r4, r0
   8115e:	460d      	mov	r5, r1
	uint32_t val = 0;
   81160:	2300      	movs	r3, #0
   81162:	9301      	str	r3, [sp, #4]

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   81164:	4b1f      	ldr	r3, [pc, #124]	; (811e4 <usart_serial_getchar+0x8c>)
   81166:	4298      	cmp	r0, r3
   81168:	d107      	bne.n	8117a <usart_serial_getchar+0x22>
		while (uart_read((Uart*)p_usart, data));
   8116a:	461f      	mov	r7, r3
   8116c:	4e1e      	ldr	r6, [pc, #120]	; (811e8 <usart_serial_getchar+0x90>)
   8116e:	4638      	mov	r0, r7
   81170:	4629      	mov	r1, r5
   81172:	47b0      	blx	r6
   81174:	2800      	cmp	r0, #0
   81176:	d1fa      	bne.n	8116e <usart_serial_getchar+0x16>
   81178:	e019      	b.n	811ae <usart_serial_getchar+0x56>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   8117a:	4b1c      	ldr	r3, [pc, #112]	; (811ec <usart_serial_getchar+0x94>)
   8117c:	4298      	cmp	r0, r3
   8117e:	d109      	bne.n	81194 <usart_serial_getchar+0x3c>
		while (usart_read(p_usart, &val));
   81180:	461f      	mov	r7, r3
   81182:	4e1b      	ldr	r6, [pc, #108]	; (811f0 <usart_serial_getchar+0x98>)
   81184:	4638      	mov	r0, r7
   81186:	a901      	add	r1, sp, #4
   81188:	47b0      	blx	r6
   8118a:	2800      	cmp	r0, #0
   8118c:	d1fa      	bne.n	81184 <usart_serial_getchar+0x2c>
		*data = (uint8_t)(val & 0xFF);
   8118e:	9b01      	ldr	r3, [sp, #4]
   81190:	702b      	strb	r3, [r5, #0]
   81192:	e019      	b.n	811c8 <usart_serial_getchar+0x70>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   81194:	4b17      	ldr	r3, [pc, #92]	; (811f4 <usart_serial_getchar+0x9c>)
   81196:	4298      	cmp	r0, r3
   81198:	d109      	bne.n	811ae <usart_serial_getchar+0x56>
		while (usart_read(p_usart, &val));
   8119a:	461e      	mov	r6, r3
   8119c:	4c14      	ldr	r4, [pc, #80]	; (811f0 <usart_serial_getchar+0x98>)
   8119e:	4630      	mov	r0, r6
   811a0:	a901      	add	r1, sp, #4
   811a2:	47a0      	blx	r4
   811a4:	2800      	cmp	r0, #0
   811a6:	d1fa      	bne.n	8119e <usart_serial_getchar+0x46>
		*data = (uint8_t)(val & 0xFF);
   811a8:	9b01      	ldr	r3, [sp, #4]
   811aa:	702b      	strb	r3, [r5, #0]
   811ac:	e018      	b.n	811e0 <usart_serial_getchar+0x88>
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   811ae:	4b12      	ldr	r3, [pc, #72]	; (811f8 <usart_serial_getchar+0xa0>)
   811b0:	429c      	cmp	r4, r3
   811b2:	d109      	bne.n	811c8 <usart_serial_getchar+0x70>
		while (usart_read(p_usart, &val));
   811b4:	461e      	mov	r6, r3
   811b6:	4c0e      	ldr	r4, [pc, #56]	; (811f0 <usart_serial_getchar+0x98>)
   811b8:	4630      	mov	r0, r6
   811ba:	a901      	add	r1, sp, #4
   811bc:	47a0      	blx	r4
   811be:	2800      	cmp	r0, #0
   811c0:	d1fa      	bne.n	811b8 <usart_serial_getchar+0x60>
		*data = (uint8_t)(val & 0xFF);
   811c2:	9b01      	ldr	r3, [sp, #4]
   811c4:	702b      	strb	r3, [r5, #0]
   811c6:	e00b      	b.n	811e0 <usart_serial_getchar+0x88>
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   811c8:	4b0c      	ldr	r3, [pc, #48]	; (811fc <usart_serial_getchar+0xa4>)
   811ca:	429c      	cmp	r4, r3
   811cc:	d108      	bne.n	811e0 <usart_serial_getchar+0x88>
		while (usart_read(p_usart, &val));
   811ce:	461e      	mov	r6, r3
   811d0:	4c07      	ldr	r4, [pc, #28]	; (811f0 <usart_serial_getchar+0x98>)
   811d2:	4630      	mov	r0, r6
   811d4:	a901      	add	r1, sp, #4
   811d6:	47a0      	blx	r4
   811d8:	2800      	cmp	r0, #0
   811da:	d1fa      	bne.n	811d2 <usart_serial_getchar+0x7a>
		*data = (uint8_t)(val & 0xFF);
   811dc:	9b01      	ldr	r3, [sp, #4]
   811de:	702b      	strb	r3, [r5, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
   811e0:	b003      	add	sp, #12
   811e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   811e4:	400e0800 	.word	0x400e0800
   811e8:	00080419 	.word	0x00080419
   811ec:	40098000 	.word	0x40098000
   811f0:	00080441 	.word	0x00080441
   811f4:	4009c000 	.word	0x4009c000
   811f8:	400a0000 	.word	0x400a0000
   811fc:	400a4000 	.word	0x400a4000

00081200 <usart_serial_putchar>:
 *   \retval 1  The character was written.
 *   \retval 0  The function timed out before the USART transmitter became
 * ready to send.
 */
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
   81200:	b570      	push	{r4, r5, r6, lr}
   81202:	460c      	mov	r4, r1
#ifdef UART
	if (UART == (Uart*)p_usart) {
   81204:	4b21      	ldr	r3, [pc, #132]	; (8128c <usart_serial_putchar+0x8c>)
   81206:	4298      	cmp	r0, r3
   81208:	d107      	bne.n	8121a <usart_serial_putchar+0x1a>
		while (uart_write((Uart*)p_usart, c)!=0);
   8120a:	461e      	mov	r6, r3
   8120c:	4d20      	ldr	r5, [pc, #128]	; (81290 <usart_serial_putchar+0x90>)
   8120e:	4630      	mov	r0, r6
   81210:	4621      	mov	r1, r4
   81212:	47a8      	blx	r5
   81214:	2800      	cmp	r0, #0
   81216:	d1fa      	bne.n	8120e <usart_serial_putchar+0xe>
   81218:	e02b      	b.n	81272 <usart_serial_putchar+0x72>
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   8121a:	4b1e      	ldr	r3, [pc, #120]	; (81294 <usart_serial_putchar+0x94>)
   8121c:	4298      	cmp	r0, r3
   8121e:	d107      	bne.n	81230 <usart_serial_putchar+0x30>
		while (usart_write(p_usart, c)!=0);
   81220:	461e      	mov	r6, r3
   81222:	4d1d      	ldr	r5, [pc, #116]	; (81298 <usart_serial_putchar+0x98>)
   81224:	4630      	mov	r0, r6
   81226:	4621      	mov	r1, r4
   81228:	47a8      	blx	r5
   8122a:	2800      	cmp	r0, #0
   8122c:	d1fa      	bne.n	81224 <usart_serial_putchar+0x24>
   8122e:	e022      	b.n	81276 <usart_serial_putchar+0x76>
		return 1;
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   81230:	4b1a      	ldr	r3, [pc, #104]	; (8129c <usart_serial_putchar+0x9c>)
   81232:	4298      	cmp	r0, r3
   81234:	d107      	bne.n	81246 <usart_serial_putchar+0x46>
		while (usart_write(p_usart, c)!=0);
   81236:	461e      	mov	r6, r3
   81238:	4d17      	ldr	r5, [pc, #92]	; (81298 <usart_serial_putchar+0x98>)
   8123a:	4630      	mov	r0, r6
   8123c:	4621      	mov	r1, r4
   8123e:	47a8      	blx	r5
   81240:	2800      	cmp	r0, #0
   81242:	d1fa      	bne.n	8123a <usart_serial_putchar+0x3a>
   81244:	e019      	b.n	8127a <usart_serial_putchar+0x7a>
		return 1;
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   81246:	4b16      	ldr	r3, [pc, #88]	; (812a0 <usart_serial_putchar+0xa0>)
   81248:	4298      	cmp	r0, r3
   8124a:	d107      	bne.n	8125c <usart_serial_putchar+0x5c>
		while (usart_write(p_usart, c)!=0);
   8124c:	461e      	mov	r6, r3
   8124e:	4d12      	ldr	r5, [pc, #72]	; (81298 <usart_serial_putchar+0x98>)
   81250:	4630      	mov	r0, r6
   81252:	4621      	mov	r1, r4
   81254:	47a8      	blx	r5
   81256:	2800      	cmp	r0, #0
   81258:	d1fa      	bne.n	81250 <usart_serial_putchar+0x50>
   8125a:	e010      	b.n	8127e <usart_serial_putchar+0x7e>
		return 1;
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   8125c:	4b11      	ldr	r3, [pc, #68]	; (812a4 <usart_serial_putchar+0xa4>)
   8125e:	4298      	cmp	r0, r3
   81260:	d10f      	bne.n	81282 <usart_serial_putchar+0x82>
		while (usart_write(p_usart, c)!=0);
   81262:	461e      	mov	r6, r3
   81264:	4d0c      	ldr	r5, [pc, #48]	; (81298 <usart_serial_putchar+0x98>)
   81266:	4630      	mov	r0, r6
   81268:	4621      	mov	r1, r4
   8126a:	47a8      	blx	r5
   8126c:	2800      	cmp	r0, #0
   8126e:	d1fa      	bne.n	81266 <usart_serial_putchar+0x66>
   81270:	e009      	b.n	81286 <usart_serial_putchar+0x86>
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
#ifdef UART
	if (UART == (Uart*)p_usart) {
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
   81272:	2001      	movs	r0, #1
   81274:	bd70      	pop	{r4, r5, r6, pc}
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   81276:	2001      	movs	r0, #1
   81278:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   8127a:	2001      	movs	r0, #1
   8127c:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   8127e:	2001      	movs	r0, #1
   81280:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
	}
# endif
#endif /* ifdef USART */

	return 0;
   81282:	2000      	movs	r0, #0
   81284:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   81286:	2001      	movs	r0, #1
	}
# endif
#endif /* ifdef USART */

	return 0;
}
   81288:	bd70      	pop	{r4, r5, r6, pc}
   8128a:	bf00      	nop
   8128c:	400e0800 	.word	0x400e0800
   81290:	00080409 	.word	0x00080409
   81294:	40098000 	.word	0x40098000
   81298:	0008042d 	.word	0x0008042d
   8129c:	4009c000 	.word	0x4009c000
   812a0:	400a0000 	.word	0x400a0000
   812a4:	400a4000 	.word	0x400a4000

000812a8 <init_interrupt>:

void init_interrupt(void){
   812a8:	b530      	push	{r4, r5, lr}
   812aa:	b083      	sub	sp, #12
	printf("\nInit_interrupt");
   812ac:	4811      	ldr	r0, [pc, #68]	; (812f4 <init_interrupt+0x4c>)
   812ae:	4b12      	ldr	r3, [pc, #72]	; (812f8 <init_interrupt+0x50>)
   812b0:	4798      	blx	r3
	
	pmc_enable_periph_clk(ID_PIOC);
   812b2:	200d      	movs	r0, #13
   812b4:	4b11      	ldr	r3, [pc, #68]	; (812fc <init_interrupt+0x54>)
   812b6:	4798      	blx	r3
	
	pio_set_input(PIOC,INTERRUPT,PIO_PULLUP);
   812b8:	4c11      	ldr	r4, [pc, #68]	; (81300 <init_interrupt+0x58>)
   812ba:	4620      	mov	r0, r4
   812bc:	2150      	movs	r1, #80	; 0x50
   812be:	2201      	movs	r2, #1
   812c0:	4b10      	ldr	r3, [pc, #64]	; (81304 <init_interrupt+0x5c>)
   812c2:	4798      	blx	r3
	
	pio_handler_set(PIOC,ID_PIOC,INTERRUPT,PIO_IT_EDGE,addOne);
   812c4:	4b10      	ldr	r3, [pc, #64]	; (81308 <init_interrupt+0x60>)
   812c6:	9300      	str	r3, [sp, #0]
   812c8:	4620      	mov	r0, r4
   812ca:	210d      	movs	r1, #13
   812cc:	2250      	movs	r2, #80	; 0x50
   812ce:	2340      	movs	r3, #64	; 0x40
   812d0:	4d0e      	ldr	r5, [pc, #56]	; (8130c <init_interrupt+0x64>)
   812d2:	47a8      	blx	r5

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   812d4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
   812d8:	4b0d      	ldr	r3, [pc, #52]	; (81310 <init_interrupt+0x68>)
   812da:	601a      	str	r2, [r3, #0]
	
	NVIC_EnableIRQ(PIOC_IRQn);
	
	pio_enable_interrupt(PIOC,INTERRUPT);
   812dc:	4620      	mov	r0, r4
   812de:	2150      	movs	r1, #80	; 0x50
   812e0:	4b0c      	ldr	r3, [pc, #48]	; (81314 <init_interrupt+0x6c>)
   812e2:	4798      	blx	r3
	
	cpu_irq_enable();
   812e4:	2201      	movs	r2, #1
   812e6:	4b0c      	ldr	r3, [pc, #48]	; (81318 <init_interrupt+0x70>)
   812e8:	701a      	strb	r2, [r3, #0]
   812ea:	f3bf 8f5f 	dmb	sy
   812ee:	b662      	cpsie	i
}
   812f0:	b003      	add	sp, #12
   812f2:	bd30      	pop	{r4, r5, pc}
   812f4:	00087a3c 	.word	0x00087a3c
   812f8:	00081e2d 	.word	0x00081e2d
   812fc:	00080e91 	.word	0x00080e91
   81300:	400e1200 	.word	0x400e1200
   81304:	00080ab5 	.word	0x00080ab5
   81308:	00081109 	.word	0x00081109
   8130c:	00080d1d 	.word	0x00080d1d
   81310:	e000e100 	.word	0xe000e100
   81314:	00080b41 	.word	0x00080b41
   81318:	2007012c 	.word	0x2007012c

0008131c <main>:




int main (void)
{
   8131c:	b570      	push	{r4, r5, r6, lr}
   8131e:	b084      	sub	sp, #16
	sysclk_init();
   81320:	4b39      	ldr	r3, [pc, #228]	; (81408 <main+0xec>)
   81322:	4798      	blx	r3
	board_init();
   81324:	4b39      	ldr	r3, [pc, #228]	; (8140c <main+0xf0>)
   81326:	4798      	blx	r3
   81328:	200b      	movs	r0, #11
   8132a:	4c39      	ldr	r4, [pc, #228]	; (81410 <main+0xf4>)
   8132c:	47a0      	blx	r4
   8132e:	200c      	movs	r0, #12
   81330:	47a0      	blx	r4
   81332:	200d      	movs	r0, #13
   81334:	47a0      	blx	r4
   81336:	200e      	movs	r0, #14
   81338:	47a0      	blx	r4
	ioport_init();
	delayInit();
   8133a:	4b36      	ldr	r3, [pc, #216]	; (81414 <main+0xf8>)
   8133c:	4798      	blx	r3
	initRegulator();
   8133e:	4b36      	ldr	r3, [pc, #216]	; (81418 <main+0xfc>)
   81340:	4798      	blx	r3
	initMotor();
   81342:	4b36      	ldr	r3, [pc, #216]	; (8141c <main+0x100>)
   81344:	4798      	blx	r3
	initRotateMotor();
   81346:	4b36      	ldr	r3, [pc, #216]	; (81420 <main+0x104>)
   81348:	4798      	blx	r3
   8134a:	2008      	movs	r0, #8
   8134c:	47a0      	blx	r4
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
   8134e:	4d35      	ldr	r5, [pc, #212]	; (81424 <main+0x108>)
   81350:	4b35      	ldr	r3, [pc, #212]	; (81428 <main+0x10c>)
   81352:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   81354:	4a35      	ldr	r2, [pc, #212]	; (8142c <main+0x110>)
   81356:	4b36      	ldr	r3, [pc, #216]	; (81430 <main+0x114>)
   81358:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   8135a:	4a36      	ldr	r2, [pc, #216]	; (81434 <main+0x118>)
   8135c:	4b36      	ldr	r3, [pc, #216]	; (81438 <main+0x11c>)
   8135e:	601a      	str	r2, [r3, #0]
static inline void usart_serial_init(usart_if p_usart,
		usart_serial_options_t *opt)
{
#if ((!SAM4L) && (!SAMG55))
	sam_uart_opt_t uart_settings;
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   81360:	4b36      	ldr	r3, [pc, #216]	; (8143c <main+0x120>)
   81362:	9301      	str	r3, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
   81364:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
   81368:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
   8136a:	f44f 6300 	mov.w	r3, #2048	; 0x800
   8136e:	9303      	str	r3, [sp, #12]
   81370:	2008      	movs	r0, #8
   81372:	47a0      	blx	r4
	
#ifdef UART
	if (UART == (Uart*)p_usart) {
		sysclk_enable_peripheral_clock(ID_UART);
		/* Configure UART */
		uart_init((Uart*)p_usart, &uart_settings);
   81374:	4628      	mov	r0, r5
   81376:	a901      	add	r1, sp, #4
   81378:	4b31      	ldr	r3, [pc, #196]	; (81440 <main+0x124>)
   8137a:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
   8137c:	4d31      	ldr	r5, [pc, #196]	; (81444 <main+0x128>)
   8137e:	682b      	ldr	r3, [r5, #0]
   81380:	6898      	ldr	r0, [r3, #8]
   81382:	2100      	movs	r1, #0
   81384:	4c30      	ldr	r4, [pc, #192]	; (81448 <main+0x12c>)
   81386:	47a0      	blx	r4
	setbuf(stdin, NULL);
   81388:	682b      	ldr	r3, [r5, #0]
   8138a:	6858      	ldr	r0, [r3, #4]
   8138c:	2100      	movs	r1, #0
   8138e:	47a0      	blx	r4
	};
	
	/* Configure console UART. */
	sysclk_enable_peripheral_clock(CONSOLE_UART_ID);
	stdio_serial_init(CONF_UART, &uart_serial_options);
	printf("Konsolen reado\n");
   81390:	482e      	ldr	r0, [pc, #184]	; (8144c <main+0x130>)
   81392:	4c2f      	ldr	r4, [pc, #188]	; (81450 <main+0x134>)
   81394:	47a0      	blx	r4
	printf("===============\n");
   81396:	482f      	ldr	r0, [pc, #188]	; (81454 <main+0x138>)
   81398:	47a0      	blx	r4
	printf("-- %s\n\r", BOARD_NAME);
   8139a:	482f      	ldr	r0, [pc, #188]	; (81458 <main+0x13c>)
   8139c:	492f      	ldr	r1, [pc, #188]	; (8145c <main+0x140>)
   8139e:	47a0      	blx	r4
	printf("-- Compiled: %s %s --\n\r", __DATE__, __TIME__);
   813a0:	482f      	ldr	r0, [pc, #188]	; (81460 <main+0x144>)
   813a2:	4930      	ldr	r1, [pc, #192]	; (81464 <main+0x148>)
   813a4:	4a30      	ldr	r2, [pc, #192]	; (81468 <main+0x14c>)
   813a6:	47a0      	blx	r4
	printf("Whilesatsen");
   813a8:	4830      	ldr	r0, [pc, #192]	; (8146c <main+0x150>)
   813aa:	47a0      	blx	r4
	delayInit();
	initRegulator();
	initMotor();
	initRotateMotor();
	configure_console();
	initDrive();
   813ac:	4b30      	ldr	r3, [pc, #192]	; (81470 <main+0x154>)
   813ae:	4798      	blx	r3
	init_sensor();
   813b0:	4b30      	ldr	r3, [pc, #192]	; (81474 <main+0x158>)
   813b2:	4798      	blx	r3
	init_twi_functions();
   813b4:	4b30      	ldr	r3, [pc, #192]	; (81478 <main+0x15c>)
   813b6:	4798      	blx	r3
	init_interrupt();
   813b8:	4b30      	ldr	r3, [pc, #192]	; (8147c <main+0x160>)
   813ba:	4798      	blx	r3
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   813bc:	4b30      	ldr	r3, [pc, #192]	; (81480 <main+0x164>)
   813be:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   813c2:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   813c4:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   813c8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
   813cc:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   813ce:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   813d2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   813d6:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   813d8:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		
// 		
// 		sprintf(str,"\nSensor: %d",sensor);
//  		printf (str);
		
		angle = (angle + 90) % 360;
   813dc:	4c29      	ldr	r4, [pc, #164]	; (81484 <main+0x168>)
   813de:	4e2a      	ldr	r6, [pc, #168]	; (81488 <main+0x16c>)
		
		rotate(angle);
   813e0:	4d2a      	ldr	r5, [pc, #168]	; (8148c <main+0x170>)
		
// 		
// 		sprintf(str,"\nSensor: %d",sensor);
//  		printf (str);
		
		angle = (angle + 90) % 360;
   813e2:	6821      	ldr	r1, [r4, #0]
   813e4:	315a      	adds	r1, #90	; 0x5a
   813e6:	fb81 2306 	smull	r2, r3, r1, r6
   813ea:	18c8      	adds	r0, r1, r3
   813ec:	17cb      	asrs	r3, r1, #31
   813ee:	ebc3 2020 	rsb	r0, r3, r0, asr #8
   813f2:	f44f 73b4 	mov.w	r3, #360	; 0x168
   813f6:	fb03 1010 	mls	r0, r3, r0, r1
   813fa:	6020      	str	r0, [r4, #0]
		
		rotate(angle);
   813fc:	47a8      	blx	r5
		
		delayMicroseconds(500000);
   813fe:	4824      	ldr	r0, [pc, #144]	; (81490 <main+0x174>)
   81400:	4b24      	ldr	r3, [pc, #144]	; (81494 <main+0x178>)
   81402:	4798      	blx	r3
   81404:	e7ed      	b.n	813e2 <main+0xc6>
   81406:	bf00      	nop
   81408:	00080989 	.word	0x00080989
   8140c:	000809ed 	.word	0x000809ed
   81410:	00080e91 	.word	0x00080e91
   81414:	00080551 	.word	0x00080551
   81418:	0008054d 	.word	0x0008054d
   8141c:	000805c9 	.word	0x000805c9
   81420:	00080635 	.word	0x00080635
   81424:	400e0800 	.word	0x400e0800
   81428:	20070b58 	.word	0x20070b58
   8142c:	00081201 	.word	0x00081201
   81430:	20070b54 	.word	0x20070b54
   81434:	00081159 	.word	0x00081159
   81438:	20070b50 	.word	0x20070b50
   8143c:	0501bd00 	.word	0x0501bd00
   81440:	000803d1 	.word	0x000803d1
   81444:	20070560 	.word	0x20070560
   81448:	00081ee9 	.word	0x00081ee9
   8144c:	00087a4c 	.word	0x00087a4c
   81450:	00081e2d 	.word	0x00081e2d
   81454:	00087a5c 	.word	0x00087a5c
   81458:	00087a70 	.word	0x00087a70
   8145c:	00087a78 	.word	0x00087a78
   81460:	00087a88 	.word	0x00087a88
   81464:	00087aa0 	.word	0x00087aa0
   81468:	00087aac 	.word	0x00087aac
   8146c:	00087ab8 	.word	0x00087ab8
   81470:	000804b9 	.word	0x000804b9
   81474:	000801cd 	.word	0x000801cd
   81478:	00080201 	.word	0x00080201
   8147c:	000812a9 	.word	0x000812a9
   81480:	400e1200 	.word	0x400e1200
   81484:	20070b18 	.word	0x20070b18
   81488:	b60b60b7 	.word	0xb60b60b7
   8148c:	000806f9 	.word	0x000806f9
   81490:	0007a120 	.word	0x0007a120
   81494:	0008058d 	.word	0x0008058d

00081498 <__fpclassifyd>:
   81498:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   8149c:	b410      	push	{r4}
   8149e:	d008      	beq.n	814b2 <__fpclassifyd+0x1a>
   814a0:	4a0f      	ldr	r2, [pc, #60]	; (814e0 <__fpclassifyd+0x48>)
   814a2:	f5a3 1480 	sub.w	r4, r3, #1048576	; 0x100000
   814a6:	4294      	cmp	r4, r2
   814a8:	d80a      	bhi.n	814c0 <__fpclassifyd+0x28>
   814aa:	2004      	movs	r0, #4
   814ac:	f85d 4b04 	ldr.w	r4, [sp], #4
   814b0:	4770      	bx	lr
   814b2:	2800      	cmp	r0, #0
   814b4:	bf0c      	ite	eq
   814b6:	2002      	moveq	r0, #2
   814b8:	2003      	movne	r0, #3
   814ba:	f85d 4b04 	ldr.w	r4, [sp], #4
   814be:	4770      	bx	lr
   814c0:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   814c4:	d201      	bcs.n	814ca <__fpclassifyd+0x32>
   814c6:	2003      	movs	r0, #3
   814c8:	e7f7      	b.n	814ba <__fpclassifyd+0x22>
   814ca:	4a06      	ldr	r2, [pc, #24]	; (814e4 <__fpclassifyd+0x4c>)
   814cc:	4293      	cmp	r3, r2
   814ce:	d001      	beq.n	814d4 <__fpclassifyd+0x3c>
   814d0:	2000      	movs	r0, #0
   814d2:	e7f2      	b.n	814ba <__fpclassifyd+0x22>
   814d4:	f1d0 0001 	rsbs	r0, r0, #1
   814d8:	bf38      	it	cc
   814da:	2000      	movcc	r0, #0
   814dc:	e7ed      	b.n	814ba <__fpclassifyd+0x22>
   814de:	bf00      	nop
   814e0:	7fdfffff 	.word	0x7fdfffff
   814e4:	7ff00000 	.word	0x7ff00000

000814e8 <__aeabi_drsub>:
   814e8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   814ec:	e002      	b.n	814f4 <__adddf3>
   814ee:	bf00      	nop

000814f0 <__aeabi_dsub>:
   814f0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000814f4 <__adddf3>:
   814f4:	b530      	push	{r4, r5, lr}
   814f6:	ea4f 0441 	mov.w	r4, r1, lsl #1
   814fa:	ea4f 0543 	mov.w	r5, r3, lsl #1
   814fe:	ea94 0f05 	teq	r4, r5
   81502:	bf08      	it	eq
   81504:	ea90 0f02 	teqeq	r0, r2
   81508:	bf1f      	itttt	ne
   8150a:	ea54 0c00 	orrsne.w	ip, r4, r0
   8150e:	ea55 0c02 	orrsne.w	ip, r5, r2
   81512:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   81516:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   8151a:	f000 80e2 	beq.w	816e2 <__adddf3+0x1ee>
   8151e:	ea4f 5454 	mov.w	r4, r4, lsr #21
   81522:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   81526:	bfb8      	it	lt
   81528:	426d      	neglt	r5, r5
   8152a:	dd0c      	ble.n	81546 <__adddf3+0x52>
   8152c:	442c      	add	r4, r5
   8152e:	ea80 0202 	eor.w	r2, r0, r2
   81532:	ea81 0303 	eor.w	r3, r1, r3
   81536:	ea82 0000 	eor.w	r0, r2, r0
   8153a:	ea83 0101 	eor.w	r1, r3, r1
   8153e:	ea80 0202 	eor.w	r2, r0, r2
   81542:	ea81 0303 	eor.w	r3, r1, r3
   81546:	2d36      	cmp	r5, #54	; 0x36
   81548:	bf88      	it	hi
   8154a:	bd30      	pophi	{r4, r5, pc}
   8154c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   81550:	ea4f 3101 	mov.w	r1, r1, lsl #12
   81554:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   81558:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   8155c:	d002      	beq.n	81564 <__adddf3+0x70>
   8155e:	4240      	negs	r0, r0
   81560:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   81564:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   81568:	ea4f 3303 	mov.w	r3, r3, lsl #12
   8156c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   81570:	d002      	beq.n	81578 <__adddf3+0x84>
   81572:	4252      	negs	r2, r2
   81574:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   81578:	ea94 0f05 	teq	r4, r5
   8157c:	f000 80a7 	beq.w	816ce <__adddf3+0x1da>
   81580:	f1a4 0401 	sub.w	r4, r4, #1
   81584:	f1d5 0e20 	rsbs	lr, r5, #32
   81588:	db0d      	blt.n	815a6 <__adddf3+0xb2>
   8158a:	fa02 fc0e 	lsl.w	ip, r2, lr
   8158e:	fa22 f205 	lsr.w	r2, r2, r5
   81592:	1880      	adds	r0, r0, r2
   81594:	f141 0100 	adc.w	r1, r1, #0
   81598:	fa03 f20e 	lsl.w	r2, r3, lr
   8159c:	1880      	adds	r0, r0, r2
   8159e:	fa43 f305 	asr.w	r3, r3, r5
   815a2:	4159      	adcs	r1, r3
   815a4:	e00e      	b.n	815c4 <__adddf3+0xd0>
   815a6:	f1a5 0520 	sub.w	r5, r5, #32
   815aa:	f10e 0e20 	add.w	lr, lr, #32
   815ae:	2a01      	cmp	r2, #1
   815b0:	fa03 fc0e 	lsl.w	ip, r3, lr
   815b4:	bf28      	it	cs
   815b6:	f04c 0c02 	orrcs.w	ip, ip, #2
   815ba:	fa43 f305 	asr.w	r3, r3, r5
   815be:	18c0      	adds	r0, r0, r3
   815c0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   815c4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   815c8:	d507      	bpl.n	815da <__adddf3+0xe6>
   815ca:	f04f 0e00 	mov.w	lr, #0
   815ce:	f1dc 0c00 	rsbs	ip, ip, #0
   815d2:	eb7e 0000 	sbcs.w	r0, lr, r0
   815d6:	eb6e 0101 	sbc.w	r1, lr, r1
   815da:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   815de:	d31b      	bcc.n	81618 <__adddf3+0x124>
   815e0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   815e4:	d30c      	bcc.n	81600 <__adddf3+0x10c>
   815e6:	0849      	lsrs	r1, r1, #1
   815e8:	ea5f 0030 	movs.w	r0, r0, rrx
   815ec:	ea4f 0c3c 	mov.w	ip, ip, rrx
   815f0:	f104 0401 	add.w	r4, r4, #1
   815f4:	ea4f 5244 	mov.w	r2, r4, lsl #21
   815f8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   815fc:	f080 809a 	bcs.w	81734 <__adddf3+0x240>
   81600:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   81604:	bf08      	it	eq
   81606:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8160a:	f150 0000 	adcs.w	r0, r0, #0
   8160e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   81612:	ea41 0105 	orr.w	r1, r1, r5
   81616:	bd30      	pop	{r4, r5, pc}
   81618:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   8161c:	4140      	adcs	r0, r0
   8161e:	eb41 0101 	adc.w	r1, r1, r1
   81622:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   81626:	f1a4 0401 	sub.w	r4, r4, #1
   8162a:	d1e9      	bne.n	81600 <__adddf3+0x10c>
   8162c:	f091 0f00 	teq	r1, #0
   81630:	bf04      	itt	eq
   81632:	4601      	moveq	r1, r0
   81634:	2000      	moveq	r0, #0
   81636:	fab1 f381 	clz	r3, r1
   8163a:	bf08      	it	eq
   8163c:	3320      	addeq	r3, #32
   8163e:	f1a3 030b 	sub.w	r3, r3, #11
   81642:	f1b3 0220 	subs.w	r2, r3, #32
   81646:	da0c      	bge.n	81662 <__adddf3+0x16e>
   81648:	320c      	adds	r2, #12
   8164a:	dd08      	ble.n	8165e <__adddf3+0x16a>
   8164c:	f102 0c14 	add.w	ip, r2, #20
   81650:	f1c2 020c 	rsb	r2, r2, #12
   81654:	fa01 f00c 	lsl.w	r0, r1, ip
   81658:	fa21 f102 	lsr.w	r1, r1, r2
   8165c:	e00c      	b.n	81678 <__adddf3+0x184>
   8165e:	f102 0214 	add.w	r2, r2, #20
   81662:	bfd8      	it	le
   81664:	f1c2 0c20 	rsble	ip, r2, #32
   81668:	fa01 f102 	lsl.w	r1, r1, r2
   8166c:	fa20 fc0c 	lsr.w	ip, r0, ip
   81670:	bfdc      	itt	le
   81672:	ea41 010c 	orrle.w	r1, r1, ip
   81676:	4090      	lslle	r0, r2
   81678:	1ae4      	subs	r4, r4, r3
   8167a:	bfa2      	ittt	ge
   8167c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   81680:	4329      	orrge	r1, r5
   81682:	bd30      	popge	{r4, r5, pc}
   81684:	ea6f 0404 	mvn.w	r4, r4
   81688:	3c1f      	subs	r4, #31
   8168a:	da1c      	bge.n	816c6 <__adddf3+0x1d2>
   8168c:	340c      	adds	r4, #12
   8168e:	dc0e      	bgt.n	816ae <__adddf3+0x1ba>
   81690:	f104 0414 	add.w	r4, r4, #20
   81694:	f1c4 0220 	rsb	r2, r4, #32
   81698:	fa20 f004 	lsr.w	r0, r0, r4
   8169c:	fa01 f302 	lsl.w	r3, r1, r2
   816a0:	ea40 0003 	orr.w	r0, r0, r3
   816a4:	fa21 f304 	lsr.w	r3, r1, r4
   816a8:	ea45 0103 	orr.w	r1, r5, r3
   816ac:	bd30      	pop	{r4, r5, pc}
   816ae:	f1c4 040c 	rsb	r4, r4, #12
   816b2:	f1c4 0220 	rsb	r2, r4, #32
   816b6:	fa20 f002 	lsr.w	r0, r0, r2
   816ba:	fa01 f304 	lsl.w	r3, r1, r4
   816be:	ea40 0003 	orr.w	r0, r0, r3
   816c2:	4629      	mov	r1, r5
   816c4:	bd30      	pop	{r4, r5, pc}
   816c6:	fa21 f004 	lsr.w	r0, r1, r4
   816ca:	4629      	mov	r1, r5
   816cc:	bd30      	pop	{r4, r5, pc}
   816ce:	f094 0f00 	teq	r4, #0
   816d2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   816d6:	bf06      	itte	eq
   816d8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   816dc:	3401      	addeq	r4, #1
   816de:	3d01      	subne	r5, #1
   816e0:	e74e      	b.n	81580 <__adddf3+0x8c>
   816e2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   816e6:	bf18      	it	ne
   816e8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   816ec:	d029      	beq.n	81742 <__adddf3+0x24e>
   816ee:	ea94 0f05 	teq	r4, r5
   816f2:	bf08      	it	eq
   816f4:	ea90 0f02 	teqeq	r0, r2
   816f8:	d005      	beq.n	81706 <__adddf3+0x212>
   816fa:	ea54 0c00 	orrs.w	ip, r4, r0
   816fe:	bf04      	itt	eq
   81700:	4619      	moveq	r1, r3
   81702:	4610      	moveq	r0, r2
   81704:	bd30      	pop	{r4, r5, pc}
   81706:	ea91 0f03 	teq	r1, r3
   8170a:	bf1e      	ittt	ne
   8170c:	2100      	movne	r1, #0
   8170e:	2000      	movne	r0, #0
   81710:	bd30      	popne	{r4, r5, pc}
   81712:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   81716:	d105      	bne.n	81724 <__adddf3+0x230>
   81718:	0040      	lsls	r0, r0, #1
   8171a:	4149      	adcs	r1, r1
   8171c:	bf28      	it	cs
   8171e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   81722:	bd30      	pop	{r4, r5, pc}
   81724:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   81728:	bf3c      	itt	cc
   8172a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   8172e:	bd30      	popcc	{r4, r5, pc}
   81730:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   81734:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   81738:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   8173c:	f04f 0000 	mov.w	r0, #0
   81740:	bd30      	pop	{r4, r5, pc}
   81742:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   81746:	bf1a      	itte	ne
   81748:	4619      	movne	r1, r3
   8174a:	4610      	movne	r0, r2
   8174c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   81750:	bf1c      	itt	ne
   81752:	460b      	movne	r3, r1
   81754:	4602      	movne	r2, r0
   81756:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8175a:	bf06      	itte	eq
   8175c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   81760:	ea91 0f03 	teqeq	r1, r3
   81764:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   81768:	bd30      	pop	{r4, r5, pc}
   8176a:	bf00      	nop

0008176c <__aeabi_ui2d>:
   8176c:	f090 0f00 	teq	r0, #0
   81770:	bf04      	itt	eq
   81772:	2100      	moveq	r1, #0
   81774:	4770      	bxeq	lr
   81776:	b530      	push	{r4, r5, lr}
   81778:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8177c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   81780:	f04f 0500 	mov.w	r5, #0
   81784:	f04f 0100 	mov.w	r1, #0
   81788:	e750      	b.n	8162c <__adddf3+0x138>
   8178a:	bf00      	nop

0008178c <__aeabi_i2d>:
   8178c:	f090 0f00 	teq	r0, #0
   81790:	bf04      	itt	eq
   81792:	2100      	moveq	r1, #0
   81794:	4770      	bxeq	lr
   81796:	b530      	push	{r4, r5, lr}
   81798:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8179c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   817a0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   817a4:	bf48      	it	mi
   817a6:	4240      	negmi	r0, r0
   817a8:	f04f 0100 	mov.w	r1, #0
   817ac:	e73e      	b.n	8162c <__adddf3+0x138>
   817ae:	bf00      	nop

000817b0 <__aeabi_f2d>:
   817b0:	0042      	lsls	r2, r0, #1
   817b2:	ea4f 01e2 	mov.w	r1, r2, asr #3
   817b6:	ea4f 0131 	mov.w	r1, r1, rrx
   817ba:	ea4f 7002 	mov.w	r0, r2, lsl #28
   817be:	bf1f      	itttt	ne
   817c0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   817c4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   817c8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   817cc:	4770      	bxne	lr
   817ce:	f092 0f00 	teq	r2, #0
   817d2:	bf14      	ite	ne
   817d4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   817d8:	4770      	bxeq	lr
   817da:	b530      	push	{r4, r5, lr}
   817dc:	f44f 7460 	mov.w	r4, #896	; 0x380
   817e0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   817e4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   817e8:	e720      	b.n	8162c <__adddf3+0x138>
   817ea:	bf00      	nop

000817ec <__aeabi_ul2d>:
   817ec:	ea50 0201 	orrs.w	r2, r0, r1
   817f0:	bf08      	it	eq
   817f2:	4770      	bxeq	lr
   817f4:	b530      	push	{r4, r5, lr}
   817f6:	f04f 0500 	mov.w	r5, #0
   817fa:	e00a      	b.n	81812 <__aeabi_l2d+0x16>

000817fc <__aeabi_l2d>:
   817fc:	ea50 0201 	orrs.w	r2, r0, r1
   81800:	bf08      	it	eq
   81802:	4770      	bxeq	lr
   81804:	b530      	push	{r4, r5, lr}
   81806:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   8180a:	d502      	bpl.n	81812 <__aeabi_l2d+0x16>
   8180c:	4240      	negs	r0, r0
   8180e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   81812:	f44f 6480 	mov.w	r4, #1024	; 0x400
   81816:	f104 0432 	add.w	r4, r4, #50	; 0x32
   8181a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   8181e:	f43f aedc 	beq.w	815da <__adddf3+0xe6>
   81822:	f04f 0203 	mov.w	r2, #3
   81826:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   8182a:	bf18      	it	ne
   8182c:	3203      	addne	r2, #3
   8182e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   81832:	bf18      	it	ne
   81834:	3203      	addne	r2, #3
   81836:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   8183a:	f1c2 0320 	rsb	r3, r2, #32
   8183e:	fa00 fc03 	lsl.w	ip, r0, r3
   81842:	fa20 f002 	lsr.w	r0, r0, r2
   81846:	fa01 fe03 	lsl.w	lr, r1, r3
   8184a:	ea40 000e 	orr.w	r0, r0, lr
   8184e:	fa21 f102 	lsr.w	r1, r1, r2
   81852:	4414      	add	r4, r2
   81854:	e6c1      	b.n	815da <__adddf3+0xe6>
   81856:	bf00      	nop

00081858 <__aeabi_dmul>:
   81858:	b570      	push	{r4, r5, r6, lr}
   8185a:	f04f 0cff 	mov.w	ip, #255	; 0xff
   8185e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   81862:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   81866:	bf1d      	ittte	ne
   81868:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   8186c:	ea94 0f0c 	teqne	r4, ip
   81870:	ea95 0f0c 	teqne	r5, ip
   81874:	f000 f8de 	bleq	81a34 <__aeabi_dmul+0x1dc>
   81878:	442c      	add	r4, r5
   8187a:	ea81 0603 	eor.w	r6, r1, r3
   8187e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   81882:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   81886:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   8188a:	bf18      	it	ne
   8188c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   81890:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   81894:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   81898:	d038      	beq.n	8190c <__aeabi_dmul+0xb4>
   8189a:	fba0 ce02 	umull	ip, lr, r0, r2
   8189e:	f04f 0500 	mov.w	r5, #0
   818a2:	fbe1 e502 	umlal	lr, r5, r1, r2
   818a6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   818aa:	fbe0 e503 	umlal	lr, r5, r0, r3
   818ae:	f04f 0600 	mov.w	r6, #0
   818b2:	fbe1 5603 	umlal	r5, r6, r1, r3
   818b6:	f09c 0f00 	teq	ip, #0
   818ba:	bf18      	it	ne
   818bc:	f04e 0e01 	orrne.w	lr, lr, #1
   818c0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   818c4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   818c8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   818cc:	d204      	bcs.n	818d8 <__aeabi_dmul+0x80>
   818ce:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   818d2:	416d      	adcs	r5, r5
   818d4:	eb46 0606 	adc.w	r6, r6, r6
   818d8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   818dc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   818e0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   818e4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   818e8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   818ec:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   818f0:	bf88      	it	hi
   818f2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   818f6:	d81e      	bhi.n	81936 <__aeabi_dmul+0xde>
   818f8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   818fc:	bf08      	it	eq
   818fe:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   81902:	f150 0000 	adcs.w	r0, r0, #0
   81906:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8190a:	bd70      	pop	{r4, r5, r6, pc}
   8190c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   81910:	ea46 0101 	orr.w	r1, r6, r1
   81914:	ea40 0002 	orr.w	r0, r0, r2
   81918:	ea81 0103 	eor.w	r1, r1, r3
   8191c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   81920:	bfc2      	ittt	gt
   81922:	ebd4 050c 	rsbsgt	r5, r4, ip
   81926:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8192a:	bd70      	popgt	{r4, r5, r6, pc}
   8192c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   81930:	f04f 0e00 	mov.w	lr, #0
   81934:	3c01      	subs	r4, #1
   81936:	f300 80ab 	bgt.w	81a90 <__aeabi_dmul+0x238>
   8193a:	f114 0f36 	cmn.w	r4, #54	; 0x36
   8193e:	bfde      	ittt	le
   81940:	2000      	movle	r0, #0
   81942:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   81946:	bd70      	pople	{r4, r5, r6, pc}
   81948:	f1c4 0400 	rsb	r4, r4, #0
   8194c:	3c20      	subs	r4, #32
   8194e:	da35      	bge.n	819bc <__aeabi_dmul+0x164>
   81950:	340c      	adds	r4, #12
   81952:	dc1b      	bgt.n	8198c <__aeabi_dmul+0x134>
   81954:	f104 0414 	add.w	r4, r4, #20
   81958:	f1c4 0520 	rsb	r5, r4, #32
   8195c:	fa00 f305 	lsl.w	r3, r0, r5
   81960:	fa20 f004 	lsr.w	r0, r0, r4
   81964:	fa01 f205 	lsl.w	r2, r1, r5
   81968:	ea40 0002 	orr.w	r0, r0, r2
   8196c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   81970:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   81974:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   81978:	fa21 f604 	lsr.w	r6, r1, r4
   8197c:	eb42 0106 	adc.w	r1, r2, r6
   81980:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   81984:	bf08      	it	eq
   81986:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8198a:	bd70      	pop	{r4, r5, r6, pc}
   8198c:	f1c4 040c 	rsb	r4, r4, #12
   81990:	f1c4 0520 	rsb	r5, r4, #32
   81994:	fa00 f304 	lsl.w	r3, r0, r4
   81998:	fa20 f005 	lsr.w	r0, r0, r5
   8199c:	fa01 f204 	lsl.w	r2, r1, r4
   819a0:	ea40 0002 	orr.w	r0, r0, r2
   819a4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   819a8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   819ac:	f141 0100 	adc.w	r1, r1, #0
   819b0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   819b4:	bf08      	it	eq
   819b6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   819ba:	bd70      	pop	{r4, r5, r6, pc}
   819bc:	f1c4 0520 	rsb	r5, r4, #32
   819c0:	fa00 f205 	lsl.w	r2, r0, r5
   819c4:	ea4e 0e02 	orr.w	lr, lr, r2
   819c8:	fa20 f304 	lsr.w	r3, r0, r4
   819cc:	fa01 f205 	lsl.w	r2, r1, r5
   819d0:	ea43 0302 	orr.w	r3, r3, r2
   819d4:	fa21 f004 	lsr.w	r0, r1, r4
   819d8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   819dc:	fa21 f204 	lsr.w	r2, r1, r4
   819e0:	ea20 0002 	bic.w	r0, r0, r2
   819e4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   819e8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   819ec:	bf08      	it	eq
   819ee:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   819f2:	bd70      	pop	{r4, r5, r6, pc}
   819f4:	f094 0f00 	teq	r4, #0
   819f8:	d10f      	bne.n	81a1a <__aeabi_dmul+0x1c2>
   819fa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   819fe:	0040      	lsls	r0, r0, #1
   81a00:	eb41 0101 	adc.w	r1, r1, r1
   81a04:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   81a08:	bf08      	it	eq
   81a0a:	3c01      	subeq	r4, #1
   81a0c:	d0f7      	beq.n	819fe <__aeabi_dmul+0x1a6>
   81a0e:	ea41 0106 	orr.w	r1, r1, r6
   81a12:	f095 0f00 	teq	r5, #0
   81a16:	bf18      	it	ne
   81a18:	4770      	bxne	lr
   81a1a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   81a1e:	0052      	lsls	r2, r2, #1
   81a20:	eb43 0303 	adc.w	r3, r3, r3
   81a24:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   81a28:	bf08      	it	eq
   81a2a:	3d01      	subeq	r5, #1
   81a2c:	d0f7      	beq.n	81a1e <__aeabi_dmul+0x1c6>
   81a2e:	ea43 0306 	orr.w	r3, r3, r6
   81a32:	4770      	bx	lr
   81a34:	ea94 0f0c 	teq	r4, ip
   81a38:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   81a3c:	bf18      	it	ne
   81a3e:	ea95 0f0c 	teqne	r5, ip
   81a42:	d00c      	beq.n	81a5e <__aeabi_dmul+0x206>
   81a44:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81a48:	bf18      	it	ne
   81a4a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   81a4e:	d1d1      	bne.n	819f4 <__aeabi_dmul+0x19c>
   81a50:	ea81 0103 	eor.w	r1, r1, r3
   81a54:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81a58:	f04f 0000 	mov.w	r0, #0
   81a5c:	bd70      	pop	{r4, r5, r6, pc}
   81a5e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81a62:	bf06      	itte	eq
   81a64:	4610      	moveq	r0, r2
   81a66:	4619      	moveq	r1, r3
   81a68:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   81a6c:	d019      	beq.n	81aa2 <__aeabi_dmul+0x24a>
   81a6e:	ea94 0f0c 	teq	r4, ip
   81a72:	d102      	bne.n	81a7a <__aeabi_dmul+0x222>
   81a74:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   81a78:	d113      	bne.n	81aa2 <__aeabi_dmul+0x24a>
   81a7a:	ea95 0f0c 	teq	r5, ip
   81a7e:	d105      	bne.n	81a8c <__aeabi_dmul+0x234>
   81a80:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   81a84:	bf1c      	itt	ne
   81a86:	4610      	movne	r0, r2
   81a88:	4619      	movne	r1, r3
   81a8a:	d10a      	bne.n	81aa2 <__aeabi_dmul+0x24a>
   81a8c:	ea81 0103 	eor.w	r1, r1, r3
   81a90:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81a94:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   81a98:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   81a9c:	f04f 0000 	mov.w	r0, #0
   81aa0:	bd70      	pop	{r4, r5, r6, pc}
   81aa2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   81aa6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   81aaa:	bd70      	pop	{r4, r5, r6, pc}

00081aac <__aeabi_ddiv>:
   81aac:	b570      	push	{r4, r5, r6, lr}
   81aae:	f04f 0cff 	mov.w	ip, #255	; 0xff
   81ab2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   81ab6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   81aba:	bf1d      	ittte	ne
   81abc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   81ac0:	ea94 0f0c 	teqne	r4, ip
   81ac4:	ea95 0f0c 	teqne	r5, ip
   81ac8:	f000 f8a7 	bleq	81c1a <__aeabi_ddiv+0x16e>
   81acc:	eba4 0405 	sub.w	r4, r4, r5
   81ad0:	ea81 0e03 	eor.w	lr, r1, r3
   81ad4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   81ad8:	ea4f 3101 	mov.w	r1, r1, lsl #12
   81adc:	f000 8088 	beq.w	81bf0 <__aeabi_ddiv+0x144>
   81ae0:	ea4f 3303 	mov.w	r3, r3, lsl #12
   81ae4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   81ae8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   81aec:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   81af0:	ea4f 2202 	mov.w	r2, r2, lsl #8
   81af4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   81af8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   81afc:	ea4f 2600 	mov.w	r6, r0, lsl #8
   81b00:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   81b04:	429d      	cmp	r5, r3
   81b06:	bf08      	it	eq
   81b08:	4296      	cmpeq	r6, r2
   81b0a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   81b0e:	f504 7440 	add.w	r4, r4, #768	; 0x300
   81b12:	d202      	bcs.n	81b1a <__aeabi_ddiv+0x6e>
   81b14:	085b      	lsrs	r3, r3, #1
   81b16:	ea4f 0232 	mov.w	r2, r2, rrx
   81b1a:	1ab6      	subs	r6, r6, r2
   81b1c:	eb65 0503 	sbc.w	r5, r5, r3
   81b20:	085b      	lsrs	r3, r3, #1
   81b22:	ea4f 0232 	mov.w	r2, r2, rrx
   81b26:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   81b2a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   81b2e:	ebb6 0e02 	subs.w	lr, r6, r2
   81b32:	eb75 0e03 	sbcs.w	lr, r5, r3
   81b36:	bf22      	ittt	cs
   81b38:	1ab6      	subcs	r6, r6, r2
   81b3a:	4675      	movcs	r5, lr
   81b3c:	ea40 000c 	orrcs.w	r0, r0, ip
   81b40:	085b      	lsrs	r3, r3, #1
   81b42:	ea4f 0232 	mov.w	r2, r2, rrx
   81b46:	ebb6 0e02 	subs.w	lr, r6, r2
   81b4a:	eb75 0e03 	sbcs.w	lr, r5, r3
   81b4e:	bf22      	ittt	cs
   81b50:	1ab6      	subcs	r6, r6, r2
   81b52:	4675      	movcs	r5, lr
   81b54:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   81b58:	085b      	lsrs	r3, r3, #1
   81b5a:	ea4f 0232 	mov.w	r2, r2, rrx
   81b5e:	ebb6 0e02 	subs.w	lr, r6, r2
   81b62:	eb75 0e03 	sbcs.w	lr, r5, r3
   81b66:	bf22      	ittt	cs
   81b68:	1ab6      	subcs	r6, r6, r2
   81b6a:	4675      	movcs	r5, lr
   81b6c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   81b70:	085b      	lsrs	r3, r3, #1
   81b72:	ea4f 0232 	mov.w	r2, r2, rrx
   81b76:	ebb6 0e02 	subs.w	lr, r6, r2
   81b7a:	eb75 0e03 	sbcs.w	lr, r5, r3
   81b7e:	bf22      	ittt	cs
   81b80:	1ab6      	subcs	r6, r6, r2
   81b82:	4675      	movcs	r5, lr
   81b84:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   81b88:	ea55 0e06 	orrs.w	lr, r5, r6
   81b8c:	d018      	beq.n	81bc0 <__aeabi_ddiv+0x114>
   81b8e:	ea4f 1505 	mov.w	r5, r5, lsl #4
   81b92:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   81b96:	ea4f 1606 	mov.w	r6, r6, lsl #4
   81b9a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   81b9e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   81ba2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   81ba6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   81baa:	d1c0      	bne.n	81b2e <__aeabi_ddiv+0x82>
   81bac:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   81bb0:	d10b      	bne.n	81bca <__aeabi_ddiv+0x11e>
   81bb2:	ea41 0100 	orr.w	r1, r1, r0
   81bb6:	f04f 0000 	mov.w	r0, #0
   81bba:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   81bbe:	e7b6      	b.n	81b2e <__aeabi_ddiv+0x82>
   81bc0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   81bc4:	bf04      	itt	eq
   81bc6:	4301      	orreq	r1, r0
   81bc8:	2000      	moveq	r0, #0
   81bca:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   81bce:	bf88      	it	hi
   81bd0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   81bd4:	f63f aeaf 	bhi.w	81936 <__aeabi_dmul+0xde>
   81bd8:	ebb5 0c03 	subs.w	ip, r5, r3
   81bdc:	bf04      	itt	eq
   81bde:	ebb6 0c02 	subseq.w	ip, r6, r2
   81be2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   81be6:	f150 0000 	adcs.w	r0, r0, #0
   81bea:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   81bee:	bd70      	pop	{r4, r5, r6, pc}
   81bf0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   81bf4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   81bf8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   81bfc:	bfc2      	ittt	gt
   81bfe:	ebd4 050c 	rsbsgt	r5, r4, ip
   81c02:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   81c06:	bd70      	popgt	{r4, r5, r6, pc}
   81c08:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   81c0c:	f04f 0e00 	mov.w	lr, #0
   81c10:	3c01      	subs	r4, #1
   81c12:	e690      	b.n	81936 <__aeabi_dmul+0xde>
   81c14:	ea45 0e06 	orr.w	lr, r5, r6
   81c18:	e68d      	b.n	81936 <__aeabi_dmul+0xde>
   81c1a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   81c1e:	ea94 0f0c 	teq	r4, ip
   81c22:	bf08      	it	eq
   81c24:	ea95 0f0c 	teqeq	r5, ip
   81c28:	f43f af3b 	beq.w	81aa2 <__aeabi_dmul+0x24a>
   81c2c:	ea94 0f0c 	teq	r4, ip
   81c30:	d10a      	bne.n	81c48 <__aeabi_ddiv+0x19c>
   81c32:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   81c36:	f47f af34 	bne.w	81aa2 <__aeabi_dmul+0x24a>
   81c3a:	ea95 0f0c 	teq	r5, ip
   81c3e:	f47f af25 	bne.w	81a8c <__aeabi_dmul+0x234>
   81c42:	4610      	mov	r0, r2
   81c44:	4619      	mov	r1, r3
   81c46:	e72c      	b.n	81aa2 <__aeabi_dmul+0x24a>
   81c48:	ea95 0f0c 	teq	r5, ip
   81c4c:	d106      	bne.n	81c5c <__aeabi_ddiv+0x1b0>
   81c4e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   81c52:	f43f aefd 	beq.w	81a50 <__aeabi_dmul+0x1f8>
   81c56:	4610      	mov	r0, r2
   81c58:	4619      	mov	r1, r3
   81c5a:	e722      	b.n	81aa2 <__aeabi_dmul+0x24a>
   81c5c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81c60:	bf18      	it	ne
   81c62:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   81c66:	f47f aec5 	bne.w	819f4 <__aeabi_dmul+0x19c>
   81c6a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   81c6e:	f47f af0d 	bne.w	81a8c <__aeabi_dmul+0x234>
   81c72:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   81c76:	f47f aeeb 	bne.w	81a50 <__aeabi_dmul+0x1f8>
   81c7a:	e712      	b.n	81aa2 <__aeabi_dmul+0x24a>

00081c7c <__gedf2>:
   81c7c:	f04f 3cff 	mov.w	ip, #4294967295
   81c80:	e006      	b.n	81c90 <__cmpdf2+0x4>
   81c82:	bf00      	nop

00081c84 <__ledf2>:
   81c84:	f04f 0c01 	mov.w	ip, #1
   81c88:	e002      	b.n	81c90 <__cmpdf2+0x4>
   81c8a:	bf00      	nop

00081c8c <__cmpdf2>:
   81c8c:	f04f 0c01 	mov.w	ip, #1
   81c90:	f84d cd04 	str.w	ip, [sp, #-4]!
   81c94:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   81c98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   81c9c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   81ca0:	bf18      	it	ne
   81ca2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   81ca6:	d01b      	beq.n	81ce0 <__cmpdf2+0x54>
   81ca8:	b001      	add	sp, #4
   81caa:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   81cae:	bf0c      	ite	eq
   81cb0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   81cb4:	ea91 0f03 	teqne	r1, r3
   81cb8:	bf02      	ittt	eq
   81cba:	ea90 0f02 	teqeq	r0, r2
   81cbe:	2000      	moveq	r0, #0
   81cc0:	4770      	bxeq	lr
   81cc2:	f110 0f00 	cmn.w	r0, #0
   81cc6:	ea91 0f03 	teq	r1, r3
   81cca:	bf58      	it	pl
   81ccc:	4299      	cmppl	r1, r3
   81cce:	bf08      	it	eq
   81cd0:	4290      	cmpeq	r0, r2
   81cd2:	bf2c      	ite	cs
   81cd4:	17d8      	asrcs	r0, r3, #31
   81cd6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   81cda:	f040 0001 	orr.w	r0, r0, #1
   81cde:	4770      	bx	lr
   81ce0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   81ce4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   81ce8:	d102      	bne.n	81cf0 <__cmpdf2+0x64>
   81cea:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   81cee:	d107      	bne.n	81d00 <__cmpdf2+0x74>
   81cf0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   81cf4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   81cf8:	d1d6      	bne.n	81ca8 <__cmpdf2+0x1c>
   81cfa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   81cfe:	d0d3      	beq.n	81ca8 <__cmpdf2+0x1c>
   81d00:	f85d 0b04 	ldr.w	r0, [sp], #4
   81d04:	4770      	bx	lr
   81d06:	bf00      	nop

00081d08 <__aeabi_cdrcmple>:
   81d08:	4684      	mov	ip, r0
   81d0a:	4610      	mov	r0, r2
   81d0c:	4662      	mov	r2, ip
   81d0e:	468c      	mov	ip, r1
   81d10:	4619      	mov	r1, r3
   81d12:	4663      	mov	r3, ip
   81d14:	e000      	b.n	81d18 <__aeabi_cdcmpeq>
   81d16:	bf00      	nop

00081d18 <__aeabi_cdcmpeq>:
   81d18:	b501      	push	{r0, lr}
   81d1a:	f7ff ffb7 	bl	81c8c <__cmpdf2>
   81d1e:	2800      	cmp	r0, #0
   81d20:	bf48      	it	mi
   81d22:	f110 0f00 	cmnmi.w	r0, #0
   81d26:	bd01      	pop	{r0, pc}

00081d28 <__aeabi_dcmpeq>:
   81d28:	f84d ed08 	str.w	lr, [sp, #-8]!
   81d2c:	f7ff fff4 	bl	81d18 <__aeabi_cdcmpeq>
   81d30:	bf0c      	ite	eq
   81d32:	2001      	moveq	r0, #1
   81d34:	2000      	movne	r0, #0
   81d36:	f85d fb08 	ldr.w	pc, [sp], #8
   81d3a:	bf00      	nop

00081d3c <__aeabi_dcmplt>:
   81d3c:	f84d ed08 	str.w	lr, [sp, #-8]!
   81d40:	f7ff ffea 	bl	81d18 <__aeabi_cdcmpeq>
   81d44:	bf34      	ite	cc
   81d46:	2001      	movcc	r0, #1
   81d48:	2000      	movcs	r0, #0
   81d4a:	f85d fb08 	ldr.w	pc, [sp], #8
   81d4e:	bf00      	nop

00081d50 <__aeabi_dcmple>:
   81d50:	f84d ed08 	str.w	lr, [sp, #-8]!
   81d54:	f7ff ffe0 	bl	81d18 <__aeabi_cdcmpeq>
   81d58:	bf94      	ite	ls
   81d5a:	2001      	movls	r0, #1
   81d5c:	2000      	movhi	r0, #0
   81d5e:	f85d fb08 	ldr.w	pc, [sp], #8
   81d62:	bf00      	nop

00081d64 <__aeabi_dcmpge>:
   81d64:	f84d ed08 	str.w	lr, [sp, #-8]!
   81d68:	f7ff ffce 	bl	81d08 <__aeabi_cdrcmple>
   81d6c:	bf94      	ite	ls
   81d6e:	2001      	movls	r0, #1
   81d70:	2000      	movhi	r0, #0
   81d72:	f85d fb08 	ldr.w	pc, [sp], #8
   81d76:	bf00      	nop

00081d78 <__aeabi_dcmpgt>:
   81d78:	f84d ed08 	str.w	lr, [sp, #-8]!
   81d7c:	f7ff ffc4 	bl	81d08 <__aeabi_cdrcmple>
   81d80:	bf34      	ite	cc
   81d82:	2001      	movcc	r0, #1
   81d84:	2000      	movcs	r0, #0
   81d86:	f85d fb08 	ldr.w	pc, [sp], #8
   81d8a:	bf00      	nop

00081d8c <__aeabi_d2iz>:
   81d8c:	ea4f 0241 	mov.w	r2, r1, lsl #1
   81d90:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   81d94:	d215      	bcs.n	81dc2 <__aeabi_d2iz+0x36>
   81d96:	d511      	bpl.n	81dbc <__aeabi_d2iz+0x30>
   81d98:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   81d9c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   81da0:	d912      	bls.n	81dc8 <__aeabi_d2iz+0x3c>
   81da2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   81da6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   81daa:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   81dae:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   81db2:	fa23 f002 	lsr.w	r0, r3, r2
   81db6:	bf18      	it	ne
   81db8:	4240      	negne	r0, r0
   81dba:	4770      	bx	lr
   81dbc:	f04f 0000 	mov.w	r0, #0
   81dc0:	4770      	bx	lr
   81dc2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   81dc6:	d105      	bne.n	81dd4 <__aeabi_d2iz+0x48>
   81dc8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   81dcc:	bf08      	it	eq
   81dce:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   81dd2:	4770      	bx	lr
   81dd4:	f04f 0000 	mov.w	r0, #0
   81dd8:	4770      	bx	lr
   81dda:	bf00      	nop

00081ddc <__libc_init_array>:
   81ddc:	b570      	push	{r4, r5, r6, lr}
   81dde:	4e0f      	ldr	r6, [pc, #60]	; (81e1c <__libc_init_array+0x40>)
   81de0:	4d0f      	ldr	r5, [pc, #60]	; (81e20 <__libc_init_array+0x44>)
   81de2:	1b76      	subs	r6, r6, r5
   81de4:	10b6      	asrs	r6, r6, #2
   81de6:	d007      	beq.n	81df8 <__libc_init_array+0x1c>
   81de8:	3d04      	subs	r5, #4
   81dea:	2400      	movs	r4, #0
   81dec:	3401      	adds	r4, #1
   81dee:	f855 3f04 	ldr.w	r3, [r5, #4]!
   81df2:	4798      	blx	r3
   81df4:	42a6      	cmp	r6, r4
   81df6:	d1f9      	bne.n	81dec <__libc_init_array+0x10>
   81df8:	4e0a      	ldr	r6, [pc, #40]	; (81e24 <__libc_init_array+0x48>)
   81dfa:	4d0b      	ldr	r5, [pc, #44]	; (81e28 <__libc_init_array+0x4c>)
   81dfc:	f005 ff36 	bl	87c6c <_init>
   81e00:	1b76      	subs	r6, r6, r5
   81e02:	10b6      	asrs	r6, r6, #2
   81e04:	d008      	beq.n	81e18 <__libc_init_array+0x3c>
   81e06:	3d04      	subs	r5, #4
   81e08:	2400      	movs	r4, #0
   81e0a:	3401      	adds	r4, #1
   81e0c:	f855 3f04 	ldr.w	r3, [r5, #4]!
   81e10:	4798      	blx	r3
   81e12:	42a6      	cmp	r6, r4
   81e14:	d1f9      	bne.n	81e0a <__libc_init_array+0x2e>
   81e16:	bd70      	pop	{r4, r5, r6, pc}
   81e18:	bd70      	pop	{r4, r5, r6, pc}
   81e1a:	bf00      	nop
   81e1c:	00087c78 	.word	0x00087c78
   81e20:	00087c78 	.word	0x00087c78
   81e24:	00087c80 	.word	0x00087c80
   81e28:	00087c78 	.word	0x00087c78

00081e2c <iprintf>:
   81e2c:	b40f      	push	{r0, r1, r2, r3}
   81e2e:	b510      	push	{r4, lr}
   81e30:	4b07      	ldr	r3, [pc, #28]	; (81e50 <iprintf+0x24>)
   81e32:	b082      	sub	sp, #8
   81e34:	ac04      	add	r4, sp, #16
   81e36:	f854 2b04 	ldr.w	r2, [r4], #4
   81e3a:	6818      	ldr	r0, [r3, #0]
   81e3c:	4623      	mov	r3, r4
   81e3e:	6881      	ldr	r1, [r0, #8]
   81e40:	9401      	str	r4, [sp, #4]
   81e42:	f001 fbab 	bl	8359c <_vfiprintf_r>
   81e46:	b002      	add	sp, #8
   81e48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   81e4c:	b004      	add	sp, #16
   81e4e:	4770      	bx	lr
   81e50:	20070560 	.word	0x20070560

00081e54 <memset>:
   81e54:	b4f0      	push	{r4, r5, r6, r7}
   81e56:	0784      	lsls	r4, r0, #30
   81e58:	d043      	beq.n	81ee2 <memset+0x8e>
   81e5a:	1e54      	subs	r4, r2, #1
   81e5c:	2a00      	cmp	r2, #0
   81e5e:	d03e      	beq.n	81ede <memset+0x8a>
   81e60:	b2cd      	uxtb	r5, r1
   81e62:	4603      	mov	r3, r0
   81e64:	e003      	b.n	81e6e <memset+0x1a>
   81e66:	1e62      	subs	r2, r4, #1
   81e68:	2c00      	cmp	r4, #0
   81e6a:	d038      	beq.n	81ede <memset+0x8a>
   81e6c:	4614      	mov	r4, r2
   81e6e:	f803 5b01 	strb.w	r5, [r3], #1
   81e72:	079a      	lsls	r2, r3, #30
   81e74:	d1f7      	bne.n	81e66 <memset+0x12>
   81e76:	2c03      	cmp	r4, #3
   81e78:	d92a      	bls.n	81ed0 <memset+0x7c>
   81e7a:	b2cd      	uxtb	r5, r1
   81e7c:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   81e80:	2c0f      	cmp	r4, #15
   81e82:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   81e86:	d915      	bls.n	81eb4 <memset+0x60>
   81e88:	f1a4 0710 	sub.w	r7, r4, #16
   81e8c:	093f      	lsrs	r7, r7, #4
   81e8e:	f103 0610 	add.w	r6, r3, #16
   81e92:	eb06 1607 	add.w	r6, r6, r7, lsl #4
   81e96:	461a      	mov	r2, r3
   81e98:	6015      	str	r5, [r2, #0]
   81e9a:	6055      	str	r5, [r2, #4]
   81e9c:	6095      	str	r5, [r2, #8]
   81e9e:	60d5      	str	r5, [r2, #12]
   81ea0:	3210      	adds	r2, #16
   81ea2:	42b2      	cmp	r2, r6
   81ea4:	d1f8      	bne.n	81e98 <memset+0x44>
   81ea6:	f004 040f 	and.w	r4, r4, #15
   81eaa:	3701      	adds	r7, #1
   81eac:	2c03      	cmp	r4, #3
   81eae:	eb03 1307 	add.w	r3, r3, r7, lsl #4
   81eb2:	d90d      	bls.n	81ed0 <memset+0x7c>
   81eb4:	461e      	mov	r6, r3
   81eb6:	4622      	mov	r2, r4
   81eb8:	3a04      	subs	r2, #4
   81eba:	2a03      	cmp	r2, #3
   81ebc:	f846 5b04 	str.w	r5, [r6], #4
   81ec0:	d8fa      	bhi.n	81eb8 <memset+0x64>
   81ec2:	1f22      	subs	r2, r4, #4
   81ec4:	f022 0203 	bic.w	r2, r2, #3
   81ec8:	3204      	adds	r2, #4
   81eca:	4413      	add	r3, r2
   81ecc:	f004 0403 	and.w	r4, r4, #3
   81ed0:	b12c      	cbz	r4, 81ede <memset+0x8a>
   81ed2:	b2c9      	uxtb	r1, r1
   81ed4:	441c      	add	r4, r3
   81ed6:	f803 1b01 	strb.w	r1, [r3], #1
   81eda:	42a3      	cmp	r3, r4
   81edc:	d1fb      	bne.n	81ed6 <memset+0x82>
   81ede:	bcf0      	pop	{r4, r5, r6, r7}
   81ee0:	4770      	bx	lr
   81ee2:	4614      	mov	r4, r2
   81ee4:	4603      	mov	r3, r0
   81ee6:	e7c6      	b.n	81e76 <memset+0x22>

00081ee8 <setbuf>:
   81ee8:	2900      	cmp	r1, #0
   81eea:	bf0c      	ite	eq
   81eec:	2202      	moveq	r2, #2
   81eee:	2200      	movne	r2, #0
   81ef0:	f44f 6380 	mov.w	r3, #1024	; 0x400
   81ef4:	f000 b800 	b.w	81ef8 <setvbuf>

00081ef8 <setvbuf>:
   81ef8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81efc:	4d3c      	ldr	r5, [pc, #240]	; (81ff0 <setvbuf+0xf8>)
   81efe:	4604      	mov	r4, r0
   81f00:	682d      	ldr	r5, [r5, #0]
   81f02:	4688      	mov	r8, r1
   81f04:	4616      	mov	r6, r2
   81f06:	461f      	mov	r7, r3
   81f08:	b115      	cbz	r5, 81f10 <setvbuf+0x18>
   81f0a:	6bab      	ldr	r3, [r5, #56]	; 0x38
   81f0c:	2b00      	cmp	r3, #0
   81f0e:	d04f      	beq.n	81fb0 <setvbuf+0xb8>
   81f10:	2e02      	cmp	r6, #2
   81f12:	d830      	bhi.n	81f76 <setvbuf+0x7e>
   81f14:	2f00      	cmp	r7, #0
   81f16:	db2e      	blt.n	81f76 <setvbuf+0x7e>
   81f18:	4628      	mov	r0, r5
   81f1a:	4621      	mov	r1, r4
   81f1c:	f003 fac8 	bl	854b0 <_fflush_r>
   81f20:	89a3      	ldrh	r3, [r4, #12]
   81f22:	2200      	movs	r2, #0
   81f24:	6062      	str	r2, [r4, #4]
   81f26:	61a2      	str	r2, [r4, #24]
   81f28:	061a      	lsls	r2, r3, #24
   81f2a:	d428      	bmi.n	81f7e <setvbuf+0x86>
   81f2c:	f023 0383 	bic.w	r3, r3, #131	; 0x83
   81f30:	b29b      	uxth	r3, r3
   81f32:	2e02      	cmp	r6, #2
   81f34:	81a3      	strh	r3, [r4, #12]
   81f36:	d02d      	beq.n	81f94 <setvbuf+0x9c>
   81f38:	f1b8 0f00 	cmp.w	r8, #0
   81f3c:	d03c      	beq.n	81fb8 <setvbuf+0xc0>
   81f3e:	2e01      	cmp	r6, #1
   81f40:	d013      	beq.n	81f6a <setvbuf+0x72>
   81f42:	b29b      	uxth	r3, r3
   81f44:	f003 0008 	and.w	r0, r3, #8
   81f48:	4a2a      	ldr	r2, [pc, #168]	; (81ff4 <setvbuf+0xfc>)
   81f4a:	b280      	uxth	r0, r0
   81f4c:	63ea      	str	r2, [r5, #60]	; 0x3c
   81f4e:	f8c4 8000 	str.w	r8, [r4]
   81f52:	f8c4 8010 	str.w	r8, [r4, #16]
   81f56:	6167      	str	r7, [r4, #20]
   81f58:	b178      	cbz	r0, 81f7a <setvbuf+0x82>
   81f5a:	f013 0f03 	tst.w	r3, #3
   81f5e:	bf18      	it	ne
   81f60:	2700      	movne	r7, #0
   81f62:	60a7      	str	r7, [r4, #8]
   81f64:	2000      	movs	r0, #0
   81f66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81f6a:	f043 0301 	orr.w	r3, r3, #1
   81f6e:	427a      	negs	r2, r7
   81f70:	81a3      	strh	r3, [r4, #12]
   81f72:	61a2      	str	r2, [r4, #24]
   81f74:	e7e5      	b.n	81f42 <setvbuf+0x4a>
   81f76:	f04f 30ff 	mov.w	r0, #4294967295
   81f7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81f7e:	4628      	mov	r0, r5
   81f80:	6921      	ldr	r1, [r4, #16]
   81f82:	f003 fbf5 	bl	85770 <_free_r>
   81f86:	89a3      	ldrh	r3, [r4, #12]
   81f88:	2e02      	cmp	r6, #2
   81f8a:	f023 0383 	bic.w	r3, r3, #131	; 0x83
   81f8e:	b29b      	uxth	r3, r3
   81f90:	81a3      	strh	r3, [r4, #12]
   81f92:	d1d1      	bne.n	81f38 <setvbuf+0x40>
   81f94:	2000      	movs	r0, #0
   81f96:	f104 0243 	add.w	r2, r4, #67	; 0x43
   81f9a:	f043 0302 	orr.w	r3, r3, #2
   81f9e:	2500      	movs	r5, #0
   81fa0:	2101      	movs	r1, #1
   81fa2:	81a3      	strh	r3, [r4, #12]
   81fa4:	60a5      	str	r5, [r4, #8]
   81fa6:	6022      	str	r2, [r4, #0]
   81fa8:	6122      	str	r2, [r4, #16]
   81faa:	6161      	str	r1, [r4, #20]
   81fac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81fb0:	4628      	mov	r0, r5
   81fb2:	f003 fa99 	bl	854e8 <__sinit>
   81fb6:	e7ab      	b.n	81f10 <setvbuf+0x18>
   81fb8:	2f00      	cmp	r7, #0
   81fba:	bf08      	it	eq
   81fbc:	f44f 6780 	moveq.w	r7, #1024	; 0x400
   81fc0:	4638      	mov	r0, r7
   81fc2:	f003 fecf 	bl	85d64 <malloc>
   81fc6:	4680      	mov	r8, r0
   81fc8:	b128      	cbz	r0, 81fd6 <setvbuf+0xde>
   81fca:	89a3      	ldrh	r3, [r4, #12]
   81fcc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   81fd0:	b29b      	uxth	r3, r3
   81fd2:	81a3      	strh	r3, [r4, #12]
   81fd4:	e7b3      	b.n	81f3e <setvbuf+0x46>
   81fd6:	f44f 6080 	mov.w	r0, #1024	; 0x400
   81fda:	f003 fec3 	bl	85d64 <malloc>
   81fde:	4680      	mov	r8, r0
   81fe0:	b918      	cbnz	r0, 81fea <setvbuf+0xf2>
   81fe2:	89a3      	ldrh	r3, [r4, #12]
   81fe4:	f04f 30ff 	mov.w	r0, #4294967295
   81fe8:	e7d5      	b.n	81f96 <setvbuf+0x9e>
   81fea:	f44f 6780 	mov.w	r7, #1024	; 0x400
   81fee:	e7ec      	b.n	81fca <setvbuf+0xd2>
   81ff0:	20070560 	.word	0x20070560
   81ff4:	000854dd 	.word	0x000854dd

00081ff8 <sprintf>:
   81ff8:	b40e      	push	{r1, r2, r3}
   81ffa:	b5f0      	push	{r4, r5, r6, r7, lr}
   81ffc:	b09c      	sub	sp, #112	; 0x70
   81ffe:	ac21      	add	r4, sp, #132	; 0x84
   82000:	f854 2b04 	ldr.w	r2, [r4], #4
   82004:	490e      	ldr	r1, [pc, #56]	; (82040 <sprintf+0x48>)
   82006:	4606      	mov	r6, r0
   82008:	4623      	mov	r3, r4
   8200a:	f44f 7e02 	mov.w	lr, #520	; 0x208
   8200e:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   82012:	6808      	ldr	r0, [r1, #0]
   82014:	f64f 77ff 	movw	r7, #65535	; 0xffff
   82018:	a902      	add	r1, sp, #8
   8201a:	9602      	str	r6, [sp, #8]
   8201c:	9606      	str	r6, [sp, #24]
   8201e:	9401      	str	r4, [sp, #4]
   82020:	f8ad e014 	strh.w	lr, [sp, #20]
   82024:	9504      	str	r5, [sp, #16]
   82026:	9507      	str	r5, [sp, #28]
   82028:	f8ad 7016 	strh.w	r7, [sp, #22]
   8202c:	f000 f80a 	bl	82044 <_svfprintf_r>
   82030:	9b02      	ldr	r3, [sp, #8]
   82032:	2200      	movs	r2, #0
   82034:	701a      	strb	r2, [r3, #0]
   82036:	b01c      	add	sp, #112	; 0x70
   82038:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   8203c:	b003      	add	sp, #12
   8203e:	4770      	bx	lr
   82040:	20070560 	.word	0x20070560

00082044 <_svfprintf_r>:
   82044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82048:	b0c9      	sub	sp, #292	; 0x124
   8204a:	9310      	str	r3, [sp, #64]	; 0x40
   8204c:	910c      	str	r1, [sp, #48]	; 0x30
   8204e:	4691      	mov	r9, r2
   82050:	900d      	str	r0, [sp, #52]	; 0x34
   82052:	f003 fe13 	bl	85c7c <_localeconv_r>
   82056:	6800      	ldr	r0, [r0, #0]
   82058:	9015      	str	r0, [sp, #84]	; 0x54
   8205a:	f004 ff8f 	bl	86f7c <strlen>
   8205e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82060:	9018      	str	r0, [sp, #96]	; 0x60
   82062:	89a3      	ldrh	r3, [r4, #12]
   82064:	061e      	lsls	r6, r3, #24
   82066:	d503      	bpl.n	82070 <_svfprintf_r+0x2c>
   82068:	6923      	ldr	r3, [r4, #16]
   8206a:	2b00      	cmp	r3, #0
   8206c:	f001 8081 	beq.w	83172 <_svfprintf_r+0x112e>
   82070:	ac38      	add	r4, sp, #224	; 0xe0
   82072:	46a4      	mov	ip, r4
   82074:	9408      	str	r4, [sp, #32]
   82076:	942b      	str	r4, [sp, #172]	; 0xac
   82078:	2500      	movs	r5, #0
   8207a:	2400      	movs	r4, #0
   8207c:	e9cd 4516 	strd	r4, r5, [sp, #88]	; 0x58
   82080:	2300      	movs	r3, #0
   82082:	9311      	str	r3, [sp, #68]	; 0x44
   82084:	932d      	str	r3, [sp, #180]	; 0xb4
   82086:	932c      	str	r3, [sp, #176]	; 0xb0
   82088:	931a      	str	r3, [sp, #104]	; 0x68
   8208a:	9319      	str	r3, [sp, #100]	; 0x64
   8208c:	930e      	str	r3, [sp, #56]	; 0x38
   8208e:	4666      	mov	r6, ip
   82090:	f899 3000 	ldrb.w	r3, [r9]
   82094:	2b00      	cmp	r3, #0
   82096:	f000 80f8 	beq.w	8228a <_svfprintf_r+0x246>
   8209a:	2b25      	cmp	r3, #37	; 0x25
   8209c:	f000 80f5 	beq.w	8228a <_svfprintf_r+0x246>
   820a0:	f109 0201 	add.w	r2, r9, #1
   820a4:	e001      	b.n	820aa <_svfprintf_r+0x66>
   820a6:	2b25      	cmp	r3, #37	; 0x25
   820a8:	d004      	beq.n	820b4 <_svfprintf_r+0x70>
   820aa:	7813      	ldrb	r3, [r2, #0]
   820ac:	4614      	mov	r4, r2
   820ae:	3201      	adds	r2, #1
   820b0:	2b00      	cmp	r3, #0
   820b2:	d1f8      	bne.n	820a6 <_svfprintf_r+0x62>
   820b4:	ebc9 0504 	rsb	r5, r9, r4
   820b8:	b17d      	cbz	r5, 820da <_svfprintf_r+0x96>
   820ba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   820bc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   820be:	3301      	adds	r3, #1
   820c0:	442a      	add	r2, r5
   820c2:	2b07      	cmp	r3, #7
   820c4:	f8c6 9000 	str.w	r9, [r6]
   820c8:	6075      	str	r5, [r6, #4]
   820ca:	922d      	str	r2, [sp, #180]	; 0xb4
   820cc:	932c      	str	r3, [sp, #176]	; 0xb0
   820ce:	f300 80c2 	bgt.w	82256 <_svfprintf_r+0x212>
   820d2:	3608      	adds	r6, #8
   820d4:	980e      	ldr	r0, [sp, #56]	; 0x38
   820d6:	4428      	add	r0, r5
   820d8:	900e      	str	r0, [sp, #56]	; 0x38
   820da:	7823      	ldrb	r3, [r4, #0]
   820dc:	2b00      	cmp	r3, #0
   820de:	f000 80c2 	beq.w	82266 <_svfprintf_r+0x222>
   820e2:	2300      	movs	r3, #0
   820e4:	f894 8001 	ldrb.w	r8, [r4, #1]
   820e8:	461a      	mov	r2, r3
   820ea:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   820ee:	930f      	str	r3, [sp, #60]	; 0x3c
   820f0:	9309      	str	r3, [sp, #36]	; 0x24
   820f2:	f104 0901 	add.w	r9, r4, #1
   820f6:	f04f 34ff 	mov.w	r4, #4294967295
   820fa:	940a      	str	r4, [sp, #40]	; 0x28
   820fc:	f109 0901 	add.w	r9, r9, #1
   82100:	f1a8 0320 	sub.w	r3, r8, #32
   82104:	2b58      	cmp	r3, #88	; 0x58
   82106:	f200 83c5 	bhi.w	82894 <_svfprintf_r+0x850>
   8210a:	e8df f013 	tbh	[pc, r3, lsl #1]
   8210e:	026a      	.short	0x026a
   82110:	03c303c3 	.word	0x03c303c3
   82114:	03c30271 	.word	0x03c30271
   82118:	03c303c3 	.word	0x03c303c3
   8211c:	03c303c3 	.word	0x03c303c3
   82120:	031403c3 	.word	0x031403c3
   82124:	03c30366 	.word	0x03c30366
   82128:	00c0009d 	.word	0x00c0009d
   8212c:	027803c3 	.word	0x027803c3
   82130:	027f027f 	.word	0x027f027f
   82134:	027f027f 	.word	0x027f027f
   82138:	027f027f 	.word	0x027f027f
   8213c:	027f027f 	.word	0x027f027f
   82140:	03c3027f 	.word	0x03c3027f
   82144:	03c303c3 	.word	0x03c303c3
   82148:	03c303c3 	.word	0x03c303c3
   8214c:	03c303c3 	.word	0x03c303c3
   82150:	03c303c3 	.word	0x03c303c3
   82154:	029003c3 	.word	0x029003c3
   82158:	03c30371 	.word	0x03c30371
   8215c:	03c30371 	.word	0x03c30371
   82160:	03c303c3 	.word	0x03c303c3
   82164:	036a03c3 	.word	0x036a03c3
   82168:	03c303c3 	.word	0x03c303c3
   8216c:	03c30078 	.word	0x03c30078
   82170:	03c303c3 	.word	0x03c303c3
   82174:	03c303c3 	.word	0x03c303c3
   82178:	03c30059 	.word	0x03c30059
   8217c:	02af03c3 	.word	0x02af03c3
   82180:	03c303c3 	.word	0x03c303c3
   82184:	03c303c3 	.word	0x03c303c3
   82188:	03c303c3 	.word	0x03c303c3
   8218c:	03c303c3 	.word	0x03c303c3
   82190:	03c303c3 	.word	0x03c303c3
   82194:	03480337 	.word	0x03480337
   82198:	03710371 	.word	0x03710371
   8219c:	02ff0371 	.word	0x02ff0371
   821a0:	03c30348 	.word	0x03c30348
   821a4:	030803c3 	.word	0x030803c3
   821a8:	02c503c3 	.word	0x02c503c3
   821ac:	0320007c 	.word	0x0320007c
   821b0:	03c303a3 	.word	0x03c303a3
   821b4:	03c302d9 	.word	0x03c302d9
   821b8:	03c3005f 	.word	0x03c3005f
   821bc:	00de03c3 	.word	0x00de03c3
   821c0:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   821c4:	f04c 0c10 	orr.w	ip, ip, #16
   821c8:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   821cc:	9c09      	ldr	r4, [sp, #36]	; 0x24
   821ce:	06a2      	lsls	r2, r4, #26
   821d0:	f100 8354 	bmi.w	8287c <_svfprintf_r+0x838>
   821d4:	9c09      	ldr	r4, [sp, #36]	; 0x24
   821d6:	06e3      	lsls	r3, r4, #27
   821d8:	f100 85bd 	bmi.w	82d56 <_svfprintf_r+0xd12>
   821dc:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   821e0:	f01c 0f40 	tst.w	ip, #64	; 0x40
   821e4:	f000 85b7 	beq.w	82d56 <_svfprintf_r+0xd12>
   821e8:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   821ec:	2500      	movs	r5, #0
   821ee:	f8bc 4000 	ldrh.w	r4, [ip]
   821f2:	f10c 0c04 	add.w	ip, ip, #4
   821f6:	2301      	movs	r3, #1
   821f8:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   821fc:	e08c      	b.n	82318 <_svfprintf_r+0x2d4>
   821fe:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82200:	f045 0510 	orr.w	r5, r5, #16
   82204:	9509      	str	r5, [sp, #36]	; 0x24
   82206:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8220a:	f01c 0320 	ands.w	r3, ip, #32
   8220e:	f040 832a 	bne.w	82866 <_svfprintf_r+0x822>
   82212:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82216:	f01c 0210 	ands.w	r2, ip, #16
   8221a:	f040 85a4 	bne.w	82d66 <_svfprintf_r+0xd22>
   8221e:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82222:	f01c 0340 	ands.w	r3, ip, #64	; 0x40
   82226:	f000 859e 	beq.w	82d66 <_svfprintf_r+0xd22>
   8222a:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   8222e:	4613      	mov	r3, r2
   82230:	f8bc 4000 	ldrh.w	r4, [ip]
   82234:	f10c 0c04 	add.w	ip, ip, #4
   82238:	2500      	movs	r5, #0
   8223a:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   8223e:	e06b      	b.n	82318 <_svfprintf_r+0x2d4>
   82240:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82242:	9310      	str	r3, [sp, #64]	; 0x40
   82244:	4264      	negs	r4, r4
   82246:	940f      	str	r4, [sp, #60]	; 0x3c
   82248:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8224a:	f045 0504 	orr.w	r5, r5, #4
   8224e:	9509      	str	r5, [sp, #36]	; 0x24
   82250:	f899 8000 	ldrb.w	r8, [r9]
   82254:	e752      	b.n	820fc <_svfprintf_r+0xb8>
   82256:	980d      	ldr	r0, [sp, #52]	; 0x34
   82258:	990c      	ldr	r1, [sp, #48]	; 0x30
   8225a:	aa2b      	add	r2, sp, #172	; 0xac
   8225c:	f004 febe 	bl	86fdc <__ssprint_r>
   82260:	b940      	cbnz	r0, 82274 <_svfprintf_r+0x230>
   82262:	ae38      	add	r6, sp, #224	; 0xe0
   82264:	e736      	b.n	820d4 <_svfprintf_r+0x90>
   82266:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   82268:	b123      	cbz	r3, 82274 <_svfprintf_r+0x230>
   8226a:	980d      	ldr	r0, [sp, #52]	; 0x34
   8226c:	990c      	ldr	r1, [sp, #48]	; 0x30
   8226e:	aa2b      	add	r2, sp, #172	; 0xac
   82270:	f004 feb4 	bl	86fdc <__ssprint_r>
   82274:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82276:	980e      	ldr	r0, [sp, #56]	; 0x38
   82278:	89a3      	ldrh	r3, [r4, #12]
   8227a:	f013 0f40 	tst.w	r3, #64	; 0x40
   8227e:	bf18      	it	ne
   82280:	f04f 30ff 	movne.w	r0, #4294967295
   82284:	b049      	add	sp, #292	; 0x124
   82286:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8228a:	464c      	mov	r4, r9
   8228c:	e725      	b.n	820da <_svfprintf_r+0x96>
   8228e:	f899 8000 	ldrb.w	r8, [r9]
   82292:	f109 0001 	add.w	r0, r9, #1
   82296:	f1b8 0f2a 	cmp.w	r8, #42	; 0x2a
   8229a:	f001 810c 	beq.w	834b6 <_svfprintf_r+0x1472>
   8229e:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   822a2:	2b09      	cmp	r3, #9
   822a4:	bf98      	it	ls
   822a6:	2100      	movls	r1, #0
   822a8:	f201 806b 	bhi.w	83382 <_svfprintf_r+0x133e>
   822ac:	f810 8b01 	ldrb.w	r8, [r0], #1
   822b0:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   822b4:	eb03 0141 	add.w	r1, r3, r1, lsl #1
   822b8:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   822bc:	2b09      	cmp	r3, #9
   822be:	d9f5      	bls.n	822ac <_svfprintf_r+0x268>
   822c0:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
   822c4:	910a      	str	r1, [sp, #40]	; 0x28
   822c6:	4681      	mov	r9, r0
   822c8:	e71a      	b.n	82100 <_svfprintf_r+0xbc>
   822ca:	9d09      	ldr	r5, [sp, #36]	; 0x24
   822cc:	4ca1      	ldr	r4, [pc, #644]	; (82554 <_svfprintf_r+0x510>)
   822ce:	06af      	lsls	r7, r5, #26
   822d0:	941a      	str	r4, [sp, #104]	; 0x68
   822d2:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   822d6:	f140 81d1 	bpl.w	8267c <_svfprintf_r+0x638>
   822da:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   822de:	f10c 0307 	add.w	r3, ip, #7
   822e2:	f023 0307 	bic.w	r3, r3, #7
   822e6:	f103 0408 	add.w	r4, r3, #8
   822ea:	9410      	str	r4, [sp, #64]	; 0x40
   822ec:	e9d3 4500 	ldrd	r4, r5, [r3]
   822f0:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   822f4:	f01c 0f01 	tst.w	ip, #1
   822f8:	f000 8462 	beq.w	82bc0 <_svfprintf_r+0xb7c>
   822fc:	ea54 0005 	orrs.w	r0, r4, r5
   82300:	f000 845e 	beq.w	82bc0 <_svfprintf_r+0xb7c>
   82304:	2330      	movs	r3, #48	; 0x30
   82306:	f04c 0c02 	orr.w	ip, ip, #2
   8230a:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
   8230e:	f88d 8091 	strb.w	r8, [sp, #145]	; 0x91
   82312:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   82316:	2302      	movs	r3, #2
   82318:	f04f 0a00 	mov.w	sl, #0
   8231c:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   82320:	990a      	ldr	r1, [sp, #40]	; 0x28
   82322:	2900      	cmp	r1, #0
   82324:	db05      	blt.n	82332 <_svfprintf_r+0x2ee>
   82326:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8232a:	f02c 0c80 	bic.w	ip, ip, #128	; 0x80
   8232e:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   82332:	ea54 0005 	orrs.w	r0, r4, r5
   82336:	f040 82c5 	bne.w	828c4 <_svfprintf_r+0x880>
   8233a:	990a      	ldr	r1, [sp, #40]	; 0x28
   8233c:	2900      	cmp	r1, #0
   8233e:	f040 82c1 	bne.w	828c4 <_svfprintf_r+0x880>
   82342:	2b00      	cmp	r3, #0
   82344:	f040 8438 	bne.w	82bb8 <_svfprintf_r+0xb74>
   82348:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8234c:	f01c 0f01 	tst.w	ip, #1
   82350:	f000 8432 	beq.w	82bb8 <_svfprintf_r+0xb74>
   82354:	af48      	add	r7, sp, #288	; 0x120
   82356:	2330      	movs	r3, #48	; 0x30
   82358:	9d08      	ldr	r5, [sp, #32]
   8235a:	f807 3d41 	strb.w	r3, [r7, #-65]!
   8235e:	1bec      	subs	r4, r5, r7
   82360:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
   82364:	2500      	movs	r5, #0
   82366:	4564      	cmp	r4, ip
   82368:	bfa8      	it	ge
   8236a:	46a4      	movge	ip, r4
   8236c:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   82370:	9514      	str	r5, [sp, #80]	; 0x50
   82372:	f1ba 0f00 	cmp.w	sl, #0
   82376:	d002      	beq.n	8237e <_svfprintf_r+0x33a>
   82378:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   8237a:	3501      	adds	r5, #1
   8237c:	950b      	str	r5, [sp, #44]	; 0x2c
   8237e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82380:	f013 0302 	ands.w	r3, r3, #2
   82384:	9312      	str	r3, [sp, #72]	; 0x48
   82386:	d002      	beq.n	8238e <_svfprintf_r+0x34a>
   82388:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   8238a:	3502      	adds	r5, #2
   8238c:	950b      	str	r5, [sp, #44]	; 0x2c
   8238e:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82392:	f01c 0c84 	ands.w	ip, ip, #132	; 0x84
   82396:	f8cd c04c 	str.w	ip, [sp, #76]	; 0x4c
   8239a:	f040 8290 	bne.w	828be <_svfprintf_r+0x87a>
   8239e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   823a0:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
   823a4:	ebcc 0b05 	rsb	fp, ip, r5
   823a8:	f1bb 0f00 	cmp.w	fp, #0
   823ac:	f340 8287 	ble.w	828be <_svfprintf_r+0x87a>
   823b0:	f1bb 0f10 	cmp.w	fp, #16
   823b4:	992d      	ldr	r1, [sp, #180]	; 0xb4
   823b6:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   823b8:	f8df a1a0 	ldr.w	sl, [pc, #416]	; 8255c <_svfprintf_r+0x518>
   823bc:	dd2c      	ble.n	82418 <_svfprintf_r+0x3d4>
   823be:	971b      	str	r7, [sp, #108]	; 0x6c
   823c0:	4630      	mov	r0, r6
   823c2:	4657      	mov	r7, sl
   823c4:	2510      	movs	r5, #16
   823c6:	46ca      	mov	sl, r9
   823c8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   823ca:	46a1      	mov	r9, r4
   823cc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   823ce:	e006      	b.n	823de <_svfprintf_r+0x39a>
   823d0:	f1ab 0b10 	sub.w	fp, fp, #16
   823d4:	f1bb 0f10 	cmp.w	fp, #16
   823d8:	f100 0008 	add.w	r0, r0, #8
   823dc:	dd17      	ble.n	8240e <_svfprintf_r+0x3ca>
   823de:	3201      	adds	r2, #1
   823e0:	3110      	adds	r1, #16
   823e2:	2a07      	cmp	r2, #7
   823e4:	912d      	str	r1, [sp, #180]	; 0xb4
   823e6:	922c      	str	r2, [sp, #176]	; 0xb0
   823e8:	6007      	str	r7, [r0, #0]
   823ea:	6045      	str	r5, [r0, #4]
   823ec:	ddf0      	ble.n	823d0 <_svfprintf_r+0x38c>
   823ee:	4620      	mov	r0, r4
   823f0:	4631      	mov	r1, r6
   823f2:	aa2b      	add	r2, sp, #172	; 0xac
   823f4:	f004 fdf2 	bl	86fdc <__ssprint_r>
   823f8:	2800      	cmp	r0, #0
   823fa:	f47f af3b 	bne.w	82274 <_svfprintf_r+0x230>
   823fe:	f1ab 0b10 	sub.w	fp, fp, #16
   82402:	f1bb 0f10 	cmp.w	fp, #16
   82406:	992d      	ldr	r1, [sp, #180]	; 0xb4
   82408:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   8240a:	a838      	add	r0, sp, #224	; 0xe0
   8240c:	dce7      	bgt.n	823de <_svfprintf_r+0x39a>
   8240e:	464c      	mov	r4, r9
   82410:	46d1      	mov	r9, sl
   82412:	46ba      	mov	sl, r7
   82414:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
   82416:	4606      	mov	r6, r0
   82418:	3201      	adds	r2, #1
   8241a:	eb0b 0c01 	add.w	ip, fp, r1
   8241e:	2a07      	cmp	r2, #7
   82420:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82424:	922c      	str	r2, [sp, #176]	; 0xb0
   82426:	e886 0c00 	stmia.w	r6, {sl, fp}
   8242a:	f300 841a 	bgt.w	82c62 <_svfprintf_r+0xc1e>
   8242e:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   82432:	3608      	adds	r6, #8
   82434:	f1ba 0f00 	cmp.w	sl, #0
   82438:	d00f      	beq.n	8245a <_svfprintf_r+0x416>
   8243a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8243c:	f10c 0c01 	add.w	ip, ip, #1
   82440:	3301      	adds	r3, #1
   82442:	f10d 018f 	add.w	r1, sp, #143	; 0x8f
   82446:	2201      	movs	r2, #1
   82448:	2b07      	cmp	r3, #7
   8244a:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   8244e:	932c      	str	r3, [sp, #176]	; 0xb0
   82450:	e886 0006 	stmia.w	r6, {r1, r2}
   82454:	f300 83a4 	bgt.w	82ba0 <_svfprintf_r+0xb5c>
   82458:	3608      	adds	r6, #8
   8245a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8245c:	b173      	cbz	r3, 8247c <_svfprintf_r+0x438>
   8245e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82460:	f10c 0c02 	add.w	ip, ip, #2
   82464:	3301      	adds	r3, #1
   82466:	a924      	add	r1, sp, #144	; 0x90
   82468:	2202      	movs	r2, #2
   8246a:	2b07      	cmp	r3, #7
   8246c:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82470:	932c      	str	r3, [sp, #176]	; 0xb0
   82472:	e886 0006 	stmia.w	r6, {r1, r2}
   82476:	f300 8387 	bgt.w	82b88 <_svfprintf_r+0xb44>
   8247a:	3608      	adds	r6, #8
   8247c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
   8247e:	2d80      	cmp	r5, #128	; 0x80
   82480:	f000 82ca 	beq.w	82a18 <_svfprintf_r+0x9d4>
   82484:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82486:	ebc4 0a05 	rsb	sl, r4, r5
   8248a:	f1ba 0f00 	cmp.w	sl, #0
   8248e:	dd3b      	ble.n	82508 <_svfprintf_r+0x4c4>
   82490:	f1ba 0f10 	cmp.w	sl, #16
   82494:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82496:	4d30      	ldr	r5, [pc, #192]	; (82558 <_svfprintf_r+0x514>)
   82498:	dd2b      	ble.n	824f2 <_svfprintf_r+0x4ae>
   8249a:	940a      	str	r4, [sp, #40]	; 0x28
   8249c:	4632      	mov	r2, r6
   8249e:	f04f 0b10 	mov.w	fp, #16
   824a2:	462e      	mov	r6, r5
   824a4:	4661      	mov	r1, ip
   824a6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   824a8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   824aa:	e006      	b.n	824ba <_svfprintf_r+0x476>
   824ac:	f1aa 0a10 	sub.w	sl, sl, #16
   824b0:	f1ba 0f10 	cmp.w	sl, #16
   824b4:	f102 0208 	add.w	r2, r2, #8
   824b8:	dd17      	ble.n	824ea <_svfprintf_r+0x4a6>
   824ba:	3301      	adds	r3, #1
   824bc:	3110      	adds	r1, #16
   824be:	2b07      	cmp	r3, #7
   824c0:	912d      	str	r1, [sp, #180]	; 0xb4
   824c2:	932c      	str	r3, [sp, #176]	; 0xb0
   824c4:	e882 0840 	stmia.w	r2, {r6, fp}
   824c8:	ddf0      	ble.n	824ac <_svfprintf_r+0x468>
   824ca:	4620      	mov	r0, r4
   824cc:	4629      	mov	r1, r5
   824ce:	aa2b      	add	r2, sp, #172	; 0xac
   824d0:	f004 fd84 	bl	86fdc <__ssprint_r>
   824d4:	2800      	cmp	r0, #0
   824d6:	f47f aecd 	bne.w	82274 <_svfprintf_r+0x230>
   824da:	f1aa 0a10 	sub.w	sl, sl, #16
   824de:	f1ba 0f10 	cmp.w	sl, #16
   824e2:	992d      	ldr	r1, [sp, #180]	; 0xb4
   824e4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   824e6:	aa38      	add	r2, sp, #224	; 0xe0
   824e8:	dce7      	bgt.n	824ba <_svfprintf_r+0x476>
   824ea:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   824ec:	4635      	mov	r5, r6
   824ee:	468c      	mov	ip, r1
   824f0:	4616      	mov	r6, r2
   824f2:	3301      	adds	r3, #1
   824f4:	44d4      	add	ip, sl
   824f6:	2b07      	cmp	r3, #7
   824f8:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   824fc:	932c      	str	r3, [sp, #176]	; 0xb0
   824fe:	e886 0420 	stmia.w	r6, {r5, sl}
   82502:	f300 8335 	bgt.w	82b70 <_svfprintf_r+0xb2c>
   82506:	3608      	adds	r6, #8
   82508:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8250a:	05ed      	lsls	r5, r5, #23
   8250c:	f100 8224 	bmi.w	82958 <_svfprintf_r+0x914>
   82510:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82512:	44a4      	add	ip, r4
   82514:	3301      	adds	r3, #1
   82516:	2b07      	cmp	r3, #7
   82518:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   8251c:	6037      	str	r7, [r6, #0]
   8251e:	6074      	str	r4, [r6, #4]
   82520:	932c      	str	r3, [sp, #176]	; 0xb0
   82522:	f300 830f 	bgt.w	82b44 <_svfprintf_r+0xb00>
   82526:	3608      	adds	r6, #8
   82528:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8252a:	0763      	lsls	r3, r4, #29
   8252c:	d549      	bpl.n	825c2 <_svfprintf_r+0x57e>
   8252e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   82530:	980b      	ldr	r0, [sp, #44]	; 0x2c
   82532:	1a2c      	subs	r4, r5, r0
   82534:	2c00      	cmp	r4, #0
   82536:	dd44      	ble.n	825c2 <_svfprintf_r+0x57e>
   82538:	2c10      	cmp	r4, #16
   8253a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8253c:	f8df a01c 	ldr.w	sl, [pc, #28]	; 8255c <_svfprintf_r+0x518>
   82540:	dd2b      	ble.n	8259a <_svfprintf_r+0x556>
   82542:	4657      	mov	r7, sl
   82544:	2510      	movs	r5, #16
   82546:	4662      	mov	r2, ip
   82548:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   8254c:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
   82550:	e00b      	b.n	8256a <_svfprintf_r+0x526>
   82552:	bf00      	nop
   82554:	00087b00 	.word	0x00087b00
   82558:	00087acc 	.word	0x00087acc
   8255c:	00087b20 	.word	0x00087b20
   82560:	3c10      	subs	r4, #16
   82562:	2c10      	cmp	r4, #16
   82564:	f106 0608 	add.w	r6, r6, #8
   82568:	dd15      	ble.n	82596 <_svfprintf_r+0x552>
   8256a:	3301      	adds	r3, #1
   8256c:	3210      	adds	r2, #16
   8256e:	2b07      	cmp	r3, #7
   82570:	922d      	str	r2, [sp, #180]	; 0xb4
   82572:	932c      	str	r3, [sp, #176]	; 0xb0
   82574:	6037      	str	r7, [r6, #0]
   82576:	6075      	str	r5, [r6, #4]
   82578:	ddf2      	ble.n	82560 <_svfprintf_r+0x51c>
   8257a:	4650      	mov	r0, sl
   8257c:	4641      	mov	r1, r8
   8257e:	aa2b      	add	r2, sp, #172	; 0xac
   82580:	f004 fd2c 	bl	86fdc <__ssprint_r>
   82584:	2800      	cmp	r0, #0
   82586:	f47f ae75 	bne.w	82274 <_svfprintf_r+0x230>
   8258a:	3c10      	subs	r4, #16
   8258c:	2c10      	cmp	r4, #16
   8258e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   82590:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82592:	ae38      	add	r6, sp, #224	; 0xe0
   82594:	dce9      	bgt.n	8256a <_svfprintf_r+0x526>
   82596:	4694      	mov	ip, r2
   82598:	46ba      	mov	sl, r7
   8259a:	3301      	adds	r3, #1
   8259c:	44a4      	add	ip, r4
   8259e:	2b07      	cmp	r3, #7
   825a0:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   825a4:	932c      	str	r3, [sp, #176]	; 0xb0
   825a6:	f8c6 a000 	str.w	sl, [r6]
   825aa:	6074      	str	r4, [r6, #4]
   825ac:	dd09      	ble.n	825c2 <_svfprintf_r+0x57e>
   825ae:	980d      	ldr	r0, [sp, #52]	; 0x34
   825b0:	990c      	ldr	r1, [sp, #48]	; 0x30
   825b2:	aa2b      	add	r2, sp, #172	; 0xac
   825b4:	f004 fd12 	bl	86fdc <__ssprint_r>
   825b8:	2800      	cmp	r0, #0
   825ba:	f47f ae5b 	bne.w	82274 <_svfprintf_r+0x230>
   825be:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   825c2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   825c4:	980b      	ldr	r0, [sp, #44]	; 0x2c
   825c6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   825c8:	42a8      	cmp	r0, r5
   825ca:	bfac      	ite	ge
   825cc:	1824      	addge	r4, r4, r0
   825ce:	1964      	addlt	r4, r4, r5
   825d0:	940e      	str	r4, [sp, #56]	; 0x38
   825d2:	f1bc 0f00 	cmp.w	ip, #0
   825d6:	f040 82c1 	bne.w	82b5c <_svfprintf_r+0xb18>
   825da:	2300      	movs	r3, #0
   825dc:	932c      	str	r3, [sp, #176]	; 0xb0
   825de:	ae38      	add	r6, sp, #224	; 0xe0
   825e0:	e556      	b.n	82090 <_svfprintf_r+0x4c>
   825e2:	f899 8000 	ldrb.w	r8, [r9]
   825e6:	2a00      	cmp	r2, #0
   825e8:	f47f ad88 	bne.w	820fc <_svfprintf_r+0xb8>
   825ec:	2220      	movs	r2, #32
   825ee:	e585      	b.n	820fc <_svfprintf_r+0xb8>
   825f0:	9d09      	ldr	r5, [sp, #36]	; 0x24
   825f2:	f045 0501 	orr.w	r5, r5, #1
   825f6:	9509      	str	r5, [sp, #36]	; 0x24
   825f8:	f899 8000 	ldrb.w	r8, [r9]
   825fc:	e57e      	b.n	820fc <_svfprintf_r+0xb8>
   825fe:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82600:	f045 0580 	orr.w	r5, r5, #128	; 0x80
   82604:	9509      	str	r5, [sp, #36]	; 0x24
   82606:	f899 8000 	ldrb.w	r8, [r9]
   8260a:	e577      	b.n	820fc <_svfprintf_r+0xb8>
   8260c:	2400      	movs	r4, #0
   8260e:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   82612:	940f      	str	r4, [sp, #60]	; 0x3c
   82614:	4621      	mov	r1, r4
   82616:	f819 8b01 	ldrb.w	r8, [r9], #1
   8261a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   8261e:	eb03 0141 	add.w	r1, r3, r1, lsl #1
   82622:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   82626:	2b09      	cmp	r3, #9
   82628:	d9f5      	bls.n	82616 <_svfprintf_r+0x5d2>
   8262a:	910f      	str	r1, [sp, #60]	; 0x3c
   8262c:	e568      	b.n	82100 <_svfprintf_r+0xbc>
   8262e:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82632:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   82636:	f04c 0c10 	orr.w	ip, ip, #16
   8263a:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   8263e:	9c09      	ldr	r4, [sp, #36]	; 0x24
   82640:	06a5      	lsls	r5, r4, #26
   82642:	f140 80b2 	bpl.w	827aa <_svfprintf_r+0x766>
   82646:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82648:	1de9      	adds	r1, r5, #7
   8264a:	f021 0107 	bic.w	r1, r1, #7
   8264e:	e9d1 2300 	ldrd	r2, r3, [r1]
   82652:	3108      	adds	r1, #8
   82654:	9110      	str	r1, [sp, #64]	; 0x40
   82656:	4614      	mov	r4, r2
   82658:	461d      	mov	r5, r3
   8265a:	2a00      	cmp	r2, #0
   8265c:	f173 0c00 	sbcs.w	ip, r3, #0
   82660:	f2c0 8394 	blt.w	82d8c <_svfprintf_r+0xd48>
   82664:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   82668:	2301      	movs	r3, #1
   8266a:	e659      	b.n	82320 <_svfprintf_r+0x2dc>
   8266c:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8266e:	4cb6      	ldr	r4, [pc, #728]	; (82948 <_svfprintf_r+0x904>)
   82670:	06af      	lsls	r7, r5, #26
   82672:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   82676:	941a      	str	r4, [sp, #104]	; 0x68
   82678:	f53f ae2f 	bmi.w	822da <_svfprintf_r+0x296>
   8267c:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8267e:	06ed      	lsls	r5, r5, #27
   82680:	f140 8443 	bpl.w	82f0a <_svfprintf_r+0xec6>
   82684:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   82688:	2500      	movs	r5, #0
   8268a:	f8dc 4000 	ldr.w	r4, [ip]
   8268e:	f10c 0c04 	add.w	ip, ip, #4
   82692:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   82696:	e62b      	b.n	822f0 <_svfprintf_r+0x2ac>
   82698:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8269c:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   826a0:	f01c 0f20 	tst.w	ip, #32
   826a4:	f000 8440 	beq.w	82f28 <_svfprintf_r+0xee4>
   826a8:	9c10      	ldr	r4, [sp, #64]	; 0x40
   826aa:	6821      	ldr	r1, [r4, #0]
   826ac:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   826ae:	17e5      	asrs	r5, r4, #31
   826b0:	462b      	mov	r3, r5
   826b2:	9d10      	ldr	r5, [sp, #64]	; 0x40
   826b4:	4622      	mov	r2, r4
   826b6:	3504      	adds	r5, #4
   826b8:	9510      	str	r5, [sp, #64]	; 0x40
   826ba:	e9c1 2300 	strd	r2, r3, [r1]
   826be:	e4e7      	b.n	82090 <_svfprintf_r+0x4c>
   826c0:	9c10      	ldr	r4, [sp, #64]	; 0x40
   826c2:	f04f 0a00 	mov.w	sl, #0
   826c6:	6827      	ldr	r7, [r4, #0]
   826c8:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   826cc:	1d25      	adds	r5, r4, #4
   826ce:	2f00      	cmp	r7, #0
   826d0:	f000 85e9 	beq.w	832a6 <_svfprintf_r+0x1262>
   826d4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   826d6:	4638      	mov	r0, r7
   826d8:	2c00      	cmp	r4, #0
   826da:	f2c0 859b 	blt.w	83214 <_svfprintf_r+0x11d0>
   826de:	4651      	mov	r1, sl
   826e0:	4622      	mov	r2, r4
   826e2:	f003 fde3 	bl	862ac <memchr>
   826e6:	2800      	cmp	r0, #0
   826e8:	f000 8613 	beq.w	83312 <_svfprintf_r+0x12ce>
   826ec:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   826ee:	1bc0      	subs	r0, r0, r7
   826f0:	42a0      	cmp	r0, r4
   826f2:	bfb8      	it	lt
   826f4:	4604      	movlt	r4, r0
   826f6:	9510      	str	r5, [sp, #64]	; 0x40
   826f8:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
   826fc:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
   82700:	f8cd a050 	str.w	sl, [sp, #80]	; 0x50
   82704:	950b      	str	r5, [sp, #44]	; 0x2c
   82706:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   8270a:	e632      	b.n	82372 <_svfprintf_r+0x32e>
   8270c:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82710:	f04c 0c40 	orr.w	ip, ip, #64	; 0x40
   82714:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   82718:	f899 8000 	ldrb.w	r8, [r9]
   8271c:	e4ee      	b.n	820fc <_svfprintf_r+0xb8>
   8271e:	f899 8000 	ldrb.w	r8, [r9]
   82722:	464b      	mov	r3, r9
   82724:	f1b8 0f6c 	cmp.w	r8, #108	; 0x6c
   82728:	f000 847f 	beq.w	8302a <_svfprintf_r+0xfe6>
   8272c:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8272e:	f045 0510 	orr.w	r5, r5, #16
   82732:	9509      	str	r5, [sp, #36]	; 0x24
   82734:	e4e2      	b.n	820fc <_svfprintf_r+0xb8>
   82736:	9c10      	ldr	r4, [sp, #64]	; 0x40
   82738:	9d10      	ldr	r5, [sp, #64]	; 0x40
   8273a:	6824      	ldr	r4, [r4, #0]
   8273c:	1d2b      	adds	r3, r5, #4
   8273e:	2c00      	cmp	r4, #0
   82740:	940f      	str	r4, [sp, #60]	; 0x3c
   82742:	f6ff ad7d 	blt.w	82240 <_svfprintf_r+0x1fc>
   82746:	9310      	str	r3, [sp, #64]	; 0x40
   82748:	f899 8000 	ldrb.w	r8, [r9]
   8274c:	e4d6      	b.n	820fc <_svfprintf_r+0xb8>
   8274e:	9b10      	ldr	r3, [sp, #64]	; 0x40
   82750:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82754:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82756:	487d      	ldr	r0, [pc, #500]	; (8294c <_svfprintf_r+0x908>)
   82758:	3504      	adds	r5, #4
   8275a:	681c      	ldr	r4, [r3, #0]
   8275c:	f04f 0878 	mov.w	r8, #120	; 0x78
   82760:	2330      	movs	r3, #48	; 0x30
   82762:	f04c 0c02 	orr.w	ip, ip, #2
   82766:	9510      	str	r5, [sp, #64]	; 0x40
   82768:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
   8276c:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   82770:	2500      	movs	r5, #0
   82772:	f88d 8091 	strb.w	r8, [sp, #145]	; 0x91
   82776:	901a      	str	r0, [sp, #104]	; 0x68
   82778:	2302      	movs	r3, #2
   8277a:	e5cd      	b.n	82318 <_svfprintf_r+0x2d4>
   8277c:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8277e:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82780:	681a      	ldr	r2, [r3, #0]
   82782:	2401      	movs	r4, #1
   82784:	2300      	movs	r3, #0
   82786:	3504      	adds	r5, #4
   82788:	469a      	mov	sl, r3
   8278a:	940b      	str	r4, [sp, #44]	; 0x2c
   8278c:	f88d 20b8 	strb.w	r2, [sp, #184]	; 0xb8
   82790:	9510      	str	r5, [sp, #64]	; 0x40
   82792:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   82796:	930a      	str	r3, [sp, #40]	; 0x28
   82798:	9314      	str	r3, [sp, #80]	; 0x50
   8279a:	af2e      	add	r7, sp, #184	; 0xb8
   8279c:	e5ef      	b.n	8237e <_svfprintf_r+0x33a>
   8279e:	9c09      	ldr	r4, [sp, #36]	; 0x24
   827a0:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   827a4:	06a5      	lsls	r5, r4, #26
   827a6:	f53f af4e 	bmi.w	82646 <_svfprintf_r+0x602>
   827aa:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   827ae:	f01c 0f10 	tst.w	ip, #16
   827b2:	f040 82df 	bne.w	82d74 <_svfprintf_r+0xd30>
   827b6:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   827ba:	f01c 0f40 	tst.w	ip, #64	; 0x40
   827be:	f000 82d9 	beq.w	82d74 <_svfprintf_r+0xd30>
   827c2:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   827c6:	f9bc 4000 	ldrsh.w	r4, [ip]
   827ca:	f10c 0c04 	add.w	ip, ip, #4
   827ce:	17e5      	asrs	r5, r4, #31
   827d0:	4622      	mov	r2, r4
   827d2:	462b      	mov	r3, r5
   827d4:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   827d8:	e73f      	b.n	8265a <_svfprintf_r+0x616>
   827da:	f899 8000 	ldrb.w	r8, [r9]
   827de:	222b      	movs	r2, #43	; 0x2b
   827e0:	e48c      	b.n	820fc <_svfprintf_r+0xb8>
   827e2:	9d09      	ldr	r5, [sp, #36]	; 0x24
   827e4:	f045 0508 	orr.w	r5, r5, #8
   827e8:	9509      	str	r5, [sp, #36]	; 0x24
   827ea:	f899 8000 	ldrb.w	r8, [r9]
   827ee:	e485      	b.n	820fc <_svfprintf_r+0xb8>
   827f0:	9d10      	ldr	r5, [sp, #64]	; 0x40
   827f2:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   827f6:	1deb      	adds	r3, r5, #7
   827f8:	f023 0307 	bic.w	r3, r3, #7
   827fc:	f103 0c08 	add.w	ip, r3, #8
   82800:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   82804:	e9d3 4500 	ldrd	r4, r5, [r3]
   82808:	e9cd 4516 	strd	r4, r5, [sp, #88]	; 0x58
   8280c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   82810:	f7fe fe42 	bl	81498 <__fpclassifyd>
   82814:	2801      	cmp	r0, #1
   82816:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   8281a:	f040 835c 	bne.w	82ed6 <_svfprintf_r+0xe92>
   8281e:	2200      	movs	r2, #0
   82820:	2300      	movs	r3, #0
   82822:	f7ff fa8b 	bl	81d3c <__aeabi_dcmplt>
   82826:	2800      	cmp	r0, #0
   82828:	f040 8563 	bne.w	832f2 <_svfprintf_r+0x12ae>
   8282c:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   82830:	2503      	movs	r5, #3
   82832:	950b      	str	r5, [sp, #44]	; 0x2c
   82834:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82836:	4f46      	ldr	r7, [pc, #280]	; (82950 <_svfprintf_r+0x90c>)
   82838:	f025 0580 	bic.w	r5, r5, #128	; 0x80
   8283c:	4b45      	ldr	r3, [pc, #276]	; (82954 <_svfprintf_r+0x910>)
   8283e:	2400      	movs	r4, #0
   82840:	9509      	str	r5, [sp, #36]	; 0x24
   82842:	2500      	movs	r5, #0
   82844:	940a      	str	r4, [sp, #40]	; 0x28
   82846:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   8284a:	bfd8      	it	le
   8284c:	461f      	movle	r7, r3
   8284e:	2403      	movs	r4, #3
   82850:	9514      	str	r5, [sp, #80]	; 0x50
   82852:	e58e      	b.n	82372 <_svfprintf_r+0x32e>
   82854:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82858:	f04c 0c20 	orr.w	ip, ip, #32
   8285c:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   82860:	f899 8000 	ldrb.w	r8, [r9]
   82864:	e44a      	b.n	820fc <_svfprintf_r+0xb8>
   82866:	9c10      	ldr	r4, [sp, #64]	; 0x40
   82868:	1de3      	adds	r3, r4, #7
   8286a:	f023 0307 	bic.w	r3, r3, #7
   8286e:	f103 0508 	add.w	r5, r3, #8
   82872:	9510      	str	r5, [sp, #64]	; 0x40
   82874:	e9d3 4500 	ldrd	r4, r5, [r3]
   82878:	2300      	movs	r3, #0
   8287a:	e54d      	b.n	82318 <_svfprintf_r+0x2d4>
   8287c:	9d10      	ldr	r5, [sp, #64]	; 0x40
   8287e:	1deb      	adds	r3, r5, #7
   82880:	f023 0307 	bic.w	r3, r3, #7
   82884:	f103 0c08 	add.w	ip, r3, #8
   82888:	e9d3 4500 	ldrd	r4, r5, [r3]
   8288c:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   82890:	2301      	movs	r3, #1
   82892:	e541      	b.n	82318 <_svfprintf_r+0x2d4>
   82894:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   82898:	f1b8 0f00 	cmp.w	r8, #0
   8289c:	f43f ace3 	beq.w	82266 <_svfprintf_r+0x222>
   828a0:	2300      	movs	r3, #0
   828a2:	f04f 0c01 	mov.w	ip, #1
   828a6:	469a      	mov	sl, r3
   828a8:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   828ac:	f88d 80b8 	strb.w	r8, [sp, #184]	; 0xb8
   828b0:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   828b4:	930a      	str	r3, [sp, #40]	; 0x28
   828b6:	9314      	str	r3, [sp, #80]	; 0x50
   828b8:	4664      	mov	r4, ip
   828ba:	af2e      	add	r7, sp, #184	; 0xb8
   828bc:	e55f      	b.n	8237e <_svfprintf_r+0x33a>
   828be:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   828c2:	e5b7      	b.n	82434 <_svfprintf_r+0x3f0>
   828c4:	2b01      	cmp	r3, #1
   828c6:	f000 80ec 	beq.w	82aa2 <_svfprintf_r+0xa5e>
   828ca:	2b02      	cmp	r3, #2
   828cc:	f10d 03df 	add.w	r3, sp, #223	; 0xdf
   828d0:	d118      	bne.n	82904 <_svfprintf_r+0x8c0>
   828d2:	f8dd c068 	ldr.w	ip, [sp, #104]	; 0x68
   828d6:	4619      	mov	r1, r3
   828d8:	f004 000f 	and.w	r0, r4, #15
   828dc:	0922      	lsrs	r2, r4, #4
   828de:	f81c 0000 	ldrb.w	r0, [ip, r0]
   828e2:	ea42 7205 	orr.w	r2, r2, r5, lsl #28
   828e6:	092b      	lsrs	r3, r5, #4
   828e8:	7008      	strb	r0, [r1, #0]
   828ea:	ea52 0003 	orrs.w	r0, r2, r3
   828ee:	460f      	mov	r7, r1
   828f0:	4614      	mov	r4, r2
   828f2:	461d      	mov	r5, r3
   828f4:	f101 31ff 	add.w	r1, r1, #4294967295
   828f8:	d1ee      	bne.n	828d8 <_svfprintf_r+0x894>
   828fa:	9d08      	ldr	r5, [sp, #32]
   828fc:	e9cd 231e 	strd	r2, r3, [sp, #120]	; 0x78
   82900:	1bec      	subs	r4, r5, r7
   82902:	e52d      	b.n	82360 <_svfprintf_r+0x31c>
   82904:	08e0      	lsrs	r0, r4, #3
   82906:	ea40 7045 	orr.w	r0, r0, r5, lsl #29
   8290a:	f004 0207 	and.w	r2, r4, #7
   8290e:	08e9      	lsrs	r1, r5, #3
   82910:	3230      	adds	r2, #48	; 0x30
   82912:	ea50 0c01 	orrs.w	ip, r0, r1
   82916:	461f      	mov	r7, r3
   82918:	701a      	strb	r2, [r3, #0]
   8291a:	4604      	mov	r4, r0
   8291c:	460d      	mov	r5, r1
   8291e:	f103 33ff 	add.w	r3, r3, #4294967295
   82922:	d1ef      	bne.n	82904 <_svfprintf_r+0x8c0>
   82924:	9c09      	ldr	r4, [sp, #36]	; 0x24
   82926:	e9cd 011c 	strd	r0, r1, [sp, #112]	; 0x70
   8292a:	07e0      	lsls	r0, r4, #31
   8292c:	4639      	mov	r1, r7
   8292e:	f140 80c1 	bpl.w	82ab4 <_svfprintf_r+0xa70>
   82932:	2a30      	cmp	r2, #48	; 0x30
   82934:	f000 80be 	beq.w	82ab4 <_svfprintf_r+0xa70>
   82938:	9d08      	ldr	r5, [sp, #32]
   8293a:	461f      	mov	r7, r3
   8293c:	2330      	movs	r3, #48	; 0x30
   8293e:	1bec      	subs	r4, r5, r7
   82940:	f801 3c01 	strb.w	r3, [r1, #-1]
   82944:	e50c      	b.n	82360 <_svfprintf_r+0x31c>
   82946:	bf00      	nop
   82948:	00087aec 	.word	0x00087aec
   8294c:	00087b00 	.word	0x00087b00
   82950:	00087ae0 	.word	0x00087ae0
   82954:	00087adc 	.word	0x00087adc
   82958:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   8295c:	f340 80ad 	ble.w	82aba <_svfprintf_r+0xa76>
   82960:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   82964:	2200      	movs	r2, #0
   82966:	2300      	movs	r3, #0
   82968:	f8cd c01c 	str.w	ip, [sp, #28]
   8296c:	f7ff f9dc 	bl	81d28 <__aeabi_dcmpeq>
   82970:	f8dd c01c 	ldr.w	ip, [sp, #28]
   82974:	2800      	cmp	r0, #0
   82976:	f000 8126 	beq.w	82bc6 <_svfprintf_r+0xb82>
   8297a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8297c:	49aa      	ldr	r1, [pc, #680]	; (82c28 <_svfprintf_r+0xbe4>)
   8297e:	3301      	adds	r3, #1
   82980:	f10c 0c01 	add.w	ip, ip, #1
   82984:	2201      	movs	r2, #1
   82986:	2b07      	cmp	r3, #7
   82988:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   8298c:	932c      	str	r3, [sp, #176]	; 0xb0
   8298e:	e886 0006 	stmia.w	r6, {r1, r2}
   82992:	f300 82ed 	bgt.w	82f70 <_svfprintf_r+0xf2c>
   82996:	3608      	adds	r6, #8
   82998:	9b25      	ldr	r3, [sp, #148]	; 0x94
   8299a:	9c11      	ldr	r4, [sp, #68]	; 0x44
   8299c:	42a3      	cmp	r3, r4
   8299e:	db03      	blt.n	829a8 <_svfprintf_r+0x964>
   829a0:	9d09      	ldr	r5, [sp, #36]	; 0x24
   829a2:	07ec      	lsls	r4, r5, #31
   829a4:	f57f adc0 	bpl.w	82528 <_svfprintf_r+0x4e4>
   829a8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   829aa:	9c18      	ldr	r4, [sp, #96]	; 0x60
   829ac:	3301      	adds	r3, #1
   829ae:	9d15      	ldr	r5, [sp, #84]	; 0x54
   829b0:	44a4      	add	ip, r4
   829b2:	2b07      	cmp	r3, #7
   829b4:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   829b8:	6035      	str	r5, [r6, #0]
   829ba:	6074      	str	r4, [r6, #4]
   829bc:	932c      	str	r3, [sp, #176]	; 0xb0
   829be:	f300 833e 	bgt.w	8303e <_svfprintf_r+0xffa>
   829c2:	3608      	adds	r6, #8
   829c4:	9d11      	ldr	r5, [sp, #68]	; 0x44
   829c6:	1e6c      	subs	r4, r5, #1
   829c8:	2c00      	cmp	r4, #0
   829ca:	f77f adad 	ble.w	82528 <_svfprintf_r+0x4e4>
   829ce:	2c10      	cmp	r4, #16
   829d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   829d2:	4d96      	ldr	r5, [pc, #600]	; (82c2c <_svfprintf_r+0xbe8>)
   829d4:	f340 8197 	ble.w	82d06 <_svfprintf_r+0xcc2>
   829d8:	2710      	movs	r7, #16
   829da:	4662      	mov	r2, ip
   829dc:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   829e0:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   829e4:	e004      	b.n	829f0 <_svfprintf_r+0x9ac>
   829e6:	3608      	adds	r6, #8
   829e8:	3c10      	subs	r4, #16
   829ea:	2c10      	cmp	r4, #16
   829ec:	f340 818a 	ble.w	82d04 <_svfprintf_r+0xcc0>
   829f0:	3301      	adds	r3, #1
   829f2:	3210      	adds	r2, #16
   829f4:	2b07      	cmp	r3, #7
   829f6:	922d      	str	r2, [sp, #180]	; 0xb4
   829f8:	932c      	str	r3, [sp, #176]	; 0xb0
   829fa:	e886 00a0 	stmia.w	r6, {r5, r7}
   829fe:	ddf2      	ble.n	829e6 <_svfprintf_r+0x9a2>
   82a00:	4640      	mov	r0, r8
   82a02:	4651      	mov	r1, sl
   82a04:	aa2b      	add	r2, sp, #172	; 0xac
   82a06:	f004 fae9 	bl	86fdc <__ssprint_r>
   82a0a:	2800      	cmp	r0, #0
   82a0c:	f47f ac32 	bne.w	82274 <_svfprintf_r+0x230>
   82a10:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   82a12:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82a14:	ae38      	add	r6, sp, #224	; 0xe0
   82a16:	e7e7      	b.n	829e8 <_svfprintf_r+0x9a4>
   82a18:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   82a1a:	980b      	ldr	r0, [sp, #44]	; 0x2c
   82a1c:	ebc0 0a05 	rsb	sl, r0, r5
   82a20:	f1ba 0f00 	cmp.w	sl, #0
   82a24:	f77f ad2e 	ble.w	82484 <_svfprintf_r+0x440>
   82a28:	f1ba 0f10 	cmp.w	sl, #16
   82a2c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82a2e:	4d7f      	ldr	r5, [pc, #508]	; (82c2c <_svfprintf_r+0xbe8>)
   82a30:	dd2b      	ble.n	82a8a <_svfprintf_r+0xa46>
   82a32:	9412      	str	r4, [sp, #72]	; 0x48
   82a34:	4632      	mov	r2, r6
   82a36:	f04f 0b10 	mov.w	fp, #16
   82a3a:	462e      	mov	r6, r5
   82a3c:	4661      	mov	r1, ip
   82a3e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   82a40:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   82a42:	e006      	b.n	82a52 <_svfprintf_r+0xa0e>
   82a44:	f1aa 0a10 	sub.w	sl, sl, #16
   82a48:	f1ba 0f10 	cmp.w	sl, #16
   82a4c:	f102 0208 	add.w	r2, r2, #8
   82a50:	dd17      	ble.n	82a82 <_svfprintf_r+0xa3e>
   82a52:	3301      	adds	r3, #1
   82a54:	3110      	adds	r1, #16
   82a56:	2b07      	cmp	r3, #7
   82a58:	912d      	str	r1, [sp, #180]	; 0xb4
   82a5a:	932c      	str	r3, [sp, #176]	; 0xb0
   82a5c:	e882 0840 	stmia.w	r2, {r6, fp}
   82a60:	ddf0      	ble.n	82a44 <_svfprintf_r+0xa00>
   82a62:	4620      	mov	r0, r4
   82a64:	4629      	mov	r1, r5
   82a66:	aa2b      	add	r2, sp, #172	; 0xac
   82a68:	f004 fab8 	bl	86fdc <__ssprint_r>
   82a6c:	2800      	cmp	r0, #0
   82a6e:	f47f ac01 	bne.w	82274 <_svfprintf_r+0x230>
   82a72:	f1aa 0a10 	sub.w	sl, sl, #16
   82a76:	f1ba 0f10 	cmp.w	sl, #16
   82a7a:	992d      	ldr	r1, [sp, #180]	; 0xb4
   82a7c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82a7e:	aa38      	add	r2, sp, #224	; 0xe0
   82a80:	dce7      	bgt.n	82a52 <_svfprintf_r+0xa0e>
   82a82:	9c12      	ldr	r4, [sp, #72]	; 0x48
   82a84:	4635      	mov	r5, r6
   82a86:	468c      	mov	ip, r1
   82a88:	4616      	mov	r6, r2
   82a8a:	3301      	adds	r3, #1
   82a8c:	44d4      	add	ip, sl
   82a8e:	2b07      	cmp	r3, #7
   82a90:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82a94:	932c      	str	r3, [sp, #176]	; 0xb0
   82a96:	e886 0420 	stmia.w	r6, {r5, sl}
   82a9a:	f300 820f 	bgt.w	82ebc <_svfprintf_r+0xe78>
   82a9e:	3608      	adds	r6, #8
   82aa0:	e4f0      	b.n	82484 <_svfprintf_r+0x440>
   82aa2:	2d00      	cmp	r5, #0
   82aa4:	bf08      	it	eq
   82aa6:	2c0a      	cmpeq	r4, #10
   82aa8:	f080 8138 	bcs.w	82d1c <_svfprintf_r+0xcd8>
   82aac:	3430      	adds	r4, #48	; 0x30
   82aae:	af48      	add	r7, sp, #288	; 0x120
   82ab0:	f807 4d41 	strb.w	r4, [r7, #-65]!
   82ab4:	9d08      	ldr	r5, [sp, #32]
   82ab6:	1bec      	subs	r4, r5, r7
   82ab8:	e452      	b.n	82360 <_svfprintf_r+0x31c>
   82aba:	9c11      	ldr	r4, [sp, #68]	; 0x44
   82abc:	2c01      	cmp	r4, #1
   82abe:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   82ac0:	f340 81d2 	ble.w	82e68 <_svfprintf_r+0xe24>
   82ac4:	3401      	adds	r4, #1
   82ac6:	f10c 0301 	add.w	r3, ip, #1
   82aca:	2201      	movs	r2, #1
   82acc:	2c07      	cmp	r4, #7
   82ace:	932d      	str	r3, [sp, #180]	; 0xb4
   82ad0:	6037      	str	r7, [r6, #0]
   82ad2:	942c      	str	r4, [sp, #176]	; 0xb0
   82ad4:	6072      	str	r2, [r6, #4]
   82ad6:	f300 81d8 	bgt.w	82e8a <_svfprintf_r+0xe46>
   82ada:	3608      	adds	r6, #8
   82adc:	9d15      	ldr	r5, [sp, #84]	; 0x54
   82ade:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
   82ae2:	3401      	adds	r4, #1
   82ae4:	6035      	str	r5, [r6, #0]
   82ae6:	9d18      	ldr	r5, [sp, #96]	; 0x60
   82ae8:	4498      	add	r8, r3
   82aea:	2c07      	cmp	r4, #7
   82aec:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   82af0:	942c      	str	r4, [sp, #176]	; 0xb0
   82af2:	6075      	str	r5, [r6, #4]
   82af4:	f300 81d5 	bgt.w	82ea2 <_svfprintf_r+0xe5e>
   82af8:	3608      	adds	r6, #8
   82afa:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   82afe:	2200      	movs	r2, #0
   82b00:	2300      	movs	r3, #0
   82b02:	f7ff f911 	bl	81d28 <__aeabi_dcmpeq>
   82b06:	9d11      	ldr	r5, [sp, #68]	; 0x44
   82b08:	2800      	cmp	r0, #0
   82b0a:	f040 80b9 	bne.w	82c80 <_svfprintf_r+0xc3c>
   82b0e:	1e6b      	subs	r3, r5, #1
   82b10:	3401      	adds	r4, #1
   82b12:	3701      	adds	r7, #1
   82b14:	4498      	add	r8, r3
   82b16:	2c07      	cmp	r4, #7
   82b18:	942c      	str	r4, [sp, #176]	; 0xb0
   82b1a:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   82b1e:	6037      	str	r7, [r6, #0]
   82b20:	6073      	str	r3, [r6, #4]
   82b22:	f300 80e2 	bgt.w	82cea <_svfprintf_r+0xca6>
   82b26:	3608      	adds	r6, #8
   82b28:	f8dd c064 	ldr.w	ip, [sp, #100]	; 0x64
   82b2c:	3401      	adds	r4, #1
   82b2e:	9d19      	ldr	r5, [sp, #100]	; 0x64
   82b30:	44c4      	add	ip, r8
   82b32:	ab27      	add	r3, sp, #156	; 0x9c
   82b34:	2c07      	cmp	r4, #7
   82b36:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82b3a:	942c      	str	r4, [sp, #176]	; 0xb0
   82b3c:	e886 0028 	stmia.w	r6, {r3, r5}
   82b40:	f77f acf1 	ble.w	82526 <_svfprintf_r+0x4e2>
   82b44:	980d      	ldr	r0, [sp, #52]	; 0x34
   82b46:	990c      	ldr	r1, [sp, #48]	; 0x30
   82b48:	aa2b      	add	r2, sp, #172	; 0xac
   82b4a:	f004 fa47 	bl	86fdc <__ssprint_r>
   82b4e:	2800      	cmp	r0, #0
   82b50:	f47f ab90 	bne.w	82274 <_svfprintf_r+0x230>
   82b54:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82b58:	ae38      	add	r6, sp, #224	; 0xe0
   82b5a:	e4e5      	b.n	82528 <_svfprintf_r+0x4e4>
   82b5c:	980d      	ldr	r0, [sp, #52]	; 0x34
   82b5e:	990c      	ldr	r1, [sp, #48]	; 0x30
   82b60:	aa2b      	add	r2, sp, #172	; 0xac
   82b62:	f004 fa3b 	bl	86fdc <__ssprint_r>
   82b66:	2800      	cmp	r0, #0
   82b68:	f43f ad37 	beq.w	825da <_svfprintf_r+0x596>
   82b6c:	f7ff bb82 	b.w	82274 <_svfprintf_r+0x230>
   82b70:	980d      	ldr	r0, [sp, #52]	; 0x34
   82b72:	990c      	ldr	r1, [sp, #48]	; 0x30
   82b74:	aa2b      	add	r2, sp, #172	; 0xac
   82b76:	f004 fa31 	bl	86fdc <__ssprint_r>
   82b7a:	2800      	cmp	r0, #0
   82b7c:	f47f ab7a 	bne.w	82274 <_svfprintf_r+0x230>
   82b80:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82b84:	ae38      	add	r6, sp, #224	; 0xe0
   82b86:	e4bf      	b.n	82508 <_svfprintf_r+0x4c4>
   82b88:	980d      	ldr	r0, [sp, #52]	; 0x34
   82b8a:	990c      	ldr	r1, [sp, #48]	; 0x30
   82b8c:	aa2b      	add	r2, sp, #172	; 0xac
   82b8e:	f004 fa25 	bl	86fdc <__ssprint_r>
   82b92:	2800      	cmp	r0, #0
   82b94:	f47f ab6e 	bne.w	82274 <_svfprintf_r+0x230>
   82b98:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82b9c:	ae38      	add	r6, sp, #224	; 0xe0
   82b9e:	e46d      	b.n	8247c <_svfprintf_r+0x438>
   82ba0:	980d      	ldr	r0, [sp, #52]	; 0x34
   82ba2:	990c      	ldr	r1, [sp, #48]	; 0x30
   82ba4:	aa2b      	add	r2, sp, #172	; 0xac
   82ba6:	f004 fa19 	bl	86fdc <__ssprint_r>
   82baa:	2800      	cmp	r0, #0
   82bac:	f47f ab62 	bne.w	82274 <_svfprintf_r+0x230>
   82bb0:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82bb4:	ae38      	add	r6, sp, #224	; 0xe0
   82bb6:	e450      	b.n	8245a <_svfprintf_r+0x416>
   82bb8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82bba:	af38      	add	r7, sp, #224	; 0xe0
   82bbc:	f7ff bbd0 	b.w	82360 <_svfprintf_r+0x31c>
   82bc0:	2302      	movs	r3, #2
   82bc2:	f7ff bba9 	b.w	82318 <_svfprintf_r+0x2d4>
   82bc6:	9b25      	ldr	r3, [sp, #148]	; 0x94
   82bc8:	2b00      	cmp	r3, #0
   82bca:	f340 81dd 	ble.w	82f88 <_svfprintf_r+0xf44>
   82bce:	9c11      	ldr	r4, [sp, #68]	; 0x44
   82bd0:	9d14      	ldr	r5, [sp, #80]	; 0x50
   82bd2:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
   82bd6:	42ac      	cmp	r4, r5
   82bd8:	bfa8      	it	ge
   82bda:	462c      	movge	r4, r5
   82bdc:	2c00      	cmp	r4, #0
   82bde:	44ba      	add	sl, r7
   82be0:	dd0b      	ble.n	82bfa <_svfprintf_r+0xbb6>
   82be2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82be4:	44a4      	add	ip, r4
   82be6:	3301      	adds	r3, #1
   82be8:	2b07      	cmp	r3, #7
   82bea:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82bee:	6037      	str	r7, [r6, #0]
   82bf0:	6074      	str	r4, [r6, #4]
   82bf2:	932c      	str	r3, [sp, #176]	; 0xb0
   82bf4:	f300 831e 	bgt.w	83234 <_svfprintf_r+0x11f0>
   82bf8:	3608      	adds	r6, #8
   82bfa:	9d14      	ldr	r5, [sp, #80]	; 0x50
   82bfc:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
   82c00:	1b2c      	subs	r4, r5, r4
   82c02:	2c00      	cmp	r4, #0
   82c04:	f340 80d7 	ble.w	82db6 <_svfprintf_r+0xd72>
   82c08:	2c10      	cmp	r4, #16
   82c0a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82c0c:	4d07      	ldr	r5, [pc, #28]	; (82c2c <_svfprintf_r+0xbe8>)
   82c0e:	f340 81a3 	ble.w	82f58 <_svfprintf_r+0xf14>
   82c12:	970a      	str	r7, [sp, #40]	; 0x28
   82c14:	f04f 0810 	mov.w	r8, #16
   82c18:	462f      	mov	r7, r5
   82c1a:	4662      	mov	r2, ip
   82c1c:	4625      	mov	r5, r4
   82c1e:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
   82c22:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82c24:	e009      	b.n	82c3a <_svfprintf_r+0xbf6>
   82c26:	bf00      	nop
   82c28:	00087b1c 	.word	0x00087b1c
   82c2c:	00087acc 	.word	0x00087acc
   82c30:	3608      	adds	r6, #8
   82c32:	3d10      	subs	r5, #16
   82c34:	2d10      	cmp	r5, #16
   82c36:	f340 818b 	ble.w	82f50 <_svfprintf_r+0xf0c>
   82c3a:	3301      	adds	r3, #1
   82c3c:	3210      	adds	r2, #16
   82c3e:	2b07      	cmp	r3, #7
   82c40:	922d      	str	r2, [sp, #180]	; 0xb4
   82c42:	932c      	str	r3, [sp, #176]	; 0xb0
   82c44:	e886 0180 	stmia.w	r6, {r7, r8}
   82c48:	ddf2      	ble.n	82c30 <_svfprintf_r+0xbec>
   82c4a:	4658      	mov	r0, fp
   82c4c:	4621      	mov	r1, r4
   82c4e:	aa2b      	add	r2, sp, #172	; 0xac
   82c50:	f004 f9c4 	bl	86fdc <__ssprint_r>
   82c54:	2800      	cmp	r0, #0
   82c56:	f47f ab0d 	bne.w	82274 <_svfprintf_r+0x230>
   82c5a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   82c5c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82c5e:	ae38      	add	r6, sp, #224	; 0xe0
   82c60:	e7e7      	b.n	82c32 <_svfprintf_r+0xbee>
   82c62:	980d      	ldr	r0, [sp, #52]	; 0x34
   82c64:	990c      	ldr	r1, [sp, #48]	; 0x30
   82c66:	aa2b      	add	r2, sp, #172	; 0xac
   82c68:	f004 f9b8 	bl	86fdc <__ssprint_r>
   82c6c:	2800      	cmp	r0, #0
   82c6e:	f47f ab01 	bne.w	82274 <_svfprintf_r+0x230>
   82c72:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   82c76:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82c7a:	ae38      	add	r6, sp, #224	; 0xe0
   82c7c:	f7ff bbda 	b.w	82434 <_svfprintf_r+0x3f0>
   82c80:	1e6f      	subs	r7, r5, #1
   82c82:	2f00      	cmp	r7, #0
   82c84:	f77f af50 	ble.w	82b28 <_svfprintf_r+0xae4>
   82c88:	2f10      	cmp	r7, #16
   82c8a:	4dae      	ldr	r5, [pc, #696]	; (82f44 <_svfprintf_r+0xf00>)
   82c8c:	dd23      	ble.n	82cd6 <_svfprintf_r+0xc92>
   82c8e:	4643      	mov	r3, r8
   82c90:	f04f 0a10 	mov.w	sl, #16
   82c94:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   82c98:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   82c9c:	e004      	b.n	82ca8 <_svfprintf_r+0xc64>
   82c9e:	3f10      	subs	r7, #16
   82ca0:	2f10      	cmp	r7, #16
   82ca2:	f106 0608 	add.w	r6, r6, #8
   82ca6:	dd15      	ble.n	82cd4 <_svfprintf_r+0xc90>
   82ca8:	3401      	adds	r4, #1
   82caa:	3310      	adds	r3, #16
   82cac:	2c07      	cmp	r4, #7
   82cae:	932d      	str	r3, [sp, #180]	; 0xb4
   82cb0:	942c      	str	r4, [sp, #176]	; 0xb0
   82cb2:	e886 0420 	stmia.w	r6, {r5, sl}
   82cb6:	ddf2      	ble.n	82c9e <_svfprintf_r+0xc5a>
   82cb8:	4640      	mov	r0, r8
   82cba:	4659      	mov	r1, fp
   82cbc:	aa2b      	add	r2, sp, #172	; 0xac
   82cbe:	f004 f98d 	bl	86fdc <__ssprint_r>
   82cc2:	2800      	cmp	r0, #0
   82cc4:	f47f aad6 	bne.w	82274 <_svfprintf_r+0x230>
   82cc8:	3f10      	subs	r7, #16
   82cca:	2f10      	cmp	r7, #16
   82ccc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   82cce:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   82cd0:	ae38      	add	r6, sp, #224	; 0xe0
   82cd2:	dce9      	bgt.n	82ca8 <_svfprintf_r+0xc64>
   82cd4:	4698      	mov	r8, r3
   82cd6:	3401      	adds	r4, #1
   82cd8:	44b8      	add	r8, r7
   82cda:	2c07      	cmp	r4, #7
   82cdc:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   82ce0:	942c      	str	r4, [sp, #176]	; 0xb0
   82ce2:	e886 00a0 	stmia.w	r6, {r5, r7}
   82ce6:	f77f af1e 	ble.w	82b26 <_svfprintf_r+0xae2>
   82cea:	980d      	ldr	r0, [sp, #52]	; 0x34
   82cec:	990c      	ldr	r1, [sp, #48]	; 0x30
   82cee:	aa2b      	add	r2, sp, #172	; 0xac
   82cf0:	f004 f974 	bl	86fdc <__ssprint_r>
   82cf4:	2800      	cmp	r0, #0
   82cf6:	f47f aabd 	bne.w	82274 <_svfprintf_r+0x230>
   82cfa:	f8dd 80b4 	ldr.w	r8, [sp, #180]	; 0xb4
   82cfe:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   82d00:	ae38      	add	r6, sp, #224	; 0xe0
   82d02:	e711      	b.n	82b28 <_svfprintf_r+0xae4>
   82d04:	4694      	mov	ip, r2
   82d06:	3301      	adds	r3, #1
   82d08:	44a4      	add	ip, r4
   82d0a:	2b07      	cmp	r3, #7
   82d0c:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82d10:	932c      	str	r3, [sp, #176]	; 0xb0
   82d12:	6035      	str	r5, [r6, #0]
   82d14:	6074      	str	r4, [r6, #4]
   82d16:	f77f ac06 	ble.w	82526 <_svfprintf_r+0x4e2>
   82d1a:	e713      	b.n	82b44 <_svfprintf_r+0xb00>
   82d1c:	f10d 0bdf 	add.w	fp, sp, #223	; 0xdf
   82d20:	4620      	mov	r0, r4
   82d22:	4629      	mov	r1, r5
   82d24:	220a      	movs	r2, #10
   82d26:	2300      	movs	r3, #0
   82d28:	f004 fb4e 	bl	873c8 <__aeabi_uldivmod>
   82d2c:	3230      	adds	r2, #48	; 0x30
   82d2e:	f88b 2000 	strb.w	r2, [fp]
   82d32:	4620      	mov	r0, r4
   82d34:	4629      	mov	r1, r5
   82d36:	220a      	movs	r2, #10
   82d38:	2300      	movs	r3, #0
   82d3a:	f004 fb45 	bl	873c8 <__aeabi_uldivmod>
   82d3e:	4604      	mov	r4, r0
   82d40:	460d      	mov	r5, r1
   82d42:	ea54 0c05 	orrs.w	ip, r4, r5
   82d46:	465f      	mov	r7, fp
   82d48:	f10b 3bff 	add.w	fp, fp, #4294967295
   82d4c:	d1e8      	bne.n	82d20 <_svfprintf_r+0xcdc>
   82d4e:	9d08      	ldr	r5, [sp, #32]
   82d50:	1bec      	subs	r4, r5, r7
   82d52:	f7ff bb05 	b.w	82360 <_svfprintf_r+0x31c>
   82d56:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82d58:	2301      	movs	r3, #1
   82d5a:	682c      	ldr	r4, [r5, #0]
   82d5c:	3504      	adds	r5, #4
   82d5e:	9510      	str	r5, [sp, #64]	; 0x40
   82d60:	2500      	movs	r5, #0
   82d62:	f7ff bad9 	b.w	82318 <_svfprintf_r+0x2d4>
   82d66:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82d68:	682c      	ldr	r4, [r5, #0]
   82d6a:	3504      	adds	r5, #4
   82d6c:	9510      	str	r5, [sp, #64]	; 0x40
   82d6e:	2500      	movs	r5, #0
   82d70:	f7ff bad2 	b.w	82318 <_svfprintf_r+0x2d4>
   82d74:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82d76:	682c      	ldr	r4, [r5, #0]
   82d78:	3504      	adds	r5, #4
   82d7a:	9510      	str	r5, [sp, #64]	; 0x40
   82d7c:	17e5      	asrs	r5, r4, #31
   82d7e:	4622      	mov	r2, r4
   82d80:	462b      	mov	r3, r5
   82d82:	2a00      	cmp	r2, #0
   82d84:	f173 0c00 	sbcs.w	ip, r3, #0
   82d88:	f6bf ac6c 	bge.w	82664 <_svfprintf_r+0x620>
   82d8c:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   82d90:	4264      	negs	r4, r4
   82d92:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   82d96:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   82d9a:	2301      	movs	r3, #1
   82d9c:	f7ff bac0 	b.w	82320 <_svfprintf_r+0x2dc>
   82da0:	980d      	ldr	r0, [sp, #52]	; 0x34
   82da2:	990c      	ldr	r1, [sp, #48]	; 0x30
   82da4:	aa2b      	add	r2, sp, #172	; 0xac
   82da6:	f004 f919 	bl	86fdc <__ssprint_r>
   82daa:	2800      	cmp	r0, #0
   82dac:	f47f aa62 	bne.w	82274 <_svfprintf_r+0x230>
   82db0:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82db4:	ae38      	add	r6, sp, #224	; 0xe0
   82db6:	9d14      	ldr	r5, [sp, #80]	; 0x50
   82db8:	9c25      	ldr	r4, [sp, #148]	; 0x94
   82dba:	442f      	add	r7, r5
   82dbc:	9d11      	ldr	r5, [sp, #68]	; 0x44
   82dbe:	42ac      	cmp	r4, r5
   82dc0:	db42      	blt.n	82e48 <_svfprintf_r+0xe04>
   82dc2:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82dc4:	07e9      	lsls	r1, r5, #31
   82dc6:	d43f      	bmi.n	82e48 <_svfprintf_r+0xe04>
   82dc8:	9811      	ldr	r0, [sp, #68]	; 0x44
   82dca:	ebc7 050a 	rsb	r5, r7, sl
   82dce:	1b04      	subs	r4, r0, r4
   82dd0:	42ac      	cmp	r4, r5
   82dd2:	bfb8      	it	lt
   82dd4:	4625      	movlt	r5, r4
   82dd6:	2d00      	cmp	r5, #0
   82dd8:	dd0b      	ble.n	82df2 <_svfprintf_r+0xdae>
   82dda:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82ddc:	44ac      	add	ip, r5
   82dde:	3301      	adds	r3, #1
   82de0:	2b07      	cmp	r3, #7
   82de2:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82de6:	6037      	str	r7, [r6, #0]
   82de8:	6075      	str	r5, [r6, #4]
   82dea:	932c      	str	r3, [sp, #176]	; 0xb0
   82dec:	f300 824c 	bgt.w	83288 <_svfprintf_r+0x1244>
   82df0:	3608      	adds	r6, #8
   82df2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
   82df6:	1b64      	subs	r4, r4, r5
   82df8:	2c00      	cmp	r4, #0
   82dfa:	f77f ab95 	ble.w	82528 <_svfprintf_r+0x4e4>
   82dfe:	2c10      	cmp	r4, #16
   82e00:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82e02:	4d50      	ldr	r5, [pc, #320]	; (82f44 <_svfprintf_r+0xf00>)
   82e04:	f77f af7f 	ble.w	82d06 <_svfprintf_r+0xcc2>
   82e08:	2710      	movs	r7, #16
   82e0a:	4662      	mov	r2, ip
   82e0c:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   82e10:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   82e14:	e004      	b.n	82e20 <_svfprintf_r+0xddc>
   82e16:	3608      	adds	r6, #8
   82e18:	3c10      	subs	r4, #16
   82e1a:	2c10      	cmp	r4, #16
   82e1c:	f77f af72 	ble.w	82d04 <_svfprintf_r+0xcc0>
   82e20:	3301      	adds	r3, #1
   82e22:	3210      	adds	r2, #16
   82e24:	2b07      	cmp	r3, #7
   82e26:	922d      	str	r2, [sp, #180]	; 0xb4
   82e28:	932c      	str	r3, [sp, #176]	; 0xb0
   82e2a:	e886 00a0 	stmia.w	r6, {r5, r7}
   82e2e:	ddf2      	ble.n	82e16 <_svfprintf_r+0xdd2>
   82e30:	4640      	mov	r0, r8
   82e32:	4651      	mov	r1, sl
   82e34:	aa2b      	add	r2, sp, #172	; 0xac
   82e36:	f004 f8d1 	bl	86fdc <__ssprint_r>
   82e3a:	2800      	cmp	r0, #0
   82e3c:	f47f aa1a 	bne.w	82274 <_svfprintf_r+0x230>
   82e40:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   82e42:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82e44:	ae38      	add	r6, sp, #224	; 0xe0
   82e46:	e7e7      	b.n	82e18 <_svfprintf_r+0xdd4>
   82e48:	9d18      	ldr	r5, [sp, #96]	; 0x60
   82e4a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82e4c:	44ac      	add	ip, r5
   82e4e:	9d15      	ldr	r5, [sp, #84]	; 0x54
   82e50:	3301      	adds	r3, #1
   82e52:	6035      	str	r5, [r6, #0]
   82e54:	9d18      	ldr	r5, [sp, #96]	; 0x60
   82e56:	2b07      	cmp	r3, #7
   82e58:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82e5c:	6075      	str	r5, [r6, #4]
   82e5e:	932c      	str	r3, [sp, #176]	; 0xb0
   82e60:	f300 81f4 	bgt.w	8324c <_svfprintf_r+0x1208>
   82e64:	3608      	adds	r6, #8
   82e66:	e7af      	b.n	82dc8 <_svfprintf_r+0xd84>
   82e68:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82e6a:	07ea      	lsls	r2, r5, #31
   82e6c:	f53f ae2a 	bmi.w	82ac4 <_svfprintf_r+0xa80>
   82e70:	3401      	adds	r4, #1
   82e72:	f10c 0801 	add.w	r8, ip, #1
   82e76:	2301      	movs	r3, #1
   82e78:	2c07      	cmp	r4, #7
   82e7a:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   82e7e:	942c      	str	r4, [sp, #176]	; 0xb0
   82e80:	6037      	str	r7, [r6, #0]
   82e82:	6073      	str	r3, [r6, #4]
   82e84:	f77f ae4f 	ble.w	82b26 <_svfprintf_r+0xae2>
   82e88:	e72f      	b.n	82cea <_svfprintf_r+0xca6>
   82e8a:	980d      	ldr	r0, [sp, #52]	; 0x34
   82e8c:	990c      	ldr	r1, [sp, #48]	; 0x30
   82e8e:	aa2b      	add	r2, sp, #172	; 0xac
   82e90:	f004 f8a4 	bl	86fdc <__ssprint_r>
   82e94:	2800      	cmp	r0, #0
   82e96:	f47f a9ed 	bne.w	82274 <_svfprintf_r+0x230>
   82e9a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   82e9c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   82e9e:	ae38      	add	r6, sp, #224	; 0xe0
   82ea0:	e61c      	b.n	82adc <_svfprintf_r+0xa98>
   82ea2:	980d      	ldr	r0, [sp, #52]	; 0x34
   82ea4:	990c      	ldr	r1, [sp, #48]	; 0x30
   82ea6:	aa2b      	add	r2, sp, #172	; 0xac
   82ea8:	f004 f898 	bl	86fdc <__ssprint_r>
   82eac:	2800      	cmp	r0, #0
   82eae:	f47f a9e1 	bne.w	82274 <_svfprintf_r+0x230>
   82eb2:	f8dd 80b4 	ldr.w	r8, [sp, #180]	; 0xb4
   82eb6:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   82eb8:	ae38      	add	r6, sp, #224	; 0xe0
   82eba:	e61e      	b.n	82afa <_svfprintf_r+0xab6>
   82ebc:	980d      	ldr	r0, [sp, #52]	; 0x34
   82ebe:	990c      	ldr	r1, [sp, #48]	; 0x30
   82ec0:	aa2b      	add	r2, sp, #172	; 0xac
   82ec2:	f004 f88b 	bl	86fdc <__ssprint_r>
   82ec6:	2800      	cmp	r0, #0
   82ec8:	f47f a9d4 	bne.w	82274 <_svfprintf_r+0x230>
   82ecc:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82ed0:	ae38      	add	r6, sp, #224	; 0xe0
   82ed2:	f7ff bad7 	b.w	82484 <_svfprintf_r+0x440>
   82ed6:	f7fe fadf 	bl	81498 <__fpclassifyd>
   82eda:	2800      	cmp	r0, #0
   82edc:	f040 80bb 	bne.w	83056 <_svfprintf_r+0x1012>
   82ee0:	9c09      	ldr	r4, [sp, #36]	; 0x24
   82ee2:	4f19      	ldr	r7, [pc, #100]	; (82f48 <_svfprintf_r+0xf04>)
   82ee4:	4b19      	ldr	r3, [pc, #100]	; (82f4c <_svfprintf_r+0xf08>)
   82ee6:	f04f 0c03 	mov.w	ip, #3
   82eea:	f024 0480 	bic.w	r4, r4, #128	; 0x80
   82eee:	9409      	str	r4, [sp, #36]	; 0x24
   82ef0:	900a      	str	r0, [sp, #40]	; 0x28
   82ef2:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   82ef6:	9014      	str	r0, [sp, #80]	; 0x50
   82ef8:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   82efc:	bfd8      	it	le
   82efe:	461f      	movle	r7, r3
   82f00:	4664      	mov	r4, ip
   82f02:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   82f06:	f7ff ba34 	b.w	82372 <_svfprintf_r+0x32e>
   82f0a:	9c09      	ldr	r4, [sp, #36]	; 0x24
   82f0c:	0664      	lsls	r4, r4, #25
   82f0e:	f140 8150 	bpl.w	831b2 <_svfprintf_r+0x116e>
   82f12:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   82f16:	2500      	movs	r5, #0
   82f18:	f8bc 4000 	ldrh.w	r4, [ip]
   82f1c:	f10c 0c04 	add.w	ip, ip, #4
   82f20:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   82f24:	f7ff b9e4 	b.w	822f0 <_svfprintf_r+0x2ac>
   82f28:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82f2c:	f01c 0f10 	tst.w	ip, #16
   82f30:	f000 8146 	beq.w	831c0 <_svfprintf_r+0x117c>
   82f34:	9c10      	ldr	r4, [sp, #64]	; 0x40
   82f36:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   82f38:	6823      	ldr	r3, [r4, #0]
   82f3a:	3404      	adds	r4, #4
   82f3c:	9410      	str	r4, [sp, #64]	; 0x40
   82f3e:	601d      	str	r5, [r3, #0]
   82f40:	f7ff b8a6 	b.w	82090 <_svfprintf_r+0x4c>
   82f44:	00087acc 	.word	0x00087acc
   82f48:	00087ae8 	.word	0x00087ae8
   82f4c:	00087ae4 	.word	0x00087ae4
   82f50:	462c      	mov	r4, r5
   82f52:	463d      	mov	r5, r7
   82f54:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   82f56:	4694      	mov	ip, r2
   82f58:	3301      	adds	r3, #1
   82f5a:	44a4      	add	ip, r4
   82f5c:	2b07      	cmp	r3, #7
   82f5e:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82f62:	932c      	str	r3, [sp, #176]	; 0xb0
   82f64:	6035      	str	r5, [r6, #0]
   82f66:	6074      	str	r4, [r6, #4]
   82f68:	f73f af1a 	bgt.w	82da0 <_svfprintf_r+0xd5c>
   82f6c:	3608      	adds	r6, #8
   82f6e:	e722      	b.n	82db6 <_svfprintf_r+0xd72>
   82f70:	980d      	ldr	r0, [sp, #52]	; 0x34
   82f72:	990c      	ldr	r1, [sp, #48]	; 0x30
   82f74:	aa2b      	add	r2, sp, #172	; 0xac
   82f76:	f004 f831 	bl	86fdc <__ssprint_r>
   82f7a:	2800      	cmp	r0, #0
   82f7c:	f47f a97a 	bne.w	82274 <_svfprintf_r+0x230>
   82f80:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82f84:	ae38      	add	r6, sp, #224	; 0xe0
   82f86:	e507      	b.n	82998 <_svfprintf_r+0x954>
   82f88:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   82f8a:	49b7      	ldr	r1, [pc, #732]	; (83268 <_svfprintf_r+0x1224>)
   82f8c:	3201      	adds	r2, #1
   82f8e:	f10c 0c01 	add.w	ip, ip, #1
   82f92:	2001      	movs	r0, #1
   82f94:	2a07      	cmp	r2, #7
   82f96:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82f9a:	922c      	str	r2, [sp, #176]	; 0xb0
   82f9c:	6031      	str	r1, [r6, #0]
   82f9e:	6070      	str	r0, [r6, #4]
   82fa0:	f300 80f7 	bgt.w	83192 <_svfprintf_r+0x114e>
   82fa4:	3608      	adds	r6, #8
   82fa6:	461c      	mov	r4, r3
   82fa8:	b92c      	cbnz	r4, 82fb6 <_svfprintf_r+0xf72>
   82faa:	9d11      	ldr	r5, [sp, #68]	; 0x44
   82fac:	b91d      	cbnz	r5, 82fb6 <_svfprintf_r+0xf72>
   82fae:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82fb0:	07e8      	lsls	r0, r5, #31
   82fb2:	f57f aab9 	bpl.w	82528 <_svfprintf_r+0x4e4>
   82fb6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82fb8:	9d15      	ldr	r5, [sp, #84]	; 0x54
   82fba:	9918      	ldr	r1, [sp, #96]	; 0x60
   82fbc:	3301      	adds	r3, #1
   82fbe:	6035      	str	r5, [r6, #0]
   82fc0:	9d18      	ldr	r5, [sp, #96]	; 0x60
   82fc2:	4461      	add	r1, ip
   82fc4:	2b07      	cmp	r3, #7
   82fc6:	912d      	str	r1, [sp, #180]	; 0xb4
   82fc8:	6075      	str	r5, [r6, #4]
   82fca:	932c      	str	r3, [sp, #176]	; 0xb0
   82fcc:	f300 81de 	bgt.w	8338c <_svfprintf_r+0x1348>
   82fd0:	f106 0208 	add.w	r2, r6, #8
   82fd4:	4264      	negs	r4, r4
   82fd6:	2c00      	cmp	r4, #0
   82fd8:	f340 810b 	ble.w	831f2 <_svfprintf_r+0x11ae>
   82fdc:	2c10      	cmp	r4, #16
   82fde:	4da3      	ldr	r5, [pc, #652]	; (8326c <_svfprintf_r+0x1228>)
   82fe0:	f340 8148 	ble.w	83274 <_svfprintf_r+0x1230>
   82fe4:	46a3      	mov	fp, r4
   82fe6:	2610      	movs	r6, #16
   82fe8:	460c      	mov	r4, r1
   82fea:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   82fee:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   82ff2:	e006      	b.n	83002 <_svfprintf_r+0xfbe>
   82ff4:	3208      	adds	r2, #8
   82ff6:	f1ab 0b10 	sub.w	fp, fp, #16
   82ffa:	f1bb 0f10 	cmp.w	fp, #16
   82ffe:	f340 8137 	ble.w	83270 <_svfprintf_r+0x122c>
   83002:	3301      	adds	r3, #1
   83004:	3410      	adds	r4, #16
   83006:	2b07      	cmp	r3, #7
   83008:	942d      	str	r4, [sp, #180]	; 0xb4
   8300a:	932c      	str	r3, [sp, #176]	; 0xb0
   8300c:	e882 0060 	stmia.w	r2, {r5, r6}
   83010:	ddf0      	ble.n	82ff4 <_svfprintf_r+0xfb0>
   83012:	4640      	mov	r0, r8
   83014:	4651      	mov	r1, sl
   83016:	aa2b      	add	r2, sp, #172	; 0xac
   83018:	f003 ffe0 	bl	86fdc <__ssprint_r>
   8301c:	2800      	cmp	r0, #0
   8301e:	f47f a929 	bne.w	82274 <_svfprintf_r+0x230>
   83022:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
   83024:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   83026:	aa38      	add	r2, sp, #224	; 0xe0
   83028:	e7e5      	b.n	82ff6 <_svfprintf_r+0xfb2>
   8302a:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8302c:	f109 0901 	add.w	r9, r9, #1
   83030:	f044 0420 	orr.w	r4, r4, #32
   83034:	9409      	str	r4, [sp, #36]	; 0x24
   83036:	f893 8001 	ldrb.w	r8, [r3, #1]
   8303a:	f7ff b85f 	b.w	820fc <_svfprintf_r+0xb8>
   8303e:	980d      	ldr	r0, [sp, #52]	; 0x34
   83040:	990c      	ldr	r1, [sp, #48]	; 0x30
   83042:	aa2b      	add	r2, sp, #172	; 0xac
   83044:	f003 ffca 	bl	86fdc <__ssprint_r>
   83048:	2800      	cmp	r0, #0
   8304a:	f47f a913 	bne.w	82274 <_svfprintf_r+0x230>
   8304e:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   83052:	ae38      	add	r6, sp, #224	; 0xe0
   83054:	e4b6      	b.n	829c4 <_svfprintf_r+0x980>
   83056:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   83058:	f028 0a20 	bic.w	sl, r8, #32
   8305c:	3501      	adds	r5, #1
   8305e:	f000 80a5 	beq.w	831ac <_svfprintf_r+0x1168>
   83062:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
   83066:	d104      	bne.n	83072 <_svfprintf_r+0x102e>
   83068:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   8306a:	2d00      	cmp	r5, #0
   8306c:	bf08      	it	eq
   8306e:	2501      	moveq	r5, #1
   83070:	950a      	str	r5, [sp, #40]	; 0x28
   83072:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   83076:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   8307a:	f44c 7c80 	orr.w	ip, ip, #256	; 0x100
   8307e:	2b00      	cmp	r3, #0
   83080:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
   83084:	f2c0 819c 	blt.w	833c0 <_svfprintf_r+0x137c>
   83088:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	; 0x58
   8308c:	e9cd 4520 	strd	r4, r5, [sp, #128]	; 0x80
   83090:	f04f 0b00 	mov.w	fp, #0
   83094:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   83098:	f000 819b 	beq.w	833d2 <_svfprintf_r+0x138e>
   8309c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
   830a0:	f000 81a9 	beq.w	833f6 <_svfprintf_r+0x13b2>
   830a4:	f1ba 0f45 	cmp.w	sl, #69	; 0x45
   830a8:	bf0a      	itet	eq
   830aa:	9c0a      	ldreq	r4, [sp, #40]	; 0x28
   830ac:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   830ae:	1c65      	addeq	r5, r4, #1
   830b0:	2002      	movs	r0, #2
   830b2:	a925      	add	r1, sp, #148	; 0x94
   830b4:	aa26      	add	r2, sp, #152	; 0x98
   830b6:	ab29      	add	r3, sp, #164	; 0xa4
   830b8:	e88d 0021 	stmia.w	sp, {r0, r5}
   830bc:	9203      	str	r2, [sp, #12]
   830be:	9304      	str	r3, [sp, #16]
   830c0:	9102      	str	r1, [sp, #8]
   830c2:	980d      	ldr	r0, [sp, #52]	; 0x34
   830c4:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
   830c8:	f001 fa32 	bl	84530 <_dtoa_r>
   830cc:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
   830d0:	4607      	mov	r7, r0
   830d2:	d002      	beq.n	830da <_svfprintf_r+0x1096>
   830d4:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   830d8:	d105      	bne.n	830e6 <_svfprintf_r+0x10a2>
   830da:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   830de:	f01c 0f01 	tst.w	ip, #1
   830e2:	f000 819c 	beq.w	8341e <_svfprintf_r+0x13da>
   830e6:	f1ba 0f46 	cmp.w	sl, #70	; 0x46
   830ea:	eb07 0405 	add.w	r4, r7, r5
   830ee:	f000 811c 	beq.w	8332a <_svfprintf_r+0x12e6>
   830f2:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
   830f6:	2200      	movs	r2, #0
   830f8:	2300      	movs	r3, #0
   830fa:	f7fe fe15 	bl	81d28 <__aeabi_dcmpeq>
   830fe:	2800      	cmp	r0, #0
   83100:	f040 8105 	bne.w	8330e <_svfprintf_r+0x12ca>
   83104:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   83106:	429c      	cmp	r4, r3
   83108:	d906      	bls.n	83118 <_svfprintf_r+0x10d4>
   8310a:	2130      	movs	r1, #48	; 0x30
   8310c:	1c5a      	adds	r2, r3, #1
   8310e:	9229      	str	r2, [sp, #164]	; 0xa4
   83110:	7019      	strb	r1, [r3, #0]
   83112:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   83114:	429c      	cmp	r4, r3
   83116:	d8f9      	bhi.n	8310c <_svfprintf_r+0x10c8>
   83118:	1bdb      	subs	r3, r3, r7
   8311a:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
   8311e:	9311      	str	r3, [sp, #68]	; 0x44
   83120:	f000 80ed 	beq.w	832fe <_svfprintf_r+0x12ba>
   83124:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   83128:	f340 81f2 	ble.w	83510 <_svfprintf_r+0x14cc>
   8312c:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   83130:	f000 8168 	beq.w	83404 <_svfprintf_r+0x13c0>
   83134:	9c25      	ldr	r4, [sp, #148]	; 0x94
   83136:	9414      	str	r4, [sp, #80]	; 0x50
   83138:	9c11      	ldr	r4, [sp, #68]	; 0x44
   8313a:	9d14      	ldr	r5, [sp, #80]	; 0x50
   8313c:	42ac      	cmp	r4, r5
   8313e:	f300 8132 	bgt.w	833a6 <_svfprintf_r+0x1362>
   83142:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   83146:	f01c 0f01 	tst.w	ip, #1
   8314a:	f040 81ad 	bne.w	834a8 <_svfprintf_r+0x1464>
   8314e:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
   83152:	462c      	mov	r4, r5
   83154:	f04f 0867 	mov.w	r8, #103	; 0x67
   83158:	f1bb 0f00 	cmp.w	fp, #0
   8315c:	f040 80b2 	bne.w	832c4 <_svfprintf_r+0x1280>
   83160:	9d12      	ldr	r5, [sp, #72]	; 0x48
   83162:	930b      	str	r3, [sp, #44]	; 0x2c
   83164:	9509      	str	r5, [sp, #36]	; 0x24
   83166:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
   8316a:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   8316e:	f7ff b900 	b.w	82372 <_svfprintf_r+0x32e>
   83172:	980d      	ldr	r0, [sp, #52]	; 0x34
   83174:	2140      	movs	r1, #64	; 0x40
   83176:	f002 fdfd 	bl	85d74 <_malloc_r>
   8317a:	6020      	str	r0, [r4, #0]
   8317c:	6120      	str	r0, [r4, #16]
   8317e:	2800      	cmp	r0, #0
   83180:	f000 81bf 	beq.w	83502 <_svfprintf_r+0x14be>
   83184:	f8dd c030 	ldr.w	ip, [sp, #48]	; 0x30
   83188:	2340      	movs	r3, #64	; 0x40
   8318a:	f8cc 3014 	str.w	r3, [ip, #20]
   8318e:	f7fe bf6f 	b.w	82070 <_svfprintf_r+0x2c>
   83192:	980d      	ldr	r0, [sp, #52]	; 0x34
   83194:	990c      	ldr	r1, [sp, #48]	; 0x30
   83196:	aa2b      	add	r2, sp, #172	; 0xac
   83198:	f003 ff20 	bl	86fdc <__ssprint_r>
   8319c:	2800      	cmp	r0, #0
   8319e:	f47f a869 	bne.w	82274 <_svfprintf_r+0x230>
   831a2:	9c25      	ldr	r4, [sp, #148]	; 0x94
   831a4:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   831a8:	ae38      	add	r6, sp, #224	; 0xe0
   831aa:	e6fd      	b.n	82fa8 <_svfprintf_r+0xf64>
   831ac:	2406      	movs	r4, #6
   831ae:	940a      	str	r4, [sp, #40]	; 0x28
   831b0:	e75f      	b.n	83072 <_svfprintf_r+0x102e>
   831b2:	9d10      	ldr	r5, [sp, #64]	; 0x40
   831b4:	682c      	ldr	r4, [r5, #0]
   831b6:	3504      	adds	r5, #4
   831b8:	9510      	str	r5, [sp, #64]	; 0x40
   831ba:	2500      	movs	r5, #0
   831bc:	f7ff b898 	b.w	822f0 <_svfprintf_r+0x2ac>
   831c0:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   831c4:	f01c 0f40 	tst.w	ip, #64	; 0x40
   831c8:	f000 8087 	beq.w	832da <_svfprintf_r+0x1296>
   831cc:	9c10      	ldr	r4, [sp, #64]	; 0x40
   831ce:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   831d0:	6823      	ldr	r3, [r4, #0]
   831d2:	3404      	adds	r4, #4
   831d4:	9410      	str	r4, [sp, #64]	; 0x40
   831d6:	801d      	strh	r5, [r3, #0]
   831d8:	f7fe bf5a 	b.w	82090 <_svfprintf_r+0x4c>
   831dc:	980d      	ldr	r0, [sp, #52]	; 0x34
   831de:	990c      	ldr	r1, [sp, #48]	; 0x30
   831e0:	aa2b      	add	r2, sp, #172	; 0xac
   831e2:	f003 fefb 	bl	86fdc <__ssprint_r>
   831e6:	2800      	cmp	r0, #0
   831e8:	f47f a844 	bne.w	82274 <_svfprintf_r+0x230>
   831ec:	992d      	ldr	r1, [sp, #180]	; 0xb4
   831ee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   831f0:	aa38      	add	r2, sp, #224	; 0xe0
   831f2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
   831f6:	3301      	adds	r3, #1
   831f8:	9c11      	ldr	r4, [sp, #68]	; 0x44
   831fa:	448c      	add	ip, r1
   831fc:	2b07      	cmp	r3, #7
   831fe:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   83202:	932c      	str	r3, [sp, #176]	; 0xb0
   83204:	6017      	str	r7, [r2, #0]
   83206:	6054      	str	r4, [r2, #4]
   83208:	f73f ac9c 	bgt.w	82b44 <_svfprintf_r+0xb00>
   8320c:	f102 0608 	add.w	r6, r2, #8
   83210:	f7ff b98a 	b.w	82528 <_svfprintf_r+0x4e4>
   83214:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
   83218:	f003 feb0 	bl	86f7c <strlen>
   8321c:	9510      	str	r5, [sp, #64]	; 0x40
   8321e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   83220:	ea20 7ce0 	bic.w	ip, r0, r0, asr #31
   83224:	4604      	mov	r4, r0
   83226:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   8322a:	9514      	str	r5, [sp, #80]	; 0x50
   8322c:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   83230:	f7ff b89f 	b.w	82372 <_svfprintf_r+0x32e>
   83234:	980d      	ldr	r0, [sp, #52]	; 0x34
   83236:	990c      	ldr	r1, [sp, #48]	; 0x30
   83238:	aa2b      	add	r2, sp, #172	; 0xac
   8323a:	f003 fecf 	bl	86fdc <__ssprint_r>
   8323e:	2800      	cmp	r0, #0
   83240:	f47f a818 	bne.w	82274 <_svfprintf_r+0x230>
   83244:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   83248:	ae38      	add	r6, sp, #224	; 0xe0
   8324a:	e4d6      	b.n	82bfa <_svfprintf_r+0xbb6>
   8324c:	980d      	ldr	r0, [sp, #52]	; 0x34
   8324e:	990c      	ldr	r1, [sp, #48]	; 0x30
   83250:	aa2b      	add	r2, sp, #172	; 0xac
   83252:	f003 fec3 	bl	86fdc <__ssprint_r>
   83256:	2800      	cmp	r0, #0
   83258:	f47f a80c 	bne.w	82274 <_svfprintf_r+0x230>
   8325c:	9c25      	ldr	r4, [sp, #148]	; 0x94
   8325e:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   83262:	ae38      	add	r6, sp, #224	; 0xe0
   83264:	e5b0      	b.n	82dc8 <_svfprintf_r+0xd84>
   83266:	bf00      	nop
   83268:	00087b1c 	.word	0x00087b1c
   8326c:	00087acc 	.word	0x00087acc
   83270:	4621      	mov	r1, r4
   83272:	465c      	mov	r4, fp
   83274:	3301      	adds	r3, #1
   83276:	4421      	add	r1, r4
   83278:	2b07      	cmp	r3, #7
   8327a:	912d      	str	r1, [sp, #180]	; 0xb4
   8327c:	932c      	str	r3, [sp, #176]	; 0xb0
   8327e:	6015      	str	r5, [r2, #0]
   83280:	6054      	str	r4, [r2, #4]
   83282:	dcab      	bgt.n	831dc <_svfprintf_r+0x1198>
   83284:	3208      	adds	r2, #8
   83286:	e7b4      	b.n	831f2 <_svfprintf_r+0x11ae>
   83288:	980d      	ldr	r0, [sp, #52]	; 0x34
   8328a:	990c      	ldr	r1, [sp, #48]	; 0x30
   8328c:	aa2b      	add	r2, sp, #172	; 0xac
   8328e:	f003 fea5 	bl	86fdc <__ssprint_r>
   83292:	2800      	cmp	r0, #0
   83294:	f47e afee 	bne.w	82274 <_svfprintf_r+0x230>
   83298:	9c25      	ldr	r4, [sp, #148]	; 0x94
   8329a:	9911      	ldr	r1, [sp, #68]	; 0x44
   8329c:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   832a0:	1b0c      	subs	r4, r1, r4
   832a2:	ae38      	add	r6, sp, #224	; 0xe0
   832a4:	e5a5      	b.n	82df2 <_svfprintf_r+0xdae>
   832a6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   832a8:	46ba      	mov	sl, r7
   832aa:	2c06      	cmp	r4, #6
   832ac:	bf28      	it	cs
   832ae:	2406      	movcs	r4, #6
   832b0:	ea24 7ce4 	bic.w	ip, r4, r4, asr #31
   832b4:	970a      	str	r7, [sp, #40]	; 0x28
   832b6:	9714      	str	r7, [sp, #80]	; 0x50
   832b8:	9510      	str	r5, [sp, #64]	; 0x40
   832ba:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   832be:	4f97      	ldr	r7, [pc, #604]	; (8351c <_svfprintf_r+0x14d8>)
   832c0:	f7ff b857 	b.w	82372 <_svfprintf_r+0x32e>
   832c4:	9d12      	ldr	r5, [sp, #72]	; 0x48
   832c6:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   832ca:	9509      	str	r5, [sp, #36]	; 0x24
   832cc:	2500      	movs	r5, #0
   832ce:	930b      	str	r3, [sp, #44]	; 0x2c
   832d0:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   832d4:	950a      	str	r5, [sp, #40]	; 0x28
   832d6:	f7ff b84f 	b.w	82378 <_svfprintf_r+0x334>
   832da:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   832de:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   832e0:	f8dc 3000 	ldr.w	r3, [ip]
   832e4:	f10c 0c04 	add.w	ip, ip, #4
   832e8:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   832ec:	601c      	str	r4, [r3, #0]
   832ee:	f7fe becf 	b.w	82090 <_svfprintf_r+0x4c>
   832f2:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   832f6:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   832fa:	f7ff ba99 	b.w	82830 <_svfprintf_r+0x7ec>
   832fe:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83300:	1cdc      	adds	r4, r3, #3
   83302:	db19      	blt.n	83338 <_svfprintf_r+0x12f4>
   83304:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   83306:	429c      	cmp	r4, r3
   83308:	db16      	blt.n	83338 <_svfprintf_r+0x12f4>
   8330a:	9314      	str	r3, [sp, #80]	; 0x50
   8330c:	e714      	b.n	83138 <_svfprintf_r+0x10f4>
   8330e:	4623      	mov	r3, r4
   83310:	e702      	b.n	83118 <_svfprintf_r+0x10d4>
   83312:	ea24 7ce4 	bic.w	ip, r4, r4, asr #31
   83316:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   8331a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   8331c:	9510      	str	r5, [sp, #64]	; 0x40
   8331e:	900a      	str	r0, [sp, #40]	; 0x28
   83320:	9014      	str	r0, [sp, #80]	; 0x50
   83322:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   83326:	f7ff b824 	b.w	82372 <_svfprintf_r+0x32e>
   8332a:	783b      	ldrb	r3, [r7, #0]
   8332c:	2b30      	cmp	r3, #48	; 0x30
   8332e:	f000 80ad 	beq.w	8348c <_svfprintf_r+0x1448>
   83332:	9d25      	ldr	r5, [sp, #148]	; 0x94
   83334:	442c      	add	r4, r5
   83336:	e6dc      	b.n	830f2 <_svfprintf_r+0x10ae>
   83338:	f1a8 0802 	sub.w	r8, r8, #2
   8333c:	1e59      	subs	r1, r3, #1
   8333e:	2900      	cmp	r1, #0
   83340:	9125      	str	r1, [sp, #148]	; 0x94
   83342:	bfba      	itte	lt
   83344:	4249      	neglt	r1, r1
   83346:	232d      	movlt	r3, #45	; 0x2d
   83348:	232b      	movge	r3, #43	; 0x2b
   8334a:	2909      	cmp	r1, #9
   8334c:	f88d 809c 	strb.w	r8, [sp, #156]	; 0x9c
   83350:	f88d 309d 	strb.w	r3, [sp, #157]	; 0x9d
   83354:	dc65      	bgt.n	83422 <_svfprintf_r+0x13de>
   83356:	2330      	movs	r3, #48	; 0x30
   83358:	3130      	adds	r1, #48	; 0x30
   8335a:	f88d 309e 	strb.w	r3, [sp, #158]	; 0x9e
   8335e:	f88d 109f 	strb.w	r1, [sp, #159]	; 0x9f
   83362:	ab28      	add	r3, sp, #160	; 0xa0
   83364:	9d11      	ldr	r5, [sp, #68]	; 0x44
   83366:	aa27      	add	r2, sp, #156	; 0x9c
   83368:	9c11      	ldr	r4, [sp, #68]	; 0x44
   8336a:	1a9a      	subs	r2, r3, r2
   8336c:	2d01      	cmp	r5, #1
   8336e:	9219      	str	r2, [sp, #100]	; 0x64
   83370:	4414      	add	r4, r2
   83372:	f340 80b7 	ble.w	834e4 <_svfprintf_r+0x14a0>
   83376:	3401      	adds	r4, #1
   83378:	2500      	movs	r5, #0
   8337a:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   8337e:	9514      	str	r5, [sp, #80]	; 0x50
   83380:	e6ea      	b.n	83158 <_svfprintf_r+0x1114>
   83382:	2400      	movs	r4, #0
   83384:	4681      	mov	r9, r0
   83386:	940a      	str	r4, [sp, #40]	; 0x28
   83388:	f7fe beba 	b.w	82100 <_svfprintf_r+0xbc>
   8338c:	980d      	ldr	r0, [sp, #52]	; 0x34
   8338e:	990c      	ldr	r1, [sp, #48]	; 0x30
   83390:	aa2b      	add	r2, sp, #172	; 0xac
   83392:	f003 fe23 	bl	86fdc <__ssprint_r>
   83396:	2800      	cmp	r0, #0
   83398:	f47e af6c 	bne.w	82274 <_svfprintf_r+0x230>
   8339c:	9c25      	ldr	r4, [sp, #148]	; 0x94
   8339e:	992d      	ldr	r1, [sp, #180]	; 0xb4
   833a0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   833a2:	aa38      	add	r2, sp, #224	; 0xe0
   833a4:	e616      	b.n	82fd4 <_svfprintf_r+0xf90>
   833a6:	9c14      	ldr	r4, [sp, #80]	; 0x50
   833a8:	9d11      	ldr	r5, [sp, #68]	; 0x44
   833aa:	2c00      	cmp	r4, #0
   833ac:	bfd4      	ite	le
   833ae:	f1c4 0402 	rsble	r4, r4, #2
   833b2:	2401      	movgt	r4, #1
   833b4:	442c      	add	r4, r5
   833b6:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   833ba:	f04f 0867 	mov.w	r8, #103	; 0x67
   833be:	e6cb      	b.n	83158 <_svfprintf_r+0x1114>
   833c0:	9917      	ldr	r1, [sp, #92]	; 0x5c
   833c2:	9816      	ldr	r0, [sp, #88]	; 0x58
   833c4:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
   833c8:	9020      	str	r0, [sp, #128]	; 0x80
   833ca:	9121      	str	r1, [sp, #132]	; 0x84
   833cc:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
   833d0:	e660      	b.n	83094 <_svfprintf_r+0x1050>
   833d2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   833d4:	2003      	movs	r0, #3
   833d6:	a925      	add	r1, sp, #148	; 0x94
   833d8:	aa26      	add	r2, sp, #152	; 0x98
   833da:	ab29      	add	r3, sp, #164	; 0xa4
   833dc:	9501      	str	r5, [sp, #4]
   833de:	9000      	str	r0, [sp, #0]
   833e0:	9203      	str	r2, [sp, #12]
   833e2:	9304      	str	r3, [sp, #16]
   833e4:	9102      	str	r1, [sp, #8]
   833e6:	980d      	ldr	r0, [sp, #52]	; 0x34
   833e8:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
   833ec:	f001 f8a0 	bl	84530 <_dtoa_r>
   833f0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   833f2:	4607      	mov	r7, r0
   833f4:	e677      	b.n	830e6 <_svfprintf_r+0x10a2>
   833f6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   833f8:	2003      	movs	r0, #3
   833fa:	a925      	add	r1, sp, #148	; 0x94
   833fc:	aa26      	add	r2, sp, #152	; 0x98
   833fe:	ab29      	add	r3, sp, #164	; 0xa4
   83400:	9401      	str	r4, [sp, #4]
   83402:	e7ec      	b.n	833de <_svfprintf_r+0x139a>
   83404:	9d25      	ldr	r5, [sp, #148]	; 0x94
   83406:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   83408:	2d00      	cmp	r5, #0
   8340a:	9514      	str	r5, [sp, #80]	; 0x50
   8340c:	dd63      	ble.n	834d6 <_svfprintf_r+0x1492>
   8340e:	bbb4      	cbnz	r4, 8347e <_svfprintf_r+0x143a>
   83410:	9d09      	ldr	r5, [sp, #36]	; 0x24
   83412:	07e8      	lsls	r0, r5, #31
   83414:	d433      	bmi.n	8347e <_svfprintf_r+0x143a>
   83416:	9c14      	ldr	r4, [sp, #80]	; 0x50
   83418:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   8341c:	e69c      	b.n	83158 <_svfprintf_r+0x1114>
   8341e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   83420:	e67a      	b.n	83118 <_svfprintf_r+0x10d4>
   83422:	f10d 02aa 	add.w	r2, sp, #170	; 0xaa
   83426:	4d3e      	ldr	r5, [pc, #248]	; (83520 <_svfprintf_r+0x14dc>)
   83428:	17cb      	asrs	r3, r1, #31
   8342a:	fb85 5001 	smull	r5, r0, r5, r1
   8342e:	ebc3 00a0 	rsb	r0, r3, r0, asr #2
   83432:	eb00 0380 	add.w	r3, r0, r0, lsl #2
   83436:	eba1 0143 	sub.w	r1, r1, r3, lsl #1
   8343a:	2809      	cmp	r0, #9
   8343c:	4613      	mov	r3, r2
   8343e:	f101 0230 	add.w	r2, r1, #48	; 0x30
   83442:	701a      	strb	r2, [r3, #0]
   83444:	4601      	mov	r1, r0
   83446:	f103 32ff 	add.w	r2, r3, #4294967295
   8344a:	dcec      	bgt.n	83426 <_svfprintf_r+0x13e2>
   8344c:	f100 0130 	add.w	r1, r0, #48	; 0x30
   83450:	f10d 04ab 	add.w	r4, sp, #171	; 0xab
   83454:	b2c9      	uxtb	r1, r1
   83456:	4294      	cmp	r4, r2
   83458:	f803 1c01 	strb.w	r1, [r3, #-1]
   8345c:	d95a      	bls.n	83514 <_svfprintf_r+0x14d0>
   8345e:	f10d 009d 	add.w	r0, sp, #157	; 0x9d
   83462:	461a      	mov	r2, r3
   83464:	e001      	b.n	8346a <_svfprintf_r+0x1426>
   83466:	f812 1b01 	ldrb.w	r1, [r2], #1
   8346a:	42a2      	cmp	r2, r4
   8346c:	f800 1f01 	strb.w	r1, [r0, #1]!
   83470:	d1f9      	bne.n	83466 <_svfprintf_r+0x1422>
   83472:	f50d 7c90 	add.w	ip, sp, #288	; 0x120
   83476:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
   8347a:	3bf6      	subs	r3, #246	; 0xf6
   8347c:	e772      	b.n	83364 <_svfprintf_r+0x1320>
   8347e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   83480:	1c6c      	adds	r4, r5, #1
   83482:	9d14      	ldr	r5, [sp, #80]	; 0x50
   83484:	442c      	add	r4, r5
   83486:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   8348a:	e665      	b.n	83158 <_svfprintf_r+0x1114>
   8348c:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
   83490:	2200      	movs	r2, #0
   83492:	2300      	movs	r3, #0
   83494:	f7fe fc48 	bl	81d28 <__aeabi_dcmpeq>
   83498:	2800      	cmp	r0, #0
   8349a:	f47f af4a 	bne.w	83332 <_svfprintf_r+0x12ee>
   8349e:	f1c5 0501 	rsb	r5, r5, #1
   834a2:	9525      	str	r5, [sp, #148]	; 0x94
   834a4:	442c      	add	r4, r5
   834a6:	e624      	b.n	830f2 <_svfprintf_r+0x10ae>
   834a8:	9d14      	ldr	r5, [sp, #80]	; 0x50
   834aa:	f04f 0867 	mov.w	r8, #103	; 0x67
   834ae:	1c6c      	adds	r4, r5, #1
   834b0:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   834b4:	e650      	b.n	83158 <_svfprintf_r+0x1114>
   834b6:	9d10      	ldr	r5, [sp, #64]	; 0x40
   834b8:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   834bc:	682d      	ldr	r5, [r5, #0]
   834be:	f10c 0304 	add.w	r3, ip, #4
   834c2:	2d00      	cmp	r5, #0
   834c4:	f899 8001 	ldrb.w	r8, [r9, #1]
   834c8:	950a      	str	r5, [sp, #40]	; 0x28
   834ca:	9310      	str	r3, [sp, #64]	; 0x40
   834cc:	4681      	mov	r9, r0
   834ce:	f6be ae15 	bge.w	820fc <_svfprintf_r+0xb8>
   834d2:	f7fe be10 	b.w	820f6 <_svfprintf_r+0xb2>
   834d6:	b97c      	cbnz	r4, 834f8 <_svfprintf_r+0x14b4>
   834d8:	9d09      	ldr	r5, [sp, #36]	; 0x24
   834da:	07e9      	lsls	r1, r5, #31
   834dc:	d40c      	bmi.n	834f8 <_svfprintf_r+0x14b4>
   834de:	2301      	movs	r3, #1
   834e0:	461c      	mov	r4, r3
   834e2:	e639      	b.n	83158 <_svfprintf_r+0x1114>
   834e4:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   834e8:	f01c 0301 	ands.w	r3, ip, #1
   834ec:	f47f af43 	bne.w	83376 <_svfprintf_r+0x1332>
   834f0:	9314      	str	r3, [sp, #80]	; 0x50
   834f2:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   834f6:	e62f      	b.n	83158 <_svfprintf_r+0x1114>
   834f8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   834fa:	1cac      	adds	r4, r5, #2
   834fc:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   83500:	e62a      	b.n	83158 <_svfprintf_r+0x1114>
   83502:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   83504:	230c      	movs	r3, #12
   83506:	602b      	str	r3, [r5, #0]
   83508:	f04f 30ff 	mov.w	r0, #4294967295
   8350c:	f7fe beba 	b.w	82284 <_svfprintf_r+0x240>
   83510:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83512:	e713      	b.n	8333c <_svfprintf_r+0x12f8>
   83514:	f10d 039e 	add.w	r3, sp, #158	; 0x9e
   83518:	e724      	b.n	83364 <_svfprintf_r+0x1320>
   8351a:	bf00      	nop
   8351c:	00087b14 	.word	0x00087b14
   83520:	66666667 	.word	0x66666667

00083524 <__sprint_r.part.0>:
   83524:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   83526:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   8352a:	049c      	lsls	r4, r3, #18
   8352c:	460e      	mov	r6, r1
   8352e:	4680      	mov	r8, r0
   83530:	4691      	mov	r9, r2
   83532:	d52a      	bpl.n	8358a <__sprint_r.part.0+0x66>
   83534:	6893      	ldr	r3, [r2, #8]
   83536:	6812      	ldr	r2, [r2, #0]
   83538:	f102 0a08 	add.w	sl, r2, #8
   8353c:	b31b      	cbz	r3, 83586 <__sprint_r.part.0+0x62>
   8353e:	e91a 00a0 	ldmdb	sl, {r5, r7}
   83542:	08bf      	lsrs	r7, r7, #2
   83544:	d017      	beq.n	83576 <__sprint_r.part.0+0x52>
   83546:	3d04      	subs	r5, #4
   83548:	2400      	movs	r4, #0
   8354a:	e001      	b.n	83550 <__sprint_r.part.0+0x2c>
   8354c:	42a7      	cmp	r7, r4
   8354e:	d010      	beq.n	83572 <__sprint_r.part.0+0x4e>
   83550:	4640      	mov	r0, r8
   83552:	f855 1f04 	ldr.w	r1, [r5, #4]!
   83556:	4632      	mov	r2, r6
   83558:	f002 f85c 	bl	85614 <_fputwc_r>
   8355c:	1c43      	adds	r3, r0, #1
   8355e:	f104 0401 	add.w	r4, r4, #1
   83562:	d1f3      	bne.n	8354c <__sprint_r.part.0+0x28>
   83564:	2300      	movs	r3, #0
   83566:	f8c9 3008 	str.w	r3, [r9, #8]
   8356a:	f8c9 3004 	str.w	r3, [r9, #4]
   8356e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   83572:	f8d9 3008 	ldr.w	r3, [r9, #8]
   83576:	eba3 0387 	sub.w	r3, r3, r7, lsl #2
   8357a:	f8c9 3008 	str.w	r3, [r9, #8]
   8357e:	f10a 0a08 	add.w	sl, sl, #8
   83582:	2b00      	cmp	r3, #0
   83584:	d1db      	bne.n	8353e <__sprint_r.part.0+0x1a>
   83586:	2000      	movs	r0, #0
   83588:	e7ec      	b.n	83564 <__sprint_r.part.0+0x40>
   8358a:	f002 f9bd 	bl	85908 <__sfvwrite_r>
   8358e:	2300      	movs	r3, #0
   83590:	f8c9 3008 	str.w	r3, [r9, #8]
   83594:	f8c9 3004 	str.w	r3, [r9, #4]
   83598:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0008359c <_vfiprintf_r>:
   8359c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   835a0:	b0b1      	sub	sp, #196	; 0xc4
   835a2:	461c      	mov	r4, r3
   835a4:	9102      	str	r1, [sp, #8]
   835a6:	4690      	mov	r8, r2
   835a8:	9308      	str	r3, [sp, #32]
   835aa:	9006      	str	r0, [sp, #24]
   835ac:	b118      	cbz	r0, 835b6 <_vfiprintf_r+0x1a>
   835ae:	6b83      	ldr	r3, [r0, #56]	; 0x38
   835b0:	2b00      	cmp	r3, #0
   835b2:	f000 80e8 	beq.w	83786 <_vfiprintf_r+0x1ea>
   835b6:	9d02      	ldr	r5, [sp, #8]
   835b8:	89ab      	ldrh	r3, [r5, #12]
   835ba:	b29a      	uxth	r2, r3
   835bc:	0490      	lsls	r0, r2, #18
   835be:	d407      	bmi.n	835d0 <_vfiprintf_r+0x34>
   835c0:	6e6a      	ldr	r2, [r5, #100]	; 0x64
   835c2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   835c6:	f422 5100 	bic.w	r1, r2, #8192	; 0x2000
   835ca:	81ab      	strh	r3, [r5, #12]
   835cc:	b29a      	uxth	r2, r3
   835ce:	6669      	str	r1, [r5, #100]	; 0x64
   835d0:	0711      	lsls	r1, r2, #28
   835d2:	f140 80b7 	bpl.w	83744 <_vfiprintf_r+0x1a8>
   835d6:	f8dd b008 	ldr.w	fp, [sp, #8]
   835da:	f8db 3010 	ldr.w	r3, [fp, #16]
   835de:	2b00      	cmp	r3, #0
   835e0:	f000 80b0 	beq.w	83744 <_vfiprintf_r+0x1a8>
   835e4:	f002 021a 	and.w	r2, r2, #26
   835e8:	2a0a      	cmp	r2, #10
   835ea:	f000 80b7 	beq.w	8375c <_vfiprintf_r+0x1c0>
   835ee:	2300      	movs	r3, #0
   835f0:	f10d 0980 	add.w	r9, sp, #128	; 0x80
   835f4:	930a      	str	r3, [sp, #40]	; 0x28
   835f6:	9315      	str	r3, [sp, #84]	; 0x54
   835f8:	9314      	str	r3, [sp, #80]	; 0x50
   835fa:	9309      	str	r3, [sp, #36]	; 0x24
   835fc:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
   83600:	464e      	mov	r6, r9
   83602:	f898 3000 	ldrb.w	r3, [r8]
   83606:	2b00      	cmp	r3, #0
   83608:	f000 84c8 	beq.w	83f9c <_vfiprintf_r+0xa00>
   8360c:	2b25      	cmp	r3, #37	; 0x25
   8360e:	f000 84c5 	beq.w	83f9c <_vfiprintf_r+0xa00>
   83612:	f108 0201 	add.w	r2, r8, #1
   83616:	e001      	b.n	8361c <_vfiprintf_r+0x80>
   83618:	2b25      	cmp	r3, #37	; 0x25
   8361a:	d004      	beq.n	83626 <_vfiprintf_r+0x8a>
   8361c:	7813      	ldrb	r3, [r2, #0]
   8361e:	4614      	mov	r4, r2
   83620:	3201      	adds	r2, #1
   83622:	2b00      	cmp	r3, #0
   83624:	d1f8      	bne.n	83618 <_vfiprintf_r+0x7c>
   83626:	ebc8 0504 	rsb	r5, r8, r4
   8362a:	b195      	cbz	r5, 83652 <_vfiprintf_r+0xb6>
   8362c:	9b14      	ldr	r3, [sp, #80]	; 0x50
   8362e:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83630:	3301      	adds	r3, #1
   83632:	442a      	add	r2, r5
   83634:	2b07      	cmp	r3, #7
   83636:	f8c6 8000 	str.w	r8, [r6]
   8363a:	6075      	str	r5, [r6, #4]
   8363c:	9215      	str	r2, [sp, #84]	; 0x54
   8363e:	9314      	str	r3, [sp, #80]	; 0x50
   83640:	dd7b      	ble.n	8373a <_vfiprintf_r+0x19e>
   83642:	2a00      	cmp	r2, #0
   83644:	f040 84d5 	bne.w	83ff2 <_vfiprintf_r+0xa56>
   83648:	9809      	ldr	r0, [sp, #36]	; 0x24
   8364a:	9214      	str	r2, [sp, #80]	; 0x50
   8364c:	4428      	add	r0, r5
   8364e:	464e      	mov	r6, r9
   83650:	9009      	str	r0, [sp, #36]	; 0x24
   83652:	7823      	ldrb	r3, [r4, #0]
   83654:	2b00      	cmp	r3, #0
   83656:	f000 83ed 	beq.w	83e34 <_vfiprintf_r+0x898>
   8365a:	2100      	movs	r1, #0
   8365c:	f04f 0200 	mov.w	r2, #0
   83660:	f04f 3cff 	mov.w	ip, #4294967295
   83664:	7863      	ldrb	r3, [r4, #1]
   83666:	f88d 2047 	strb.w	r2, [sp, #71]	; 0x47
   8366a:	9104      	str	r1, [sp, #16]
   8366c:	468a      	mov	sl, r1
   8366e:	f104 0801 	add.w	r8, r4, #1
   83672:	4608      	mov	r0, r1
   83674:	4665      	mov	r5, ip
   83676:	f108 0801 	add.w	r8, r8, #1
   8367a:	f1a3 0220 	sub.w	r2, r3, #32
   8367e:	2a58      	cmp	r2, #88	; 0x58
   83680:	f200 82d9 	bhi.w	83c36 <_vfiprintf_r+0x69a>
   83684:	e8df f012 	tbh	[pc, r2, lsl #1]
   83688:	02d702cb 	.word	0x02d702cb
   8368c:	02d202d7 	.word	0x02d202d7
   83690:	02d702d7 	.word	0x02d702d7
   83694:	02d702d7 	.word	0x02d702d7
   83698:	02d702d7 	.word	0x02d702d7
   8369c:	028f0282 	.word	0x028f0282
   836a0:	008402d7 	.word	0x008402d7
   836a4:	02d70293 	.word	0x02d70293
   836a8:	0196012b 	.word	0x0196012b
   836ac:	01960196 	.word	0x01960196
   836b0:	01960196 	.word	0x01960196
   836b4:	01960196 	.word	0x01960196
   836b8:	01960196 	.word	0x01960196
   836bc:	02d702d7 	.word	0x02d702d7
   836c0:	02d702d7 	.word	0x02d702d7
   836c4:	02d702d7 	.word	0x02d702d7
   836c8:	02d702d7 	.word	0x02d702d7
   836cc:	02d702d7 	.word	0x02d702d7
   836d0:	02d70130 	.word	0x02d70130
   836d4:	02d702d7 	.word	0x02d702d7
   836d8:	02d702d7 	.word	0x02d702d7
   836dc:	02d702d7 	.word	0x02d702d7
   836e0:	02d702d7 	.word	0x02d702d7
   836e4:	017b02d7 	.word	0x017b02d7
   836e8:	02d702d7 	.word	0x02d702d7
   836ec:	02d702d7 	.word	0x02d702d7
   836f0:	01a402d7 	.word	0x01a402d7
   836f4:	02d702d7 	.word	0x02d702d7
   836f8:	02d701bf 	.word	0x02d701bf
   836fc:	02d702d7 	.word	0x02d702d7
   83700:	02d702d7 	.word	0x02d702d7
   83704:	02d702d7 	.word	0x02d702d7
   83708:	02d702d7 	.word	0x02d702d7
   8370c:	01e402d7 	.word	0x01e402d7
   83710:	02d701fa 	.word	0x02d701fa
   83714:	02d702d7 	.word	0x02d702d7
   83718:	01fa0216 	.word	0x01fa0216
   8371c:	02d702d7 	.word	0x02d702d7
   83720:	02d7021b 	.word	0x02d7021b
   83724:	00890228 	.word	0x00890228
   83728:	027d0266 	.word	0x027d0266
   8372c:	023a02d7 	.word	0x023a02d7
   83730:	011902d7 	.word	0x011902d7
   83734:	02d702d7 	.word	0x02d702d7
   83738:	02af      	.short	0x02af
   8373a:	3608      	adds	r6, #8
   8373c:	9809      	ldr	r0, [sp, #36]	; 0x24
   8373e:	4428      	add	r0, r5
   83740:	9009      	str	r0, [sp, #36]	; 0x24
   83742:	e786      	b.n	83652 <_vfiprintf_r+0xb6>
   83744:	9806      	ldr	r0, [sp, #24]
   83746:	9902      	ldr	r1, [sp, #8]
   83748:	f000 fde4 	bl	84314 <__swsetup_r>
   8374c:	b9b0      	cbnz	r0, 8377c <_vfiprintf_r+0x1e0>
   8374e:	9d02      	ldr	r5, [sp, #8]
   83750:	89aa      	ldrh	r2, [r5, #12]
   83752:	f002 021a 	and.w	r2, r2, #26
   83756:	2a0a      	cmp	r2, #10
   83758:	f47f af49 	bne.w	835ee <_vfiprintf_r+0x52>
   8375c:	f8dd b008 	ldr.w	fp, [sp, #8]
   83760:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
   83764:	2b00      	cmp	r3, #0
   83766:	f6ff af42 	blt.w	835ee <_vfiprintf_r+0x52>
   8376a:	9806      	ldr	r0, [sp, #24]
   8376c:	4659      	mov	r1, fp
   8376e:	4642      	mov	r2, r8
   83770:	4623      	mov	r3, r4
   83772:	f000 fd3d 	bl	841f0 <__sbprintf>
   83776:	b031      	add	sp, #196	; 0xc4
   83778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8377c:	f04f 30ff 	mov.w	r0, #4294967295
   83780:	b031      	add	sp, #196	; 0xc4
   83782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83786:	f001 feaf 	bl	854e8 <__sinit>
   8378a:	e714      	b.n	835b6 <_vfiprintf_r+0x1a>
   8378c:	4240      	negs	r0, r0
   8378e:	9308      	str	r3, [sp, #32]
   83790:	f04a 0a04 	orr.w	sl, sl, #4
   83794:	f898 3000 	ldrb.w	r3, [r8]
   83798:	e76d      	b.n	83676 <_vfiprintf_r+0xda>
   8379a:	f01a 0320 	ands.w	r3, sl, #32
   8379e:	9004      	str	r0, [sp, #16]
   837a0:	46ac      	mov	ip, r5
   837a2:	f000 80f4 	beq.w	8398e <_vfiprintf_r+0x3f2>
   837a6:	f8dd b020 	ldr.w	fp, [sp, #32]
   837aa:	f10b 0307 	add.w	r3, fp, #7
   837ae:	f023 0307 	bic.w	r3, r3, #7
   837b2:	f103 0408 	add.w	r4, r3, #8
   837b6:	9408      	str	r4, [sp, #32]
   837b8:	e9d3 4500 	ldrd	r4, r5, [r3]
   837bc:	2300      	movs	r3, #0
   837be:	f04f 0000 	mov.w	r0, #0
   837c2:	2100      	movs	r1, #0
   837c4:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
   837c8:	f8cd c014 	str.w	ip, [sp, #20]
   837cc:	9107      	str	r1, [sp, #28]
   837ce:	f1bc 0f00 	cmp.w	ip, #0
   837d2:	bfa8      	it	ge
   837d4:	f02a 0a80 	bicge.w	sl, sl, #128	; 0x80
   837d8:	ea54 0205 	orrs.w	r2, r4, r5
   837dc:	f040 80ad 	bne.w	8393a <_vfiprintf_r+0x39e>
   837e0:	f1bc 0f00 	cmp.w	ip, #0
   837e4:	f040 80a9 	bne.w	8393a <_vfiprintf_r+0x39e>
   837e8:	2b00      	cmp	r3, #0
   837ea:	f040 83c0 	bne.w	83f6e <_vfiprintf_r+0x9d2>
   837ee:	f01a 0f01 	tst.w	sl, #1
   837f2:	f000 83bc 	beq.w	83f6e <_vfiprintf_r+0x9d2>
   837f6:	2330      	movs	r3, #48	; 0x30
   837f8:	af30      	add	r7, sp, #192	; 0xc0
   837fa:	f807 3d41 	strb.w	r3, [r7, #-65]!
   837fe:	ebc7 0409 	rsb	r4, r7, r9
   83802:	9405      	str	r4, [sp, #20]
   83804:	f8dd b014 	ldr.w	fp, [sp, #20]
   83808:	9c07      	ldr	r4, [sp, #28]
   8380a:	45e3      	cmp	fp, ip
   8380c:	bfb8      	it	lt
   8380e:	46e3      	movlt	fp, ip
   83810:	f8cd b00c 	str.w	fp, [sp, #12]
   83814:	b11c      	cbz	r4, 8381e <_vfiprintf_r+0x282>
   83816:	f10b 0b01 	add.w	fp, fp, #1
   8381a:	f8cd b00c 	str.w	fp, [sp, #12]
   8381e:	f01a 0502 	ands.w	r5, sl, #2
   83822:	9507      	str	r5, [sp, #28]
   83824:	d005      	beq.n	83832 <_vfiprintf_r+0x296>
   83826:	f8dd b00c 	ldr.w	fp, [sp, #12]
   8382a:	f10b 0b02 	add.w	fp, fp, #2
   8382e:	f8cd b00c 	str.w	fp, [sp, #12]
   83832:	f01a 0384 	ands.w	r3, sl, #132	; 0x84
   83836:	930b      	str	r3, [sp, #44]	; 0x2c
   83838:	f040 821b 	bne.w	83c72 <_vfiprintf_r+0x6d6>
   8383c:	9d04      	ldr	r5, [sp, #16]
   8383e:	f8dd b00c 	ldr.w	fp, [sp, #12]
   83842:	ebcb 0405 	rsb	r4, fp, r5
   83846:	2c00      	cmp	r4, #0
   83848:	f340 8213 	ble.w	83c72 <_vfiprintf_r+0x6d6>
   8384c:	2c10      	cmp	r4, #16
   8384e:	f340 8489 	ble.w	84164 <_vfiprintf_r+0xbc8>
   83852:	4dbe      	ldr	r5, [pc, #760]	; (83b4c <_vfiprintf_r+0x5b0>)
   83854:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83856:	462b      	mov	r3, r5
   83858:	9814      	ldr	r0, [sp, #80]	; 0x50
   8385a:	4625      	mov	r5, r4
   8385c:	f04f 0b10 	mov.w	fp, #16
   83860:	4664      	mov	r4, ip
   83862:	46b4      	mov	ip, r6
   83864:	461e      	mov	r6, r3
   83866:	e006      	b.n	83876 <_vfiprintf_r+0x2da>
   83868:	1c83      	adds	r3, r0, #2
   8386a:	f10c 0c08 	add.w	ip, ip, #8
   8386e:	4608      	mov	r0, r1
   83870:	3d10      	subs	r5, #16
   83872:	2d10      	cmp	r5, #16
   83874:	dd11      	ble.n	8389a <_vfiprintf_r+0x2fe>
   83876:	1c41      	adds	r1, r0, #1
   83878:	3210      	adds	r2, #16
   8387a:	2907      	cmp	r1, #7
   8387c:	9215      	str	r2, [sp, #84]	; 0x54
   8387e:	e88c 0840 	stmia.w	ip, {r6, fp}
   83882:	9114      	str	r1, [sp, #80]	; 0x50
   83884:	ddf0      	ble.n	83868 <_vfiprintf_r+0x2cc>
   83886:	2a00      	cmp	r2, #0
   83888:	f040 81e6 	bne.w	83c58 <_vfiprintf_r+0x6bc>
   8388c:	3d10      	subs	r5, #16
   8388e:	2d10      	cmp	r5, #16
   83890:	f04f 0301 	mov.w	r3, #1
   83894:	4610      	mov	r0, r2
   83896:	46cc      	mov	ip, r9
   83898:	dced      	bgt.n	83876 <_vfiprintf_r+0x2da>
   8389a:	4631      	mov	r1, r6
   8389c:	4666      	mov	r6, ip
   8389e:	46a4      	mov	ip, r4
   838a0:	462c      	mov	r4, r5
   838a2:	460d      	mov	r5, r1
   838a4:	4422      	add	r2, r4
   838a6:	2b07      	cmp	r3, #7
   838a8:	9215      	str	r2, [sp, #84]	; 0x54
   838aa:	6035      	str	r5, [r6, #0]
   838ac:	6074      	str	r4, [r6, #4]
   838ae:	9314      	str	r3, [sp, #80]	; 0x50
   838b0:	f300 836d 	bgt.w	83f8e <_vfiprintf_r+0x9f2>
   838b4:	3608      	adds	r6, #8
   838b6:	1c59      	adds	r1, r3, #1
   838b8:	e1de      	b.n	83c78 <_vfiprintf_r+0x6dc>
   838ba:	f01a 0f20 	tst.w	sl, #32
   838be:	9004      	str	r0, [sp, #16]
   838c0:	46ac      	mov	ip, r5
   838c2:	f000 808d 	beq.w	839e0 <_vfiprintf_r+0x444>
   838c6:	9d08      	ldr	r5, [sp, #32]
   838c8:	1deb      	adds	r3, r5, #7
   838ca:	f023 0307 	bic.w	r3, r3, #7
   838ce:	f103 0b08 	add.w	fp, r3, #8
   838d2:	e9d3 4500 	ldrd	r4, r5, [r3]
   838d6:	f8cd b020 	str.w	fp, [sp, #32]
   838da:	2301      	movs	r3, #1
   838dc:	e76f      	b.n	837be <_vfiprintf_r+0x222>
   838de:	f04a 0a80 	orr.w	sl, sl, #128	; 0x80
   838e2:	f898 3000 	ldrb.w	r3, [r8]
   838e6:	e6c6      	b.n	83676 <_vfiprintf_r+0xda>
   838e8:	f04a 0a10 	orr.w	sl, sl, #16
   838ec:	f01a 0f20 	tst.w	sl, #32
   838f0:	9004      	str	r0, [sp, #16]
   838f2:	46ac      	mov	ip, r5
   838f4:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   838f8:	f000 80c8 	beq.w	83a8c <_vfiprintf_r+0x4f0>
   838fc:	9c08      	ldr	r4, [sp, #32]
   838fe:	1de1      	adds	r1, r4, #7
   83900:	f021 0107 	bic.w	r1, r1, #7
   83904:	e9d1 2300 	ldrd	r2, r3, [r1]
   83908:	3108      	adds	r1, #8
   8390a:	9108      	str	r1, [sp, #32]
   8390c:	4614      	mov	r4, r2
   8390e:	461d      	mov	r5, r3
   83910:	2a00      	cmp	r2, #0
   83912:	f173 0b00 	sbcs.w	fp, r3, #0
   83916:	f2c0 83ce 	blt.w	840b6 <_vfiprintf_r+0xb1a>
   8391a:	f1bc 0f00 	cmp.w	ip, #0
   8391e:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
   83922:	bfa8      	it	ge
   83924:	f02a 0a80 	bicge.w	sl, sl, #128	; 0x80
   83928:	ea54 0205 	orrs.w	r2, r4, r5
   8392c:	9007      	str	r0, [sp, #28]
   8392e:	f8cd c014 	str.w	ip, [sp, #20]
   83932:	f04f 0301 	mov.w	r3, #1
   83936:	f43f af53 	beq.w	837e0 <_vfiprintf_r+0x244>
   8393a:	2b01      	cmp	r3, #1
   8393c:	f000 8319 	beq.w	83f72 <_vfiprintf_r+0x9d6>
   83940:	2b02      	cmp	r3, #2
   83942:	f10d 037f 	add.w	r3, sp, #127	; 0x7f
   83946:	f040 824c 	bne.w	83de2 <_vfiprintf_r+0x846>
   8394a:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
   8394e:	4619      	mov	r1, r3
   83950:	f004 000f 	and.w	r0, r4, #15
   83954:	0922      	lsrs	r2, r4, #4
   83956:	f81b 0000 	ldrb.w	r0, [fp, r0]
   8395a:	ea42 7205 	orr.w	r2, r2, r5, lsl #28
   8395e:	092b      	lsrs	r3, r5, #4
   83960:	7008      	strb	r0, [r1, #0]
   83962:	ea52 0003 	orrs.w	r0, r2, r3
   83966:	460f      	mov	r7, r1
   83968:	4614      	mov	r4, r2
   8396a:	461d      	mov	r5, r3
   8396c:	f101 31ff 	add.w	r1, r1, #4294967295
   83970:	d1ee      	bne.n	83950 <_vfiprintf_r+0x3b4>
   83972:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
   83976:	ebc7 0309 	rsb	r3, r7, r9
   8397a:	9305      	str	r3, [sp, #20]
   8397c:	e742      	b.n	83804 <_vfiprintf_r+0x268>
   8397e:	f04a 0a10 	orr.w	sl, sl, #16
   83982:	f01a 0320 	ands.w	r3, sl, #32
   83986:	9004      	str	r0, [sp, #16]
   83988:	46ac      	mov	ip, r5
   8398a:	f47f af0c 	bne.w	837a6 <_vfiprintf_r+0x20a>
   8398e:	f01a 0210 	ands.w	r2, sl, #16
   83992:	f040 8311 	bne.w	83fb8 <_vfiprintf_r+0xa1c>
   83996:	f01a 0340 	ands.w	r3, sl, #64	; 0x40
   8399a:	f000 830d 	beq.w	83fb8 <_vfiprintf_r+0xa1c>
   8399e:	f8dd b020 	ldr.w	fp, [sp, #32]
   839a2:	4613      	mov	r3, r2
   839a4:	f8bb 4000 	ldrh.w	r4, [fp]
   839a8:	f10b 0b04 	add.w	fp, fp, #4
   839ac:	2500      	movs	r5, #0
   839ae:	f8cd b020 	str.w	fp, [sp, #32]
   839b2:	e704      	b.n	837be <_vfiprintf_r+0x222>
   839b4:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   839b8:	2000      	movs	r0, #0
   839ba:	f818 3b01 	ldrb.w	r3, [r8], #1
   839be:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   839c2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
   839c6:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   839ca:	2a09      	cmp	r2, #9
   839cc:	d9f5      	bls.n	839ba <_vfiprintf_r+0x41e>
   839ce:	e654      	b.n	8367a <_vfiprintf_r+0xde>
   839d0:	f04a 0a10 	orr.w	sl, sl, #16
   839d4:	f01a 0f20 	tst.w	sl, #32
   839d8:	9004      	str	r0, [sp, #16]
   839da:	46ac      	mov	ip, r5
   839dc:	f47f af73 	bne.w	838c6 <_vfiprintf_r+0x32a>
   839e0:	f01a 0f10 	tst.w	sl, #16
   839e4:	f040 82ef 	bne.w	83fc6 <_vfiprintf_r+0xa2a>
   839e8:	f01a 0f40 	tst.w	sl, #64	; 0x40
   839ec:	f000 82eb 	beq.w	83fc6 <_vfiprintf_r+0xa2a>
   839f0:	f8dd b020 	ldr.w	fp, [sp, #32]
   839f4:	2500      	movs	r5, #0
   839f6:	f8bb 4000 	ldrh.w	r4, [fp]
   839fa:	f10b 0b04 	add.w	fp, fp, #4
   839fe:	2301      	movs	r3, #1
   83a00:	f8cd b020 	str.w	fp, [sp, #32]
   83a04:	e6db      	b.n	837be <_vfiprintf_r+0x222>
   83a06:	46ac      	mov	ip, r5
   83a08:	4d51      	ldr	r5, [pc, #324]	; (83b50 <_vfiprintf_r+0x5b4>)
   83a0a:	f01a 0f20 	tst.w	sl, #32
   83a0e:	9004      	str	r0, [sp, #16]
   83a10:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   83a14:	950a      	str	r5, [sp, #40]	; 0x28
   83a16:	f000 80f0 	beq.w	83bfa <_vfiprintf_r+0x65e>
   83a1a:	9d08      	ldr	r5, [sp, #32]
   83a1c:	1dea      	adds	r2, r5, #7
   83a1e:	f022 0207 	bic.w	r2, r2, #7
   83a22:	f102 0b08 	add.w	fp, r2, #8
   83a26:	f8cd b020 	str.w	fp, [sp, #32]
   83a2a:	e9d2 4500 	ldrd	r4, r5, [r2]
   83a2e:	f01a 0f01 	tst.w	sl, #1
   83a32:	f000 82aa 	beq.w	83f8a <_vfiprintf_r+0x9ee>
   83a36:	ea54 0b05 	orrs.w	fp, r4, r5
   83a3a:	f000 82a6 	beq.w	83f8a <_vfiprintf_r+0x9ee>
   83a3e:	2230      	movs	r2, #48	; 0x30
   83a40:	f88d 3049 	strb.w	r3, [sp, #73]	; 0x49
   83a44:	f04a 0a02 	orr.w	sl, sl, #2
   83a48:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   83a4c:	2302      	movs	r3, #2
   83a4e:	e6b6      	b.n	837be <_vfiprintf_r+0x222>
   83a50:	9b08      	ldr	r3, [sp, #32]
   83a52:	f8dd b020 	ldr.w	fp, [sp, #32]
   83a56:	681b      	ldr	r3, [r3, #0]
   83a58:	2401      	movs	r4, #1
   83a5a:	f04f 0500 	mov.w	r5, #0
   83a5e:	f10b 0b04 	add.w	fp, fp, #4
   83a62:	9004      	str	r0, [sp, #16]
   83a64:	9403      	str	r4, [sp, #12]
   83a66:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
   83a6a:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
   83a6e:	f8cd b020 	str.w	fp, [sp, #32]
   83a72:	9405      	str	r4, [sp, #20]
   83a74:	af16      	add	r7, sp, #88	; 0x58
   83a76:	f04f 0c00 	mov.w	ip, #0
   83a7a:	e6d0      	b.n	8381e <_vfiprintf_r+0x282>
   83a7c:	f01a 0f20 	tst.w	sl, #32
   83a80:	9004      	str	r0, [sp, #16]
   83a82:	46ac      	mov	ip, r5
   83a84:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   83a88:	f47f af38 	bne.w	838fc <_vfiprintf_r+0x360>
   83a8c:	f01a 0f10 	tst.w	sl, #16
   83a90:	f040 82a7 	bne.w	83fe2 <_vfiprintf_r+0xa46>
   83a94:	f01a 0f40 	tst.w	sl, #64	; 0x40
   83a98:	f000 82a3 	beq.w	83fe2 <_vfiprintf_r+0xa46>
   83a9c:	f8dd b020 	ldr.w	fp, [sp, #32]
   83aa0:	f9bb 4000 	ldrsh.w	r4, [fp]
   83aa4:	f10b 0b04 	add.w	fp, fp, #4
   83aa8:	17e5      	asrs	r5, r4, #31
   83aaa:	4622      	mov	r2, r4
   83aac:	462b      	mov	r3, r5
   83aae:	f8cd b020 	str.w	fp, [sp, #32]
   83ab2:	e72d      	b.n	83910 <_vfiprintf_r+0x374>
   83ab4:	f04a 0a40 	orr.w	sl, sl, #64	; 0x40
   83ab8:	f898 3000 	ldrb.w	r3, [r8]
   83abc:	e5db      	b.n	83676 <_vfiprintf_r+0xda>
   83abe:	f898 3000 	ldrb.w	r3, [r8]
   83ac2:	4642      	mov	r2, r8
   83ac4:	2b6c      	cmp	r3, #108	; 0x6c
   83ac6:	bf03      	ittte	eq
   83ac8:	f108 0801 	addeq.w	r8, r8, #1
   83acc:	f04a 0a20 	orreq.w	sl, sl, #32
   83ad0:	7853      	ldrbeq	r3, [r2, #1]
   83ad2:	f04a 0a10 	orrne.w	sl, sl, #16
   83ad6:	e5ce      	b.n	83676 <_vfiprintf_r+0xda>
   83ad8:	f01a 0f20 	tst.w	sl, #32
   83adc:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   83ae0:	f000 82f7 	beq.w	840d2 <_vfiprintf_r+0xb36>
   83ae4:	9c08      	ldr	r4, [sp, #32]
   83ae6:	6821      	ldr	r1, [r4, #0]
   83ae8:	9c09      	ldr	r4, [sp, #36]	; 0x24
   83aea:	17e5      	asrs	r5, r4, #31
   83aec:	462b      	mov	r3, r5
   83aee:	9d08      	ldr	r5, [sp, #32]
   83af0:	4622      	mov	r2, r4
   83af2:	3504      	adds	r5, #4
   83af4:	9508      	str	r5, [sp, #32]
   83af6:	e9c1 2300 	strd	r2, r3, [r1]
   83afa:	e582      	b.n	83602 <_vfiprintf_r+0x66>
   83afc:	9c08      	ldr	r4, [sp, #32]
   83afe:	46ac      	mov	ip, r5
   83b00:	6827      	ldr	r7, [r4, #0]
   83b02:	f04f 0500 	mov.w	r5, #0
   83b06:	9004      	str	r0, [sp, #16]
   83b08:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
   83b0c:	3404      	adds	r4, #4
   83b0e:	2f00      	cmp	r7, #0
   83b10:	f000 8332 	beq.w	84178 <_vfiprintf_r+0xbdc>
   83b14:	f1bc 0f00 	cmp.w	ip, #0
   83b18:	4638      	mov	r0, r7
   83b1a:	f2c0 8307 	blt.w	8412c <_vfiprintf_r+0xb90>
   83b1e:	4662      	mov	r2, ip
   83b20:	2100      	movs	r1, #0
   83b22:	f8cd c004 	str.w	ip, [sp, #4]
   83b26:	f002 fbc1 	bl	862ac <memchr>
   83b2a:	f8dd c004 	ldr.w	ip, [sp, #4]
   83b2e:	2800      	cmp	r0, #0
   83b30:	f000 833a 	beq.w	841a8 <_vfiprintf_r+0xc0c>
   83b34:	1bc0      	subs	r0, r0, r7
   83b36:	f89d 5047 	ldrb.w	r5, [sp, #71]	; 0x47
   83b3a:	4560      	cmp	r0, ip
   83b3c:	bfa8      	it	ge
   83b3e:	4660      	movge	r0, ip
   83b40:	9005      	str	r0, [sp, #20]
   83b42:	9408      	str	r4, [sp, #32]
   83b44:	9507      	str	r5, [sp, #28]
   83b46:	f04f 0c00 	mov.w	ip, #0
   83b4a:	e65b      	b.n	83804 <_vfiprintf_r+0x268>
   83b4c:	00087b40 	.word	0x00087b40
   83b50:	00087aec 	.word	0x00087aec
   83b54:	9b08      	ldr	r3, [sp, #32]
   83b56:	f8dd b020 	ldr.w	fp, [sp, #32]
   83b5a:	9004      	str	r0, [sp, #16]
   83b5c:	48b2      	ldr	r0, [pc, #712]	; (83e28 <_vfiprintf_r+0x88c>)
   83b5e:	681c      	ldr	r4, [r3, #0]
   83b60:	2230      	movs	r2, #48	; 0x30
   83b62:	2378      	movs	r3, #120	; 0x78
   83b64:	f10b 0b04 	add.w	fp, fp, #4
   83b68:	46ac      	mov	ip, r5
   83b6a:	f88d 3049 	strb.w	r3, [sp, #73]	; 0x49
   83b6e:	f04a 0a02 	orr.w	sl, sl, #2
   83b72:	f8cd b020 	str.w	fp, [sp, #32]
   83b76:	2500      	movs	r5, #0
   83b78:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   83b7c:	900a      	str	r0, [sp, #40]	; 0x28
   83b7e:	2302      	movs	r3, #2
   83b80:	e61d      	b.n	837be <_vfiprintf_r+0x222>
   83b82:	f04a 0a20 	orr.w	sl, sl, #32
   83b86:	f898 3000 	ldrb.w	r3, [r8]
   83b8a:	e574      	b.n	83676 <_vfiprintf_r+0xda>
   83b8c:	f8dd b020 	ldr.w	fp, [sp, #32]
   83b90:	f8db 0000 	ldr.w	r0, [fp]
   83b94:	f10b 0304 	add.w	r3, fp, #4
   83b98:	2800      	cmp	r0, #0
   83b9a:	f6ff adf7 	blt.w	8378c <_vfiprintf_r+0x1f0>
   83b9e:	9308      	str	r3, [sp, #32]
   83ba0:	f898 3000 	ldrb.w	r3, [r8]
   83ba4:	e567      	b.n	83676 <_vfiprintf_r+0xda>
   83ba6:	f898 3000 	ldrb.w	r3, [r8]
   83baa:	212b      	movs	r1, #43	; 0x2b
   83bac:	e563      	b.n	83676 <_vfiprintf_r+0xda>
   83bae:	f898 3000 	ldrb.w	r3, [r8]
   83bb2:	f108 0401 	add.w	r4, r8, #1
   83bb6:	2b2a      	cmp	r3, #42	; 0x2a
   83bb8:	f000 8305 	beq.w	841c6 <_vfiprintf_r+0xc2a>
   83bbc:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   83bc0:	2a09      	cmp	r2, #9
   83bc2:	bf98      	it	ls
   83bc4:	2500      	movls	r5, #0
   83bc6:	f200 82fa 	bhi.w	841be <_vfiprintf_r+0xc22>
   83bca:	f814 3b01 	ldrb.w	r3, [r4], #1
   83bce:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   83bd2:	eb02 0545 	add.w	r5, r2, r5, lsl #1
   83bd6:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   83bda:	2a09      	cmp	r2, #9
   83bdc:	d9f5      	bls.n	83bca <_vfiprintf_r+0x62e>
   83bde:	ea45 75e5 	orr.w	r5, r5, r5, asr #31
   83be2:	46a0      	mov	r8, r4
   83be4:	e549      	b.n	8367a <_vfiprintf_r+0xde>
   83be6:	4c90      	ldr	r4, [pc, #576]	; (83e28 <_vfiprintf_r+0x88c>)
   83be8:	f01a 0f20 	tst.w	sl, #32
   83bec:	9004      	str	r0, [sp, #16]
   83bee:	46ac      	mov	ip, r5
   83bf0:	940a      	str	r4, [sp, #40]	; 0x28
   83bf2:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   83bf6:	f47f af10 	bne.w	83a1a <_vfiprintf_r+0x47e>
   83bfa:	f01a 0f10 	tst.w	sl, #16
   83bfe:	f040 81ea 	bne.w	83fd6 <_vfiprintf_r+0xa3a>
   83c02:	f01a 0f40 	tst.w	sl, #64	; 0x40
   83c06:	f000 81e6 	beq.w	83fd6 <_vfiprintf_r+0xa3a>
   83c0a:	f8dd b020 	ldr.w	fp, [sp, #32]
   83c0e:	2500      	movs	r5, #0
   83c10:	f8bb 4000 	ldrh.w	r4, [fp]
   83c14:	f10b 0b04 	add.w	fp, fp, #4
   83c18:	f8cd b020 	str.w	fp, [sp, #32]
   83c1c:	e707      	b.n	83a2e <_vfiprintf_r+0x492>
   83c1e:	f898 3000 	ldrb.w	r3, [r8]
   83c22:	2900      	cmp	r1, #0
   83c24:	f47f ad27 	bne.w	83676 <_vfiprintf_r+0xda>
   83c28:	2120      	movs	r1, #32
   83c2a:	e524      	b.n	83676 <_vfiprintf_r+0xda>
   83c2c:	f04a 0a01 	orr.w	sl, sl, #1
   83c30:	f898 3000 	ldrb.w	r3, [r8]
   83c34:	e51f      	b.n	83676 <_vfiprintf_r+0xda>
   83c36:	9004      	str	r0, [sp, #16]
   83c38:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   83c3c:	2b00      	cmp	r3, #0
   83c3e:	f000 80f9 	beq.w	83e34 <_vfiprintf_r+0x898>
   83c42:	2501      	movs	r5, #1
   83c44:	f04f 0b00 	mov.w	fp, #0
   83c48:	9503      	str	r5, [sp, #12]
   83c4a:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
   83c4e:	f88d b047 	strb.w	fp, [sp, #71]	; 0x47
   83c52:	9505      	str	r5, [sp, #20]
   83c54:	af16      	add	r7, sp, #88	; 0x58
   83c56:	e70e      	b.n	83a76 <_vfiprintf_r+0x4da>
   83c58:	9806      	ldr	r0, [sp, #24]
   83c5a:	9902      	ldr	r1, [sp, #8]
   83c5c:	aa13      	add	r2, sp, #76	; 0x4c
   83c5e:	f7ff fc61 	bl	83524 <__sprint_r.part.0>
   83c62:	2800      	cmp	r0, #0
   83c64:	f040 80ed 	bne.w	83e42 <_vfiprintf_r+0x8a6>
   83c68:	9814      	ldr	r0, [sp, #80]	; 0x50
   83c6a:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83c6c:	1c43      	adds	r3, r0, #1
   83c6e:	46cc      	mov	ip, r9
   83c70:	e5fe      	b.n	83870 <_vfiprintf_r+0x2d4>
   83c72:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83c74:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83c76:	1c59      	adds	r1, r3, #1
   83c78:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
   83c7c:	b168      	cbz	r0, 83c9a <_vfiprintf_r+0x6fe>
   83c7e:	3201      	adds	r2, #1
   83c80:	f10d 0047 	add.w	r0, sp, #71	; 0x47
   83c84:	2301      	movs	r3, #1
   83c86:	2907      	cmp	r1, #7
   83c88:	9215      	str	r2, [sp, #84]	; 0x54
   83c8a:	9114      	str	r1, [sp, #80]	; 0x50
   83c8c:	e886 0009 	stmia.w	r6, {r0, r3}
   83c90:	f300 8160 	bgt.w	83f54 <_vfiprintf_r+0x9b8>
   83c94:	460b      	mov	r3, r1
   83c96:	3608      	adds	r6, #8
   83c98:	3101      	adds	r1, #1
   83c9a:	9c07      	ldr	r4, [sp, #28]
   83c9c:	b164      	cbz	r4, 83cb8 <_vfiprintf_r+0x71c>
   83c9e:	3202      	adds	r2, #2
   83ca0:	a812      	add	r0, sp, #72	; 0x48
   83ca2:	2302      	movs	r3, #2
   83ca4:	2907      	cmp	r1, #7
   83ca6:	9215      	str	r2, [sp, #84]	; 0x54
   83ca8:	9114      	str	r1, [sp, #80]	; 0x50
   83caa:	e886 0009 	stmia.w	r6, {r0, r3}
   83cae:	f300 8157 	bgt.w	83f60 <_vfiprintf_r+0x9c4>
   83cb2:	460b      	mov	r3, r1
   83cb4:	3608      	adds	r6, #8
   83cb6:	3101      	adds	r1, #1
   83cb8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   83cba:	2d80      	cmp	r5, #128	; 0x80
   83cbc:	f000 8101 	beq.w	83ec2 <_vfiprintf_r+0x926>
   83cc0:	9d05      	ldr	r5, [sp, #20]
   83cc2:	ebc5 040c 	rsb	r4, r5, ip
   83cc6:	2c00      	cmp	r4, #0
   83cc8:	dd2f      	ble.n	83d2a <_vfiprintf_r+0x78e>
   83cca:	2c10      	cmp	r4, #16
   83ccc:	4d57      	ldr	r5, [pc, #348]	; (83e2c <_vfiprintf_r+0x890>)
   83cce:	dd22      	ble.n	83d16 <_vfiprintf_r+0x77a>
   83cd0:	4630      	mov	r0, r6
   83cd2:	f04f 0b10 	mov.w	fp, #16
   83cd6:	462e      	mov	r6, r5
   83cd8:	4625      	mov	r5, r4
   83cda:	9c06      	ldr	r4, [sp, #24]
   83cdc:	e006      	b.n	83cec <_vfiprintf_r+0x750>
   83cde:	f103 0c02 	add.w	ip, r3, #2
   83ce2:	3008      	adds	r0, #8
   83ce4:	460b      	mov	r3, r1
   83ce6:	3d10      	subs	r5, #16
   83ce8:	2d10      	cmp	r5, #16
   83cea:	dd10      	ble.n	83d0e <_vfiprintf_r+0x772>
   83cec:	1c59      	adds	r1, r3, #1
   83cee:	3210      	adds	r2, #16
   83cf0:	2907      	cmp	r1, #7
   83cf2:	9215      	str	r2, [sp, #84]	; 0x54
   83cf4:	e880 0840 	stmia.w	r0, {r6, fp}
   83cf8:	9114      	str	r1, [sp, #80]	; 0x50
   83cfa:	ddf0      	ble.n	83cde <_vfiprintf_r+0x742>
   83cfc:	2a00      	cmp	r2, #0
   83cfe:	d163      	bne.n	83dc8 <_vfiprintf_r+0x82c>
   83d00:	3d10      	subs	r5, #16
   83d02:	2d10      	cmp	r5, #16
   83d04:	f04f 0c01 	mov.w	ip, #1
   83d08:	4613      	mov	r3, r2
   83d0a:	4648      	mov	r0, r9
   83d0c:	dcee      	bgt.n	83cec <_vfiprintf_r+0x750>
   83d0e:	462c      	mov	r4, r5
   83d10:	4661      	mov	r1, ip
   83d12:	4635      	mov	r5, r6
   83d14:	4606      	mov	r6, r0
   83d16:	4422      	add	r2, r4
   83d18:	2907      	cmp	r1, #7
   83d1a:	9215      	str	r2, [sp, #84]	; 0x54
   83d1c:	6035      	str	r5, [r6, #0]
   83d1e:	6074      	str	r4, [r6, #4]
   83d20:	9114      	str	r1, [sp, #80]	; 0x50
   83d22:	f300 80c1 	bgt.w	83ea8 <_vfiprintf_r+0x90c>
   83d26:	3608      	adds	r6, #8
   83d28:	3101      	adds	r1, #1
   83d2a:	9d05      	ldr	r5, [sp, #20]
   83d2c:	2907      	cmp	r1, #7
   83d2e:	442a      	add	r2, r5
   83d30:	9215      	str	r2, [sp, #84]	; 0x54
   83d32:	6037      	str	r7, [r6, #0]
   83d34:	6075      	str	r5, [r6, #4]
   83d36:	9114      	str	r1, [sp, #80]	; 0x50
   83d38:	f340 80c1 	ble.w	83ebe <_vfiprintf_r+0x922>
   83d3c:	2a00      	cmp	r2, #0
   83d3e:	f040 8130 	bne.w	83fa2 <_vfiprintf_r+0xa06>
   83d42:	9214      	str	r2, [sp, #80]	; 0x50
   83d44:	464e      	mov	r6, r9
   83d46:	f01a 0f04 	tst.w	sl, #4
   83d4a:	f000 808b 	beq.w	83e64 <_vfiprintf_r+0x8c8>
   83d4e:	9d04      	ldr	r5, [sp, #16]
   83d50:	f8dd b00c 	ldr.w	fp, [sp, #12]
   83d54:	ebcb 0405 	rsb	r4, fp, r5
   83d58:	2c00      	cmp	r4, #0
   83d5a:	f340 8083 	ble.w	83e64 <_vfiprintf_r+0x8c8>
   83d5e:	2c10      	cmp	r4, #16
   83d60:	f340 821e 	ble.w	841a0 <_vfiprintf_r+0xc04>
   83d64:	9914      	ldr	r1, [sp, #80]	; 0x50
   83d66:	4d32      	ldr	r5, [pc, #200]	; (83e30 <_vfiprintf_r+0x894>)
   83d68:	2710      	movs	r7, #16
   83d6a:	f8dd a018 	ldr.w	sl, [sp, #24]
   83d6e:	f8dd b008 	ldr.w	fp, [sp, #8]
   83d72:	e005      	b.n	83d80 <_vfiprintf_r+0x7e4>
   83d74:	1c88      	adds	r0, r1, #2
   83d76:	3608      	adds	r6, #8
   83d78:	4619      	mov	r1, r3
   83d7a:	3c10      	subs	r4, #16
   83d7c:	2c10      	cmp	r4, #16
   83d7e:	dd10      	ble.n	83da2 <_vfiprintf_r+0x806>
   83d80:	1c4b      	adds	r3, r1, #1
   83d82:	3210      	adds	r2, #16
   83d84:	2b07      	cmp	r3, #7
   83d86:	9215      	str	r2, [sp, #84]	; 0x54
   83d88:	e886 00a0 	stmia.w	r6, {r5, r7}
   83d8c:	9314      	str	r3, [sp, #80]	; 0x50
   83d8e:	ddf1      	ble.n	83d74 <_vfiprintf_r+0x7d8>
   83d90:	2a00      	cmp	r2, #0
   83d92:	d17d      	bne.n	83e90 <_vfiprintf_r+0x8f4>
   83d94:	3c10      	subs	r4, #16
   83d96:	2c10      	cmp	r4, #16
   83d98:	f04f 0001 	mov.w	r0, #1
   83d9c:	4611      	mov	r1, r2
   83d9e:	464e      	mov	r6, r9
   83da0:	dcee      	bgt.n	83d80 <_vfiprintf_r+0x7e4>
   83da2:	4422      	add	r2, r4
   83da4:	2807      	cmp	r0, #7
   83da6:	9215      	str	r2, [sp, #84]	; 0x54
   83da8:	6035      	str	r5, [r6, #0]
   83daa:	6074      	str	r4, [r6, #4]
   83dac:	9014      	str	r0, [sp, #80]	; 0x50
   83dae:	dd59      	ble.n	83e64 <_vfiprintf_r+0x8c8>
   83db0:	2a00      	cmp	r2, #0
   83db2:	d14f      	bne.n	83e54 <_vfiprintf_r+0x8b8>
   83db4:	9c09      	ldr	r4, [sp, #36]	; 0x24
   83db6:	f8dd b00c 	ldr.w	fp, [sp, #12]
   83dba:	9d04      	ldr	r5, [sp, #16]
   83dbc:	45ab      	cmp	fp, r5
   83dbe:	bfac      	ite	ge
   83dc0:	445c      	addge	r4, fp
   83dc2:	1964      	addlt	r4, r4, r5
   83dc4:	9409      	str	r4, [sp, #36]	; 0x24
   83dc6:	e05e      	b.n	83e86 <_vfiprintf_r+0x8ea>
   83dc8:	4620      	mov	r0, r4
   83dca:	9902      	ldr	r1, [sp, #8]
   83dcc:	aa13      	add	r2, sp, #76	; 0x4c
   83dce:	f7ff fba9 	bl	83524 <__sprint_r.part.0>
   83dd2:	2800      	cmp	r0, #0
   83dd4:	d135      	bne.n	83e42 <_vfiprintf_r+0x8a6>
   83dd6:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83dd8:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83dda:	f103 0c01 	add.w	ip, r3, #1
   83dde:	4648      	mov	r0, r9
   83de0:	e781      	b.n	83ce6 <_vfiprintf_r+0x74a>
   83de2:	08e0      	lsrs	r0, r4, #3
   83de4:	ea40 7045 	orr.w	r0, r0, r5, lsl #29
   83de8:	f004 0207 	and.w	r2, r4, #7
   83dec:	08e9      	lsrs	r1, r5, #3
   83dee:	3230      	adds	r2, #48	; 0x30
   83df0:	ea50 0b01 	orrs.w	fp, r0, r1
   83df4:	461f      	mov	r7, r3
   83df6:	701a      	strb	r2, [r3, #0]
   83df8:	4604      	mov	r4, r0
   83dfa:	460d      	mov	r5, r1
   83dfc:	f103 33ff 	add.w	r3, r3, #4294967295
   83e00:	d1ef      	bne.n	83de2 <_vfiprintf_r+0x846>
   83e02:	f01a 0f01 	tst.w	sl, #1
   83e06:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   83e0a:	4639      	mov	r1, r7
   83e0c:	f000 80b9 	beq.w	83f82 <_vfiprintf_r+0x9e6>
   83e10:	2a30      	cmp	r2, #48	; 0x30
   83e12:	f43f acf4 	beq.w	837fe <_vfiprintf_r+0x262>
   83e16:	461f      	mov	r7, r3
   83e18:	ebc7 0509 	rsb	r5, r7, r9
   83e1c:	2330      	movs	r3, #48	; 0x30
   83e1e:	9505      	str	r5, [sp, #20]
   83e20:	f801 3c01 	strb.w	r3, [r1, #-1]
   83e24:	e4ee      	b.n	83804 <_vfiprintf_r+0x268>
   83e26:	bf00      	nop
   83e28:	00087b00 	.word	0x00087b00
   83e2c:	00087b30 	.word	0x00087b30
   83e30:	00087b40 	.word	0x00087b40
   83e34:	9b15      	ldr	r3, [sp, #84]	; 0x54
   83e36:	b123      	cbz	r3, 83e42 <_vfiprintf_r+0x8a6>
   83e38:	9806      	ldr	r0, [sp, #24]
   83e3a:	9902      	ldr	r1, [sp, #8]
   83e3c:	aa13      	add	r2, sp, #76	; 0x4c
   83e3e:	f7ff fb71 	bl	83524 <__sprint_r.part.0>
   83e42:	9c02      	ldr	r4, [sp, #8]
   83e44:	89a3      	ldrh	r3, [r4, #12]
   83e46:	065b      	lsls	r3, r3, #25
   83e48:	f53f ac98 	bmi.w	8377c <_vfiprintf_r+0x1e0>
   83e4c:	9809      	ldr	r0, [sp, #36]	; 0x24
   83e4e:	b031      	add	sp, #196	; 0xc4
   83e50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83e54:	9806      	ldr	r0, [sp, #24]
   83e56:	9902      	ldr	r1, [sp, #8]
   83e58:	aa13      	add	r2, sp, #76	; 0x4c
   83e5a:	f7ff fb63 	bl	83524 <__sprint_r.part.0>
   83e5e:	2800      	cmp	r0, #0
   83e60:	d1ef      	bne.n	83e42 <_vfiprintf_r+0x8a6>
   83e62:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83e64:	9c09      	ldr	r4, [sp, #36]	; 0x24
   83e66:	f8dd b00c 	ldr.w	fp, [sp, #12]
   83e6a:	9d04      	ldr	r5, [sp, #16]
   83e6c:	45ab      	cmp	fp, r5
   83e6e:	bfac      	ite	ge
   83e70:	445c      	addge	r4, fp
   83e72:	1964      	addlt	r4, r4, r5
   83e74:	9409      	str	r4, [sp, #36]	; 0x24
   83e76:	b132      	cbz	r2, 83e86 <_vfiprintf_r+0x8ea>
   83e78:	9806      	ldr	r0, [sp, #24]
   83e7a:	9902      	ldr	r1, [sp, #8]
   83e7c:	aa13      	add	r2, sp, #76	; 0x4c
   83e7e:	f7ff fb51 	bl	83524 <__sprint_r.part.0>
   83e82:	2800      	cmp	r0, #0
   83e84:	d1dd      	bne.n	83e42 <_vfiprintf_r+0x8a6>
   83e86:	2000      	movs	r0, #0
   83e88:	9014      	str	r0, [sp, #80]	; 0x50
   83e8a:	464e      	mov	r6, r9
   83e8c:	f7ff bbb9 	b.w	83602 <_vfiprintf_r+0x66>
   83e90:	4650      	mov	r0, sl
   83e92:	4659      	mov	r1, fp
   83e94:	aa13      	add	r2, sp, #76	; 0x4c
   83e96:	f7ff fb45 	bl	83524 <__sprint_r.part.0>
   83e9a:	2800      	cmp	r0, #0
   83e9c:	d1d1      	bne.n	83e42 <_vfiprintf_r+0x8a6>
   83e9e:	9914      	ldr	r1, [sp, #80]	; 0x50
   83ea0:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83ea2:	1c48      	adds	r0, r1, #1
   83ea4:	464e      	mov	r6, r9
   83ea6:	e768      	b.n	83d7a <_vfiprintf_r+0x7de>
   83ea8:	2a00      	cmp	r2, #0
   83eaa:	f040 80f7 	bne.w	8409c <_vfiprintf_r+0xb00>
   83eae:	9c05      	ldr	r4, [sp, #20]
   83eb0:	2301      	movs	r3, #1
   83eb2:	9720      	str	r7, [sp, #128]	; 0x80
   83eb4:	9421      	str	r4, [sp, #132]	; 0x84
   83eb6:	9415      	str	r4, [sp, #84]	; 0x54
   83eb8:	4622      	mov	r2, r4
   83eba:	9314      	str	r3, [sp, #80]	; 0x50
   83ebc:	464e      	mov	r6, r9
   83ebe:	3608      	adds	r6, #8
   83ec0:	e741      	b.n	83d46 <_vfiprintf_r+0x7aa>
   83ec2:	9d04      	ldr	r5, [sp, #16]
   83ec4:	f8dd b00c 	ldr.w	fp, [sp, #12]
   83ec8:	ebcb 0405 	rsb	r4, fp, r5
   83ecc:	2c00      	cmp	r4, #0
   83ece:	f77f aef7 	ble.w	83cc0 <_vfiprintf_r+0x724>
   83ed2:	2c10      	cmp	r4, #16
   83ed4:	4da6      	ldr	r5, [pc, #664]	; (84170 <_vfiprintf_r+0xbd4>)
   83ed6:	f340 8170 	ble.w	841ba <_vfiprintf_r+0xc1e>
   83eda:	4629      	mov	r1, r5
   83edc:	f04f 0b10 	mov.w	fp, #16
   83ee0:	4625      	mov	r5, r4
   83ee2:	4664      	mov	r4, ip
   83ee4:	46b4      	mov	ip, r6
   83ee6:	460e      	mov	r6, r1
   83ee8:	e006      	b.n	83ef8 <_vfiprintf_r+0x95c>
   83eea:	1c98      	adds	r0, r3, #2
   83eec:	f10c 0c08 	add.w	ip, ip, #8
   83ef0:	460b      	mov	r3, r1
   83ef2:	3d10      	subs	r5, #16
   83ef4:	2d10      	cmp	r5, #16
   83ef6:	dd0f      	ble.n	83f18 <_vfiprintf_r+0x97c>
   83ef8:	1c59      	adds	r1, r3, #1
   83efa:	3210      	adds	r2, #16
   83efc:	2907      	cmp	r1, #7
   83efe:	9215      	str	r2, [sp, #84]	; 0x54
   83f00:	e88c 0840 	stmia.w	ip, {r6, fp}
   83f04:	9114      	str	r1, [sp, #80]	; 0x50
   83f06:	ddf0      	ble.n	83eea <_vfiprintf_r+0x94e>
   83f08:	b9ba      	cbnz	r2, 83f3a <_vfiprintf_r+0x99e>
   83f0a:	3d10      	subs	r5, #16
   83f0c:	2d10      	cmp	r5, #16
   83f0e:	f04f 0001 	mov.w	r0, #1
   83f12:	4613      	mov	r3, r2
   83f14:	46cc      	mov	ip, r9
   83f16:	dcef      	bgt.n	83ef8 <_vfiprintf_r+0x95c>
   83f18:	4633      	mov	r3, r6
   83f1a:	4666      	mov	r6, ip
   83f1c:	46a4      	mov	ip, r4
   83f1e:	462c      	mov	r4, r5
   83f20:	461d      	mov	r5, r3
   83f22:	4422      	add	r2, r4
   83f24:	2807      	cmp	r0, #7
   83f26:	9215      	str	r2, [sp, #84]	; 0x54
   83f28:	6035      	str	r5, [r6, #0]
   83f2a:	6074      	str	r4, [r6, #4]
   83f2c:	9014      	str	r0, [sp, #80]	; 0x50
   83f2e:	f300 80af 	bgt.w	84090 <_vfiprintf_r+0xaf4>
   83f32:	3608      	adds	r6, #8
   83f34:	1c41      	adds	r1, r0, #1
   83f36:	4603      	mov	r3, r0
   83f38:	e6c2      	b.n	83cc0 <_vfiprintf_r+0x724>
   83f3a:	9806      	ldr	r0, [sp, #24]
   83f3c:	9902      	ldr	r1, [sp, #8]
   83f3e:	aa13      	add	r2, sp, #76	; 0x4c
   83f40:	f7ff faf0 	bl	83524 <__sprint_r.part.0>
   83f44:	2800      	cmp	r0, #0
   83f46:	f47f af7c 	bne.w	83e42 <_vfiprintf_r+0x8a6>
   83f4a:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83f4c:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83f4e:	1c58      	adds	r0, r3, #1
   83f50:	46cc      	mov	ip, r9
   83f52:	e7ce      	b.n	83ef2 <_vfiprintf_r+0x956>
   83f54:	2a00      	cmp	r2, #0
   83f56:	d179      	bne.n	8404c <_vfiprintf_r+0xab0>
   83f58:	4619      	mov	r1, r3
   83f5a:	464e      	mov	r6, r9
   83f5c:	4613      	mov	r3, r2
   83f5e:	e69c      	b.n	83c9a <_vfiprintf_r+0x6fe>
   83f60:	2a00      	cmp	r2, #0
   83f62:	f040 8084 	bne.w	8406e <_vfiprintf_r+0xad2>
   83f66:	2101      	movs	r1, #1
   83f68:	4613      	mov	r3, r2
   83f6a:	464e      	mov	r6, r9
   83f6c:	e6a4      	b.n	83cb8 <_vfiprintf_r+0x71c>
   83f6e:	464f      	mov	r7, r9
   83f70:	e448      	b.n	83804 <_vfiprintf_r+0x268>
   83f72:	2d00      	cmp	r5, #0
   83f74:	bf08      	it	eq
   83f76:	2c0a      	cmpeq	r4, #10
   83f78:	d246      	bcs.n	84008 <_vfiprintf_r+0xa6c>
   83f7a:	3430      	adds	r4, #48	; 0x30
   83f7c:	af30      	add	r7, sp, #192	; 0xc0
   83f7e:	f807 4d41 	strb.w	r4, [r7, #-65]!
   83f82:	ebc7 0309 	rsb	r3, r7, r9
   83f86:	9305      	str	r3, [sp, #20]
   83f88:	e43c      	b.n	83804 <_vfiprintf_r+0x268>
   83f8a:	2302      	movs	r3, #2
   83f8c:	e417      	b.n	837be <_vfiprintf_r+0x222>
   83f8e:	2a00      	cmp	r2, #0
   83f90:	f040 80af 	bne.w	840f2 <_vfiprintf_r+0xb56>
   83f94:	4613      	mov	r3, r2
   83f96:	2101      	movs	r1, #1
   83f98:	464e      	mov	r6, r9
   83f9a:	e66d      	b.n	83c78 <_vfiprintf_r+0x6dc>
   83f9c:	4644      	mov	r4, r8
   83f9e:	f7ff bb58 	b.w	83652 <_vfiprintf_r+0xb6>
   83fa2:	9806      	ldr	r0, [sp, #24]
   83fa4:	9902      	ldr	r1, [sp, #8]
   83fa6:	aa13      	add	r2, sp, #76	; 0x4c
   83fa8:	f7ff fabc 	bl	83524 <__sprint_r.part.0>
   83fac:	2800      	cmp	r0, #0
   83fae:	f47f af48 	bne.w	83e42 <_vfiprintf_r+0x8a6>
   83fb2:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83fb4:	464e      	mov	r6, r9
   83fb6:	e6c6      	b.n	83d46 <_vfiprintf_r+0x7aa>
   83fb8:	9d08      	ldr	r5, [sp, #32]
   83fba:	682c      	ldr	r4, [r5, #0]
   83fbc:	3504      	adds	r5, #4
   83fbe:	9508      	str	r5, [sp, #32]
   83fc0:	2500      	movs	r5, #0
   83fc2:	f7ff bbfc 	b.w	837be <_vfiprintf_r+0x222>
   83fc6:	9d08      	ldr	r5, [sp, #32]
   83fc8:	2301      	movs	r3, #1
   83fca:	682c      	ldr	r4, [r5, #0]
   83fcc:	3504      	adds	r5, #4
   83fce:	9508      	str	r5, [sp, #32]
   83fd0:	2500      	movs	r5, #0
   83fd2:	f7ff bbf4 	b.w	837be <_vfiprintf_r+0x222>
   83fd6:	9d08      	ldr	r5, [sp, #32]
   83fd8:	682c      	ldr	r4, [r5, #0]
   83fda:	3504      	adds	r5, #4
   83fdc:	9508      	str	r5, [sp, #32]
   83fde:	2500      	movs	r5, #0
   83fe0:	e525      	b.n	83a2e <_vfiprintf_r+0x492>
   83fe2:	9d08      	ldr	r5, [sp, #32]
   83fe4:	682c      	ldr	r4, [r5, #0]
   83fe6:	3504      	adds	r5, #4
   83fe8:	9508      	str	r5, [sp, #32]
   83fea:	17e5      	asrs	r5, r4, #31
   83fec:	4622      	mov	r2, r4
   83fee:	462b      	mov	r3, r5
   83ff0:	e48e      	b.n	83910 <_vfiprintf_r+0x374>
   83ff2:	9806      	ldr	r0, [sp, #24]
   83ff4:	9902      	ldr	r1, [sp, #8]
   83ff6:	aa13      	add	r2, sp, #76	; 0x4c
   83ff8:	f7ff fa94 	bl	83524 <__sprint_r.part.0>
   83ffc:	2800      	cmp	r0, #0
   83ffe:	f47f af20 	bne.w	83e42 <_vfiprintf_r+0x8a6>
   84002:	464e      	mov	r6, r9
   84004:	f7ff bb9a 	b.w	8373c <_vfiprintf_r+0x1a0>
   84008:	f10d 0b7f 	add.w	fp, sp, #127	; 0x7f
   8400c:	9603      	str	r6, [sp, #12]
   8400e:	465e      	mov	r6, fp
   84010:	46e3      	mov	fp, ip
   84012:	4620      	mov	r0, r4
   84014:	4629      	mov	r1, r5
   84016:	220a      	movs	r2, #10
   84018:	2300      	movs	r3, #0
   8401a:	f003 f9d5 	bl	873c8 <__aeabi_uldivmod>
   8401e:	3230      	adds	r2, #48	; 0x30
   84020:	7032      	strb	r2, [r6, #0]
   84022:	4620      	mov	r0, r4
   84024:	4629      	mov	r1, r5
   84026:	220a      	movs	r2, #10
   84028:	2300      	movs	r3, #0
   8402a:	f003 f9cd 	bl	873c8 <__aeabi_uldivmod>
   8402e:	4604      	mov	r4, r0
   84030:	460d      	mov	r5, r1
   84032:	ea54 0005 	orrs.w	r0, r4, r5
   84036:	4637      	mov	r7, r6
   84038:	f106 36ff 	add.w	r6, r6, #4294967295
   8403c:	d1e9      	bne.n	84012 <_vfiprintf_r+0xa76>
   8403e:	ebc7 0309 	rsb	r3, r7, r9
   84042:	46dc      	mov	ip, fp
   84044:	9e03      	ldr	r6, [sp, #12]
   84046:	9305      	str	r3, [sp, #20]
   84048:	f7ff bbdc 	b.w	83804 <_vfiprintf_r+0x268>
   8404c:	9806      	ldr	r0, [sp, #24]
   8404e:	9902      	ldr	r1, [sp, #8]
   84050:	aa13      	add	r2, sp, #76	; 0x4c
   84052:	f8cd c004 	str.w	ip, [sp, #4]
   84056:	f7ff fa65 	bl	83524 <__sprint_r.part.0>
   8405a:	f8dd c004 	ldr.w	ip, [sp, #4]
   8405e:	2800      	cmp	r0, #0
   84060:	f47f aeef 	bne.w	83e42 <_vfiprintf_r+0x8a6>
   84064:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84066:	9a15      	ldr	r2, [sp, #84]	; 0x54
   84068:	1c59      	adds	r1, r3, #1
   8406a:	464e      	mov	r6, r9
   8406c:	e615      	b.n	83c9a <_vfiprintf_r+0x6fe>
   8406e:	9806      	ldr	r0, [sp, #24]
   84070:	9902      	ldr	r1, [sp, #8]
   84072:	aa13      	add	r2, sp, #76	; 0x4c
   84074:	f8cd c004 	str.w	ip, [sp, #4]
   84078:	f7ff fa54 	bl	83524 <__sprint_r.part.0>
   8407c:	f8dd c004 	ldr.w	ip, [sp, #4]
   84080:	2800      	cmp	r0, #0
   84082:	f47f aede 	bne.w	83e42 <_vfiprintf_r+0x8a6>
   84086:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84088:	9a15      	ldr	r2, [sp, #84]	; 0x54
   8408a:	1c59      	adds	r1, r3, #1
   8408c:	464e      	mov	r6, r9
   8408e:	e613      	b.n	83cb8 <_vfiprintf_r+0x71c>
   84090:	2a00      	cmp	r2, #0
   84092:	d156      	bne.n	84142 <_vfiprintf_r+0xba6>
   84094:	2101      	movs	r1, #1
   84096:	4613      	mov	r3, r2
   84098:	464e      	mov	r6, r9
   8409a:	e611      	b.n	83cc0 <_vfiprintf_r+0x724>
   8409c:	9806      	ldr	r0, [sp, #24]
   8409e:	9902      	ldr	r1, [sp, #8]
   840a0:	aa13      	add	r2, sp, #76	; 0x4c
   840a2:	f7ff fa3f 	bl	83524 <__sprint_r.part.0>
   840a6:	2800      	cmp	r0, #0
   840a8:	f47f aecb 	bne.w	83e42 <_vfiprintf_r+0x8a6>
   840ac:	9914      	ldr	r1, [sp, #80]	; 0x50
   840ae:	9a15      	ldr	r2, [sp, #84]	; 0x54
   840b0:	3101      	adds	r1, #1
   840b2:	464e      	mov	r6, r9
   840b4:	e639      	b.n	83d2a <_vfiprintf_r+0x78e>
   840b6:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
   840ba:	4264      	negs	r4, r4
   840bc:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   840c0:	f88d b047 	strb.w	fp, [sp, #71]	; 0x47
   840c4:	f8cd b01c 	str.w	fp, [sp, #28]
   840c8:	f8cd c014 	str.w	ip, [sp, #20]
   840cc:	2301      	movs	r3, #1
   840ce:	f7ff bb7e 	b.w	837ce <_vfiprintf_r+0x232>
   840d2:	f01a 0f10 	tst.w	sl, #16
   840d6:	d11d      	bne.n	84114 <_vfiprintf_r+0xb78>
   840d8:	f01a 0f40 	tst.w	sl, #64	; 0x40
   840dc:	d058      	beq.n	84190 <_vfiprintf_r+0xbf4>
   840de:	9d08      	ldr	r5, [sp, #32]
   840e0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   840e4:	682b      	ldr	r3, [r5, #0]
   840e6:	3504      	adds	r5, #4
   840e8:	9508      	str	r5, [sp, #32]
   840ea:	f8a3 b000 	strh.w	fp, [r3]
   840ee:	f7ff ba88 	b.w	83602 <_vfiprintf_r+0x66>
   840f2:	9806      	ldr	r0, [sp, #24]
   840f4:	9902      	ldr	r1, [sp, #8]
   840f6:	aa13      	add	r2, sp, #76	; 0x4c
   840f8:	f8cd c004 	str.w	ip, [sp, #4]
   840fc:	f7ff fa12 	bl	83524 <__sprint_r.part.0>
   84100:	f8dd c004 	ldr.w	ip, [sp, #4]
   84104:	2800      	cmp	r0, #0
   84106:	f47f ae9c 	bne.w	83e42 <_vfiprintf_r+0x8a6>
   8410a:	9b14      	ldr	r3, [sp, #80]	; 0x50
   8410c:	9a15      	ldr	r2, [sp, #84]	; 0x54
   8410e:	1c59      	adds	r1, r3, #1
   84110:	464e      	mov	r6, r9
   84112:	e5b1      	b.n	83c78 <_vfiprintf_r+0x6dc>
   84114:	f8dd b020 	ldr.w	fp, [sp, #32]
   84118:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8411a:	f8db 3000 	ldr.w	r3, [fp]
   8411e:	f10b 0b04 	add.w	fp, fp, #4
   84122:	f8cd b020 	str.w	fp, [sp, #32]
   84126:	601c      	str	r4, [r3, #0]
   84128:	f7ff ba6b 	b.w	83602 <_vfiprintf_r+0x66>
   8412c:	9408      	str	r4, [sp, #32]
   8412e:	f002 ff25 	bl	86f7c <strlen>
   84132:	f89d 4047 	ldrb.w	r4, [sp, #71]	; 0x47
   84136:	9005      	str	r0, [sp, #20]
   84138:	9407      	str	r4, [sp, #28]
   8413a:	f04f 0c00 	mov.w	ip, #0
   8413e:	f7ff bb61 	b.w	83804 <_vfiprintf_r+0x268>
   84142:	9806      	ldr	r0, [sp, #24]
   84144:	9902      	ldr	r1, [sp, #8]
   84146:	aa13      	add	r2, sp, #76	; 0x4c
   84148:	f8cd c004 	str.w	ip, [sp, #4]
   8414c:	f7ff f9ea 	bl	83524 <__sprint_r.part.0>
   84150:	f8dd c004 	ldr.w	ip, [sp, #4]
   84154:	2800      	cmp	r0, #0
   84156:	f47f ae74 	bne.w	83e42 <_vfiprintf_r+0x8a6>
   8415a:	9b14      	ldr	r3, [sp, #80]	; 0x50
   8415c:	9a15      	ldr	r2, [sp, #84]	; 0x54
   8415e:	1c59      	adds	r1, r3, #1
   84160:	464e      	mov	r6, r9
   84162:	e5ad      	b.n	83cc0 <_vfiprintf_r+0x724>
   84164:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84166:	9a15      	ldr	r2, [sp, #84]	; 0x54
   84168:	3301      	adds	r3, #1
   8416a:	4d02      	ldr	r5, [pc, #8]	; (84174 <_vfiprintf_r+0xbd8>)
   8416c:	f7ff bb9a 	b.w	838a4 <_vfiprintf_r+0x308>
   84170:	00087b30 	.word	0x00087b30
   84174:	00087b40 	.word	0x00087b40
   84178:	f1bc 0f06 	cmp.w	ip, #6
   8417c:	bf34      	ite	cc
   8417e:	4663      	movcc	r3, ip
   84180:	2306      	movcs	r3, #6
   84182:	9408      	str	r4, [sp, #32]
   84184:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
   84188:	9305      	str	r3, [sp, #20]
   8418a:	9403      	str	r4, [sp, #12]
   8418c:	4f16      	ldr	r7, [pc, #88]	; (841e8 <_vfiprintf_r+0xc4c>)
   8418e:	e472      	b.n	83a76 <_vfiprintf_r+0x4da>
   84190:	9c08      	ldr	r4, [sp, #32]
   84192:	9d09      	ldr	r5, [sp, #36]	; 0x24
   84194:	6823      	ldr	r3, [r4, #0]
   84196:	3404      	adds	r4, #4
   84198:	9408      	str	r4, [sp, #32]
   8419a:	601d      	str	r5, [r3, #0]
   8419c:	f7ff ba31 	b.w	83602 <_vfiprintf_r+0x66>
   841a0:	9814      	ldr	r0, [sp, #80]	; 0x50
   841a2:	4d12      	ldr	r5, [pc, #72]	; (841ec <_vfiprintf_r+0xc50>)
   841a4:	3001      	adds	r0, #1
   841a6:	e5fc      	b.n	83da2 <_vfiprintf_r+0x806>
   841a8:	f89d 5047 	ldrb.w	r5, [sp, #71]	; 0x47
   841ac:	f8cd c014 	str.w	ip, [sp, #20]
   841b0:	9507      	str	r5, [sp, #28]
   841b2:	9408      	str	r4, [sp, #32]
   841b4:	4684      	mov	ip, r0
   841b6:	f7ff bb25 	b.w	83804 <_vfiprintf_r+0x268>
   841ba:	4608      	mov	r0, r1
   841bc:	e6b1      	b.n	83f22 <_vfiprintf_r+0x986>
   841be:	46a0      	mov	r8, r4
   841c0:	2500      	movs	r5, #0
   841c2:	f7ff ba5a 	b.w	8367a <_vfiprintf_r+0xde>
   841c6:	f8dd b020 	ldr.w	fp, [sp, #32]
   841ca:	f898 3001 	ldrb.w	r3, [r8, #1]
   841ce:	f8db 5000 	ldr.w	r5, [fp]
   841d2:	f10b 0204 	add.w	r2, fp, #4
   841d6:	2d00      	cmp	r5, #0
   841d8:	9208      	str	r2, [sp, #32]
   841da:	46a0      	mov	r8, r4
   841dc:	f6bf aa4b 	bge.w	83676 <_vfiprintf_r+0xda>
   841e0:	f04f 35ff 	mov.w	r5, #4294967295
   841e4:	f7ff ba47 	b.w	83676 <_vfiprintf_r+0xda>
   841e8:	00087b14 	.word	0x00087b14
   841ec:	00087b40 	.word	0x00087b40

000841f0 <__sbprintf>:
   841f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   841f4:	6e4f      	ldr	r7, [r1, #100]	; 0x64
   841f6:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
   841fa:	4688      	mov	r8, r1
   841fc:	9719      	str	r7, [sp, #100]	; 0x64
   841fe:	f8d8 701c 	ldr.w	r7, [r8, #28]
   84202:	f8b1 a00c 	ldrh.w	sl, [r1, #12]
   84206:	f8b1 900e 	ldrh.w	r9, [r1, #14]
   8420a:	9707      	str	r7, [sp, #28]
   8420c:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
   84210:	ac1a      	add	r4, sp, #104	; 0x68
   84212:	f44f 6580 	mov.w	r5, #1024	; 0x400
   84216:	f02a 0a02 	bic.w	sl, sl, #2
   8421a:	2600      	movs	r6, #0
   8421c:	4669      	mov	r1, sp
   8421e:	9400      	str	r4, [sp, #0]
   84220:	9404      	str	r4, [sp, #16]
   84222:	9502      	str	r5, [sp, #8]
   84224:	9505      	str	r5, [sp, #20]
   84226:	f8ad a00c 	strh.w	sl, [sp, #12]
   8422a:	f8ad 900e 	strh.w	r9, [sp, #14]
   8422e:	9709      	str	r7, [sp, #36]	; 0x24
   84230:	9606      	str	r6, [sp, #24]
   84232:	4605      	mov	r5, r0
   84234:	f7ff f9b2 	bl	8359c <_vfiprintf_r>
   84238:	1e04      	subs	r4, r0, #0
   8423a:	db07      	blt.n	8424c <__sbprintf+0x5c>
   8423c:	4628      	mov	r0, r5
   8423e:	4669      	mov	r1, sp
   84240:	f001 f936 	bl	854b0 <_fflush_r>
   84244:	42b0      	cmp	r0, r6
   84246:	bf18      	it	ne
   84248:	f04f 34ff 	movne.w	r4, #4294967295
   8424c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   84250:	065b      	lsls	r3, r3, #25
   84252:	d505      	bpl.n	84260 <__sbprintf+0x70>
   84254:	f8b8 300c 	ldrh.w	r3, [r8, #12]
   84258:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8425c:	f8a8 300c 	strh.w	r3, [r8, #12]
   84260:	4620      	mov	r0, r4
   84262:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
   84266:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8426a:	bf00      	nop

0008426c <__swbuf_r>:
   8426c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8426e:	460d      	mov	r5, r1
   84270:	4614      	mov	r4, r2
   84272:	4607      	mov	r7, r0
   84274:	b110      	cbz	r0, 8427c <__swbuf_r+0x10>
   84276:	6b83      	ldr	r3, [r0, #56]	; 0x38
   84278:	2b00      	cmp	r3, #0
   8427a:	d048      	beq.n	8430e <__swbuf_r+0xa2>
   8427c:	89a2      	ldrh	r2, [r4, #12]
   8427e:	69a0      	ldr	r0, [r4, #24]
   84280:	b293      	uxth	r3, r2
   84282:	60a0      	str	r0, [r4, #8]
   84284:	0718      	lsls	r0, r3, #28
   84286:	d538      	bpl.n	842fa <__swbuf_r+0x8e>
   84288:	6926      	ldr	r6, [r4, #16]
   8428a:	2e00      	cmp	r6, #0
   8428c:	d035      	beq.n	842fa <__swbuf_r+0x8e>
   8428e:	0499      	lsls	r1, r3, #18
   84290:	b2ed      	uxtb	r5, r5
   84292:	d515      	bpl.n	842c0 <__swbuf_r+0x54>
   84294:	6823      	ldr	r3, [r4, #0]
   84296:	6962      	ldr	r2, [r4, #20]
   84298:	1b9e      	subs	r6, r3, r6
   8429a:	4296      	cmp	r6, r2
   8429c:	da1c      	bge.n	842d8 <__swbuf_r+0x6c>
   8429e:	3601      	adds	r6, #1
   842a0:	68a2      	ldr	r2, [r4, #8]
   842a2:	1c59      	adds	r1, r3, #1
   842a4:	3a01      	subs	r2, #1
   842a6:	60a2      	str	r2, [r4, #8]
   842a8:	6021      	str	r1, [r4, #0]
   842aa:	701d      	strb	r5, [r3, #0]
   842ac:	6963      	ldr	r3, [r4, #20]
   842ae:	42b3      	cmp	r3, r6
   842b0:	d01a      	beq.n	842e8 <__swbuf_r+0x7c>
   842b2:	89a3      	ldrh	r3, [r4, #12]
   842b4:	07db      	lsls	r3, r3, #31
   842b6:	d501      	bpl.n	842bc <__swbuf_r+0x50>
   842b8:	2d0a      	cmp	r5, #10
   842ba:	d015      	beq.n	842e8 <__swbuf_r+0x7c>
   842bc:	4628      	mov	r0, r5
   842be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   842c0:	6e63      	ldr	r3, [r4, #100]	; 0x64
   842c2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   842c6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   842ca:	6663      	str	r3, [r4, #100]	; 0x64
   842cc:	6823      	ldr	r3, [r4, #0]
   842ce:	81a2      	strh	r2, [r4, #12]
   842d0:	6962      	ldr	r2, [r4, #20]
   842d2:	1b9e      	subs	r6, r3, r6
   842d4:	4296      	cmp	r6, r2
   842d6:	dbe2      	blt.n	8429e <__swbuf_r+0x32>
   842d8:	4638      	mov	r0, r7
   842da:	4621      	mov	r1, r4
   842dc:	f001 f8e8 	bl	854b0 <_fflush_r>
   842e0:	b940      	cbnz	r0, 842f4 <__swbuf_r+0x88>
   842e2:	6823      	ldr	r3, [r4, #0]
   842e4:	2601      	movs	r6, #1
   842e6:	e7db      	b.n	842a0 <__swbuf_r+0x34>
   842e8:	4638      	mov	r0, r7
   842ea:	4621      	mov	r1, r4
   842ec:	f001 f8e0 	bl	854b0 <_fflush_r>
   842f0:	2800      	cmp	r0, #0
   842f2:	d0e3      	beq.n	842bc <__swbuf_r+0x50>
   842f4:	f04f 30ff 	mov.w	r0, #4294967295
   842f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   842fa:	4638      	mov	r0, r7
   842fc:	4621      	mov	r1, r4
   842fe:	f000 f809 	bl	84314 <__swsetup_r>
   84302:	2800      	cmp	r0, #0
   84304:	d1f6      	bne.n	842f4 <__swbuf_r+0x88>
   84306:	89a2      	ldrh	r2, [r4, #12]
   84308:	6926      	ldr	r6, [r4, #16]
   8430a:	b293      	uxth	r3, r2
   8430c:	e7bf      	b.n	8428e <__swbuf_r+0x22>
   8430e:	f001 f8eb 	bl	854e8 <__sinit>
   84312:	e7b3      	b.n	8427c <__swbuf_r+0x10>

00084314 <__swsetup_r>:
   84314:	4b2f      	ldr	r3, [pc, #188]	; (843d4 <__swsetup_r+0xc0>)
   84316:	b570      	push	{r4, r5, r6, lr}
   84318:	4606      	mov	r6, r0
   8431a:	6818      	ldr	r0, [r3, #0]
   8431c:	460c      	mov	r4, r1
   8431e:	b110      	cbz	r0, 84326 <__swsetup_r+0x12>
   84320:	6b82      	ldr	r2, [r0, #56]	; 0x38
   84322:	2a00      	cmp	r2, #0
   84324:	d036      	beq.n	84394 <__swsetup_r+0x80>
   84326:	89a5      	ldrh	r5, [r4, #12]
   84328:	b2ab      	uxth	r3, r5
   8432a:	0719      	lsls	r1, r3, #28
   8432c:	d50c      	bpl.n	84348 <__swsetup_r+0x34>
   8432e:	6922      	ldr	r2, [r4, #16]
   84330:	b1aa      	cbz	r2, 8435e <__swsetup_r+0x4a>
   84332:	f013 0101 	ands.w	r1, r3, #1
   84336:	d01e      	beq.n	84376 <__swsetup_r+0x62>
   84338:	6963      	ldr	r3, [r4, #20]
   8433a:	2100      	movs	r1, #0
   8433c:	425b      	negs	r3, r3
   8433e:	61a3      	str	r3, [r4, #24]
   84340:	60a1      	str	r1, [r4, #8]
   84342:	b1f2      	cbz	r2, 84382 <__swsetup_r+0x6e>
   84344:	2000      	movs	r0, #0
   84346:	bd70      	pop	{r4, r5, r6, pc}
   84348:	06da      	lsls	r2, r3, #27
   8434a:	d53a      	bpl.n	843c2 <__swsetup_r+0xae>
   8434c:	075b      	lsls	r3, r3, #29
   8434e:	d424      	bmi.n	8439a <__swsetup_r+0x86>
   84350:	6922      	ldr	r2, [r4, #16]
   84352:	f045 0308 	orr.w	r3, r5, #8
   84356:	81a3      	strh	r3, [r4, #12]
   84358:	b29b      	uxth	r3, r3
   8435a:	2a00      	cmp	r2, #0
   8435c:	d1e9      	bne.n	84332 <__swsetup_r+0x1e>
   8435e:	f403 7120 	and.w	r1, r3, #640	; 0x280
   84362:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   84366:	d0e4      	beq.n	84332 <__swsetup_r+0x1e>
   84368:	4630      	mov	r0, r6
   8436a:	4621      	mov	r1, r4
   8436c:	f001 fc8a 	bl	85c84 <__smakebuf_r>
   84370:	89a3      	ldrh	r3, [r4, #12]
   84372:	6922      	ldr	r2, [r4, #16]
   84374:	e7dd      	b.n	84332 <__swsetup_r+0x1e>
   84376:	0798      	lsls	r0, r3, #30
   84378:	bf58      	it	pl
   8437a:	6961      	ldrpl	r1, [r4, #20]
   8437c:	60a1      	str	r1, [r4, #8]
   8437e:	2a00      	cmp	r2, #0
   84380:	d1e0      	bne.n	84344 <__swsetup_r+0x30>
   84382:	89a3      	ldrh	r3, [r4, #12]
   84384:	061a      	lsls	r2, r3, #24
   84386:	d5dd      	bpl.n	84344 <__swsetup_r+0x30>
   84388:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8438c:	81a3      	strh	r3, [r4, #12]
   8438e:	f04f 30ff 	mov.w	r0, #4294967295
   84392:	bd70      	pop	{r4, r5, r6, pc}
   84394:	f001 f8a8 	bl	854e8 <__sinit>
   84398:	e7c5      	b.n	84326 <__swsetup_r+0x12>
   8439a:	6b21      	ldr	r1, [r4, #48]	; 0x30
   8439c:	b149      	cbz	r1, 843b2 <__swsetup_r+0x9e>
   8439e:	f104 0340 	add.w	r3, r4, #64	; 0x40
   843a2:	4299      	cmp	r1, r3
   843a4:	d003      	beq.n	843ae <__swsetup_r+0x9a>
   843a6:	4630      	mov	r0, r6
   843a8:	f001 f9e2 	bl	85770 <_free_r>
   843ac:	89a5      	ldrh	r5, [r4, #12]
   843ae:	2300      	movs	r3, #0
   843b0:	6323      	str	r3, [r4, #48]	; 0x30
   843b2:	6922      	ldr	r2, [r4, #16]
   843b4:	f025 0524 	bic.w	r5, r5, #36	; 0x24
   843b8:	2100      	movs	r1, #0
   843ba:	b2ad      	uxth	r5, r5
   843bc:	6022      	str	r2, [r4, #0]
   843be:	6061      	str	r1, [r4, #4]
   843c0:	e7c7      	b.n	84352 <__swsetup_r+0x3e>
   843c2:	f045 0540 	orr.w	r5, r5, #64	; 0x40
   843c6:	2309      	movs	r3, #9
   843c8:	6033      	str	r3, [r6, #0]
   843ca:	f04f 30ff 	mov.w	r0, #4294967295
   843ce:	81a5      	strh	r5, [r4, #12]
   843d0:	bd70      	pop	{r4, r5, r6, pc}
   843d2:	bf00      	nop
   843d4:	20070560 	.word	0x20070560

000843d8 <register_fini>:
   843d8:	4b02      	ldr	r3, [pc, #8]	; (843e4 <register_fini+0xc>)
   843da:	b113      	cbz	r3, 843e2 <register_fini+0xa>
   843dc:	4802      	ldr	r0, [pc, #8]	; (843e8 <register_fini+0x10>)
   843de:	f000 b805 	b.w	843ec <atexit>
   843e2:	4770      	bx	lr
   843e4:	00000000 	.word	0x00000000
   843e8:	000855e5 	.word	0x000855e5

000843ec <atexit>:
   843ec:	4601      	mov	r1, r0
   843ee:	2000      	movs	r0, #0
   843f0:	4602      	mov	r2, r0
   843f2:	4603      	mov	r3, r0
   843f4:	f002 bebc 	b.w	87170 <__register_exitproc>

000843f8 <quorem>:
   843f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   843fc:	6903      	ldr	r3, [r0, #16]
   843fe:	690d      	ldr	r5, [r1, #16]
   84400:	b083      	sub	sp, #12
   84402:	429d      	cmp	r5, r3
   84404:	4683      	mov	fp, r0
   84406:	f300 808c 	bgt.w	84522 <quorem+0x12a>
   8440a:	3d01      	subs	r5, #1
   8440c:	f101 0414 	add.w	r4, r1, #20
   84410:	f100 0a14 	add.w	sl, r0, #20
   84414:	f854 2025 	ldr.w	r2, [r4, r5, lsl #2]
   84418:	f85a 3025 	ldr.w	r3, [sl, r5, lsl #2]
   8441c:	3201      	adds	r2, #1
   8441e:	fbb3 f8f2 	udiv	r8, r3, r2
   84422:	00aa      	lsls	r2, r5, #2
   84424:	4691      	mov	r9, r2
   84426:	9200      	str	r2, [sp, #0]
   84428:	4452      	add	r2, sl
   8442a:	44a1      	add	r9, r4
   8442c:	9201      	str	r2, [sp, #4]
   8442e:	f1b8 0f00 	cmp.w	r8, #0
   84432:	d03e      	beq.n	844b2 <quorem+0xba>
   84434:	2600      	movs	r6, #0
   84436:	4630      	mov	r0, r6
   84438:	4622      	mov	r2, r4
   8443a:	4653      	mov	r3, sl
   8443c:	468c      	mov	ip, r1
   8443e:	f852 7b04 	ldr.w	r7, [r2], #4
   84442:	6819      	ldr	r1, [r3, #0]
   84444:	fa1f fe87 	uxth.w	lr, r7
   84448:	0c3f      	lsrs	r7, r7, #16
   8444a:	fb0e 6e08 	mla	lr, lr, r8, r6
   8444e:	fb07 f608 	mul.w	r6, r7, r8
   84452:	eb06 461e 	add.w	r6, r6, lr, lsr #16
   84456:	fa1f fe8e 	uxth.w	lr, lr
   8445a:	ebce 0e00 	rsb	lr, lr, r0
   8445e:	b28f      	uxth	r7, r1
   84460:	b2b0      	uxth	r0, r6
   84462:	4477      	add	r7, lr
   84464:	ebc0 4011 	rsb	r0, r0, r1, lsr #16
   84468:	eb00 4027 	add.w	r0, r0, r7, asr #16
   8446c:	b2bf      	uxth	r7, r7
   8446e:	ea47 4700 	orr.w	r7, r7, r0, lsl #16
   84472:	4591      	cmp	r9, r2
   84474:	f843 7b04 	str.w	r7, [r3], #4
   84478:	ea4f 4020 	mov.w	r0, r0, asr #16
   8447c:	ea4f 4616 	mov.w	r6, r6, lsr #16
   84480:	d2dd      	bcs.n	8443e <quorem+0x46>
   84482:	9a00      	ldr	r2, [sp, #0]
   84484:	4661      	mov	r1, ip
   84486:	f85a 3002 	ldr.w	r3, [sl, r2]
   8448a:	b993      	cbnz	r3, 844b2 <quorem+0xba>
   8448c:	9a01      	ldr	r2, [sp, #4]
   8448e:	1f13      	subs	r3, r2, #4
   84490:	459a      	cmp	sl, r3
   84492:	d20c      	bcs.n	844ae <quorem+0xb6>
   84494:	f852 3c04 	ldr.w	r3, [r2, #-4]
   84498:	b94b      	cbnz	r3, 844ae <quorem+0xb6>
   8449a:	f1a2 0308 	sub.w	r3, r2, #8
   8449e:	e002      	b.n	844a6 <quorem+0xae>
   844a0:	681a      	ldr	r2, [r3, #0]
   844a2:	3b04      	subs	r3, #4
   844a4:	b91a      	cbnz	r2, 844ae <quorem+0xb6>
   844a6:	459a      	cmp	sl, r3
   844a8:	f105 35ff 	add.w	r5, r5, #4294967295
   844ac:	d3f8      	bcc.n	844a0 <quorem+0xa8>
   844ae:	f8cb 5010 	str.w	r5, [fp, #16]
   844b2:	4658      	mov	r0, fp
   844b4:	f002 fa40 	bl	86938 <__mcmp>
   844b8:	2800      	cmp	r0, #0
   844ba:	db2e      	blt.n	8451a <quorem+0x122>
   844bc:	f108 0801 	add.w	r8, r8, #1
   844c0:	4653      	mov	r3, sl
   844c2:	2200      	movs	r2, #0
   844c4:	f854 6b04 	ldr.w	r6, [r4], #4
   844c8:	6818      	ldr	r0, [r3, #0]
   844ca:	b2b1      	uxth	r1, r6
   844cc:	1a51      	subs	r1, r2, r1
   844ce:	b287      	uxth	r7, r0
   844d0:	0c36      	lsrs	r6, r6, #16
   844d2:	4439      	add	r1, r7
   844d4:	ebc6 4010 	rsb	r0, r6, r0, lsr #16
   844d8:	eb00 4221 	add.w	r2, r0, r1, asr #16
   844dc:	b289      	uxth	r1, r1
   844de:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
   844e2:	45a1      	cmp	r9, r4
   844e4:	f843 1b04 	str.w	r1, [r3], #4
   844e8:	ea4f 4222 	mov.w	r2, r2, asr #16
   844ec:	d2ea      	bcs.n	844c4 <quorem+0xcc>
   844ee:	f85a 2025 	ldr.w	r2, [sl, r5, lsl #2]
   844f2:	eb0a 0385 	add.w	r3, sl, r5, lsl #2
   844f6:	b982      	cbnz	r2, 8451a <quorem+0x122>
   844f8:	1f1a      	subs	r2, r3, #4
   844fa:	4592      	cmp	sl, r2
   844fc:	d20b      	bcs.n	84516 <quorem+0x11e>
   844fe:	f853 2c04 	ldr.w	r2, [r3, #-4]
   84502:	b942      	cbnz	r2, 84516 <quorem+0x11e>
   84504:	3b08      	subs	r3, #8
   84506:	e002      	b.n	8450e <quorem+0x116>
   84508:	681a      	ldr	r2, [r3, #0]
   8450a:	3b04      	subs	r3, #4
   8450c:	b91a      	cbnz	r2, 84516 <quorem+0x11e>
   8450e:	459a      	cmp	sl, r3
   84510:	f105 35ff 	add.w	r5, r5, #4294967295
   84514:	d3f8      	bcc.n	84508 <quorem+0x110>
   84516:	f8cb 5010 	str.w	r5, [fp, #16]
   8451a:	4640      	mov	r0, r8
   8451c:	b003      	add	sp, #12
   8451e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84522:	2000      	movs	r0, #0
   84524:	b003      	add	sp, #12
   84526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8452a:	bf00      	nop
   8452c:	0000      	movs	r0, r0
	...

00084530 <_dtoa_r>:
   84530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84534:	6c01      	ldr	r1, [r0, #64]	; 0x40
   84536:	b09b      	sub	sp, #108	; 0x6c
   84538:	4604      	mov	r4, r0
   8453a:	4692      	mov	sl, r2
   8453c:	469b      	mov	fp, r3
   8453e:	9d27      	ldr	r5, [sp, #156]	; 0x9c
   84540:	b141      	cbz	r1, 84554 <_dtoa_r+0x24>
   84542:	6c43      	ldr	r3, [r0, #68]	; 0x44
   84544:	2201      	movs	r2, #1
   84546:	409a      	lsls	r2, r3
   84548:	604b      	str	r3, [r1, #4]
   8454a:	608a      	str	r2, [r1, #8]
   8454c:	f001 fffe 	bl	8654c <_Bfree>
   84550:	2300      	movs	r3, #0
   84552:	6423      	str	r3, [r4, #64]	; 0x40
   84554:	f1bb 0f00 	cmp.w	fp, #0
   84558:	46d9      	mov	r9, fp
   8455a:	db33      	blt.n	845c4 <_dtoa_r+0x94>
   8455c:	2300      	movs	r3, #0
   8455e:	602b      	str	r3, [r5, #0]
   84560:	4ba5      	ldr	r3, [pc, #660]	; (847f8 <_dtoa_r+0x2c8>)
   84562:	461a      	mov	r2, r3
   84564:	ea09 0303 	and.w	r3, r9, r3
   84568:	4293      	cmp	r3, r2
   8456a:	d014      	beq.n	84596 <_dtoa_r+0x66>
   8456c:	4650      	mov	r0, sl
   8456e:	4659      	mov	r1, fp
   84570:	2200      	movs	r2, #0
   84572:	2300      	movs	r3, #0
   84574:	f7fd fbd8 	bl	81d28 <__aeabi_dcmpeq>
   84578:	4680      	mov	r8, r0
   8457a:	b348      	cbz	r0, 845d0 <_dtoa_r+0xa0>
   8457c:	9e26      	ldr	r6, [sp, #152]	; 0x98
   8457e:	9d28      	ldr	r5, [sp, #160]	; 0xa0
   84580:	2301      	movs	r3, #1
   84582:	6033      	str	r3, [r6, #0]
   84584:	2d00      	cmp	r5, #0
   84586:	f000 80ca 	beq.w	8471e <_dtoa_r+0x1ee>
   8458a:	489c      	ldr	r0, [pc, #624]	; (847fc <_dtoa_r+0x2cc>)
   8458c:	6028      	str	r0, [r5, #0]
   8458e:	3801      	subs	r0, #1
   84590:	b01b      	add	sp, #108	; 0x6c
   84592:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84596:	9d26      	ldr	r5, [sp, #152]	; 0x98
   84598:	f242 730f 	movw	r3, #9999	; 0x270f
   8459c:	602b      	str	r3, [r5, #0]
   8459e:	f1ba 0f00 	cmp.w	sl, #0
   845a2:	f000 80a5 	beq.w	846f0 <_dtoa_r+0x1c0>
   845a6:	4896      	ldr	r0, [pc, #600]	; (84800 <_dtoa_r+0x2d0>)
   845a8:	9e28      	ldr	r6, [sp, #160]	; 0xa0
   845aa:	2e00      	cmp	r6, #0
   845ac:	d0f0      	beq.n	84590 <_dtoa_r+0x60>
   845ae:	78c3      	ldrb	r3, [r0, #3]
   845b0:	2b00      	cmp	r3, #0
   845b2:	f000 80b6 	beq.w	84722 <_dtoa_r+0x1f2>
   845b6:	f100 0308 	add.w	r3, r0, #8
   845ba:	9d28      	ldr	r5, [sp, #160]	; 0xa0
   845bc:	602b      	str	r3, [r5, #0]
   845be:	b01b      	add	sp, #108	; 0x6c
   845c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   845c4:	2301      	movs	r3, #1
   845c6:	f02b 4900 	bic.w	r9, fp, #2147483648	; 0x80000000
   845ca:	602b      	str	r3, [r5, #0]
   845cc:	46cb      	mov	fp, r9
   845ce:	e7c7      	b.n	84560 <_dtoa_r+0x30>
   845d0:	aa19      	add	r2, sp, #100	; 0x64
   845d2:	ab18      	add	r3, sp, #96	; 0x60
   845d4:	e88d 000c 	stmia.w	sp, {r2, r3}
   845d8:	4620      	mov	r0, r4
   845da:	4652      	mov	r2, sl
   845dc:	465b      	mov	r3, fp
   845de:	f002 fa3b 	bl	86a58 <__d2b>
   845e2:	ea5f 5519 	movs.w	r5, r9, lsr #20
   845e6:	900a      	str	r0, [sp, #40]	; 0x28
   845e8:	f040 808b 	bne.w	84702 <_dtoa_r+0x1d2>
   845ec:	9f18      	ldr	r7, [sp, #96]	; 0x60
   845ee:	9d19      	ldr	r5, [sp, #100]	; 0x64
   845f0:	f46f 6382 	mvn.w	r3, #1040	; 0x410
   845f4:	443d      	add	r5, r7
   845f6:	429d      	cmp	r5, r3
   845f8:	f2c0 8295 	blt.w	84b26 <_dtoa_r+0x5f6>
   845fc:	331f      	adds	r3, #31
   845fe:	f205 4212 	addw	r2, r5, #1042	; 0x412
   84602:	1b5b      	subs	r3, r3, r5
   84604:	fa09 f303 	lsl.w	r3, r9, r3
   84608:	fa2a f202 	lsr.w	r2, sl, r2
   8460c:	ea43 0002 	orr.w	r0, r3, r2
   84610:	f7fd f8ac 	bl	8176c <__aeabi_ui2d>
   84614:	2601      	movs	r6, #1
   84616:	3d01      	subs	r5, #1
   84618:	46b8      	mov	r8, r7
   8461a:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   8461e:	9616      	str	r6, [sp, #88]	; 0x58
   84620:	2200      	movs	r2, #0
   84622:	4b78      	ldr	r3, [pc, #480]	; (84804 <_dtoa_r+0x2d4>)
   84624:	f7fc ff64 	bl	814f0 <__aeabi_dsub>
   84628:	a36d      	add	r3, pc, #436	; (adr r3, 847e0 <_dtoa_r+0x2b0>)
   8462a:	e9d3 2300 	ldrd	r2, r3, [r3]
   8462e:	f7fd f913 	bl	81858 <__aeabi_dmul>
   84632:	a36d      	add	r3, pc, #436	; (adr r3, 847e8 <_dtoa_r+0x2b8>)
   84634:	e9d3 2300 	ldrd	r2, r3, [r3]
   84638:	f7fc ff5c 	bl	814f4 <__adddf3>
   8463c:	4606      	mov	r6, r0
   8463e:	4628      	mov	r0, r5
   84640:	460f      	mov	r7, r1
   84642:	f7fd f8a3 	bl	8178c <__aeabi_i2d>
   84646:	a36a      	add	r3, pc, #424	; (adr r3, 847f0 <_dtoa_r+0x2c0>)
   84648:	e9d3 2300 	ldrd	r2, r3, [r3]
   8464c:	f7fd f904 	bl	81858 <__aeabi_dmul>
   84650:	4602      	mov	r2, r0
   84652:	460b      	mov	r3, r1
   84654:	4630      	mov	r0, r6
   84656:	4639      	mov	r1, r7
   84658:	f7fc ff4c 	bl	814f4 <__adddf3>
   8465c:	4606      	mov	r6, r0
   8465e:	460f      	mov	r7, r1
   84660:	f7fd fb94 	bl	81d8c <__aeabi_d2iz>
   84664:	4639      	mov	r1, r7
   84666:	9007      	str	r0, [sp, #28]
   84668:	2200      	movs	r2, #0
   8466a:	4630      	mov	r0, r6
   8466c:	2300      	movs	r3, #0
   8466e:	f7fd fb65 	bl	81d3c <__aeabi_dcmplt>
   84672:	2800      	cmp	r0, #0
   84674:	f040 8229 	bne.w	84aca <_dtoa_r+0x59a>
   84678:	9e07      	ldr	r6, [sp, #28]
   8467a:	2e16      	cmp	r6, #22
   8467c:	f200 8222 	bhi.w	84ac4 <_dtoa_r+0x594>
   84680:	4961      	ldr	r1, [pc, #388]	; (84808 <_dtoa_r+0x2d8>)
   84682:	4652      	mov	r2, sl
   84684:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
   84688:	465b      	mov	r3, fp
   8468a:	e9d1 0100 	ldrd	r0, r1, [r1]
   8468e:	f7fd fb73 	bl	81d78 <__aeabi_dcmpgt>
   84692:	2800      	cmp	r0, #0
   84694:	f000 824c 	beq.w	84b30 <_dtoa_r+0x600>
   84698:	3e01      	subs	r6, #1
   8469a:	9607      	str	r6, [sp, #28]
   8469c:	2600      	movs	r6, #0
   8469e:	960e      	str	r6, [sp, #56]	; 0x38
   846a0:	ebc5 0508 	rsb	r5, r5, r8
   846a4:	3d01      	subs	r5, #1
   846a6:	9506      	str	r5, [sp, #24]
   846a8:	f100 8226 	bmi.w	84af8 <_dtoa_r+0x5c8>
   846ac:	2500      	movs	r5, #0
   846ae:	9508      	str	r5, [sp, #32]
   846b0:	9e07      	ldr	r6, [sp, #28]
   846b2:	2e00      	cmp	r6, #0
   846b4:	f2c0 8217 	blt.w	84ae6 <_dtoa_r+0x5b6>
   846b8:	9d06      	ldr	r5, [sp, #24]
   846ba:	960d      	str	r6, [sp, #52]	; 0x34
   846bc:	4435      	add	r5, r6
   846be:	2600      	movs	r6, #0
   846c0:	9506      	str	r5, [sp, #24]
   846c2:	960c      	str	r6, [sp, #48]	; 0x30
   846c4:	9d24      	ldr	r5, [sp, #144]	; 0x90
   846c6:	2d09      	cmp	r5, #9
   846c8:	d82d      	bhi.n	84726 <_dtoa_r+0x1f6>
   846ca:	2d05      	cmp	r5, #5
   846cc:	bfc4      	itt	gt
   846ce:	3d04      	subgt	r5, #4
   846d0:	9524      	strgt	r5, [sp, #144]	; 0x90
   846d2:	9e24      	ldr	r6, [sp, #144]	; 0x90
   846d4:	bfc8      	it	gt
   846d6:	2500      	movgt	r5, #0
   846d8:	f1a6 0302 	sub.w	r3, r6, #2
   846dc:	bfd8      	it	le
   846de:	2501      	movle	r5, #1
   846e0:	2b03      	cmp	r3, #3
   846e2:	d822      	bhi.n	8472a <_dtoa_r+0x1fa>
   846e4:	e8df f013 	tbh	[pc, r3, lsl #1]
   846e8:	029e03b7 	.word	0x029e03b7
   846ec:	049a03c0 	.word	0x049a03c0
   846f0:	4a46      	ldr	r2, [pc, #280]	; (8480c <_dtoa_r+0x2dc>)
   846f2:	4b43      	ldr	r3, [pc, #268]	; (84800 <_dtoa_r+0x2d0>)
   846f4:	f3c9 0013 	ubfx	r0, r9, #0, #20
   846f8:	2800      	cmp	r0, #0
   846fa:	bf0c      	ite	eq
   846fc:	4610      	moveq	r0, r2
   846fe:	4618      	movne	r0, r3
   84700:	e752      	b.n	845a8 <_dtoa_r+0x78>
   84702:	f3cb 0313 	ubfx	r3, fp, #0, #20
   84706:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   8470a:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
   8470e:	4650      	mov	r0, sl
   84710:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   84714:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   84718:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
   8471c:	e780      	b.n	84620 <_dtoa_r+0xf0>
   8471e:	483c      	ldr	r0, [pc, #240]	; (84810 <_dtoa_r+0x2e0>)
   84720:	e736      	b.n	84590 <_dtoa_r+0x60>
   84722:	1cc3      	adds	r3, r0, #3
   84724:	e749      	b.n	845ba <_dtoa_r+0x8a>
   84726:	2500      	movs	r5, #0
   84728:	9524      	str	r5, [sp, #144]	; 0x90
   8472a:	2500      	movs	r5, #0
   8472c:	6465      	str	r5, [r4, #68]	; 0x44
   8472e:	4629      	mov	r1, r5
   84730:	4620      	mov	r0, r4
   84732:	f001 fee5 	bl	86500 <_Balloc>
   84736:	f04f 39ff 	mov.w	r9, #4294967295
   8473a:	2601      	movs	r6, #1
   8473c:	9009      	str	r0, [sp, #36]	; 0x24
   8473e:	9525      	str	r5, [sp, #148]	; 0x94
   84740:	6420      	str	r0, [r4, #64]	; 0x40
   84742:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
   84746:	960b      	str	r6, [sp, #44]	; 0x2c
   84748:	9b19      	ldr	r3, [sp, #100]	; 0x64
   8474a:	2b00      	cmp	r3, #0
   8474c:	f2c0 80d2 	blt.w	848f4 <_dtoa_r+0x3c4>
   84750:	9e07      	ldr	r6, [sp, #28]
   84752:	2e0e      	cmp	r6, #14
   84754:	f300 80ce 	bgt.w	848f4 <_dtoa_r+0x3c4>
   84758:	4b2b      	ldr	r3, [pc, #172]	; (84808 <_dtoa_r+0x2d8>)
   8475a:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
   8475e:	e9d3 0100 	ldrd	r0, r1, [r3]
   84762:	e9cd 0104 	strd	r0, r1, [sp, #16]
   84766:	9925      	ldr	r1, [sp, #148]	; 0x94
   84768:	2900      	cmp	r1, #0
   8476a:	f2c0 8380 	blt.w	84e6e <_dtoa_r+0x93e>
   8476e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   84772:	4659      	mov	r1, fp
   84774:	4650      	mov	r0, sl
   84776:	f7fd f999 	bl	81aac <__aeabi_ddiv>
   8477a:	f7fd fb07 	bl	81d8c <__aeabi_d2iz>
   8477e:	4605      	mov	r5, r0
   84780:	f7fd f804 	bl	8178c <__aeabi_i2d>
   84784:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   84788:	f7fd f866 	bl	81858 <__aeabi_dmul>
   8478c:	4602      	mov	r2, r0
   8478e:	460b      	mov	r3, r1
   84790:	4650      	mov	r0, sl
   84792:	4659      	mov	r1, fp
   84794:	f7fc feac 	bl	814f0 <__aeabi_dsub>
   84798:	9a09      	ldr	r2, [sp, #36]	; 0x24
   8479a:	f105 0330 	add.w	r3, r5, #48	; 0x30
   8479e:	f1b9 0f01 	cmp.w	r9, #1
   847a2:	4606      	mov	r6, r0
   847a4:	460f      	mov	r7, r1
   847a6:	7013      	strb	r3, [r2, #0]
   847a8:	f102 0b01 	add.w	fp, r2, #1
   847ac:	d064      	beq.n	84878 <_dtoa_r+0x348>
   847ae:	2200      	movs	r2, #0
   847b0:	4b18      	ldr	r3, [pc, #96]	; (84814 <_dtoa_r+0x2e4>)
   847b2:	f7fd f851 	bl	81858 <__aeabi_dmul>
   847b6:	2200      	movs	r2, #0
   847b8:	2300      	movs	r3, #0
   847ba:	4606      	mov	r6, r0
   847bc:	460f      	mov	r7, r1
   847be:	f7fd fab3 	bl	81d28 <__aeabi_dcmpeq>
   847c2:	2800      	cmp	r0, #0
   847c4:	f040 8081 	bne.w	848ca <_dtoa_r+0x39a>
   847c8:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   847cc:	9d09      	ldr	r5, [sp, #36]	; 0x24
   847ce:	44c8      	add	r8, r9
   847d0:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
   847d4:	f105 0902 	add.w	r9, r5, #2
   847d8:	9403      	str	r4, [sp, #12]
   847da:	e028      	b.n	8482e <_dtoa_r+0x2fe>
   847dc:	f3af 8000 	nop.w
   847e0:	636f4361 	.word	0x636f4361
   847e4:	3fd287a7 	.word	0x3fd287a7
   847e8:	8b60c8b3 	.word	0x8b60c8b3
   847ec:	3fc68a28 	.word	0x3fc68a28
   847f0:	509f79fb 	.word	0x509f79fb
   847f4:	3fd34413 	.word	0x3fd34413
   847f8:	7ff00000 	.word	0x7ff00000
   847fc:	00087b1d 	.word	0x00087b1d
   84800:	00087b5c 	.word	0x00087b5c
   84804:	3ff80000 	.word	0x3ff80000
   84808:	00087b70 	.word	0x00087b70
   8480c:	00087b50 	.word	0x00087b50
   84810:	00087b1c 	.word	0x00087b1c
   84814:	40240000 	.word	0x40240000
   84818:	f7fd f81e 	bl	81858 <__aeabi_dmul>
   8481c:	2200      	movs	r2, #0
   8481e:	2300      	movs	r3, #0
   84820:	4606      	mov	r6, r0
   84822:	460f      	mov	r7, r1
   84824:	f7fd fa80 	bl	81d28 <__aeabi_dcmpeq>
   84828:	2800      	cmp	r0, #0
   8482a:	f040 83c1 	bne.w	84fb0 <_dtoa_r+0xa80>
   8482e:	4652      	mov	r2, sl
   84830:	465b      	mov	r3, fp
   84832:	4630      	mov	r0, r6
   84834:	4639      	mov	r1, r7
   84836:	f7fd f939 	bl	81aac <__aeabi_ddiv>
   8483a:	f7fd faa7 	bl	81d8c <__aeabi_d2iz>
   8483e:	4605      	mov	r5, r0
   84840:	f7fc ffa4 	bl	8178c <__aeabi_i2d>
   84844:	4652      	mov	r2, sl
   84846:	465b      	mov	r3, fp
   84848:	f7fd f806 	bl	81858 <__aeabi_dmul>
   8484c:	4602      	mov	r2, r0
   8484e:	460b      	mov	r3, r1
   84850:	4630      	mov	r0, r6
   84852:	4639      	mov	r1, r7
   84854:	f7fc fe4c 	bl	814f0 <__aeabi_dsub>
   84858:	f105 0e30 	add.w	lr, r5, #48	; 0x30
   8485c:	45c1      	cmp	r9, r8
   8485e:	f809 ec01 	strb.w	lr, [r9, #-1]
   84862:	464c      	mov	r4, r9
   84864:	4606      	mov	r6, r0
   84866:	460f      	mov	r7, r1
   84868:	f04f 0200 	mov.w	r2, #0
   8486c:	4ba7      	ldr	r3, [pc, #668]	; (84b0c <_dtoa_r+0x5dc>)
   8486e:	f109 0901 	add.w	r9, r9, #1
   84872:	d1d1      	bne.n	84818 <_dtoa_r+0x2e8>
   84874:	46a3      	mov	fp, r4
   84876:	9c03      	ldr	r4, [sp, #12]
   84878:	4632      	mov	r2, r6
   8487a:	463b      	mov	r3, r7
   8487c:	4630      	mov	r0, r6
   8487e:	4639      	mov	r1, r7
   84880:	f7fc fe38 	bl	814f4 <__adddf3>
   84884:	4606      	mov	r6, r0
   84886:	460f      	mov	r7, r1
   84888:	4632      	mov	r2, r6
   8488a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   8488e:	463b      	mov	r3, r7
   84890:	f7fd fa54 	bl	81d3c <__aeabi_dcmplt>
   84894:	b940      	cbnz	r0, 848a8 <_dtoa_r+0x378>
   84896:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   8489a:	4632      	mov	r2, r6
   8489c:	463b      	mov	r3, r7
   8489e:	f7fd fa43 	bl	81d28 <__aeabi_dcmpeq>
   848a2:	b190      	cbz	r0, 848ca <_dtoa_r+0x39a>
   848a4:	07eb      	lsls	r3, r5, #31
   848a6:	d510      	bpl.n	848ca <_dtoa_r+0x39a>
   848a8:	f81b 5c01 	ldrb.w	r5, [fp, #-1]
   848ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
   848ae:	e005      	b.n	848bc <_dtoa_r+0x38c>
   848b0:	429a      	cmp	r2, r3
   848b2:	f000 8429 	beq.w	85108 <_dtoa_r+0xbd8>
   848b6:	f813 5c01 	ldrb.w	r5, [r3, #-1]
   848ba:	469b      	mov	fp, r3
   848bc:	2d39      	cmp	r5, #57	; 0x39
   848be:	f10b 33ff 	add.w	r3, fp, #4294967295
   848c2:	d0f5      	beq.n	848b0 <_dtoa_r+0x380>
   848c4:	1c6a      	adds	r2, r5, #1
   848c6:	b2d2      	uxtb	r2, r2
   848c8:	701a      	strb	r2, [r3, #0]
   848ca:	4620      	mov	r0, r4
   848cc:	990a      	ldr	r1, [sp, #40]	; 0x28
   848ce:	f001 fe3d 	bl	8654c <_Bfree>
   848d2:	9e07      	ldr	r6, [sp, #28]
   848d4:	9d26      	ldr	r5, [sp, #152]	; 0x98
   848d6:	1c73      	adds	r3, r6, #1
   848d8:	9e28      	ldr	r6, [sp, #160]	; 0xa0
   848da:	2200      	movs	r2, #0
   848dc:	f88b 2000 	strb.w	r2, [fp]
   848e0:	602b      	str	r3, [r5, #0]
   848e2:	2e00      	cmp	r6, #0
   848e4:	f000 8325 	beq.w	84f32 <_dtoa_r+0xa02>
   848e8:	9809      	ldr	r0, [sp, #36]	; 0x24
   848ea:	f8c6 b000 	str.w	fp, [r6]
   848ee:	b01b      	add	sp, #108	; 0x6c
   848f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   848f4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   848f6:	2d00      	cmp	r5, #0
   848f8:	f000 8103 	beq.w	84b02 <_dtoa_r+0x5d2>
   848fc:	9e24      	ldr	r6, [sp, #144]	; 0x90
   848fe:	2e01      	cmp	r6, #1
   84900:	f340 82dc 	ble.w	84ebc <_dtoa_r+0x98c>
   84904:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   84906:	f109 37ff 	add.w	r7, r9, #4294967295
   8490a:	42be      	cmp	r6, r7
   8490c:	f2c0 8389 	blt.w	85022 <_dtoa_r+0xaf2>
   84910:	1bf7      	subs	r7, r6, r7
   84912:	f1b9 0f00 	cmp.w	r9, #0
   84916:	f2c0 8487 	blt.w	85228 <_dtoa_r+0xcf8>
   8491a:	9d08      	ldr	r5, [sp, #32]
   8491c:	464b      	mov	r3, r9
   8491e:	9e08      	ldr	r6, [sp, #32]
   84920:	4620      	mov	r0, r4
   84922:	441e      	add	r6, r3
   84924:	9608      	str	r6, [sp, #32]
   84926:	9e06      	ldr	r6, [sp, #24]
   84928:	2101      	movs	r1, #1
   8492a:	441e      	add	r6, r3
   8492c:	9606      	str	r6, [sp, #24]
   8492e:	f001 feaf 	bl	86690 <__i2b>
   84932:	4606      	mov	r6, r0
   84934:	b165      	cbz	r5, 84950 <_dtoa_r+0x420>
   84936:	9806      	ldr	r0, [sp, #24]
   84938:	2800      	cmp	r0, #0
   8493a:	dd09      	ble.n	84950 <_dtoa_r+0x420>
   8493c:	4603      	mov	r3, r0
   8493e:	9908      	ldr	r1, [sp, #32]
   84940:	42ab      	cmp	r3, r5
   84942:	bfa8      	it	ge
   84944:	462b      	movge	r3, r5
   84946:	1ac9      	subs	r1, r1, r3
   84948:	1ac0      	subs	r0, r0, r3
   8494a:	9108      	str	r1, [sp, #32]
   8494c:	1aed      	subs	r5, r5, r3
   8494e:	9006      	str	r0, [sp, #24]
   84950:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   84952:	2a00      	cmp	r2, #0
   84954:	dd1d      	ble.n	84992 <_dtoa_r+0x462>
   84956:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84958:	2b00      	cmp	r3, #0
   8495a:	f000 8358 	beq.w	8500e <_dtoa_r+0xade>
   8495e:	2f00      	cmp	r7, #0
   84960:	dd11      	ble.n	84986 <_dtoa_r+0x456>
   84962:	4631      	mov	r1, r6
   84964:	463a      	mov	r2, r7
   84966:	4620      	mov	r0, r4
   84968:	f001 ff3a 	bl	867e0 <__pow5mult>
   8496c:	4606      	mov	r6, r0
   8496e:	4631      	mov	r1, r6
   84970:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84972:	4620      	mov	r0, r4
   84974:	f001 fe96 	bl	866a4 <__multiply>
   84978:	990a      	ldr	r1, [sp, #40]	; 0x28
   8497a:	4680      	mov	r8, r0
   8497c:	4620      	mov	r0, r4
   8497e:	f001 fde5 	bl	8654c <_Bfree>
   84982:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
   84986:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
   8498a:	ebbe 0207 	subs.w	r2, lr, r7
   8498e:	f040 828f 	bne.w	84eb0 <_dtoa_r+0x980>
   84992:	4620      	mov	r0, r4
   84994:	2101      	movs	r1, #1
   84996:	f001 fe7b 	bl	86690 <__i2b>
   8499a:	4680      	mov	r8, r0
   8499c:	980d      	ldr	r0, [sp, #52]	; 0x34
   8499e:	2800      	cmp	r0, #0
   849a0:	dd05      	ble.n	849ae <_dtoa_r+0x47e>
   849a2:	4641      	mov	r1, r8
   849a4:	4620      	mov	r0, r4
   849a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   849a8:	f001 ff1a 	bl	867e0 <__pow5mult>
   849ac:	4680      	mov	r8, r0
   849ae:	9924      	ldr	r1, [sp, #144]	; 0x90
   849b0:	2901      	cmp	r1, #1
   849b2:	f340 82c1 	ble.w	84f38 <_dtoa_r+0xa08>
   849b6:	2700      	movs	r7, #0
   849b8:	980d      	ldr	r0, [sp, #52]	; 0x34
   849ba:	2800      	cmp	r0, #0
   849bc:	f040 82af 	bne.w	84f1e <_dtoa_r+0x9ee>
   849c0:	2001      	movs	r0, #1
   849c2:	9b06      	ldr	r3, [sp, #24]
   849c4:	4403      	add	r3, r0
   849c6:	f013 031f 	ands.w	r3, r3, #31
   849ca:	f000 80a1 	beq.w	84b10 <_dtoa_r+0x5e0>
   849ce:	f1c3 0220 	rsb	r2, r3, #32
   849d2:	2a04      	cmp	r2, #4
   849d4:	f340 84b7 	ble.w	85346 <_dtoa_r+0xe16>
   849d8:	9908      	ldr	r1, [sp, #32]
   849da:	9a06      	ldr	r2, [sp, #24]
   849dc:	f1c3 031c 	rsb	r3, r3, #28
   849e0:	4419      	add	r1, r3
   849e2:	441a      	add	r2, r3
   849e4:	9108      	str	r1, [sp, #32]
   849e6:	441d      	add	r5, r3
   849e8:	9206      	str	r2, [sp, #24]
   849ea:	9908      	ldr	r1, [sp, #32]
   849ec:	2900      	cmp	r1, #0
   849ee:	dd05      	ble.n	849fc <_dtoa_r+0x4cc>
   849f0:	990a      	ldr	r1, [sp, #40]	; 0x28
   849f2:	9a08      	ldr	r2, [sp, #32]
   849f4:	4620      	mov	r0, r4
   849f6:	f001 ff41 	bl	8687c <__lshift>
   849fa:	900a      	str	r0, [sp, #40]	; 0x28
   849fc:	9a06      	ldr	r2, [sp, #24]
   849fe:	2a00      	cmp	r2, #0
   84a00:	dd04      	ble.n	84a0c <_dtoa_r+0x4dc>
   84a02:	4641      	mov	r1, r8
   84a04:	4620      	mov	r0, r4
   84a06:	f001 ff39 	bl	8687c <__lshift>
   84a0a:	4680      	mov	r8, r0
   84a0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84a0e:	2b00      	cmp	r3, #0
   84a10:	f040 826a 	bne.w	84ee8 <_dtoa_r+0x9b8>
   84a14:	f1b9 0f00 	cmp.w	r9, #0
   84a18:	f340 82a6 	ble.w	84f68 <_dtoa_r+0xa38>
   84a1c:	980b      	ldr	r0, [sp, #44]	; 0x2c
   84a1e:	2800      	cmp	r0, #0
   84a20:	f040 8088 	bne.w	84b34 <_dtoa_r+0x604>
   84a24:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   84a26:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   84a28:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   84a2c:	e006      	b.n	84a3c <_dtoa_r+0x50c>
   84a2e:	4639      	mov	r1, r7
   84a30:	4620      	mov	r0, r4
   84a32:	220a      	movs	r2, #10
   84a34:	2300      	movs	r3, #0
   84a36:	f001 fd93 	bl	86560 <__multadd>
   84a3a:	4607      	mov	r7, r0
   84a3c:	4638      	mov	r0, r7
   84a3e:	4641      	mov	r1, r8
   84a40:	f7ff fcda 	bl	843f8 <quorem>
   84a44:	3030      	adds	r0, #48	; 0x30
   84a46:	f80b 0005 	strb.w	r0, [fp, r5]
   84a4a:	3501      	adds	r5, #1
   84a4c:	45a9      	cmp	r9, r5
   84a4e:	dcee      	bgt.n	84a2e <_dtoa_r+0x4fe>
   84a50:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   84a54:	4682      	mov	sl, r0
   84a56:	970a      	str	r7, [sp, #40]	; 0x28
   84a58:	f1b9 0f01 	cmp.w	r9, #1
   84a5c:	bfac      	ite	ge
   84a5e:	44cb      	addge	fp, r9
   84a60:	f10b 0b01 	addlt.w	fp, fp, #1
   84a64:	2500      	movs	r5, #0
   84a66:	990a      	ldr	r1, [sp, #40]	; 0x28
   84a68:	2201      	movs	r2, #1
   84a6a:	4620      	mov	r0, r4
   84a6c:	f001 ff06 	bl	8687c <__lshift>
   84a70:	4641      	mov	r1, r8
   84a72:	900a      	str	r0, [sp, #40]	; 0x28
   84a74:	f001 ff60 	bl	86938 <__mcmp>
   84a78:	2800      	cmp	r0, #0
   84a7a:	f340 8309 	ble.w	85090 <_dtoa_r+0xb60>
   84a7e:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
   84a82:	9909      	ldr	r1, [sp, #36]	; 0x24
   84a84:	e005      	b.n	84a92 <_dtoa_r+0x562>
   84a86:	4299      	cmp	r1, r3
   84a88:	f000 828b 	beq.w	84fa2 <_dtoa_r+0xa72>
   84a8c:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   84a90:	469b      	mov	fp, r3
   84a92:	2a39      	cmp	r2, #57	; 0x39
   84a94:	f10b 33ff 	add.w	r3, fp, #4294967295
   84a98:	d0f5      	beq.n	84a86 <_dtoa_r+0x556>
   84a9a:	3201      	adds	r2, #1
   84a9c:	701a      	strb	r2, [r3, #0]
   84a9e:	4641      	mov	r1, r8
   84aa0:	4620      	mov	r0, r4
   84aa2:	f001 fd53 	bl	8654c <_Bfree>
   84aa6:	2e00      	cmp	r6, #0
   84aa8:	f43f af0f 	beq.w	848ca <_dtoa_r+0x39a>
   84aac:	b12d      	cbz	r5, 84aba <_dtoa_r+0x58a>
   84aae:	42b5      	cmp	r5, r6
   84ab0:	d003      	beq.n	84aba <_dtoa_r+0x58a>
   84ab2:	4629      	mov	r1, r5
   84ab4:	4620      	mov	r0, r4
   84ab6:	f001 fd49 	bl	8654c <_Bfree>
   84aba:	4631      	mov	r1, r6
   84abc:	4620      	mov	r0, r4
   84abe:	f001 fd45 	bl	8654c <_Bfree>
   84ac2:	e702      	b.n	848ca <_dtoa_r+0x39a>
   84ac4:	2601      	movs	r6, #1
   84ac6:	960e      	str	r6, [sp, #56]	; 0x38
   84ac8:	e5ea      	b.n	846a0 <_dtoa_r+0x170>
   84aca:	9807      	ldr	r0, [sp, #28]
   84acc:	f7fc fe5e 	bl	8178c <__aeabi_i2d>
   84ad0:	4632      	mov	r2, r6
   84ad2:	463b      	mov	r3, r7
   84ad4:	f7fd f928 	bl	81d28 <__aeabi_dcmpeq>
   84ad8:	2800      	cmp	r0, #0
   84ada:	f47f adcd 	bne.w	84678 <_dtoa_r+0x148>
   84ade:	9e07      	ldr	r6, [sp, #28]
   84ae0:	3e01      	subs	r6, #1
   84ae2:	9607      	str	r6, [sp, #28]
   84ae4:	e5c8      	b.n	84678 <_dtoa_r+0x148>
   84ae6:	9e07      	ldr	r6, [sp, #28]
   84ae8:	9d08      	ldr	r5, [sp, #32]
   84aea:	1bad      	subs	r5, r5, r6
   84aec:	9508      	str	r5, [sp, #32]
   84aee:	4275      	negs	r5, r6
   84af0:	2600      	movs	r6, #0
   84af2:	950c      	str	r5, [sp, #48]	; 0x30
   84af4:	960d      	str	r6, [sp, #52]	; 0x34
   84af6:	e5e5      	b.n	846c4 <_dtoa_r+0x194>
   84af8:	426d      	negs	r5, r5
   84afa:	2600      	movs	r6, #0
   84afc:	9508      	str	r5, [sp, #32]
   84afe:	9606      	str	r6, [sp, #24]
   84b00:	e5d6      	b.n	846b0 <_dtoa_r+0x180>
   84b02:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   84b04:	9d08      	ldr	r5, [sp, #32]
   84b06:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
   84b08:	e714      	b.n	84934 <_dtoa_r+0x404>
   84b0a:	bf00      	nop
   84b0c:	40240000 	.word	0x40240000
   84b10:	231c      	movs	r3, #28
   84b12:	f8dd e020 	ldr.w	lr, [sp, #32]
   84b16:	9806      	ldr	r0, [sp, #24]
   84b18:	449e      	add	lr, r3
   84b1a:	4418      	add	r0, r3
   84b1c:	f8cd e020 	str.w	lr, [sp, #32]
   84b20:	441d      	add	r5, r3
   84b22:	9006      	str	r0, [sp, #24]
   84b24:	e761      	b.n	849ea <_dtoa_r+0x4ba>
   84b26:	48a7      	ldr	r0, [pc, #668]	; (84dc4 <_dtoa_r+0x894>)
   84b28:	1b40      	subs	r0, r0, r5
   84b2a:	fa0a f000 	lsl.w	r0, sl, r0
   84b2e:	e56f      	b.n	84610 <_dtoa_r+0xe0>
   84b30:	900e      	str	r0, [sp, #56]	; 0x38
   84b32:	e5b5      	b.n	846a0 <_dtoa_r+0x170>
   84b34:	2d00      	cmp	r5, #0
   84b36:	dd05      	ble.n	84b44 <_dtoa_r+0x614>
   84b38:	4631      	mov	r1, r6
   84b3a:	462a      	mov	r2, r5
   84b3c:	4620      	mov	r0, r4
   84b3e:	f001 fe9d 	bl	8687c <__lshift>
   84b42:	4606      	mov	r6, r0
   84b44:	2f00      	cmp	r7, #0
   84b46:	f040 82e9 	bne.w	8511c <_dtoa_r+0xbec>
   84b4a:	4637      	mov	r7, r6
   84b4c:	9d09      	ldr	r5, [sp, #36]	; 0x24
   84b4e:	9809      	ldr	r0, [sp, #36]	; 0x24
   84b50:	444d      	add	r5, r9
   84b52:	9508      	str	r5, [sp, #32]
   84b54:	f00a 0501 	and.w	r5, sl, #1
   84b58:	950b      	str	r5, [sp, #44]	; 0x2c
   84b5a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   84b5e:	1c45      	adds	r5, r0, #1
   84b60:	e00a      	b.n	84b78 <_dtoa_r+0x648>
   84b62:	f001 fcfd 	bl	86560 <__multadd>
   84b66:	4639      	mov	r1, r7
   84b68:	4606      	mov	r6, r0
   84b6a:	220a      	movs	r2, #10
   84b6c:	4620      	mov	r0, r4
   84b6e:	2300      	movs	r3, #0
   84b70:	f001 fcf6 	bl	86560 <__multadd>
   84b74:	4607      	mov	r7, r0
   84b76:	3501      	adds	r5, #1
   84b78:	4641      	mov	r1, r8
   84b7a:	4648      	mov	r0, r9
   84b7c:	f7ff fc3c 	bl	843f8 <quorem>
   84b80:	4631      	mov	r1, r6
   84b82:	4683      	mov	fp, r0
   84b84:	4648      	mov	r0, r9
   84b86:	f001 fed7 	bl	86938 <__mcmp>
   84b8a:	4641      	mov	r1, r8
   84b8c:	9003      	str	r0, [sp, #12]
   84b8e:	463a      	mov	r2, r7
   84b90:	4620      	mov	r0, r4
   84b92:	f001 fef5 	bl	86980 <__mdiff>
   84b96:	68c2      	ldr	r2, [r0, #12]
   84b98:	1e69      	subs	r1, r5, #1
   84b9a:	4603      	mov	r3, r0
   84b9c:	f10b 0a30 	add.w	sl, fp, #48	; 0x30
   84ba0:	9106      	str	r1, [sp, #24]
   84ba2:	2a00      	cmp	r2, #0
   84ba4:	f040 8193 	bne.w	84ece <_dtoa_r+0x99e>
   84ba8:	4619      	mov	r1, r3
   84baa:	4648      	mov	r0, r9
   84bac:	9302      	str	r3, [sp, #8]
   84bae:	f001 fec3 	bl	86938 <__mcmp>
   84bb2:	9b02      	ldr	r3, [sp, #8]
   84bb4:	4602      	mov	r2, r0
   84bb6:	4619      	mov	r1, r3
   84bb8:	4620      	mov	r0, r4
   84bba:	9202      	str	r2, [sp, #8]
   84bbc:	f001 fcc6 	bl	8654c <_Bfree>
   84bc0:	9a02      	ldr	r2, [sp, #8]
   84bc2:	b92a      	cbnz	r2, 84bd0 <_dtoa_r+0x6a0>
   84bc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
   84bc6:	b91b      	cbnz	r3, 84bd0 <_dtoa_r+0x6a0>
   84bc8:	980b      	ldr	r0, [sp, #44]	; 0x2c
   84bca:	2800      	cmp	r0, #0
   84bcc:	f000 8393 	beq.w	852f6 <_dtoa_r+0xdc6>
   84bd0:	9b03      	ldr	r3, [sp, #12]
   84bd2:	2b00      	cmp	r3, #0
   84bd4:	f2c0 8234 	blt.w	85040 <_dtoa_r+0xb10>
   84bd8:	d105      	bne.n	84be6 <_dtoa_r+0x6b6>
   84bda:	9824      	ldr	r0, [sp, #144]	; 0x90
   84bdc:	b918      	cbnz	r0, 84be6 <_dtoa_r+0x6b6>
   84bde:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84be0:	2900      	cmp	r1, #0
   84be2:	f000 822d 	beq.w	85040 <_dtoa_r+0xb10>
   84be6:	2a00      	cmp	r2, #0
   84be8:	f300 82ac 	bgt.w	85144 <_dtoa_r+0xc14>
   84bec:	f8dd e020 	ldr.w	lr, [sp, #32]
   84bf0:	f805 ac01 	strb.w	sl, [r5, #-1]
   84bf4:	4575      	cmp	r5, lr
   84bf6:	46ab      	mov	fp, r5
   84bf8:	f000 82b4 	beq.w	85164 <_dtoa_r+0xc34>
   84bfc:	4649      	mov	r1, r9
   84bfe:	220a      	movs	r2, #10
   84c00:	2300      	movs	r3, #0
   84c02:	4620      	mov	r0, r4
   84c04:	f001 fcac 	bl	86560 <__multadd>
   84c08:	42be      	cmp	r6, r7
   84c0a:	4681      	mov	r9, r0
   84c0c:	4631      	mov	r1, r6
   84c0e:	4620      	mov	r0, r4
   84c10:	f04f 020a 	mov.w	r2, #10
   84c14:	f04f 0300 	mov.w	r3, #0
   84c18:	d1a3      	bne.n	84b62 <_dtoa_r+0x632>
   84c1a:	f001 fca1 	bl	86560 <__multadd>
   84c1e:	4606      	mov	r6, r0
   84c20:	4607      	mov	r7, r0
   84c22:	e7a8      	b.n	84b76 <_dtoa_r+0x646>
   84c24:	2600      	movs	r6, #0
   84c26:	960b      	str	r6, [sp, #44]	; 0x2c
   84c28:	9e07      	ldr	r6, [sp, #28]
   84c2a:	f8dd e094 	ldr.w	lr, [sp, #148]	; 0x94
   84c2e:	44b6      	add	lr, r6
   84c30:	f10e 0901 	add.w	r9, lr, #1
   84c34:	f1b9 0f00 	cmp.w	r9, #0
   84c38:	f8cd e03c 	str.w	lr, [sp, #60]	; 0x3c
   84c3c:	464e      	mov	r6, r9
   84c3e:	f340 8150 	ble.w	84ee2 <_dtoa_r+0x9b2>
   84c42:	2100      	movs	r1, #0
   84c44:	2e17      	cmp	r6, #23
   84c46:	6461      	str	r1, [r4, #68]	; 0x44
   84c48:	d90a      	bls.n	84c60 <_dtoa_r+0x730>
   84c4a:	2201      	movs	r2, #1
   84c4c:	2304      	movs	r3, #4
   84c4e:	005b      	lsls	r3, r3, #1
   84c50:	f103 0014 	add.w	r0, r3, #20
   84c54:	42b0      	cmp	r0, r6
   84c56:	4611      	mov	r1, r2
   84c58:	f102 0201 	add.w	r2, r2, #1
   84c5c:	d9f7      	bls.n	84c4e <_dtoa_r+0x71e>
   84c5e:	6461      	str	r1, [r4, #68]	; 0x44
   84c60:	4620      	mov	r0, r4
   84c62:	f001 fc4d 	bl	86500 <_Balloc>
   84c66:	2e0e      	cmp	r6, #14
   84c68:	9009      	str	r0, [sp, #36]	; 0x24
   84c6a:	6420      	str	r0, [r4, #64]	; 0x40
   84c6c:	f63f ad6c 	bhi.w	84748 <_dtoa_r+0x218>
   84c70:	2d00      	cmp	r5, #0
   84c72:	f43f ad69 	beq.w	84748 <_dtoa_r+0x218>
   84c76:	9d07      	ldr	r5, [sp, #28]
   84c78:	e9cd ab12 	strd	sl, fp, [sp, #72]	; 0x48
   84c7c:	2d00      	cmp	r5, #0
   84c7e:	f340 821c 	ble.w	850ba <_dtoa_r+0xb8a>
   84c82:	4b51      	ldr	r3, [pc, #324]	; (84dc8 <_dtoa_r+0x898>)
   84c84:	f005 020f 	and.w	r2, r5, #15
   84c88:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   84c8c:	112d      	asrs	r5, r5, #4
   84c8e:	e9d3 6700 	ldrd	r6, r7, [r3]
   84c92:	06eb      	lsls	r3, r5, #27
   84c94:	f140 81cd 	bpl.w	85032 <_dtoa_r+0xb02>
   84c98:	4b4c      	ldr	r3, [pc, #304]	; (84dcc <_dtoa_r+0x89c>)
   84c9a:	4650      	mov	r0, sl
   84c9c:	4659      	mov	r1, fp
   84c9e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   84ca2:	f7fc ff03 	bl	81aac <__aeabi_ddiv>
   84ca6:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   84caa:	f005 050f 	and.w	r5, r5, #15
   84cae:	f04f 0803 	mov.w	r8, #3
   84cb2:	b18d      	cbz	r5, 84cd8 <_dtoa_r+0x7a8>
   84cb4:	f8df a114 	ldr.w	sl, [pc, #276]	; 84dcc <_dtoa_r+0x89c>
   84cb8:	4630      	mov	r0, r6
   84cba:	4639      	mov	r1, r7
   84cbc:	07ee      	lsls	r6, r5, #31
   84cbe:	d505      	bpl.n	84ccc <_dtoa_r+0x79c>
   84cc0:	e9da 2300 	ldrd	r2, r3, [sl]
   84cc4:	f108 0801 	add.w	r8, r8, #1
   84cc8:	f7fc fdc6 	bl	81858 <__aeabi_dmul>
   84ccc:	106d      	asrs	r5, r5, #1
   84cce:	f10a 0a08 	add.w	sl, sl, #8
   84cd2:	d1f3      	bne.n	84cbc <_dtoa_r+0x78c>
   84cd4:	4606      	mov	r6, r0
   84cd6:	460f      	mov	r7, r1
   84cd8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   84cdc:	4632      	mov	r2, r6
   84cde:	463b      	mov	r3, r7
   84ce0:	f7fc fee4 	bl	81aac <__aeabi_ddiv>
   84ce4:	4682      	mov	sl, r0
   84ce6:	468b      	mov	fp, r1
   84ce8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   84cea:	b145      	cbz	r5, 84cfe <_dtoa_r+0x7ce>
   84cec:	4650      	mov	r0, sl
   84cee:	4659      	mov	r1, fp
   84cf0:	2200      	movs	r2, #0
   84cf2:	4b37      	ldr	r3, [pc, #220]	; (84dd0 <_dtoa_r+0x8a0>)
   84cf4:	f7fd f822 	bl	81d3c <__aeabi_dcmplt>
   84cf8:	2800      	cmp	r0, #0
   84cfa:	f040 82aa 	bne.w	85252 <_dtoa_r+0xd22>
   84cfe:	4640      	mov	r0, r8
   84d00:	f7fc fd44 	bl	8178c <__aeabi_i2d>
   84d04:	4652      	mov	r2, sl
   84d06:	465b      	mov	r3, fp
   84d08:	f7fc fda6 	bl	81858 <__aeabi_dmul>
   84d0c:	2200      	movs	r2, #0
   84d0e:	4b31      	ldr	r3, [pc, #196]	; (84dd4 <_dtoa_r+0x8a4>)
   84d10:	f7fc fbf0 	bl	814f4 <__adddf3>
   84d14:	4606      	mov	r6, r0
   84d16:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   84d1a:	f1b9 0f00 	cmp.w	r9, #0
   84d1e:	f000 815a 	beq.w	84fd6 <_dtoa_r+0xaa6>
   84d22:	9d07      	ldr	r5, [sp, #28]
   84d24:	46c8      	mov	r8, r9
   84d26:	9517      	str	r5, [sp, #92]	; 0x5c
   84d28:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   84d2a:	2d00      	cmp	r5, #0
   84d2c:	f000 8223 	beq.w	85176 <_dtoa_r+0xc46>
   84d30:	4b25      	ldr	r3, [pc, #148]	; (84dc8 <_dtoa_r+0x898>)
   84d32:	2000      	movs	r0, #0
   84d34:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
   84d38:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   84d3c:	4926      	ldr	r1, [pc, #152]	; (84dd8 <_dtoa_r+0x8a8>)
   84d3e:	f7fc feb5 	bl	81aac <__aeabi_ddiv>
   84d42:	4632      	mov	r2, r6
   84d44:	463b      	mov	r3, r7
   84d46:	f7fc fbd3 	bl	814f0 <__aeabi_dsub>
   84d4a:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   84d4e:	4659      	mov	r1, fp
   84d50:	4650      	mov	r0, sl
   84d52:	f7fd f81b 	bl	81d8c <__aeabi_d2iz>
   84d56:	4605      	mov	r5, r0
   84d58:	f7fc fd18 	bl	8178c <__aeabi_i2d>
   84d5c:	4602      	mov	r2, r0
   84d5e:	460b      	mov	r3, r1
   84d60:	4650      	mov	r0, sl
   84d62:	4659      	mov	r1, fp
   84d64:	f7fc fbc4 	bl	814f0 <__aeabi_dsub>
   84d68:	3530      	adds	r5, #48	; 0x30
   84d6a:	9e09      	ldr	r6, [sp, #36]	; 0x24
   84d6c:	e9cd 0104 	strd	r0, r1, [sp, #16]
   84d70:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   84d74:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   84d78:	b2ed      	uxtb	r5, r5
   84d7a:	7035      	strb	r5, [r6, #0]
   84d7c:	f106 0b01 	add.w	fp, r6, #1
   84d80:	f7fc fffa 	bl	81d78 <__aeabi_dcmpgt>
   84d84:	2800      	cmp	r0, #0
   84d86:	f040 82ab 	bne.w	852e0 <_dtoa_r+0xdb0>
   84d8a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   84d8e:	2000      	movs	r0, #0
   84d90:	490f      	ldr	r1, [pc, #60]	; (84dd0 <_dtoa_r+0x8a0>)
   84d92:	f7fc fbad 	bl	814f0 <__aeabi_dsub>
   84d96:	4602      	mov	r2, r0
   84d98:	460b      	mov	r3, r1
   84d9a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   84d9e:	f7fc ffeb 	bl	81d78 <__aeabi_dcmpgt>
   84da2:	2800      	cmp	r0, #0
   84da4:	f040 82a2 	bne.w	852ec <_dtoa_r+0xdbc>
   84da8:	f1b8 0f01 	cmp.w	r8, #1
   84dac:	f340 8181 	ble.w	850b2 <_dtoa_r+0xb82>
   84db0:	44b0      	add	r8, r6
   84db2:	f8cd 9050 	str.w	r9, [sp, #80]	; 0x50
   84db6:	46a2      	mov	sl, r4
   84db8:	46c1      	mov	r9, r8
   84dba:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   84dbe:	e9dd 4510 	ldrd	r4, r5, [sp, #64]	; 0x40
   84dc2:	e019      	b.n	84df8 <_dtoa_r+0x8c8>
   84dc4:	fffffbee 	.word	0xfffffbee
   84dc8:	00087b70 	.word	0x00087b70
   84dcc:	00087c38 	.word	0x00087c38
   84dd0:	3ff00000 	.word	0x3ff00000
   84dd4:	401c0000 	.word	0x401c0000
   84dd8:	3fe00000 	.word	0x3fe00000
   84ddc:	2000      	movs	r0, #0
   84dde:	49a8      	ldr	r1, [pc, #672]	; (85080 <_dtoa_r+0xb50>)
   84de0:	f7fc fb86 	bl	814f0 <__aeabi_dsub>
   84de4:	4622      	mov	r2, r4
   84de6:	462b      	mov	r3, r5
   84de8:	f7fc ffa8 	bl	81d3c <__aeabi_dcmplt>
   84dec:	2800      	cmp	r0, #0
   84dee:	f040 827b 	bne.w	852e8 <_dtoa_r+0xdb8>
   84df2:	45cb      	cmp	fp, r9
   84df4:	f000 815a 	beq.w	850ac <_dtoa_r+0xb7c>
   84df8:	4620      	mov	r0, r4
   84dfa:	4629      	mov	r1, r5
   84dfc:	2200      	movs	r2, #0
   84dfe:	4ba1      	ldr	r3, [pc, #644]	; (85084 <_dtoa_r+0xb54>)
   84e00:	f7fc fd2a 	bl	81858 <__aeabi_dmul>
   84e04:	2200      	movs	r2, #0
   84e06:	4b9f      	ldr	r3, [pc, #636]	; (85084 <_dtoa_r+0xb54>)
   84e08:	4604      	mov	r4, r0
   84e0a:	460d      	mov	r5, r1
   84e0c:	4630      	mov	r0, r6
   84e0e:	4639      	mov	r1, r7
   84e10:	f7fc fd22 	bl	81858 <__aeabi_dmul>
   84e14:	460f      	mov	r7, r1
   84e16:	4606      	mov	r6, r0
   84e18:	f7fc ffb8 	bl	81d8c <__aeabi_d2iz>
   84e1c:	4680      	mov	r8, r0
   84e1e:	f7fc fcb5 	bl	8178c <__aeabi_i2d>
   84e22:	4602      	mov	r2, r0
   84e24:	460b      	mov	r3, r1
   84e26:	4630      	mov	r0, r6
   84e28:	4639      	mov	r1, r7
   84e2a:	f7fc fb61 	bl	814f0 <__aeabi_dsub>
   84e2e:	f108 0830 	add.w	r8, r8, #48	; 0x30
   84e32:	fa5f f888 	uxtb.w	r8, r8
   84e36:	4622      	mov	r2, r4
   84e38:	462b      	mov	r3, r5
   84e3a:	f80b 8b01 	strb.w	r8, [fp], #1
   84e3e:	4606      	mov	r6, r0
   84e40:	460f      	mov	r7, r1
   84e42:	f7fc ff7b 	bl	81d3c <__aeabi_dcmplt>
   84e46:	4632      	mov	r2, r6
   84e48:	463b      	mov	r3, r7
   84e4a:	2800      	cmp	r0, #0
   84e4c:	d0c6      	beq.n	84ddc <_dtoa_r+0x8ac>
   84e4e:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   84e50:	4654      	mov	r4, sl
   84e52:	9607      	str	r6, [sp, #28]
   84e54:	e539      	b.n	848ca <_dtoa_r+0x39a>
   84e56:	2600      	movs	r6, #0
   84e58:	960b      	str	r6, [sp, #44]	; 0x2c
   84e5a:	9825      	ldr	r0, [sp, #148]	; 0x94
   84e5c:	2800      	cmp	r0, #0
   84e5e:	dd3c      	ble.n	84eda <_dtoa_r+0x9aa>
   84e60:	4606      	mov	r6, r0
   84e62:	900f      	str	r0, [sp, #60]	; 0x3c
   84e64:	4681      	mov	r9, r0
   84e66:	e6ec      	b.n	84c42 <_dtoa_r+0x712>
   84e68:	2601      	movs	r6, #1
   84e6a:	960b      	str	r6, [sp, #44]	; 0x2c
   84e6c:	e7f5      	b.n	84e5a <_dtoa_r+0x92a>
   84e6e:	f1b9 0f00 	cmp.w	r9, #0
   84e72:	f73f ac7c 	bgt.w	8476e <_dtoa_r+0x23e>
   84e76:	f040 80c6 	bne.w	85006 <_dtoa_r+0xad6>
   84e7a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   84e7e:	2200      	movs	r2, #0
   84e80:	4b81      	ldr	r3, [pc, #516]	; (85088 <_dtoa_r+0xb58>)
   84e82:	f7fc fce9 	bl	81858 <__aeabi_dmul>
   84e86:	4652      	mov	r2, sl
   84e88:	465b      	mov	r3, fp
   84e8a:	f7fc ff6b 	bl	81d64 <__aeabi_dcmpge>
   84e8e:	46c8      	mov	r8, r9
   84e90:	464e      	mov	r6, r9
   84e92:	2800      	cmp	r0, #0
   84e94:	d07c      	beq.n	84f90 <_dtoa_r+0xa60>
   84e96:	9d25      	ldr	r5, [sp, #148]	; 0x94
   84e98:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   84e9c:	43ed      	mvns	r5, r5
   84e9e:	9507      	str	r5, [sp, #28]
   84ea0:	4641      	mov	r1, r8
   84ea2:	4620      	mov	r0, r4
   84ea4:	f001 fb52 	bl	8654c <_Bfree>
   84ea8:	2e00      	cmp	r6, #0
   84eaa:	f47f ae06 	bne.w	84aba <_dtoa_r+0x58a>
   84eae:	e50c      	b.n	848ca <_dtoa_r+0x39a>
   84eb0:	990a      	ldr	r1, [sp, #40]	; 0x28
   84eb2:	4620      	mov	r0, r4
   84eb4:	f001 fc94 	bl	867e0 <__pow5mult>
   84eb8:	900a      	str	r0, [sp, #40]	; 0x28
   84eba:	e56a      	b.n	84992 <_dtoa_r+0x462>
   84ebc:	9d16      	ldr	r5, [sp, #88]	; 0x58
   84ebe:	2d00      	cmp	r5, #0
   84ec0:	f000 81b8 	beq.w	85234 <_dtoa_r+0xd04>
   84ec4:	f203 4333 	addw	r3, r3, #1075	; 0x433
   84ec8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   84eca:	9d08      	ldr	r5, [sp, #32]
   84ecc:	e527      	b.n	8491e <_dtoa_r+0x3ee>
   84ece:	4601      	mov	r1, r0
   84ed0:	4620      	mov	r0, r4
   84ed2:	f001 fb3b 	bl	8654c <_Bfree>
   84ed6:	2201      	movs	r2, #1
   84ed8:	e67a      	b.n	84bd0 <_dtoa_r+0x6a0>
   84eda:	2601      	movs	r6, #1
   84edc:	9625      	str	r6, [sp, #148]	; 0x94
   84ede:	960f      	str	r6, [sp, #60]	; 0x3c
   84ee0:	46b1      	mov	r9, r6
   84ee2:	2100      	movs	r1, #0
   84ee4:	6461      	str	r1, [r4, #68]	; 0x44
   84ee6:	e6bb      	b.n	84c60 <_dtoa_r+0x730>
   84ee8:	980a      	ldr	r0, [sp, #40]	; 0x28
   84eea:	4641      	mov	r1, r8
   84eec:	f001 fd24 	bl	86938 <__mcmp>
   84ef0:	2800      	cmp	r0, #0
   84ef2:	f6bf ad8f 	bge.w	84a14 <_dtoa_r+0x4e4>
   84ef6:	f8dd e01c 	ldr.w	lr, [sp, #28]
   84efa:	990a      	ldr	r1, [sp, #40]	; 0x28
   84efc:	f10e 3eff 	add.w	lr, lr, #4294967295
   84f00:	4620      	mov	r0, r4
   84f02:	220a      	movs	r2, #10
   84f04:	2300      	movs	r3, #0
   84f06:	f8cd e01c 	str.w	lr, [sp, #28]
   84f0a:	f001 fb29 	bl	86560 <__multadd>
   84f0e:	900a      	str	r0, [sp, #40]	; 0x28
   84f10:	980b      	ldr	r0, [sp, #44]	; 0x2c
   84f12:	2800      	cmp	r0, #0
   84f14:	f040 8209 	bne.w	8532a <_dtoa_r+0xdfa>
   84f18:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
   84f1c:	e57a      	b.n	84a14 <_dtoa_r+0x4e4>
   84f1e:	f8d8 3010 	ldr.w	r3, [r8, #16]
   84f22:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   84f26:	6918      	ldr	r0, [r3, #16]
   84f28:	f001 fb64 	bl	865f4 <__hi0bits>
   84f2c:	f1c0 0020 	rsb	r0, r0, #32
   84f30:	e547      	b.n	849c2 <_dtoa_r+0x492>
   84f32:	9809      	ldr	r0, [sp, #36]	; 0x24
   84f34:	f7ff bb2c 	b.w	84590 <_dtoa_r+0x60>
   84f38:	f1ba 0f00 	cmp.w	sl, #0
   84f3c:	f47f ad3b 	bne.w	849b6 <_dtoa_r+0x486>
   84f40:	f3cb 0313 	ubfx	r3, fp, #0, #20
   84f44:	2b00      	cmp	r3, #0
   84f46:	f040 817c 	bne.w	85242 <_dtoa_r+0xd12>
   84f4a:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   84f4e:	0d3f      	lsrs	r7, r7, #20
   84f50:	053f      	lsls	r7, r7, #20
   84f52:	2f00      	cmp	r7, #0
   84f54:	f43f ad30 	beq.w	849b8 <_dtoa_r+0x488>
   84f58:	9a08      	ldr	r2, [sp, #32]
   84f5a:	9b06      	ldr	r3, [sp, #24]
   84f5c:	3201      	adds	r2, #1
   84f5e:	3301      	adds	r3, #1
   84f60:	9208      	str	r2, [sp, #32]
   84f62:	9306      	str	r3, [sp, #24]
   84f64:	2701      	movs	r7, #1
   84f66:	e527      	b.n	849b8 <_dtoa_r+0x488>
   84f68:	9924      	ldr	r1, [sp, #144]	; 0x90
   84f6a:	2902      	cmp	r1, #2
   84f6c:	f77f ad56 	ble.w	84a1c <_dtoa_r+0x4ec>
   84f70:	f1b9 0f00 	cmp.w	r9, #0
   84f74:	d18f      	bne.n	84e96 <_dtoa_r+0x966>
   84f76:	4641      	mov	r1, r8
   84f78:	464b      	mov	r3, r9
   84f7a:	2205      	movs	r2, #5
   84f7c:	4620      	mov	r0, r4
   84f7e:	f001 faef 	bl	86560 <__multadd>
   84f82:	4680      	mov	r8, r0
   84f84:	4641      	mov	r1, r8
   84f86:	980a      	ldr	r0, [sp, #40]	; 0x28
   84f88:	f001 fcd6 	bl	86938 <__mcmp>
   84f8c:	2800      	cmp	r0, #0
   84f8e:	dd82      	ble.n	84e96 <_dtoa_r+0x966>
   84f90:	9d07      	ldr	r5, [sp, #28]
   84f92:	2331      	movs	r3, #49	; 0x31
   84f94:	3501      	adds	r5, #1
   84f96:	9507      	str	r5, [sp, #28]
   84f98:	9d09      	ldr	r5, [sp, #36]	; 0x24
   84f9a:	702b      	strb	r3, [r5, #0]
   84f9c:	f105 0b01 	add.w	fp, r5, #1
   84fa0:	e77e      	b.n	84ea0 <_dtoa_r+0x970>
   84fa2:	9807      	ldr	r0, [sp, #28]
   84fa4:	9909      	ldr	r1, [sp, #36]	; 0x24
   84fa6:	2331      	movs	r3, #49	; 0x31
   84fa8:	3001      	adds	r0, #1
   84faa:	9007      	str	r0, [sp, #28]
   84fac:	700b      	strb	r3, [r1, #0]
   84fae:	e576      	b.n	84a9e <_dtoa_r+0x56e>
   84fb0:	46a3      	mov	fp, r4
   84fb2:	9c03      	ldr	r4, [sp, #12]
   84fb4:	e489      	b.n	848ca <_dtoa_r+0x39a>
   84fb6:	4640      	mov	r0, r8
   84fb8:	f7fc fbe8 	bl	8178c <__aeabi_i2d>
   84fbc:	4602      	mov	r2, r0
   84fbe:	460b      	mov	r3, r1
   84fc0:	4650      	mov	r0, sl
   84fc2:	4659      	mov	r1, fp
   84fc4:	f7fc fc48 	bl	81858 <__aeabi_dmul>
   84fc8:	2200      	movs	r2, #0
   84fca:	4b30      	ldr	r3, [pc, #192]	; (8508c <_dtoa_r+0xb5c>)
   84fcc:	f7fc fa92 	bl	814f4 <__adddf3>
   84fd0:	4606      	mov	r6, r0
   84fd2:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   84fd6:	4650      	mov	r0, sl
   84fd8:	4659      	mov	r1, fp
   84fda:	2200      	movs	r2, #0
   84fdc:	4b2a      	ldr	r3, [pc, #168]	; (85088 <_dtoa_r+0xb58>)
   84fde:	f7fc fa87 	bl	814f0 <__aeabi_dsub>
   84fe2:	4632      	mov	r2, r6
   84fe4:	463b      	mov	r3, r7
   84fe6:	4682      	mov	sl, r0
   84fe8:	468b      	mov	fp, r1
   84fea:	f7fc fec5 	bl	81d78 <__aeabi_dcmpgt>
   84fee:	2800      	cmp	r0, #0
   84ff0:	f040 80bd 	bne.w	8516e <_dtoa_r+0xc3e>
   84ff4:	4632      	mov	r2, r6
   84ff6:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
   84ffa:	4650      	mov	r0, sl
   84ffc:	4659      	mov	r1, fp
   84ffe:	f7fc fe9d 	bl	81d3c <__aeabi_dcmplt>
   85002:	2800      	cmp	r0, #0
   85004:	d055      	beq.n	850b2 <_dtoa_r+0xb82>
   85006:	f04f 0800 	mov.w	r8, #0
   8500a:	4646      	mov	r6, r8
   8500c:	e743      	b.n	84e96 <_dtoa_r+0x966>
   8500e:	990a      	ldr	r1, [sp, #40]	; 0x28
   85010:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   85012:	4620      	mov	r0, r4
   85014:	f001 fbe4 	bl	867e0 <__pow5mult>
   85018:	900a      	str	r0, [sp, #40]	; 0x28
   8501a:	e4ba      	b.n	84992 <_dtoa_r+0x462>
   8501c:	2601      	movs	r6, #1
   8501e:	960b      	str	r6, [sp, #44]	; 0x2c
   85020:	e602      	b.n	84c28 <_dtoa_r+0x6f8>
   85022:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   85024:	9e0d      	ldr	r6, [sp, #52]	; 0x34
   85026:	1b7b      	subs	r3, r7, r5
   85028:	441e      	add	r6, r3
   8502a:	970c      	str	r7, [sp, #48]	; 0x30
   8502c:	960d      	str	r6, [sp, #52]	; 0x34
   8502e:	2700      	movs	r7, #0
   85030:	e46f      	b.n	84912 <_dtoa_r+0x3e2>
   85032:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   85036:	f04f 0802 	mov.w	r8, #2
   8503a:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   8503e:	e638      	b.n	84cb2 <_dtoa_r+0x782>
   85040:	2a00      	cmp	r2, #0
   85042:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   85046:	46d9      	mov	r9, fp
   85048:	dd11      	ble.n	8506e <_dtoa_r+0xb3e>
   8504a:	990a      	ldr	r1, [sp, #40]	; 0x28
   8504c:	2201      	movs	r2, #1
   8504e:	4620      	mov	r0, r4
   85050:	f001 fc14 	bl	8687c <__lshift>
   85054:	4641      	mov	r1, r8
   85056:	900a      	str	r0, [sp, #40]	; 0x28
   85058:	f001 fc6e 	bl	86938 <__mcmp>
   8505c:	2800      	cmp	r0, #0
   8505e:	f340 815d 	ble.w	8531c <_dtoa_r+0xdec>
   85062:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   85066:	f000 811b 	beq.w	852a0 <_dtoa_r+0xd70>
   8506a:	f109 0a31 	add.w	sl, r9, #49	; 0x31
   8506e:	9b06      	ldr	r3, [sp, #24]
   85070:	4635      	mov	r5, r6
   85072:	f883 a000 	strb.w	sl, [r3]
   85076:	f103 0b01 	add.w	fp, r3, #1
   8507a:	463e      	mov	r6, r7
   8507c:	e50f      	b.n	84a9e <_dtoa_r+0x56e>
   8507e:	bf00      	nop
   85080:	3ff00000 	.word	0x3ff00000
   85084:	40240000 	.word	0x40240000
   85088:	40140000 	.word	0x40140000
   8508c:	401c0000 	.word	0x401c0000
   85090:	d103      	bne.n	8509a <_dtoa_r+0xb6a>
   85092:	f01a 0f01 	tst.w	sl, #1
   85096:	f47f acf2 	bne.w	84a7e <_dtoa_r+0x54e>
   8509a:	465b      	mov	r3, fp
   8509c:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   850a0:	469b      	mov	fp, r3
   850a2:	2a30      	cmp	r2, #48	; 0x30
   850a4:	f103 33ff 	add.w	r3, r3, #4294967295
   850a8:	d0f8      	beq.n	8509c <_dtoa_r+0xb6c>
   850aa:	e4f8      	b.n	84a9e <_dtoa_r+0x56e>
   850ac:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
   850b0:	4654      	mov	r4, sl
   850b2:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
   850b6:	f7ff bb47 	b.w	84748 <_dtoa_r+0x218>
   850ba:	9e07      	ldr	r6, [sp, #28]
   850bc:	4275      	negs	r5, r6
   850be:	2d00      	cmp	r5, #0
   850c0:	f000 80c2 	beq.w	85248 <_dtoa_r+0xd18>
   850c4:	4ba3      	ldr	r3, [pc, #652]	; (85354 <_dtoa_r+0xe24>)
   850c6:	f005 020f 	and.w	r2, r5, #15
   850ca:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   850ce:	e9d3 2300 	ldrd	r2, r3, [r3]
   850d2:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   850d6:	f7fc fbbf 	bl	81858 <__aeabi_dmul>
   850da:	112d      	asrs	r5, r5, #4
   850dc:	4682      	mov	sl, r0
   850de:	468b      	mov	fp, r1
   850e0:	f000 812e 	beq.w	85340 <_dtoa_r+0xe10>
   850e4:	4e9c      	ldr	r6, [pc, #624]	; (85358 <_dtoa_r+0xe28>)
   850e6:	f04f 0802 	mov.w	r8, #2
   850ea:	07ea      	lsls	r2, r5, #31
   850ec:	d505      	bpl.n	850fa <_dtoa_r+0xbca>
   850ee:	e9d6 2300 	ldrd	r2, r3, [r6]
   850f2:	f108 0801 	add.w	r8, r8, #1
   850f6:	f7fc fbaf 	bl	81858 <__aeabi_dmul>
   850fa:	106d      	asrs	r5, r5, #1
   850fc:	f106 0608 	add.w	r6, r6, #8
   85100:	d1f3      	bne.n	850ea <_dtoa_r+0xbba>
   85102:	4682      	mov	sl, r0
   85104:	468b      	mov	fp, r1
   85106:	e5ef      	b.n	84ce8 <_dtoa_r+0x7b8>
   85108:	9e07      	ldr	r6, [sp, #28]
   8510a:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8510c:	2230      	movs	r2, #48	; 0x30
   8510e:	702a      	strb	r2, [r5, #0]
   85110:	3601      	adds	r6, #1
   85112:	2231      	movs	r2, #49	; 0x31
   85114:	9607      	str	r6, [sp, #28]
   85116:	701a      	strb	r2, [r3, #0]
   85118:	f7ff bbd7 	b.w	848ca <_dtoa_r+0x39a>
   8511c:	6871      	ldr	r1, [r6, #4]
   8511e:	4620      	mov	r0, r4
   85120:	f001 f9ee 	bl	86500 <_Balloc>
   85124:	6933      	ldr	r3, [r6, #16]
   85126:	4605      	mov	r5, r0
   85128:	1c9a      	adds	r2, r3, #2
   8512a:	0092      	lsls	r2, r2, #2
   8512c:	f106 010c 	add.w	r1, r6, #12
   85130:	300c      	adds	r0, #12
   85132:	f001 f905 	bl	86340 <memcpy>
   85136:	4620      	mov	r0, r4
   85138:	4629      	mov	r1, r5
   8513a:	2201      	movs	r2, #1
   8513c:	f001 fb9e 	bl	8687c <__lshift>
   85140:	4607      	mov	r7, r0
   85142:	e503      	b.n	84b4c <_dtoa_r+0x61c>
   85144:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   85148:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   8514c:	f000 80a8 	beq.w	852a0 <_dtoa_r+0xd70>
   85150:	9d06      	ldr	r5, [sp, #24]
   85152:	f10a 0301 	add.w	r3, sl, #1
   85156:	702b      	strb	r3, [r5, #0]
   85158:	4635      	mov	r5, r6
   8515a:	9e06      	ldr	r6, [sp, #24]
   8515c:	f106 0b01 	add.w	fp, r6, #1
   85160:	463e      	mov	r6, r7
   85162:	e49c      	b.n	84a9e <_dtoa_r+0x56e>
   85164:	4635      	mov	r5, r6
   85166:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   8516a:	463e      	mov	r6, r7
   8516c:	e47b      	b.n	84a66 <_dtoa_r+0x536>
   8516e:	f04f 0800 	mov.w	r8, #0
   85172:	4646      	mov	r6, r8
   85174:	e70c      	b.n	84f90 <_dtoa_r+0xa60>
   85176:	4977      	ldr	r1, [pc, #476]	; (85354 <_dtoa_r+0xe24>)
   85178:	f108 35ff 	add.w	r5, r8, #4294967295
   8517c:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   85180:	4632      	mov	r2, r6
   85182:	463b      	mov	r3, r7
   85184:	e9d1 0100 	ldrd	r0, r1, [r1]
   85188:	9510      	str	r5, [sp, #64]	; 0x40
   8518a:	f7fc fb65 	bl	81858 <__aeabi_dmul>
   8518e:	e9cd 0114 	strd	r0, r1, [sp, #80]	; 0x50
   85192:	4659      	mov	r1, fp
   85194:	4650      	mov	r0, sl
   85196:	f7fc fdf9 	bl	81d8c <__aeabi_d2iz>
   8519a:	4605      	mov	r5, r0
   8519c:	f7fc faf6 	bl	8178c <__aeabi_i2d>
   851a0:	4602      	mov	r2, r0
   851a2:	460b      	mov	r3, r1
   851a4:	4650      	mov	r0, sl
   851a6:	4659      	mov	r1, fp
   851a8:	f7fc f9a2 	bl	814f0 <__aeabi_dsub>
   851ac:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
   851b0:	3530      	adds	r5, #48	; 0x30
   851b2:	f1b8 0f01 	cmp.w	r8, #1
   851b6:	4606      	mov	r6, r0
   851b8:	460f      	mov	r7, r1
   851ba:	f88e 5000 	strb.w	r5, [lr]
   851be:	f10e 0b01 	add.w	fp, lr, #1
   851c2:	d01e      	beq.n	85202 <_dtoa_r+0xcd2>
   851c4:	9d09      	ldr	r5, [sp, #36]	; 0x24
   851c6:	1e6b      	subs	r3, r5, #1
   851c8:	eb03 0a08 	add.w	sl, r3, r8
   851cc:	2200      	movs	r2, #0
   851ce:	4b63      	ldr	r3, [pc, #396]	; (8535c <_dtoa_r+0xe2c>)
   851d0:	f7fc fb42 	bl	81858 <__aeabi_dmul>
   851d4:	460f      	mov	r7, r1
   851d6:	4606      	mov	r6, r0
   851d8:	f7fc fdd8 	bl	81d8c <__aeabi_d2iz>
   851dc:	4680      	mov	r8, r0
   851de:	f7fc fad5 	bl	8178c <__aeabi_i2d>
   851e2:	f108 0830 	add.w	r8, r8, #48	; 0x30
   851e6:	4602      	mov	r2, r0
   851e8:	460b      	mov	r3, r1
   851ea:	4630      	mov	r0, r6
   851ec:	4639      	mov	r1, r7
   851ee:	f7fc f97f 	bl	814f0 <__aeabi_dsub>
   851f2:	f805 8f01 	strb.w	r8, [r5, #1]!
   851f6:	4555      	cmp	r5, sl
   851f8:	d1e8      	bne.n	851cc <_dtoa_r+0xc9c>
   851fa:	9d10      	ldr	r5, [sp, #64]	; 0x40
   851fc:	4606      	mov	r6, r0
   851fe:	460f      	mov	r7, r1
   85200:	44ab      	add	fp, r5
   85202:	2200      	movs	r2, #0
   85204:	4b56      	ldr	r3, [pc, #344]	; (85360 <_dtoa_r+0xe30>)
   85206:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   8520a:	f7fc f973 	bl	814f4 <__adddf3>
   8520e:	4632      	mov	r2, r6
   85210:	463b      	mov	r3, r7
   85212:	f7fc fd93 	bl	81d3c <__aeabi_dcmplt>
   85216:	2800      	cmp	r0, #0
   85218:	d04d      	beq.n	852b6 <_dtoa_r+0xd86>
   8521a:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   8521c:	9a09      	ldr	r2, [sp, #36]	; 0x24
   8521e:	9607      	str	r6, [sp, #28]
   85220:	f81b 5c01 	ldrb.w	r5, [fp, #-1]
   85224:	f7ff bb4a 	b.w	848bc <_dtoa_r+0x38c>
   85228:	9e08      	ldr	r6, [sp, #32]
   8522a:	2300      	movs	r3, #0
   8522c:	ebc9 0506 	rsb	r5, r9, r6
   85230:	f7ff bb75 	b.w	8491e <_dtoa_r+0x3ee>
   85234:	9b18      	ldr	r3, [sp, #96]	; 0x60
   85236:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   85238:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   8523c:	9d08      	ldr	r5, [sp, #32]
   8523e:	f7ff bb6e 	b.w	8491e <_dtoa_r+0x3ee>
   85242:	4657      	mov	r7, sl
   85244:	f7ff bbb8 	b.w	849b8 <_dtoa_r+0x488>
   85248:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
   8524c:	f04f 0802 	mov.w	r8, #2
   85250:	e54a      	b.n	84ce8 <_dtoa_r+0x7b8>
   85252:	f1b9 0f00 	cmp.w	r9, #0
   85256:	f43f aeae 	beq.w	84fb6 <_dtoa_r+0xa86>
   8525a:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
   8525c:	2e00      	cmp	r6, #0
   8525e:	f77f af28 	ble.w	850b2 <_dtoa_r+0xb82>
   85262:	2200      	movs	r2, #0
   85264:	4b3d      	ldr	r3, [pc, #244]	; (8535c <_dtoa_r+0xe2c>)
   85266:	4650      	mov	r0, sl
   85268:	4659      	mov	r1, fp
   8526a:	f7fc faf5 	bl	81858 <__aeabi_dmul>
   8526e:	4682      	mov	sl, r0
   85270:	f108 0001 	add.w	r0, r8, #1
   85274:	468b      	mov	fp, r1
   85276:	f7fc fa89 	bl	8178c <__aeabi_i2d>
   8527a:	4602      	mov	r2, r0
   8527c:	460b      	mov	r3, r1
   8527e:	4650      	mov	r0, sl
   85280:	4659      	mov	r1, fp
   85282:	f7fc fae9 	bl	81858 <__aeabi_dmul>
   85286:	2200      	movs	r2, #0
   85288:	4b36      	ldr	r3, [pc, #216]	; (85364 <_dtoa_r+0xe34>)
   8528a:	f7fc f933 	bl	814f4 <__adddf3>
   8528e:	9d07      	ldr	r5, [sp, #28]
   85290:	4606      	mov	r6, r0
   85292:	3d01      	subs	r5, #1
   85294:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   85298:	9517      	str	r5, [sp, #92]	; 0x5c
   8529a:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
   8529e:	e543      	b.n	84d28 <_dtoa_r+0x7f8>
   852a0:	4635      	mov	r5, r6
   852a2:	9b06      	ldr	r3, [sp, #24]
   852a4:	9e06      	ldr	r6, [sp, #24]
   852a6:	2239      	movs	r2, #57	; 0x39
   852a8:	7032      	strb	r2, [r6, #0]
   852aa:	f103 0b01 	add.w	fp, r3, #1
   852ae:	463e      	mov	r6, r7
   852b0:	9909      	ldr	r1, [sp, #36]	; 0x24
   852b2:	f7ff bbee 	b.w	84a92 <_dtoa_r+0x562>
   852b6:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
   852ba:	2000      	movs	r0, #0
   852bc:	4928      	ldr	r1, [pc, #160]	; (85360 <_dtoa_r+0xe30>)
   852be:	f7fc f917 	bl	814f0 <__aeabi_dsub>
   852c2:	4632      	mov	r2, r6
   852c4:	463b      	mov	r3, r7
   852c6:	f7fc fd57 	bl	81d78 <__aeabi_dcmpgt>
   852ca:	2800      	cmp	r0, #0
   852cc:	f43f aef1 	beq.w	850b2 <_dtoa_r+0xb82>
   852d0:	465b      	mov	r3, fp
   852d2:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   852d6:	469b      	mov	fp, r3
   852d8:	2a30      	cmp	r2, #48	; 0x30
   852da:	f103 33ff 	add.w	r3, r3, #4294967295
   852de:	d0f8      	beq.n	852d2 <_dtoa_r+0xda2>
   852e0:	9d17      	ldr	r5, [sp, #92]	; 0x5c
   852e2:	9507      	str	r5, [sp, #28]
   852e4:	f7ff baf1 	b.w	848ca <_dtoa_r+0x39a>
   852e8:	4645      	mov	r5, r8
   852ea:	4654      	mov	r4, sl
   852ec:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   852ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
   852f0:	9607      	str	r6, [sp, #28]
   852f2:	f7ff bae3 	b.w	848bc <_dtoa_r+0x38c>
   852f6:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   852fa:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   852fe:	d0cf      	beq.n	852a0 <_dtoa_r+0xd70>
   85300:	9b03      	ldr	r3, [sp, #12]
   85302:	4635      	mov	r5, r6
   85304:	2b00      	cmp	r3, #0
   85306:	9e06      	ldr	r6, [sp, #24]
   85308:	bfc8      	it	gt
   8530a:	f10b 0a31 	addgt.w	sl, fp, #49	; 0x31
   8530e:	f886 a000 	strb.w	sl, [r6]
   85312:	f106 0b01 	add.w	fp, r6, #1
   85316:	463e      	mov	r6, r7
   85318:	f7ff bbc1 	b.w	84a9e <_dtoa_r+0x56e>
   8531c:	f47f aea7 	bne.w	8506e <_dtoa_r+0xb3e>
   85320:	f01a 0f01 	tst.w	sl, #1
   85324:	f43f aea3 	beq.w	8506e <_dtoa_r+0xb3e>
   85328:	e69b      	b.n	85062 <_dtoa_r+0xb32>
   8532a:	4631      	mov	r1, r6
   8532c:	4620      	mov	r0, r4
   8532e:	220a      	movs	r2, #10
   85330:	2300      	movs	r3, #0
   85332:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
   85336:	f001 f913 	bl	86560 <__multadd>
   8533a:	4606      	mov	r6, r0
   8533c:	f7ff bb6a 	b.w	84a14 <_dtoa_r+0x4e4>
   85340:	f04f 0802 	mov.w	r8, #2
   85344:	e4d0      	b.n	84ce8 <_dtoa_r+0x7b8>
   85346:	f43f ab50 	beq.w	849ea <_dtoa_r+0x4ba>
   8534a:	f1c3 033c 	rsb	r3, r3, #60	; 0x3c
   8534e:	f7ff bbe0 	b.w	84b12 <_dtoa_r+0x5e2>
   85352:	bf00      	nop
   85354:	00087b70 	.word	0x00087b70
   85358:	00087c38 	.word	0x00087c38
   8535c:	40240000 	.word	0x40240000
   85360:	3fe00000 	.word	0x3fe00000
   85364:	401c0000 	.word	0x401c0000

00085368 <__sflush_r>:
   85368:	898b      	ldrh	r3, [r1, #12]
   8536a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8536e:	b29a      	uxth	r2, r3
   85370:	460d      	mov	r5, r1
   85372:	0711      	lsls	r1, r2, #28
   85374:	4680      	mov	r8, r0
   85376:	d43c      	bmi.n	853f2 <__sflush_r+0x8a>
   85378:	686a      	ldr	r2, [r5, #4]
   8537a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   8537e:	2a00      	cmp	r2, #0
   85380:	81ab      	strh	r3, [r5, #12]
   85382:	dd59      	ble.n	85438 <__sflush_r+0xd0>
   85384:	6aac      	ldr	r4, [r5, #40]	; 0x28
   85386:	2c00      	cmp	r4, #0
   85388:	d04b      	beq.n	85422 <__sflush_r+0xba>
   8538a:	b29b      	uxth	r3, r3
   8538c:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
   85390:	2100      	movs	r1, #0
   85392:	b292      	uxth	r2, r2
   85394:	f8d8 6000 	ldr.w	r6, [r8]
   85398:	f8c8 1000 	str.w	r1, [r8]
   8539c:	2a00      	cmp	r2, #0
   8539e:	d04f      	beq.n	85440 <__sflush_r+0xd8>
   853a0:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   853a2:	075f      	lsls	r7, r3, #29
   853a4:	d505      	bpl.n	853b2 <__sflush_r+0x4a>
   853a6:	6869      	ldr	r1, [r5, #4]
   853a8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   853aa:	1a52      	subs	r2, r2, r1
   853ac:	b10b      	cbz	r3, 853b2 <__sflush_r+0x4a>
   853ae:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   853b0:	1ad2      	subs	r2, r2, r3
   853b2:	4640      	mov	r0, r8
   853b4:	69e9      	ldr	r1, [r5, #28]
   853b6:	2300      	movs	r3, #0
   853b8:	47a0      	blx	r4
   853ba:	1c44      	adds	r4, r0, #1
   853bc:	d04a      	beq.n	85454 <__sflush_r+0xec>
   853be:	89ab      	ldrh	r3, [r5, #12]
   853c0:	692a      	ldr	r2, [r5, #16]
   853c2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   853c6:	b29b      	uxth	r3, r3
   853c8:	2100      	movs	r1, #0
   853ca:	602a      	str	r2, [r5, #0]
   853cc:	04da      	lsls	r2, r3, #19
   853ce:	81ab      	strh	r3, [r5, #12]
   853d0:	6069      	str	r1, [r5, #4]
   853d2:	d44c      	bmi.n	8546e <__sflush_r+0x106>
   853d4:	6b29      	ldr	r1, [r5, #48]	; 0x30
   853d6:	f8c8 6000 	str.w	r6, [r8]
   853da:	b311      	cbz	r1, 85422 <__sflush_r+0xba>
   853dc:	f105 0340 	add.w	r3, r5, #64	; 0x40
   853e0:	4299      	cmp	r1, r3
   853e2:	d002      	beq.n	853ea <__sflush_r+0x82>
   853e4:	4640      	mov	r0, r8
   853e6:	f000 f9c3 	bl	85770 <_free_r>
   853ea:	2000      	movs	r0, #0
   853ec:	6328      	str	r0, [r5, #48]	; 0x30
   853ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   853f2:	692e      	ldr	r6, [r5, #16]
   853f4:	b1ae      	cbz	r6, 85422 <__sflush_r+0xba>
   853f6:	0791      	lsls	r1, r2, #30
   853f8:	682c      	ldr	r4, [r5, #0]
   853fa:	bf0c      	ite	eq
   853fc:	696b      	ldreq	r3, [r5, #20]
   853fe:	2300      	movne	r3, #0
   85400:	602e      	str	r6, [r5, #0]
   85402:	1ba4      	subs	r4, r4, r6
   85404:	60ab      	str	r3, [r5, #8]
   85406:	e00a      	b.n	8541e <__sflush_r+0xb6>
   85408:	4632      	mov	r2, r6
   8540a:	4623      	mov	r3, r4
   8540c:	6a6f      	ldr	r7, [r5, #36]	; 0x24
   8540e:	4640      	mov	r0, r8
   85410:	69e9      	ldr	r1, [r5, #28]
   85412:	47b8      	blx	r7
   85414:	2800      	cmp	r0, #0
   85416:	ebc0 0404 	rsb	r4, r0, r4
   8541a:	4406      	add	r6, r0
   8541c:	dd04      	ble.n	85428 <__sflush_r+0xc0>
   8541e:	2c00      	cmp	r4, #0
   85420:	dcf2      	bgt.n	85408 <__sflush_r+0xa0>
   85422:	2000      	movs	r0, #0
   85424:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   85428:	89ab      	ldrh	r3, [r5, #12]
   8542a:	f04f 30ff 	mov.w	r0, #4294967295
   8542e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   85432:	81ab      	strh	r3, [r5, #12]
   85434:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   85438:	6bea      	ldr	r2, [r5, #60]	; 0x3c
   8543a:	2a00      	cmp	r2, #0
   8543c:	dca2      	bgt.n	85384 <__sflush_r+0x1c>
   8543e:	e7f0      	b.n	85422 <__sflush_r+0xba>
   85440:	2301      	movs	r3, #1
   85442:	4640      	mov	r0, r8
   85444:	69e9      	ldr	r1, [r5, #28]
   85446:	47a0      	blx	r4
   85448:	1c43      	adds	r3, r0, #1
   8544a:	4602      	mov	r2, r0
   8544c:	d01e      	beq.n	8548c <__sflush_r+0x124>
   8544e:	89ab      	ldrh	r3, [r5, #12]
   85450:	6aac      	ldr	r4, [r5, #40]	; 0x28
   85452:	e7a6      	b.n	853a2 <__sflush_r+0x3a>
   85454:	f8d8 3000 	ldr.w	r3, [r8]
   85458:	b95b      	cbnz	r3, 85472 <__sflush_r+0x10a>
   8545a:	89aa      	ldrh	r2, [r5, #12]
   8545c:	6929      	ldr	r1, [r5, #16]
   8545e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   85462:	b292      	uxth	r2, r2
   85464:	606b      	str	r3, [r5, #4]
   85466:	04d3      	lsls	r3, r2, #19
   85468:	81aa      	strh	r2, [r5, #12]
   8546a:	6029      	str	r1, [r5, #0]
   8546c:	d5b2      	bpl.n	853d4 <__sflush_r+0x6c>
   8546e:	6528      	str	r0, [r5, #80]	; 0x50
   85470:	e7b0      	b.n	853d4 <__sflush_r+0x6c>
   85472:	2b1d      	cmp	r3, #29
   85474:	d001      	beq.n	8547a <__sflush_r+0x112>
   85476:	2b16      	cmp	r3, #22
   85478:	d113      	bne.n	854a2 <__sflush_r+0x13a>
   8547a:	89a9      	ldrh	r1, [r5, #12]
   8547c:	692b      	ldr	r3, [r5, #16]
   8547e:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
   85482:	2200      	movs	r2, #0
   85484:	81a9      	strh	r1, [r5, #12]
   85486:	602b      	str	r3, [r5, #0]
   85488:	606a      	str	r2, [r5, #4]
   8548a:	e7a3      	b.n	853d4 <__sflush_r+0x6c>
   8548c:	f8d8 3000 	ldr.w	r3, [r8]
   85490:	2b00      	cmp	r3, #0
   85492:	d0dc      	beq.n	8544e <__sflush_r+0xe6>
   85494:	2b1d      	cmp	r3, #29
   85496:	d001      	beq.n	8549c <__sflush_r+0x134>
   85498:	2b16      	cmp	r3, #22
   8549a:	d1c5      	bne.n	85428 <__sflush_r+0xc0>
   8549c:	f8c8 6000 	str.w	r6, [r8]
   854a0:	e7bf      	b.n	85422 <__sflush_r+0xba>
   854a2:	89ab      	ldrh	r3, [r5, #12]
   854a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   854a8:	81ab      	strh	r3, [r5, #12]
   854aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   854ae:	bf00      	nop

000854b0 <_fflush_r>:
   854b0:	b510      	push	{r4, lr}
   854b2:	4604      	mov	r4, r0
   854b4:	b082      	sub	sp, #8
   854b6:	b108      	cbz	r0, 854bc <_fflush_r+0xc>
   854b8:	6b83      	ldr	r3, [r0, #56]	; 0x38
   854ba:	b153      	cbz	r3, 854d2 <_fflush_r+0x22>
   854bc:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
   854c0:	b908      	cbnz	r0, 854c6 <_fflush_r+0x16>
   854c2:	b002      	add	sp, #8
   854c4:	bd10      	pop	{r4, pc}
   854c6:	4620      	mov	r0, r4
   854c8:	b002      	add	sp, #8
   854ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   854ce:	f7ff bf4b 	b.w	85368 <__sflush_r>
   854d2:	9101      	str	r1, [sp, #4]
   854d4:	f000 f808 	bl	854e8 <__sinit>
   854d8:	9901      	ldr	r1, [sp, #4]
   854da:	e7ef      	b.n	854bc <_fflush_r+0xc>

000854dc <_cleanup_r>:
   854dc:	4901      	ldr	r1, [pc, #4]	; (854e4 <_cleanup_r+0x8>)
   854de:	f000 bb9f 	b.w	85c20 <_fwalk>
   854e2:	bf00      	nop
   854e4:	0008731d 	.word	0x0008731d

000854e8 <__sinit>:
   854e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   854ec:	6b84      	ldr	r4, [r0, #56]	; 0x38
   854ee:	b083      	sub	sp, #12
   854f0:	4607      	mov	r7, r0
   854f2:	2c00      	cmp	r4, #0
   854f4:	d165      	bne.n	855c2 <__sinit+0xda>
   854f6:	687d      	ldr	r5, [r7, #4]
   854f8:	4833      	ldr	r0, [pc, #204]	; (855c8 <__sinit+0xe0>)
   854fa:	2304      	movs	r3, #4
   854fc:	2103      	movs	r1, #3
   854fe:	f507 723b 	add.w	r2, r7, #748	; 0x2ec
   85502:	63f8      	str	r0, [r7, #60]	; 0x3c
   85504:	f8c7 12e4 	str.w	r1, [r7, #740]	; 0x2e4
   85508:	f8c7 22e8 	str.w	r2, [r7, #744]	; 0x2e8
   8550c:	f8c7 42e0 	str.w	r4, [r7, #736]	; 0x2e0
   85510:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   85514:	81ab      	strh	r3, [r5, #12]
   85516:	602c      	str	r4, [r5, #0]
   85518:	606c      	str	r4, [r5, #4]
   8551a:	60ac      	str	r4, [r5, #8]
   8551c:	666c      	str	r4, [r5, #100]	; 0x64
   8551e:	81ec      	strh	r4, [r5, #14]
   85520:	612c      	str	r4, [r5, #16]
   85522:	616c      	str	r4, [r5, #20]
   85524:	61ac      	str	r4, [r5, #24]
   85526:	4621      	mov	r1, r4
   85528:	2208      	movs	r2, #8
   8552a:	f7fc fc93 	bl	81e54 <memset>
   8552e:	f8df b09c 	ldr.w	fp, [pc, #156]	; 855cc <__sinit+0xe4>
   85532:	68be      	ldr	r6, [r7, #8]
   85534:	f8df a098 	ldr.w	sl, [pc, #152]	; 855d0 <__sinit+0xe8>
   85538:	f8df 9098 	ldr.w	r9, [pc, #152]	; 855d4 <__sinit+0xec>
   8553c:	f8df 8098 	ldr.w	r8, [pc, #152]	; 855d8 <__sinit+0xf0>
   85540:	2301      	movs	r3, #1
   85542:	2209      	movs	r2, #9
   85544:	61ed      	str	r5, [r5, #28]
   85546:	f8c5 b020 	str.w	fp, [r5, #32]
   8554a:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
   8554e:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
   85552:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
   85556:	4621      	mov	r1, r4
   85558:	81f3      	strh	r3, [r6, #14]
   8555a:	81b2      	strh	r2, [r6, #12]
   8555c:	6034      	str	r4, [r6, #0]
   8555e:	6074      	str	r4, [r6, #4]
   85560:	60b4      	str	r4, [r6, #8]
   85562:	6674      	str	r4, [r6, #100]	; 0x64
   85564:	6134      	str	r4, [r6, #16]
   85566:	6174      	str	r4, [r6, #20]
   85568:	61b4      	str	r4, [r6, #24]
   8556a:	2208      	movs	r2, #8
   8556c:	f106 005c 	add.w	r0, r6, #92	; 0x5c
   85570:	9301      	str	r3, [sp, #4]
   85572:	f7fc fc6f 	bl	81e54 <memset>
   85576:	68fd      	ldr	r5, [r7, #12]
   85578:	2012      	movs	r0, #18
   8557a:	2202      	movs	r2, #2
   8557c:	61f6      	str	r6, [r6, #28]
   8557e:	f8c6 b020 	str.w	fp, [r6, #32]
   85582:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
   85586:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
   8558a:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
   8558e:	4621      	mov	r1, r4
   85590:	81a8      	strh	r0, [r5, #12]
   85592:	81ea      	strh	r2, [r5, #14]
   85594:	602c      	str	r4, [r5, #0]
   85596:	606c      	str	r4, [r5, #4]
   85598:	60ac      	str	r4, [r5, #8]
   8559a:	666c      	str	r4, [r5, #100]	; 0x64
   8559c:	612c      	str	r4, [r5, #16]
   8559e:	616c      	str	r4, [r5, #20]
   855a0:	61ac      	str	r4, [r5, #24]
   855a2:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   855a6:	2208      	movs	r2, #8
   855a8:	f7fc fc54 	bl	81e54 <memset>
   855ac:	9b01      	ldr	r3, [sp, #4]
   855ae:	61ed      	str	r5, [r5, #28]
   855b0:	f8c5 b020 	str.w	fp, [r5, #32]
   855b4:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
   855b8:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
   855bc:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
   855c0:	63bb      	str	r3, [r7, #56]	; 0x38
   855c2:	b003      	add	sp, #12
   855c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   855c8:	000854dd 	.word	0x000854dd
   855cc:	00086ef9 	.word	0x00086ef9
   855d0:	00086f1d 	.word	0x00086f1d
   855d4:	00086f55 	.word	0x00086f55
   855d8:	00086f75 	.word	0x00086f75

000855dc <__sfp_lock_acquire>:
   855dc:	4770      	bx	lr
   855de:	bf00      	nop

000855e0 <__sfp_lock_release>:
   855e0:	4770      	bx	lr
   855e2:	bf00      	nop

000855e4 <__libc_fini_array>:
   855e4:	b538      	push	{r3, r4, r5, lr}
   855e6:	4d09      	ldr	r5, [pc, #36]	; (8560c <__libc_fini_array+0x28>)
   855e8:	4c09      	ldr	r4, [pc, #36]	; (85610 <__libc_fini_array+0x2c>)
   855ea:	1b64      	subs	r4, r4, r5
   855ec:	10a4      	asrs	r4, r4, #2
   855ee:	bf18      	it	ne
   855f0:	eb05 0584 	addne.w	r5, r5, r4, lsl #2
   855f4:	d005      	beq.n	85602 <__libc_fini_array+0x1e>
   855f6:	3c01      	subs	r4, #1
   855f8:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   855fc:	4798      	blx	r3
   855fe:	2c00      	cmp	r4, #0
   85600:	d1f9      	bne.n	855f6 <__libc_fini_array+0x12>
   85602:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   85606:	f002 bb3b 	b.w	87c80 <_fini>
   8560a:	bf00      	nop
   8560c:	00087c8c 	.word	0x00087c8c
   85610:	00087c90 	.word	0x00087c90

00085614 <_fputwc_r>:
   85614:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   85618:	8993      	ldrh	r3, [r2, #12]
   8561a:	460f      	mov	r7, r1
   8561c:	0499      	lsls	r1, r3, #18
   8561e:	b082      	sub	sp, #8
   85620:	4614      	mov	r4, r2
   85622:	4680      	mov	r8, r0
   85624:	d406      	bmi.n	85634 <_fputwc_r+0x20>
   85626:	6e52      	ldr	r2, [r2, #100]	; 0x64
   85628:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   8562c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   85630:	81a3      	strh	r3, [r4, #12]
   85632:	6662      	str	r2, [r4, #100]	; 0x64
   85634:	f000 fb1c 	bl	85c70 <__locale_mb_cur_max>
   85638:	2801      	cmp	r0, #1
   8563a:	d03e      	beq.n	856ba <_fputwc_r+0xa6>
   8563c:	463a      	mov	r2, r7
   8563e:	4640      	mov	r0, r8
   85640:	a901      	add	r1, sp, #4
   85642:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   85646:	f001 fd49 	bl	870dc <_wcrtomb_r>
   8564a:	1c42      	adds	r2, r0, #1
   8564c:	4606      	mov	r6, r0
   8564e:	d02d      	beq.n	856ac <_fputwc_r+0x98>
   85650:	2800      	cmp	r0, #0
   85652:	d03a      	beq.n	856ca <_fputwc_r+0xb6>
   85654:	f89d 1004 	ldrb.w	r1, [sp, #4]
   85658:	2500      	movs	r5, #0
   8565a:	e009      	b.n	85670 <_fputwc_r+0x5c>
   8565c:	6823      	ldr	r3, [r4, #0]
   8565e:	7019      	strb	r1, [r3, #0]
   85660:	6823      	ldr	r3, [r4, #0]
   85662:	3301      	adds	r3, #1
   85664:	6023      	str	r3, [r4, #0]
   85666:	3501      	adds	r5, #1
   85668:	42b5      	cmp	r5, r6
   8566a:	d22e      	bcs.n	856ca <_fputwc_r+0xb6>
   8566c:	ab01      	add	r3, sp, #4
   8566e:	5ce9      	ldrb	r1, [r5, r3]
   85670:	68a3      	ldr	r3, [r4, #8]
   85672:	3b01      	subs	r3, #1
   85674:	2b00      	cmp	r3, #0
   85676:	60a3      	str	r3, [r4, #8]
   85678:	daf0      	bge.n	8565c <_fputwc_r+0x48>
   8567a:	69a2      	ldr	r2, [r4, #24]
   8567c:	4293      	cmp	r3, r2
   8567e:	db06      	blt.n	8568e <_fputwc_r+0x7a>
   85680:	6823      	ldr	r3, [r4, #0]
   85682:	7019      	strb	r1, [r3, #0]
   85684:	6823      	ldr	r3, [r4, #0]
   85686:	7819      	ldrb	r1, [r3, #0]
   85688:	3301      	adds	r3, #1
   8568a:	290a      	cmp	r1, #10
   8568c:	d1ea      	bne.n	85664 <_fputwc_r+0x50>
   8568e:	4640      	mov	r0, r8
   85690:	4622      	mov	r2, r4
   85692:	f7fe fdeb 	bl	8426c <__swbuf_r>
   85696:	f1b0 33ff 	subs.w	r3, r0, #4294967295
   8569a:	4258      	negs	r0, r3
   8569c:	4158      	adcs	r0, r3
   8569e:	2800      	cmp	r0, #0
   856a0:	d0e1      	beq.n	85666 <_fputwc_r+0x52>
   856a2:	f04f 30ff 	mov.w	r0, #4294967295
   856a6:	b002      	add	sp, #8
   856a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   856ac:	89a3      	ldrh	r3, [r4, #12]
   856ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   856b2:	81a3      	strh	r3, [r4, #12]
   856b4:	b002      	add	sp, #8
   856b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   856ba:	1e7b      	subs	r3, r7, #1
   856bc:	2bfe      	cmp	r3, #254	; 0xfe
   856be:	d8bd      	bhi.n	8563c <_fputwc_r+0x28>
   856c0:	b2f9      	uxtb	r1, r7
   856c2:	4606      	mov	r6, r0
   856c4:	f88d 1004 	strb.w	r1, [sp, #4]
   856c8:	e7c6      	b.n	85658 <_fputwc_r+0x44>
   856ca:	4638      	mov	r0, r7
   856cc:	b002      	add	sp, #8
   856ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   856d2:	bf00      	nop

000856d4 <_malloc_trim_r>:
   856d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   856d6:	4d23      	ldr	r5, [pc, #140]	; (85764 <_malloc_trim_r+0x90>)
   856d8:	460f      	mov	r7, r1
   856da:	4604      	mov	r4, r0
   856dc:	f000 ff0c 	bl	864f8 <__malloc_lock>
   856e0:	68ab      	ldr	r3, [r5, #8]
   856e2:	685e      	ldr	r6, [r3, #4]
   856e4:	f026 0603 	bic.w	r6, r6, #3
   856e8:	1bf1      	subs	r1, r6, r7
   856ea:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
   856ee:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   856f2:	f021 010f 	bic.w	r1, r1, #15
   856f6:	f5a1 5780 	sub.w	r7, r1, #4096	; 0x1000
   856fa:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
   856fe:	db07      	blt.n	85710 <_malloc_trim_r+0x3c>
   85700:	4620      	mov	r0, r4
   85702:	2100      	movs	r1, #0
   85704:	f001 fbe6 	bl	86ed4 <_sbrk_r>
   85708:	68ab      	ldr	r3, [r5, #8]
   8570a:	4433      	add	r3, r6
   8570c:	4298      	cmp	r0, r3
   8570e:	d004      	beq.n	8571a <_malloc_trim_r+0x46>
   85710:	4620      	mov	r0, r4
   85712:	f000 fef3 	bl	864fc <__malloc_unlock>
   85716:	2000      	movs	r0, #0
   85718:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8571a:	4620      	mov	r0, r4
   8571c:	4279      	negs	r1, r7
   8571e:	f001 fbd9 	bl	86ed4 <_sbrk_r>
   85722:	3001      	adds	r0, #1
   85724:	d00d      	beq.n	85742 <_malloc_trim_r+0x6e>
   85726:	4b10      	ldr	r3, [pc, #64]	; (85768 <_malloc_trim_r+0x94>)
   85728:	68aa      	ldr	r2, [r5, #8]
   8572a:	6819      	ldr	r1, [r3, #0]
   8572c:	1bf6      	subs	r6, r6, r7
   8572e:	f046 0601 	orr.w	r6, r6, #1
   85732:	4620      	mov	r0, r4
   85734:	1bc9      	subs	r1, r1, r7
   85736:	6056      	str	r6, [r2, #4]
   85738:	6019      	str	r1, [r3, #0]
   8573a:	f000 fedf 	bl	864fc <__malloc_unlock>
   8573e:	2001      	movs	r0, #1
   85740:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   85742:	4620      	mov	r0, r4
   85744:	2100      	movs	r1, #0
   85746:	f001 fbc5 	bl	86ed4 <_sbrk_r>
   8574a:	68ab      	ldr	r3, [r5, #8]
   8574c:	1ac2      	subs	r2, r0, r3
   8574e:	2a0f      	cmp	r2, #15
   85750:	ddde      	ble.n	85710 <_malloc_trim_r+0x3c>
   85752:	4d06      	ldr	r5, [pc, #24]	; (8576c <_malloc_trim_r+0x98>)
   85754:	4904      	ldr	r1, [pc, #16]	; (85768 <_malloc_trim_r+0x94>)
   85756:	682d      	ldr	r5, [r5, #0]
   85758:	f042 0201 	orr.w	r2, r2, #1
   8575c:	1b40      	subs	r0, r0, r5
   8575e:	605a      	str	r2, [r3, #4]
   85760:	6008      	str	r0, [r1, #0]
   85762:	e7d5      	b.n	85710 <_malloc_trim_r+0x3c>
   85764:	200705c0 	.word	0x200705c0
   85768:	20070b28 	.word	0x20070b28
   8576c:	200709cc 	.word	0x200709cc

00085770 <_free_r>:
   85770:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   85774:	460d      	mov	r5, r1
   85776:	4606      	mov	r6, r0
   85778:	2900      	cmp	r1, #0
   8577a:	d055      	beq.n	85828 <_free_r+0xb8>
   8577c:	f000 febc 	bl	864f8 <__malloc_lock>
   85780:	f855 1c04 	ldr.w	r1, [r5, #-4]
   85784:	f8df c170 	ldr.w	ip, [pc, #368]	; 858f8 <_free_r+0x188>
   85788:	f1a5 0408 	sub.w	r4, r5, #8
   8578c:	f021 0301 	bic.w	r3, r1, #1
   85790:	18e2      	adds	r2, r4, r3
   85792:	f8dc 0008 	ldr.w	r0, [ip, #8]
   85796:	6857      	ldr	r7, [r2, #4]
   85798:	4290      	cmp	r0, r2
   8579a:	f027 0703 	bic.w	r7, r7, #3
   8579e:	d068      	beq.n	85872 <_free_r+0x102>
   857a0:	f011 0101 	ands.w	r1, r1, #1
   857a4:	6057      	str	r7, [r2, #4]
   857a6:	d032      	beq.n	8580e <_free_r+0x9e>
   857a8:	2100      	movs	r1, #0
   857aa:	19d0      	adds	r0, r2, r7
   857ac:	6840      	ldr	r0, [r0, #4]
   857ae:	07c0      	lsls	r0, r0, #31
   857b0:	d406      	bmi.n	857c0 <_free_r+0x50>
   857b2:	443b      	add	r3, r7
   857b4:	6890      	ldr	r0, [r2, #8]
   857b6:	2900      	cmp	r1, #0
   857b8:	d04d      	beq.n	85856 <_free_r+0xe6>
   857ba:	68d2      	ldr	r2, [r2, #12]
   857bc:	60c2      	str	r2, [r0, #12]
   857be:	6090      	str	r0, [r2, #8]
   857c0:	f043 0201 	orr.w	r2, r3, #1
   857c4:	6062      	str	r2, [r4, #4]
   857c6:	50e3      	str	r3, [r4, r3]
   857c8:	b9e1      	cbnz	r1, 85804 <_free_r+0x94>
   857ca:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   857ce:	d32d      	bcc.n	8582c <_free_r+0xbc>
   857d0:	0a5a      	lsrs	r2, r3, #9
   857d2:	2a04      	cmp	r2, #4
   857d4:	d869      	bhi.n	858aa <_free_r+0x13a>
   857d6:	0998      	lsrs	r0, r3, #6
   857d8:	3038      	adds	r0, #56	; 0x38
   857da:	0041      	lsls	r1, r0, #1
   857dc:	eb0c 0c81 	add.w	ip, ip, r1, lsl #2
   857e0:	f8dc 2008 	ldr.w	r2, [ip, #8]
   857e4:	4944      	ldr	r1, [pc, #272]	; (858f8 <_free_r+0x188>)
   857e6:	4562      	cmp	r2, ip
   857e8:	d065      	beq.n	858b6 <_free_r+0x146>
   857ea:	6851      	ldr	r1, [r2, #4]
   857ec:	f021 0103 	bic.w	r1, r1, #3
   857f0:	428b      	cmp	r3, r1
   857f2:	d202      	bcs.n	857fa <_free_r+0x8a>
   857f4:	6892      	ldr	r2, [r2, #8]
   857f6:	4594      	cmp	ip, r2
   857f8:	d1f7      	bne.n	857ea <_free_r+0x7a>
   857fa:	68d3      	ldr	r3, [r2, #12]
   857fc:	60e3      	str	r3, [r4, #12]
   857fe:	60a2      	str	r2, [r4, #8]
   85800:	609c      	str	r4, [r3, #8]
   85802:	60d4      	str	r4, [r2, #12]
   85804:	4630      	mov	r0, r6
   85806:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8580a:	f000 be77 	b.w	864fc <__malloc_unlock>
   8580e:	f855 5c08 	ldr.w	r5, [r5, #-8]
   85812:	f10c 0808 	add.w	r8, ip, #8
   85816:	1b64      	subs	r4, r4, r5
   85818:	68a0      	ldr	r0, [r4, #8]
   8581a:	442b      	add	r3, r5
   8581c:	4540      	cmp	r0, r8
   8581e:	d042      	beq.n	858a6 <_free_r+0x136>
   85820:	68e5      	ldr	r5, [r4, #12]
   85822:	60c5      	str	r5, [r0, #12]
   85824:	60a8      	str	r0, [r5, #8]
   85826:	e7c0      	b.n	857aa <_free_r+0x3a>
   85828:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8582c:	08db      	lsrs	r3, r3, #3
   8582e:	109a      	asrs	r2, r3, #2
   85830:	2001      	movs	r0, #1
   85832:	4090      	lsls	r0, r2
   85834:	f8dc 1004 	ldr.w	r1, [ip, #4]
   85838:	eb0c 03c3 	add.w	r3, ip, r3, lsl #3
   8583c:	689a      	ldr	r2, [r3, #8]
   8583e:	4301      	orrs	r1, r0
   85840:	60a2      	str	r2, [r4, #8]
   85842:	60e3      	str	r3, [r4, #12]
   85844:	f8cc 1004 	str.w	r1, [ip, #4]
   85848:	4630      	mov	r0, r6
   8584a:	609c      	str	r4, [r3, #8]
   8584c:	60d4      	str	r4, [r2, #12]
   8584e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   85852:	f000 be53 	b.w	864fc <__malloc_unlock>
   85856:	4d29      	ldr	r5, [pc, #164]	; (858fc <_free_r+0x18c>)
   85858:	42a8      	cmp	r0, r5
   8585a:	d1ae      	bne.n	857ba <_free_r+0x4a>
   8585c:	f043 0201 	orr.w	r2, r3, #1
   85860:	f8cc 4014 	str.w	r4, [ip, #20]
   85864:	f8cc 4010 	str.w	r4, [ip, #16]
   85868:	60e0      	str	r0, [r4, #12]
   8586a:	60a0      	str	r0, [r4, #8]
   8586c:	6062      	str	r2, [r4, #4]
   8586e:	50e3      	str	r3, [r4, r3]
   85870:	e7c8      	b.n	85804 <_free_r+0x94>
   85872:	441f      	add	r7, r3
   85874:	07cb      	lsls	r3, r1, #31
   85876:	d407      	bmi.n	85888 <_free_r+0x118>
   85878:	f855 1c08 	ldr.w	r1, [r5, #-8]
   8587c:	1a64      	subs	r4, r4, r1
   8587e:	68e3      	ldr	r3, [r4, #12]
   85880:	68a2      	ldr	r2, [r4, #8]
   85882:	440f      	add	r7, r1
   85884:	60d3      	str	r3, [r2, #12]
   85886:	609a      	str	r2, [r3, #8]
   85888:	4b1d      	ldr	r3, [pc, #116]	; (85900 <_free_r+0x190>)
   8588a:	f047 0201 	orr.w	r2, r7, #1
   8588e:	681b      	ldr	r3, [r3, #0]
   85890:	6062      	str	r2, [r4, #4]
   85892:	429f      	cmp	r7, r3
   85894:	f8cc 4008 	str.w	r4, [ip, #8]
   85898:	d3b4      	bcc.n	85804 <_free_r+0x94>
   8589a:	4b1a      	ldr	r3, [pc, #104]	; (85904 <_free_r+0x194>)
   8589c:	4630      	mov	r0, r6
   8589e:	6819      	ldr	r1, [r3, #0]
   858a0:	f7ff ff18 	bl	856d4 <_malloc_trim_r>
   858a4:	e7ae      	b.n	85804 <_free_r+0x94>
   858a6:	2101      	movs	r1, #1
   858a8:	e77f      	b.n	857aa <_free_r+0x3a>
   858aa:	2a14      	cmp	r2, #20
   858ac:	d80b      	bhi.n	858c6 <_free_r+0x156>
   858ae:	f102 005b 	add.w	r0, r2, #91	; 0x5b
   858b2:	0041      	lsls	r1, r0, #1
   858b4:	e792      	b.n	857dc <_free_r+0x6c>
   858b6:	1080      	asrs	r0, r0, #2
   858b8:	2501      	movs	r5, #1
   858ba:	4085      	lsls	r5, r0
   858bc:	6848      	ldr	r0, [r1, #4]
   858be:	4613      	mov	r3, r2
   858c0:	4328      	orrs	r0, r5
   858c2:	6048      	str	r0, [r1, #4]
   858c4:	e79a      	b.n	857fc <_free_r+0x8c>
   858c6:	2a54      	cmp	r2, #84	; 0x54
   858c8:	d803      	bhi.n	858d2 <_free_r+0x162>
   858ca:	0b18      	lsrs	r0, r3, #12
   858cc:	306e      	adds	r0, #110	; 0x6e
   858ce:	0041      	lsls	r1, r0, #1
   858d0:	e784      	b.n	857dc <_free_r+0x6c>
   858d2:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   858d6:	d803      	bhi.n	858e0 <_free_r+0x170>
   858d8:	0bd8      	lsrs	r0, r3, #15
   858da:	3077      	adds	r0, #119	; 0x77
   858dc:	0041      	lsls	r1, r0, #1
   858de:	e77d      	b.n	857dc <_free_r+0x6c>
   858e0:	f240 5154 	movw	r1, #1364	; 0x554
   858e4:	428a      	cmp	r2, r1
   858e6:	d803      	bhi.n	858f0 <_free_r+0x180>
   858e8:	0c98      	lsrs	r0, r3, #18
   858ea:	307c      	adds	r0, #124	; 0x7c
   858ec:	0041      	lsls	r1, r0, #1
   858ee:	e775      	b.n	857dc <_free_r+0x6c>
   858f0:	21fc      	movs	r1, #252	; 0xfc
   858f2:	207e      	movs	r0, #126	; 0x7e
   858f4:	e772      	b.n	857dc <_free_r+0x6c>
   858f6:	bf00      	nop
   858f8:	200705c0 	.word	0x200705c0
   858fc:	200705c8 	.word	0x200705c8
   85900:	200709c8 	.word	0x200709c8
   85904:	20070b24 	.word	0x20070b24

00085908 <__sfvwrite_r>:
   85908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8590c:	6893      	ldr	r3, [r2, #8]
   8590e:	b083      	sub	sp, #12
   85910:	4616      	mov	r6, r2
   85912:	4681      	mov	r9, r0
   85914:	460c      	mov	r4, r1
   85916:	b32b      	cbz	r3, 85964 <__sfvwrite_r+0x5c>
   85918:	898b      	ldrh	r3, [r1, #12]
   8591a:	0719      	lsls	r1, r3, #28
   8591c:	d526      	bpl.n	8596c <__sfvwrite_r+0x64>
   8591e:	6922      	ldr	r2, [r4, #16]
   85920:	b322      	cbz	r2, 8596c <__sfvwrite_r+0x64>
   85922:	f003 0202 	and.w	r2, r3, #2
   85926:	b292      	uxth	r2, r2
   85928:	6835      	ldr	r5, [r6, #0]
   8592a:	2a00      	cmp	r2, #0
   8592c:	d02c      	beq.n	85988 <__sfvwrite_r+0x80>
   8592e:	f04f 0a00 	mov.w	sl, #0
   85932:	f8df b2e8 	ldr.w	fp, [pc, #744]	; 85c1c <__sfvwrite_r+0x314>
   85936:	46d0      	mov	r8, sl
   85938:	45d8      	cmp	r8, fp
   8593a:	bf34      	ite	cc
   8593c:	4643      	movcc	r3, r8
   8593e:	465b      	movcs	r3, fp
   85940:	4652      	mov	r2, sl
   85942:	4648      	mov	r0, r9
   85944:	f1b8 0f00 	cmp.w	r8, #0
   85948:	d04f      	beq.n	859ea <__sfvwrite_r+0xe2>
   8594a:	69e1      	ldr	r1, [r4, #28]
   8594c:	6a67      	ldr	r7, [r4, #36]	; 0x24
   8594e:	47b8      	blx	r7
   85950:	2800      	cmp	r0, #0
   85952:	dd56      	ble.n	85a02 <__sfvwrite_r+0xfa>
   85954:	68b3      	ldr	r3, [r6, #8]
   85956:	4482      	add	sl, r0
   85958:	1a1b      	subs	r3, r3, r0
   8595a:	ebc0 0808 	rsb	r8, r0, r8
   8595e:	60b3      	str	r3, [r6, #8]
   85960:	2b00      	cmp	r3, #0
   85962:	d1e9      	bne.n	85938 <__sfvwrite_r+0x30>
   85964:	2000      	movs	r0, #0
   85966:	b003      	add	sp, #12
   85968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8596c:	4648      	mov	r0, r9
   8596e:	4621      	mov	r1, r4
   85970:	f7fe fcd0 	bl	84314 <__swsetup_r>
   85974:	2800      	cmp	r0, #0
   85976:	f040 8148 	bne.w	85c0a <__sfvwrite_r+0x302>
   8597a:	89a3      	ldrh	r3, [r4, #12]
   8597c:	6835      	ldr	r5, [r6, #0]
   8597e:	f003 0202 	and.w	r2, r3, #2
   85982:	b292      	uxth	r2, r2
   85984:	2a00      	cmp	r2, #0
   85986:	d1d2      	bne.n	8592e <__sfvwrite_r+0x26>
   85988:	f013 0a01 	ands.w	sl, r3, #1
   8598c:	d142      	bne.n	85a14 <__sfvwrite_r+0x10c>
   8598e:	46d0      	mov	r8, sl
   85990:	f1b8 0f00 	cmp.w	r8, #0
   85994:	d023      	beq.n	859de <__sfvwrite_r+0xd6>
   85996:	059a      	lsls	r2, r3, #22
   85998:	68a7      	ldr	r7, [r4, #8]
   8599a:	d576      	bpl.n	85a8a <__sfvwrite_r+0x182>
   8599c:	45b8      	cmp	r8, r7
   8599e:	f0c0 80a4 	bcc.w	85aea <__sfvwrite_r+0x1e2>
   859a2:	f413 6f90 	tst.w	r3, #1152	; 0x480
   859a6:	f040 80b2 	bne.w	85b0e <__sfvwrite_r+0x206>
   859aa:	6820      	ldr	r0, [r4, #0]
   859ac:	46bb      	mov	fp, r7
   859ae:	4651      	mov	r1, sl
   859b0:	465a      	mov	r2, fp
   859b2:	f000 fd3b 	bl	8642c <memmove>
   859b6:	68a2      	ldr	r2, [r4, #8]
   859b8:	6821      	ldr	r1, [r4, #0]
   859ba:	1bd2      	subs	r2, r2, r7
   859bc:	eb01 030b 	add.w	r3, r1, fp
   859c0:	60a2      	str	r2, [r4, #8]
   859c2:	6023      	str	r3, [r4, #0]
   859c4:	4642      	mov	r2, r8
   859c6:	68b3      	ldr	r3, [r6, #8]
   859c8:	4492      	add	sl, r2
   859ca:	1a9b      	subs	r3, r3, r2
   859cc:	ebc2 0808 	rsb	r8, r2, r8
   859d0:	60b3      	str	r3, [r6, #8]
   859d2:	2b00      	cmp	r3, #0
   859d4:	d0c6      	beq.n	85964 <__sfvwrite_r+0x5c>
   859d6:	89a3      	ldrh	r3, [r4, #12]
   859d8:	f1b8 0f00 	cmp.w	r8, #0
   859dc:	d1db      	bne.n	85996 <__sfvwrite_r+0x8e>
   859de:	f8d5 a000 	ldr.w	sl, [r5]
   859e2:	f8d5 8004 	ldr.w	r8, [r5, #4]
   859e6:	3508      	adds	r5, #8
   859e8:	e7d2      	b.n	85990 <__sfvwrite_r+0x88>
   859ea:	f8d5 a000 	ldr.w	sl, [r5]
   859ee:	f8d5 8004 	ldr.w	r8, [r5, #4]
   859f2:	3508      	adds	r5, #8
   859f4:	e7a0      	b.n	85938 <__sfvwrite_r+0x30>
   859f6:	4648      	mov	r0, r9
   859f8:	4621      	mov	r1, r4
   859fa:	f7ff fd59 	bl	854b0 <_fflush_r>
   859fe:	2800      	cmp	r0, #0
   85a00:	d059      	beq.n	85ab6 <__sfvwrite_r+0x1ae>
   85a02:	89a3      	ldrh	r3, [r4, #12]
   85a04:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   85a08:	f04f 30ff 	mov.w	r0, #4294967295
   85a0c:	81a3      	strh	r3, [r4, #12]
   85a0e:	b003      	add	sp, #12
   85a10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85a14:	4692      	mov	sl, r2
   85a16:	9201      	str	r2, [sp, #4]
   85a18:	4693      	mov	fp, r2
   85a1a:	4690      	mov	r8, r2
   85a1c:	f1b8 0f00 	cmp.w	r8, #0
   85a20:	d02b      	beq.n	85a7a <__sfvwrite_r+0x172>
   85a22:	9f01      	ldr	r7, [sp, #4]
   85a24:	2f00      	cmp	r7, #0
   85a26:	d064      	beq.n	85af2 <__sfvwrite_r+0x1ea>
   85a28:	6820      	ldr	r0, [r4, #0]
   85a2a:	6921      	ldr	r1, [r4, #16]
   85a2c:	45c2      	cmp	sl, r8
   85a2e:	bf34      	ite	cc
   85a30:	4653      	movcc	r3, sl
   85a32:	4643      	movcs	r3, r8
   85a34:	4288      	cmp	r0, r1
   85a36:	461f      	mov	r7, r3
   85a38:	f8d4 c008 	ldr.w	ip, [r4, #8]
   85a3c:	6962      	ldr	r2, [r4, #20]
   85a3e:	d903      	bls.n	85a48 <__sfvwrite_r+0x140>
   85a40:	4494      	add	ip, r2
   85a42:	4563      	cmp	r3, ip
   85a44:	f300 80ae 	bgt.w	85ba4 <__sfvwrite_r+0x29c>
   85a48:	4293      	cmp	r3, r2
   85a4a:	db36      	blt.n	85aba <__sfvwrite_r+0x1b2>
   85a4c:	4613      	mov	r3, r2
   85a4e:	6a67      	ldr	r7, [r4, #36]	; 0x24
   85a50:	4648      	mov	r0, r9
   85a52:	69e1      	ldr	r1, [r4, #28]
   85a54:	465a      	mov	r2, fp
   85a56:	47b8      	blx	r7
   85a58:	1e07      	subs	r7, r0, #0
   85a5a:	ddd2      	ble.n	85a02 <__sfvwrite_r+0xfa>
   85a5c:	ebba 0a07 	subs.w	sl, sl, r7
   85a60:	d03a      	beq.n	85ad8 <__sfvwrite_r+0x1d0>
   85a62:	68b3      	ldr	r3, [r6, #8]
   85a64:	44bb      	add	fp, r7
   85a66:	1bdb      	subs	r3, r3, r7
   85a68:	ebc7 0808 	rsb	r8, r7, r8
   85a6c:	60b3      	str	r3, [r6, #8]
   85a6e:	2b00      	cmp	r3, #0
   85a70:	f43f af78 	beq.w	85964 <__sfvwrite_r+0x5c>
   85a74:	f1b8 0f00 	cmp.w	r8, #0
   85a78:	d1d3      	bne.n	85a22 <__sfvwrite_r+0x11a>
   85a7a:	2700      	movs	r7, #0
   85a7c:	f8d5 b000 	ldr.w	fp, [r5]
   85a80:	f8d5 8004 	ldr.w	r8, [r5, #4]
   85a84:	9701      	str	r7, [sp, #4]
   85a86:	3508      	adds	r5, #8
   85a88:	e7c8      	b.n	85a1c <__sfvwrite_r+0x114>
   85a8a:	6820      	ldr	r0, [r4, #0]
   85a8c:	6923      	ldr	r3, [r4, #16]
   85a8e:	4298      	cmp	r0, r3
   85a90:	d802      	bhi.n	85a98 <__sfvwrite_r+0x190>
   85a92:	6963      	ldr	r3, [r4, #20]
   85a94:	4598      	cmp	r8, r3
   85a96:	d272      	bcs.n	85b7e <__sfvwrite_r+0x276>
   85a98:	45b8      	cmp	r8, r7
   85a9a:	bf38      	it	cc
   85a9c:	4647      	movcc	r7, r8
   85a9e:	463a      	mov	r2, r7
   85aa0:	4651      	mov	r1, sl
   85aa2:	f000 fcc3 	bl	8642c <memmove>
   85aa6:	68a3      	ldr	r3, [r4, #8]
   85aa8:	6822      	ldr	r2, [r4, #0]
   85aaa:	1bdb      	subs	r3, r3, r7
   85aac:	443a      	add	r2, r7
   85aae:	60a3      	str	r3, [r4, #8]
   85ab0:	6022      	str	r2, [r4, #0]
   85ab2:	2b00      	cmp	r3, #0
   85ab4:	d09f      	beq.n	859f6 <__sfvwrite_r+0xee>
   85ab6:	463a      	mov	r2, r7
   85ab8:	e785      	b.n	859c6 <__sfvwrite_r+0xbe>
   85aba:	461a      	mov	r2, r3
   85abc:	4659      	mov	r1, fp
   85abe:	9300      	str	r3, [sp, #0]
   85ac0:	f000 fcb4 	bl	8642c <memmove>
   85ac4:	9b00      	ldr	r3, [sp, #0]
   85ac6:	68a1      	ldr	r1, [r4, #8]
   85ac8:	6822      	ldr	r2, [r4, #0]
   85aca:	1ac9      	subs	r1, r1, r3
   85acc:	ebba 0a07 	subs.w	sl, sl, r7
   85ad0:	4413      	add	r3, r2
   85ad2:	60a1      	str	r1, [r4, #8]
   85ad4:	6023      	str	r3, [r4, #0]
   85ad6:	d1c4      	bne.n	85a62 <__sfvwrite_r+0x15a>
   85ad8:	4648      	mov	r0, r9
   85ada:	4621      	mov	r1, r4
   85adc:	f7ff fce8 	bl	854b0 <_fflush_r>
   85ae0:	2800      	cmp	r0, #0
   85ae2:	d18e      	bne.n	85a02 <__sfvwrite_r+0xfa>
   85ae4:	f8cd a004 	str.w	sl, [sp, #4]
   85ae8:	e7bb      	b.n	85a62 <__sfvwrite_r+0x15a>
   85aea:	6820      	ldr	r0, [r4, #0]
   85aec:	4647      	mov	r7, r8
   85aee:	46c3      	mov	fp, r8
   85af0:	e75d      	b.n	859ae <__sfvwrite_r+0xa6>
   85af2:	4658      	mov	r0, fp
   85af4:	210a      	movs	r1, #10
   85af6:	4642      	mov	r2, r8
   85af8:	f000 fbd8 	bl	862ac <memchr>
   85afc:	2800      	cmp	r0, #0
   85afe:	d07f      	beq.n	85c00 <__sfvwrite_r+0x2f8>
   85b00:	f100 0a01 	add.w	sl, r0, #1
   85b04:	2701      	movs	r7, #1
   85b06:	ebcb 0a0a 	rsb	sl, fp, sl
   85b0a:	9701      	str	r7, [sp, #4]
   85b0c:	e78c      	b.n	85a28 <__sfvwrite_r+0x120>
   85b0e:	6822      	ldr	r2, [r4, #0]
   85b10:	6921      	ldr	r1, [r4, #16]
   85b12:	6967      	ldr	r7, [r4, #20]
   85b14:	ebc1 0c02 	rsb	ip, r1, r2
   85b18:	eb07 0747 	add.w	r7, r7, r7, lsl #1
   85b1c:	f10c 0201 	add.w	r2, ip, #1
   85b20:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
   85b24:	4442      	add	r2, r8
   85b26:	107f      	asrs	r7, r7, #1
   85b28:	4297      	cmp	r7, r2
   85b2a:	bf34      	ite	cc
   85b2c:	4617      	movcc	r7, r2
   85b2e:	463a      	movcs	r2, r7
   85b30:	055b      	lsls	r3, r3, #21
   85b32:	d54f      	bpl.n	85bd4 <__sfvwrite_r+0x2cc>
   85b34:	4611      	mov	r1, r2
   85b36:	4648      	mov	r0, r9
   85b38:	f8cd c000 	str.w	ip, [sp]
   85b3c:	f000 f91a 	bl	85d74 <_malloc_r>
   85b40:	f8dd c000 	ldr.w	ip, [sp]
   85b44:	4683      	mov	fp, r0
   85b46:	2800      	cmp	r0, #0
   85b48:	d062      	beq.n	85c10 <__sfvwrite_r+0x308>
   85b4a:	4662      	mov	r2, ip
   85b4c:	6921      	ldr	r1, [r4, #16]
   85b4e:	f8cd c000 	str.w	ip, [sp]
   85b52:	f000 fbf5 	bl	86340 <memcpy>
   85b56:	89a2      	ldrh	r2, [r4, #12]
   85b58:	f8dd c000 	ldr.w	ip, [sp]
   85b5c:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   85b60:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   85b64:	81a2      	strh	r2, [r4, #12]
   85b66:	eb0b 000c 	add.w	r0, fp, ip
   85b6a:	ebcc 0207 	rsb	r2, ip, r7
   85b6e:	f8c4 b010 	str.w	fp, [r4, #16]
   85b72:	6167      	str	r7, [r4, #20]
   85b74:	6020      	str	r0, [r4, #0]
   85b76:	60a2      	str	r2, [r4, #8]
   85b78:	4647      	mov	r7, r8
   85b7a:	46c3      	mov	fp, r8
   85b7c:	e717      	b.n	859ae <__sfvwrite_r+0xa6>
   85b7e:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
   85b82:	4590      	cmp	r8, r2
   85b84:	bf38      	it	cc
   85b86:	4642      	movcc	r2, r8
   85b88:	fb92 f2f3 	sdiv	r2, r2, r3
   85b8c:	fb02 f303 	mul.w	r3, r2, r3
   85b90:	6a67      	ldr	r7, [r4, #36]	; 0x24
   85b92:	4648      	mov	r0, r9
   85b94:	69e1      	ldr	r1, [r4, #28]
   85b96:	4652      	mov	r2, sl
   85b98:	47b8      	blx	r7
   85b9a:	2800      	cmp	r0, #0
   85b9c:	f77f af31 	ble.w	85a02 <__sfvwrite_r+0xfa>
   85ba0:	4602      	mov	r2, r0
   85ba2:	e710      	b.n	859c6 <__sfvwrite_r+0xbe>
   85ba4:	4662      	mov	r2, ip
   85ba6:	4659      	mov	r1, fp
   85ba8:	f8cd c000 	str.w	ip, [sp]
   85bac:	f000 fc3e 	bl	8642c <memmove>
   85bb0:	f8dd c000 	ldr.w	ip, [sp]
   85bb4:	6823      	ldr	r3, [r4, #0]
   85bb6:	4648      	mov	r0, r9
   85bb8:	4463      	add	r3, ip
   85bba:	6023      	str	r3, [r4, #0]
   85bbc:	4621      	mov	r1, r4
   85bbe:	f8cd c000 	str.w	ip, [sp]
   85bc2:	f7ff fc75 	bl	854b0 <_fflush_r>
   85bc6:	f8dd c000 	ldr.w	ip, [sp]
   85bca:	2800      	cmp	r0, #0
   85bcc:	f47f af19 	bne.w	85a02 <__sfvwrite_r+0xfa>
   85bd0:	4667      	mov	r7, ip
   85bd2:	e743      	b.n	85a5c <__sfvwrite_r+0x154>
   85bd4:	4648      	mov	r0, r9
   85bd6:	f8cd c000 	str.w	ip, [sp]
   85bda:	f000 ff9b 	bl	86b14 <_realloc_r>
   85bde:	f8dd c000 	ldr.w	ip, [sp]
   85be2:	4683      	mov	fp, r0
   85be4:	2800      	cmp	r0, #0
   85be6:	d1be      	bne.n	85b66 <__sfvwrite_r+0x25e>
   85be8:	4648      	mov	r0, r9
   85bea:	6921      	ldr	r1, [r4, #16]
   85bec:	f7ff fdc0 	bl	85770 <_free_r>
   85bf0:	89a3      	ldrh	r3, [r4, #12]
   85bf2:	220c      	movs	r2, #12
   85bf4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   85bf8:	b29b      	uxth	r3, r3
   85bfa:	f8c9 2000 	str.w	r2, [r9]
   85bfe:	e701      	b.n	85a04 <__sfvwrite_r+0xfc>
   85c00:	2701      	movs	r7, #1
   85c02:	f108 0a01 	add.w	sl, r8, #1
   85c06:	9701      	str	r7, [sp, #4]
   85c08:	e70e      	b.n	85a28 <__sfvwrite_r+0x120>
   85c0a:	f04f 30ff 	mov.w	r0, #4294967295
   85c0e:	e6aa      	b.n	85966 <__sfvwrite_r+0x5e>
   85c10:	230c      	movs	r3, #12
   85c12:	f8c9 3000 	str.w	r3, [r9]
   85c16:	89a3      	ldrh	r3, [r4, #12]
   85c18:	e6f4      	b.n	85a04 <__sfvwrite_r+0xfc>
   85c1a:	bf00      	nop
   85c1c:	7ffffc00 	.word	0x7ffffc00

00085c20 <_fwalk>:
   85c20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   85c24:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
   85c28:	4688      	mov	r8, r1
   85c2a:	d019      	beq.n	85c60 <_fwalk+0x40>
   85c2c:	2600      	movs	r6, #0
   85c2e:	687d      	ldr	r5, [r7, #4]
   85c30:	68bc      	ldr	r4, [r7, #8]
   85c32:	3d01      	subs	r5, #1
   85c34:	d40e      	bmi.n	85c54 <_fwalk+0x34>
   85c36:	89a3      	ldrh	r3, [r4, #12]
   85c38:	3d01      	subs	r5, #1
   85c3a:	2b01      	cmp	r3, #1
   85c3c:	d906      	bls.n	85c4c <_fwalk+0x2c>
   85c3e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   85c42:	4620      	mov	r0, r4
   85c44:	3301      	adds	r3, #1
   85c46:	d001      	beq.n	85c4c <_fwalk+0x2c>
   85c48:	47c0      	blx	r8
   85c4a:	4306      	orrs	r6, r0
   85c4c:	1c6b      	adds	r3, r5, #1
   85c4e:	f104 0468 	add.w	r4, r4, #104	; 0x68
   85c52:	d1f0      	bne.n	85c36 <_fwalk+0x16>
   85c54:	683f      	ldr	r7, [r7, #0]
   85c56:	2f00      	cmp	r7, #0
   85c58:	d1e9      	bne.n	85c2e <_fwalk+0xe>
   85c5a:	4630      	mov	r0, r6
   85c5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   85c60:	463e      	mov	r6, r7
   85c62:	4630      	mov	r0, r6
   85c64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00085c68 <__locale_charset>:
   85c68:	4800      	ldr	r0, [pc, #0]	; (85c6c <__locale_charset+0x4>)
   85c6a:	4770      	bx	lr
   85c6c:	2007059c 	.word	0x2007059c

00085c70 <__locale_mb_cur_max>:
   85c70:	4b01      	ldr	r3, [pc, #4]	; (85c78 <__locale_mb_cur_max+0x8>)
   85c72:	6818      	ldr	r0, [r3, #0]
   85c74:	4770      	bx	lr
   85c76:	bf00      	nop
   85c78:	200705bc 	.word	0x200705bc

00085c7c <_localeconv_r>:
   85c7c:	4800      	ldr	r0, [pc, #0]	; (85c80 <_localeconv_r+0x4>)
   85c7e:	4770      	bx	lr
   85c80:	20070564 	.word	0x20070564

00085c84 <__smakebuf_r>:
   85c84:	b5f0      	push	{r4, r5, r6, r7, lr}
   85c86:	898b      	ldrh	r3, [r1, #12]
   85c88:	b091      	sub	sp, #68	; 0x44
   85c8a:	b29a      	uxth	r2, r3
   85c8c:	0796      	lsls	r6, r2, #30
   85c8e:	460c      	mov	r4, r1
   85c90:	4605      	mov	r5, r0
   85c92:	d437      	bmi.n	85d04 <__smakebuf_r+0x80>
   85c94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   85c98:	2900      	cmp	r1, #0
   85c9a:	db17      	blt.n	85ccc <__smakebuf_r+0x48>
   85c9c:	aa01      	add	r2, sp, #4
   85c9e:	f001 fb45 	bl	8732c <_fstat_r>
   85ca2:	2800      	cmp	r0, #0
   85ca4:	db10      	blt.n	85cc8 <__smakebuf_r+0x44>
   85ca6:	9b02      	ldr	r3, [sp, #8]
   85ca8:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
   85cac:	f5b3 5100 	subs.w	r1, r3, #8192	; 0x2000
   85cb0:	424f      	negs	r7, r1
   85cb2:	414f      	adcs	r7, r1
   85cb4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   85cb8:	d02c      	beq.n	85d14 <__smakebuf_r+0x90>
   85cba:	89a3      	ldrh	r3, [r4, #12]
   85cbc:	f44f 6680 	mov.w	r6, #1024	; 0x400
   85cc0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   85cc4:	81a3      	strh	r3, [r4, #12]
   85cc6:	e00b      	b.n	85ce0 <__smakebuf_r+0x5c>
   85cc8:	89a3      	ldrh	r3, [r4, #12]
   85cca:	b29a      	uxth	r2, r3
   85ccc:	f012 0f80 	tst.w	r2, #128	; 0x80
   85cd0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   85cd4:	81a3      	strh	r3, [r4, #12]
   85cd6:	bf14      	ite	ne
   85cd8:	2640      	movne	r6, #64	; 0x40
   85cda:	f44f 6680 	moveq.w	r6, #1024	; 0x400
   85cde:	2700      	movs	r7, #0
   85ce0:	4628      	mov	r0, r5
   85ce2:	4631      	mov	r1, r6
   85ce4:	f000 f846 	bl	85d74 <_malloc_r>
   85ce8:	89a3      	ldrh	r3, [r4, #12]
   85cea:	2800      	cmp	r0, #0
   85cec:	d029      	beq.n	85d42 <__smakebuf_r+0xbe>
   85cee:	4a1b      	ldr	r2, [pc, #108]	; (85d5c <__smakebuf_r+0xd8>)
   85cf0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   85cf4:	63ea      	str	r2, [r5, #60]	; 0x3c
   85cf6:	81a3      	strh	r3, [r4, #12]
   85cf8:	6020      	str	r0, [r4, #0]
   85cfa:	6120      	str	r0, [r4, #16]
   85cfc:	6166      	str	r6, [r4, #20]
   85cfe:	b9a7      	cbnz	r7, 85d2a <__smakebuf_r+0xa6>
   85d00:	b011      	add	sp, #68	; 0x44
   85d02:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85d04:	f101 0343 	add.w	r3, r1, #67	; 0x43
   85d08:	2201      	movs	r2, #1
   85d0a:	600b      	str	r3, [r1, #0]
   85d0c:	610b      	str	r3, [r1, #16]
   85d0e:	614a      	str	r2, [r1, #20]
   85d10:	b011      	add	sp, #68	; 0x44
   85d12:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85d14:	4a12      	ldr	r2, [pc, #72]	; (85d60 <__smakebuf_r+0xdc>)
   85d16:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   85d18:	4293      	cmp	r3, r2
   85d1a:	d1ce      	bne.n	85cba <__smakebuf_r+0x36>
   85d1c:	89a3      	ldrh	r3, [r4, #12]
   85d1e:	f44f 6680 	mov.w	r6, #1024	; 0x400
   85d22:	4333      	orrs	r3, r6
   85d24:	81a3      	strh	r3, [r4, #12]
   85d26:	64e6      	str	r6, [r4, #76]	; 0x4c
   85d28:	e7da      	b.n	85ce0 <__smakebuf_r+0x5c>
   85d2a:	4628      	mov	r0, r5
   85d2c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   85d30:	f001 fb10 	bl	87354 <_isatty_r>
   85d34:	2800      	cmp	r0, #0
   85d36:	d0e3      	beq.n	85d00 <__smakebuf_r+0x7c>
   85d38:	89a3      	ldrh	r3, [r4, #12]
   85d3a:	f043 0301 	orr.w	r3, r3, #1
   85d3e:	81a3      	strh	r3, [r4, #12]
   85d40:	e7de      	b.n	85d00 <__smakebuf_r+0x7c>
   85d42:	059a      	lsls	r2, r3, #22
   85d44:	d4dc      	bmi.n	85d00 <__smakebuf_r+0x7c>
   85d46:	f104 0243 	add.w	r2, r4, #67	; 0x43
   85d4a:	f043 0302 	orr.w	r3, r3, #2
   85d4e:	2101      	movs	r1, #1
   85d50:	81a3      	strh	r3, [r4, #12]
   85d52:	6022      	str	r2, [r4, #0]
   85d54:	6122      	str	r2, [r4, #16]
   85d56:	6161      	str	r1, [r4, #20]
   85d58:	e7d2      	b.n	85d00 <__smakebuf_r+0x7c>
   85d5a:	bf00      	nop
   85d5c:	000854dd 	.word	0x000854dd
   85d60:	00086f55 	.word	0x00086f55

00085d64 <malloc>:
   85d64:	4b02      	ldr	r3, [pc, #8]	; (85d70 <malloc+0xc>)
   85d66:	4601      	mov	r1, r0
   85d68:	6818      	ldr	r0, [r3, #0]
   85d6a:	f000 b803 	b.w	85d74 <_malloc_r>
   85d6e:	bf00      	nop
   85d70:	20070560 	.word	0x20070560

00085d74 <_malloc_r>:
   85d74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85d78:	f101 050b 	add.w	r5, r1, #11
   85d7c:	2d16      	cmp	r5, #22
   85d7e:	b083      	sub	sp, #12
   85d80:	4606      	mov	r6, r0
   85d82:	d927      	bls.n	85dd4 <_malloc_r+0x60>
   85d84:	f035 0507 	bics.w	r5, r5, #7
   85d88:	d427      	bmi.n	85dda <_malloc_r+0x66>
   85d8a:	42a9      	cmp	r1, r5
   85d8c:	d825      	bhi.n	85dda <_malloc_r+0x66>
   85d8e:	4630      	mov	r0, r6
   85d90:	f000 fbb2 	bl	864f8 <__malloc_lock>
   85d94:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
   85d98:	d226      	bcs.n	85de8 <_malloc_r+0x74>
   85d9a:	4fc1      	ldr	r7, [pc, #772]	; (860a0 <_malloc_r+0x32c>)
   85d9c:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
   85da0:	eb07 03cc 	add.w	r3, r7, ip, lsl #3
   85da4:	68dc      	ldr	r4, [r3, #12]
   85da6:	429c      	cmp	r4, r3
   85da8:	f000 81d2 	beq.w	86150 <_malloc_r+0x3dc>
   85dac:	6863      	ldr	r3, [r4, #4]
   85dae:	68e2      	ldr	r2, [r4, #12]
   85db0:	f023 0303 	bic.w	r3, r3, #3
   85db4:	4423      	add	r3, r4
   85db6:	6858      	ldr	r0, [r3, #4]
   85db8:	68a1      	ldr	r1, [r4, #8]
   85dba:	f040 0501 	orr.w	r5, r0, #1
   85dbe:	60ca      	str	r2, [r1, #12]
   85dc0:	4630      	mov	r0, r6
   85dc2:	6091      	str	r1, [r2, #8]
   85dc4:	605d      	str	r5, [r3, #4]
   85dc6:	f000 fb99 	bl	864fc <__malloc_unlock>
   85dca:	3408      	adds	r4, #8
   85dcc:	4620      	mov	r0, r4
   85dce:	b003      	add	sp, #12
   85dd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85dd4:	2510      	movs	r5, #16
   85dd6:	42a9      	cmp	r1, r5
   85dd8:	d9d9      	bls.n	85d8e <_malloc_r+0x1a>
   85dda:	2400      	movs	r4, #0
   85ddc:	230c      	movs	r3, #12
   85dde:	4620      	mov	r0, r4
   85de0:	6033      	str	r3, [r6, #0]
   85de2:	b003      	add	sp, #12
   85de4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85de8:	ea5f 2c55 	movs.w	ip, r5, lsr #9
   85dec:	f000 8089 	beq.w	85f02 <_malloc_r+0x18e>
   85df0:	f1bc 0f04 	cmp.w	ip, #4
   85df4:	f200 8160 	bhi.w	860b8 <_malloc_r+0x344>
   85df8:	ea4f 1c95 	mov.w	ip, r5, lsr #6
   85dfc:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
   85e00:	ea4f 014c 	mov.w	r1, ip, lsl #1
   85e04:	4fa6      	ldr	r7, [pc, #664]	; (860a0 <_malloc_r+0x32c>)
   85e06:	eb07 0181 	add.w	r1, r7, r1, lsl #2
   85e0a:	68cc      	ldr	r4, [r1, #12]
   85e0c:	42a1      	cmp	r1, r4
   85e0e:	d105      	bne.n	85e1c <_malloc_r+0xa8>
   85e10:	e00c      	b.n	85e2c <_malloc_r+0xb8>
   85e12:	2b00      	cmp	r3, #0
   85e14:	da79      	bge.n	85f0a <_malloc_r+0x196>
   85e16:	68e4      	ldr	r4, [r4, #12]
   85e18:	42a1      	cmp	r1, r4
   85e1a:	d007      	beq.n	85e2c <_malloc_r+0xb8>
   85e1c:	6862      	ldr	r2, [r4, #4]
   85e1e:	f022 0203 	bic.w	r2, r2, #3
   85e22:	1b53      	subs	r3, r2, r5
   85e24:	2b0f      	cmp	r3, #15
   85e26:	ddf4      	ble.n	85e12 <_malloc_r+0x9e>
   85e28:	f10c 3cff 	add.w	ip, ip, #4294967295
   85e2c:	f10c 0c01 	add.w	ip, ip, #1
   85e30:	4b9b      	ldr	r3, [pc, #620]	; (860a0 <_malloc_r+0x32c>)
   85e32:	693c      	ldr	r4, [r7, #16]
   85e34:	f103 0e08 	add.w	lr, r3, #8
   85e38:	4574      	cmp	r4, lr
   85e3a:	f000 817e 	beq.w	8613a <_malloc_r+0x3c6>
   85e3e:	6861      	ldr	r1, [r4, #4]
   85e40:	f021 0103 	bic.w	r1, r1, #3
   85e44:	1b4a      	subs	r2, r1, r5
   85e46:	2a0f      	cmp	r2, #15
   85e48:	f300 8164 	bgt.w	86114 <_malloc_r+0x3a0>
   85e4c:	2a00      	cmp	r2, #0
   85e4e:	f8c3 e014 	str.w	lr, [r3, #20]
   85e52:	f8c3 e010 	str.w	lr, [r3, #16]
   85e56:	da69      	bge.n	85f2c <_malloc_r+0x1b8>
   85e58:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   85e5c:	f080 813a 	bcs.w	860d4 <_malloc_r+0x360>
   85e60:	08c9      	lsrs	r1, r1, #3
   85e62:	108a      	asrs	r2, r1, #2
   85e64:	f04f 0801 	mov.w	r8, #1
   85e68:	fa08 f802 	lsl.w	r8, r8, r2
   85e6c:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   85e70:	685a      	ldr	r2, [r3, #4]
   85e72:	6888      	ldr	r0, [r1, #8]
   85e74:	ea48 0202 	orr.w	r2, r8, r2
   85e78:	60a0      	str	r0, [r4, #8]
   85e7a:	60e1      	str	r1, [r4, #12]
   85e7c:	605a      	str	r2, [r3, #4]
   85e7e:	608c      	str	r4, [r1, #8]
   85e80:	60c4      	str	r4, [r0, #12]
   85e82:	ea4f 03ac 	mov.w	r3, ip, asr #2
   85e86:	2001      	movs	r0, #1
   85e88:	4098      	lsls	r0, r3
   85e8a:	4290      	cmp	r0, r2
   85e8c:	d85b      	bhi.n	85f46 <_malloc_r+0x1d2>
   85e8e:	4202      	tst	r2, r0
   85e90:	d106      	bne.n	85ea0 <_malloc_r+0x12c>
   85e92:	f02c 0c03 	bic.w	ip, ip, #3
   85e96:	0040      	lsls	r0, r0, #1
   85e98:	4202      	tst	r2, r0
   85e9a:	f10c 0c04 	add.w	ip, ip, #4
   85e9e:	d0fa      	beq.n	85e96 <_malloc_r+0x122>
   85ea0:	eb07 08cc 	add.w	r8, r7, ip, lsl #3
   85ea4:	4644      	mov	r4, r8
   85ea6:	46e1      	mov	r9, ip
   85ea8:	68e3      	ldr	r3, [r4, #12]
   85eaa:	429c      	cmp	r4, r3
   85eac:	d107      	bne.n	85ebe <_malloc_r+0x14a>
   85eae:	e146      	b.n	8613e <_malloc_r+0x3ca>
   85eb0:	2a00      	cmp	r2, #0
   85eb2:	f280 8157 	bge.w	86164 <_malloc_r+0x3f0>
   85eb6:	68db      	ldr	r3, [r3, #12]
   85eb8:	429c      	cmp	r4, r3
   85eba:	f000 8140 	beq.w	8613e <_malloc_r+0x3ca>
   85ebe:	6859      	ldr	r1, [r3, #4]
   85ec0:	f021 0103 	bic.w	r1, r1, #3
   85ec4:	1b4a      	subs	r2, r1, r5
   85ec6:	2a0f      	cmp	r2, #15
   85ec8:	ddf2      	ble.n	85eb0 <_malloc_r+0x13c>
   85eca:	461c      	mov	r4, r3
   85ecc:	f854 cf08 	ldr.w	ip, [r4, #8]!
   85ed0:	68d9      	ldr	r1, [r3, #12]
   85ed2:	f045 0901 	orr.w	r9, r5, #1
   85ed6:	f042 0801 	orr.w	r8, r2, #1
   85eda:	441d      	add	r5, r3
   85edc:	f8c3 9004 	str.w	r9, [r3, #4]
   85ee0:	4630      	mov	r0, r6
   85ee2:	f8cc 100c 	str.w	r1, [ip, #12]
   85ee6:	f8c1 c008 	str.w	ip, [r1, #8]
   85eea:	617d      	str	r5, [r7, #20]
   85eec:	613d      	str	r5, [r7, #16]
   85eee:	f8c5 e00c 	str.w	lr, [r5, #12]
   85ef2:	f8c5 e008 	str.w	lr, [r5, #8]
   85ef6:	f8c5 8004 	str.w	r8, [r5, #4]
   85efa:	50aa      	str	r2, [r5, r2]
   85efc:	f000 fafe 	bl	864fc <__malloc_unlock>
   85f00:	e764      	b.n	85dcc <_malloc_r+0x58>
   85f02:	217e      	movs	r1, #126	; 0x7e
   85f04:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
   85f08:	e77c      	b.n	85e04 <_malloc_r+0x90>
   85f0a:	4422      	add	r2, r4
   85f0c:	6850      	ldr	r0, [r2, #4]
   85f0e:	68e3      	ldr	r3, [r4, #12]
   85f10:	68a1      	ldr	r1, [r4, #8]
   85f12:	f040 0501 	orr.w	r5, r0, #1
   85f16:	60cb      	str	r3, [r1, #12]
   85f18:	4630      	mov	r0, r6
   85f1a:	6099      	str	r1, [r3, #8]
   85f1c:	6055      	str	r5, [r2, #4]
   85f1e:	f000 faed 	bl	864fc <__malloc_unlock>
   85f22:	3408      	adds	r4, #8
   85f24:	4620      	mov	r0, r4
   85f26:	b003      	add	sp, #12
   85f28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85f2c:	4421      	add	r1, r4
   85f2e:	684b      	ldr	r3, [r1, #4]
   85f30:	4630      	mov	r0, r6
   85f32:	f043 0301 	orr.w	r3, r3, #1
   85f36:	604b      	str	r3, [r1, #4]
   85f38:	f000 fae0 	bl	864fc <__malloc_unlock>
   85f3c:	3408      	adds	r4, #8
   85f3e:	4620      	mov	r0, r4
   85f40:	b003      	add	sp, #12
   85f42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85f46:	68bc      	ldr	r4, [r7, #8]
   85f48:	6863      	ldr	r3, [r4, #4]
   85f4a:	f023 0903 	bic.w	r9, r3, #3
   85f4e:	45a9      	cmp	r9, r5
   85f50:	d304      	bcc.n	85f5c <_malloc_r+0x1e8>
   85f52:	ebc5 0309 	rsb	r3, r5, r9
   85f56:	2b0f      	cmp	r3, #15
   85f58:	f300 8091 	bgt.w	8607e <_malloc_r+0x30a>
   85f5c:	4b51      	ldr	r3, [pc, #324]	; (860a4 <_malloc_r+0x330>)
   85f5e:	4a52      	ldr	r2, [pc, #328]	; (860a8 <_malloc_r+0x334>)
   85f60:	6819      	ldr	r1, [r3, #0]
   85f62:	6813      	ldr	r3, [r2, #0]
   85f64:	eb05 0a01 	add.w	sl, r5, r1
   85f68:	3301      	adds	r3, #1
   85f6a:	eb04 0b09 	add.w	fp, r4, r9
   85f6e:	f000 8161 	beq.w	86234 <_malloc_r+0x4c0>
   85f72:	f50a 5a80 	add.w	sl, sl, #4096	; 0x1000
   85f76:	f10a 0a0f 	add.w	sl, sl, #15
   85f7a:	f42a 6a7f 	bic.w	sl, sl, #4080	; 0xff0
   85f7e:	f02a 0a0f 	bic.w	sl, sl, #15
   85f82:	4630      	mov	r0, r6
   85f84:	4651      	mov	r1, sl
   85f86:	9201      	str	r2, [sp, #4]
   85f88:	f000 ffa4 	bl	86ed4 <_sbrk_r>
   85f8c:	f1b0 3fff 	cmp.w	r0, #4294967295
   85f90:	4680      	mov	r8, r0
   85f92:	9a01      	ldr	r2, [sp, #4]
   85f94:	f000 8101 	beq.w	8619a <_malloc_r+0x426>
   85f98:	4583      	cmp	fp, r0
   85f9a:	f200 80fb 	bhi.w	86194 <_malloc_r+0x420>
   85f9e:	f8df c114 	ldr.w	ip, [pc, #276]	; 860b4 <_malloc_r+0x340>
   85fa2:	45c3      	cmp	fp, r8
   85fa4:	f8dc 3000 	ldr.w	r3, [ip]
   85fa8:	4453      	add	r3, sl
   85faa:	f8cc 3000 	str.w	r3, [ip]
   85fae:	f000 814a 	beq.w	86246 <_malloc_r+0x4d2>
   85fb2:	6812      	ldr	r2, [r2, #0]
   85fb4:	493c      	ldr	r1, [pc, #240]	; (860a8 <_malloc_r+0x334>)
   85fb6:	3201      	adds	r2, #1
   85fb8:	bf1b      	ittet	ne
   85fba:	ebcb 0b08 	rsbne	fp, fp, r8
   85fbe:	445b      	addne	r3, fp
   85fc0:	f8c1 8000 	streq.w	r8, [r1]
   85fc4:	f8cc 3000 	strne.w	r3, [ip]
   85fc8:	f018 0307 	ands.w	r3, r8, #7
   85fcc:	f000 8114 	beq.w	861f8 <_malloc_r+0x484>
   85fd0:	f1c3 0208 	rsb	r2, r3, #8
   85fd4:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
   85fd8:	4490      	add	r8, r2
   85fda:	3308      	adds	r3, #8
   85fdc:	44c2      	add	sl, r8
   85fde:	f3ca 0a0b 	ubfx	sl, sl, #0, #12
   85fe2:	ebca 0a03 	rsb	sl, sl, r3
   85fe6:	4651      	mov	r1, sl
   85fe8:	4630      	mov	r0, r6
   85fea:	f8cd c004 	str.w	ip, [sp, #4]
   85fee:	f000 ff71 	bl	86ed4 <_sbrk_r>
   85ff2:	1c43      	adds	r3, r0, #1
   85ff4:	f8dd c004 	ldr.w	ip, [sp, #4]
   85ff8:	f000 8135 	beq.w	86266 <_malloc_r+0x4f2>
   85ffc:	ebc8 0200 	rsb	r2, r8, r0
   86000:	4452      	add	r2, sl
   86002:	f042 0201 	orr.w	r2, r2, #1
   86006:	f8dc 3000 	ldr.w	r3, [ip]
   8600a:	42bc      	cmp	r4, r7
   8600c:	4453      	add	r3, sl
   8600e:	f8c7 8008 	str.w	r8, [r7, #8]
   86012:	f8cc 3000 	str.w	r3, [ip]
   86016:	f8c8 2004 	str.w	r2, [r8, #4]
   8601a:	f8df a098 	ldr.w	sl, [pc, #152]	; 860b4 <_malloc_r+0x340>
   8601e:	d015      	beq.n	8604c <_malloc_r+0x2d8>
   86020:	f1b9 0f0f 	cmp.w	r9, #15
   86024:	f240 80eb 	bls.w	861fe <_malloc_r+0x48a>
   86028:	6861      	ldr	r1, [r4, #4]
   8602a:	f1a9 020c 	sub.w	r2, r9, #12
   8602e:	f022 0207 	bic.w	r2, r2, #7
   86032:	f001 0101 	and.w	r1, r1, #1
   86036:	ea42 0e01 	orr.w	lr, r2, r1
   8603a:	2005      	movs	r0, #5
   8603c:	18a1      	adds	r1, r4, r2
   8603e:	2a0f      	cmp	r2, #15
   86040:	f8c4 e004 	str.w	lr, [r4, #4]
   86044:	6048      	str	r0, [r1, #4]
   86046:	6088      	str	r0, [r1, #8]
   86048:	f200 8111 	bhi.w	8626e <_malloc_r+0x4fa>
   8604c:	4a17      	ldr	r2, [pc, #92]	; (860ac <_malloc_r+0x338>)
   8604e:	68bc      	ldr	r4, [r7, #8]
   86050:	6811      	ldr	r1, [r2, #0]
   86052:	428b      	cmp	r3, r1
   86054:	bf88      	it	hi
   86056:	6013      	strhi	r3, [r2, #0]
   86058:	4a15      	ldr	r2, [pc, #84]	; (860b0 <_malloc_r+0x33c>)
   8605a:	6811      	ldr	r1, [r2, #0]
   8605c:	428b      	cmp	r3, r1
   8605e:	bf88      	it	hi
   86060:	6013      	strhi	r3, [r2, #0]
   86062:	6862      	ldr	r2, [r4, #4]
   86064:	f022 0203 	bic.w	r2, r2, #3
   86068:	4295      	cmp	r5, r2
   8606a:	ebc5 0302 	rsb	r3, r5, r2
   8606e:	d801      	bhi.n	86074 <_malloc_r+0x300>
   86070:	2b0f      	cmp	r3, #15
   86072:	dc04      	bgt.n	8607e <_malloc_r+0x30a>
   86074:	4630      	mov	r0, r6
   86076:	f000 fa41 	bl	864fc <__malloc_unlock>
   8607a:	2400      	movs	r4, #0
   8607c:	e6a6      	b.n	85dcc <_malloc_r+0x58>
   8607e:	f045 0201 	orr.w	r2, r5, #1
   86082:	f043 0301 	orr.w	r3, r3, #1
   86086:	4425      	add	r5, r4
   86088:	6062      	str	r2, [r4, #4]
   8608a:	4630      	mov	r0, r6
   8608c:	60bd      	str	r5, [r7, #8]
   8608e:	606b      	str	r3, [r5, #4]
   86090:	f000 fa34 	bl	864fc <__malloc_unlock>
   86094:	3408      	adds	r4, #8
   86096:	4620      	mov	r0, r4
   86098:	b003      	add	sp, #12
   8609a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8609e:	bf00      	nop
   860a0:	200705c0 	.word	0x200705c0
   860a4:	20070b24 	.word	0x20070b24
   860a8:	200709cc 	.word	0x200709cc
   860ac:	20070b20 	.word	0x20070b20
   860b0:	20070b1c 	.word	0x20070b1c
   860b4:	20070b28 	.word	0x20070b28
   860b8:	f1bc 0f14 	cmp.w	ip, #20
   860bc:	d961      	bls.n	86182 <_malloc_r+0x40e>
   860be:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
   860c2:	f200 808f 	bhi.w	861e4 <_malloc_r+0x470>
   860c6:	ea4f 3c15 	mov.w	ip, r5, lsr #12
   860ca:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
   860ce:	ea4f 014c 	mov.w	r1, ip, lsl #1
   860d2:	e697      	b.n	85e04 <_malloc_r+0x90>
   860d4:	0a4b      	lsrs	r3, r1, #9
   860d6:	2b04      	cmp	r3, #4
   860d8:	d958      	bls.n	8618c <_malloc_r+0x418>
   860da:	2b14      	cmp	r3, #20
   860dc:	f200 80ad 	bhi.w	8623a <_malloc_r+0x4c6>
   860e0:	f103 025b 	add.w	r2, r3, #91	; 0x5b
   860e4:	0050      	lsls	r0, r2, #1
   860e6:	eb07 0080 	add.w	r0, r7, r0, lsl #2
   860ea:	6883      	ldr	r3, [r0, #8]
   860ec:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 862a8 <_malloc_r+0x534>
   860f0:	4283      	cmp	r3, r0
   860f2:	f000 808a 	beq.w	8620a <_malloc_r+0x496>
   860f6:	685a      	ldr	r2, [r3, #4]
   860f8:	f022 0203 	bic.w	r2, r2, #3
   860fc:	4291      	cmp	r1, r2
   860fe:	d202      	bcs.n	86106 <_malloc_r+0x392>
   86100:	689b      	ldr	r3, [r3, #8]
   86102:	4298      	cmp	r0, r3
   86104:	d1f7      	bne.n	860f6 <_malloc_r+0x382>
   86106:	68d9      	ldr	r1, [r3, #12]
   86108:	687a      	ldr	r2, [r7, #4]
   8610a:	60e1      	str	r1, [r4, #12]
   8610c:	60a3      	str	r3, [r4, #8]
   8610e:	608c      	str	r4, [r1, #8]
   86110:	60dc      	str	r4, [r3, #12]
   86112:	e6b6      	b.n	85e82 <_malloc_r+0x10e>
   86114:	f045 0701 	orr.w	r7, r5, #1
   86118:	f042 0101 	orr.w	r1, r2, #1
   8611c:	4425      	add	r5, r4
   8611e:	6067      	str	r7, [r4, #4]
   86120:	4630      	mov	r0, r6
   86122:	615d      	str	r5, [r3, #20]
   86124:	611d      	str	r5, [r3, #16]
   86126:	f8c5 e00c 	str.w	lr, [r5, #12]
   8612a:	f8c5 e008 	str.w	lr, [r5, #8]
   8612e:	6069      	str	r1, [r5, #4]
   86130:	50aa      	str	r2, [r5, r2]
   86132:	3408      	adds	r4, #8
   86134:	f000 f9e2 	bl	864fc <__malloc_unlock>
   86138:	e648      	b.n	85dcc <_malloc_r+0x58>
   8613a:	685a      	ldr	r2, [r3, #4]
   8613c:	e6a1      	b.n	85e82 <_malloc_r+0x10e>
   8613e:	f109 0901 	add.w	r9, r9, #1
   86142:	f019 0f03 	tst.w	r9, #3
   86146:	f104 0408 	add.w	r4, r4, #8
   8614a:	f47f aead 	bne.w	85ea8 <_malloc_r+0x134>
   8614e:	e02d      	b.n	861ac <_malloc_r+0x438>
   86150:	f104 0308 	add.w	r3, r4, #8
   86154:	6964      	ldr	r4, [r4, #20]
   86156:	42a3      	cmp	r3, r4
   86158:	bf08      	it	eq
   8615a:	f10c 0c02 	addeq.w	ip, ip, #2
   8615e:	f43f ae67 	beq.w	85e30 <_malloc_r+0xbc>
   86162:	e623      	b.n	85dac <_malloc_r+0x38>
   86164:	4419      	add	r1, r3
   86166:	6848      	ldr	r0, [r1, #4]
   86168:	461c      	mov	r4, r3
   8616a:	f854 2f08 	ldr.w	r2, [r4, #8]!
   8616e:	68db      	ldr	r3, [r3, #12]
   86170:	f040 0501 	orr.w	r5, r0, #1
   86174:	604d      	str	r5, [r1, #4]
   86176:	4630      	mov	r0, r6
   86178:	60d3      	str	r3, [r2, #12]
   8617a:	609a      	str	r2, [r3, #8]
   8617c:	f000 f9be 	bl	864fc <__malloc_unlock>
   86180:	e624      	b.n	85dcc <_malloc_r+0x58>
   86182:	f10c 0c5b 	add.w	ip, ip, #91	; 0x5b
   86186:	ea4f 014c 	mov.w	r1, ip, lsl #1
   8618a:	e63b      	b.n	85e04 <_malloc_r+0x90>
   8618c:	098a      	lsrs	r2, r1, #6
   8618e:	3238      	adds	r2, #56	; 0x38
   86190:	0050      	lsls	r0, r2, #1
   86192:	e7a8      	b.n	860e6 <_malloc_r+0x372>
   86194:	42bc      	cmp	r4, r7
   86196:	f43f af02 	beq.w	85f9e <_malloc_r+0x22a>
   8619a:	68bc      	ldr	r4, [r7, #8]
   8619c:	6862      	ldr	r2, [r4, #4]
   8619e:	f022 0203 	bic.w	r2, r2, #3
   861a2:	e761      	b.n	86068 <_malloc_r+0x2f4>
   861a4:	f8d8 8000 	ldr.w	r8, [r8]
   861a8:	4598      	cmp	r8, r3
   861aa:	d17a      	bne.n	862a2 <_malloc_r+0x52e>
   861ac:	f01c 0f03 	tst.w	ip, #3
   861b0:	f1a8 0308 	sub.w	r3, r8, #8
   861b4:	f10c 3cff 	add.w	ip, ip, #4294967295
   861b8:	d1f4      	bne.n	861a4 <_malloc_r+0x430>
   861ba:	687b      	ldr	r3, [r7, #4]
   861bc:	ea23 0300 	bic.w	r3, r3, r0
   861c0:	607b      	str	r3, [r7, #4]
   861c2:	0040      	lsls	r0, r0, #1
   861c4:	4298      	cmp	r0, r3
   861c6:	f63f aebe 	bhi.w	85f46 <_malloc_r+0x1d2>
   861ca:	2800      	cmp	r0, #0
   861cc:	f43f aebb 	beq.w	85f46 <_malloc_r+0x1d2>
   861d0:	4203      	tst	r3, r0
   861d2:	46cc      	mov	ip, r9
   861d4:	f47f ae64 	bne.w	85ea0 <_malloc_r+0x12c>
   861d8:	0040      	lsls	r0, r0, #1
   861da:	4203      	tst	r3, r0
   861dc:	f10c 0c04 	add.w	ip, ip, #4
   861e0:	d0fa      	beq.n	861d8 <_malloc_r+0x464>
   861e2:	e65d      	b.n	85ea0 <_malloc_r+0x12c>
   861e4:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
   861e8:	d819      	bhi.n	8621e <_malloc_r+0x4aa>
   861ea:	ea4f 3cd5 	mov.w	ip, r5, lsr #15
   861ee:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
   861f2:	ea4f 014c 	mov.w	r1, ip, lsl #1
   861f6:	e605      	b.n	85e04 <_malloc_r+0x90>
   861f8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   861fc:	e6ee      	b.n	85fdc <_malloc_r+0x268>
   861fe:	2301      	movs	r3, #1
   86200:	f8c8 3004 	str.w	r3, [r8, #4]
   86204:	4644      	mov	r4, r8
   86206:	2200      	movs	r2, #0
   86208:	e72e      	b.n	86068 <_malloc_r+0x2f4>
   8620a:	1092      	asrs	r2, r2, #2
   8620c:	2001      	movs	r0, #1
   8620e:	4090      	lsls	r0, r2
   86210:	f8d8 2004 	ldr.w	r2, [r8, #4]
   86214:	4619      	mov	r1, r3
   86216:	4302      	orrs	r2, r0
   86218:	f8c8 2004 	str.w	r2, [r8, #4]
   8621c:	e775      	b.n	8610a <_malloc_r+0x396>
   8621e:	f240 5354 	movw	r3, #1364	; 0x554
   86222:	459c      	cmp	ip, r3
   86224:	d81b      	bhi.n	8625e <_malloc_r+0x4ea>
   86226:	ea4f 4c95 	mov.w	ip, r5, lsr #18
   8622a:	f10c 0c7c 	add.w	ip, ip, #124	; 0x7c
   8622e:	ea4f 014c 	mov.w	r1, ip, lsl #1
   86232:	e5e7      	b.n	85e04 <_malloc_r+0x90>
   86234:	f10a 0a10 	add.w	sl, sl, #16
   86238:	e6a3      	b.n	85f82 <_malloc_r+0x20e>
   8623a:	2b54      	cmp	r3, #84	; 0x54
   8623c:	d81f      	bhi.n	8627e <_malloc_r+0x50a>
   8623e:	0b0a      	lsrs	r2, r1, #12
   86240:	326e      	adds	r2, #110	; 0x6e
   86242:	0050      	lsls	r0, r2, #1
   86244:	e74f      	b.n	860e6 <_malloc_r+0x372>
   86246:	f3cb 010b 	ubfx	r1, fp, #0, #12
   8624a:	2900      	cmp	r1, #0
   8624c:	f47f aeb1 	bne.w	85fb2 <_malloc_r+0x23e>
   86250:	eb0a 0109 	add.w	r1, sl, r9
   86254:	68ba      	ldr	r2, [r7, #8]
   86256:	f041 0101 	orr.w	r1, r1, #1
   8625a:	6051      	str	r1, [r2, #4]
   8625c:	e6f6      	b.n	8604c <_malloc_r+0x2d8>
   8625e:	21fc      	movs	r1, #252	; 0xfc
   86260:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
   86264:	e5ce      	b.n	85e04 <_malloc_r+0x90>
   86266:	2201      	movs	r2, #1
   86268:	f04f 0a00 	mov.w	sl, #0
   8626c:	e6cb      	b.n	86006 <_malloc_r+0x292>
   8626e:	f104 0108 	add.w	r1, r4, #8
   86272:	4630      	mov	r0, r6
   86274:	f7ff fa7c 	bl	85770 <_free_r>
   86278:	f8da 3000 	ldr.w	r3, [sl]
   8627c:	e6e6      	b.n	8604c <_malloc_r+0x2d8>
   8627e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   86282:	d803      	bhi.n	8628c <_malloc_r+0x518>
   86284:	0bca      	lsrs	r2, r1, #15
   86286:	3277      	adds	r2, #119	; 0x77
   86288:	0050      	lsls	r0, r2, #1
   8628a:	e72c      	b.n	860e6 <_malloc_r+0x372>
   8628c:	f240 5254 	movw	r2, #1364	; 0x554
   86290:	4293      	cmp	r3, r2
   86292:	d803      	bhi.n	8629c <_malloc_r+0x528>
   86294:	0c8a      	lsrs	r2, r1, #18
   86296:	327c      	adds	r2, #124	; 0x7c
   86298:	0050      	lsls	r0, r2, #1
   8629a:	e724      	b.n	860e6 <_malloc_r+0x372>
   8629c:	20fc      	movs	r0, #252	; 0xfc
   8629e:	227e      	movs	r2, #126	; 0x7e
   862a0:	e721      	b.n	860e6 <_malloc_r+0x372>
   862a2:	687b      	ldr	r3, [r7, #4]
   862a4:	e78d      	b.n	861c2 <_malloc_r+0x44e>
   862a6:	bf00      	nop
   862a8:	200705c0 	.word	0x200705c0

000862ac <memchr>:
   862ac:	0783      	lsls	r3, r0, #30
   862ae:	b470      	push	{r4, r5, r6}
   862b0:	b2c9      	uxtb	r1, r1
   862b2:	d040      	beq.n	86336 <memchr+0x8a>
   862b4:	1e54      	subs	r4, r2, #1
   862b6:	b32a      	cbz	r2, 86304 <memchr+0x58>
   862b8:	7803      	ldrb	r3, [r0, #0]
   862ba:	428b      	cmp	r3, r1
   862bc:	d023      	beq.n	86306 <memchr+0x5a>
   862be:	1c43      	adds	r3, r0, #1
   862c0:	e004      	b.n	862cc <memchr+0x20>
   862c2:	b1fc      	cbz	r4, 86304 <memchr+0x58>
   862c4:	7805      	ldrb	r5, [r0, #0]
   862c6:	4614      	mov	r4, r2
   862c8:	428d      	cmp	r5, r1
   862ca:	d01c      	beq.n	86306 <memchr+0x5a>
   862cc:	f013 0f03 	tst.w	r3, #3
   862d0:	4618      	mov	r0, r3
   862d2:	f104 32ff 	add.w	r2, r4, #4294967295
   862d6:	f103 0301 	add.w	r3, r3, #1
   862da:	d1f2      	bne.n	862c2 <memchr+0x16>
   862dc:	2c03      	cmp	r4, #3
   862de:	d814      	bhi.n	8630a <memchr+0x5e>
   862e0:	1e65      	subs	r5, r4, #1
   862e2:	b354      	cbz	r4, 8633a <memchr+0x8e>
   862e4:	7803      	ldrb	r3, [r0, #0]
   862e6:	428b      	cmp	r3, r1
   862e8:	d00d      	beq.n	86306 <memchr+0x5a>
   862ea:	1c42      	adds	r2, r0, #1
   862ec:	2300      	movs	r3, #0
   862ee:	e002      	b.n	862f6 <memchr+0x4a>
   862f0:	7804      	ldrb	r4, [r0, #0]
   862f2:	428c      	cmp	r4, r1
   862f4:	d007      	beq.n	86306 <memchr+0x5a>
   862f6:	42ab      	cmp	r3, r5
   862f8:	4610      	mov	r0, r2
   862fa:	f103 0301 	add.w	r3, r3, #1
   862fe:	f102 0201 	add.w	r2, r2, #1
   86302:	d1f5      	bne.n	862f0 <memchr+0x44>
   86304:	2000      	movs	r0, #0
   86306:	bc70      	pop	{r4, r5, r6}
   86308:	4770      	bx	lr
   8630a:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
   8630e:	4603      	mov	r3, r0
   86310:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
   86314:	681a      	ldr	r2, [r3, #0]
   86316:	4618      	mov	r0, r3
   86318:	4072      	eors	r2, r6
   8631a:	f1a2 3501 	sub.w	r5, r2, #16843009	; 0x1010101
   8631e:	ea25 0202 	bic.w	r2, r5, r2
   86322:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
   86326:	f103 0304 	add.w	r3, r3, #4
   8632a:	d1d9      	bne.n	862e0 <memchr+0x34>
   8632c:	3c04      	subs	r4, #4
   8632e:	2c03      	cmp	r4, #3
   86330:	4618      	mov	r0, r3
   86332:	d8ef      	bhi.n	86314 <memchr+0x68>
   86334:	e7d4      	b.n	862e0 <memchr+0x34>
   86336:	4614      	mov	r4, r2
   86338:	e7d0      	b.n	862dc <memchr+0x30>
   8633a:	4620      	mov	r0, r4
   8633c:	e7e3      	b.n	86306 <memchr+0x5a>
   8633e:	bf00      	nop

00086340 <memcpy>:
   86340:	4684      	mov	ip, r0
   86342:	ea41 0300 	orr.w	r3, r1, r0
   86346:	f013 0303 	ands.w	r3, r3, #3
   8634a:	d149      	bne.n	863e0 <memcpy+0xa0>
   8634c:	3a40      	subs	r2, #64	; 0x40
   8634e:	d323      	bcc.n	86398 <memcpy+0x58>
   86350:	680b      	ldr	r3, [r1, #0]
   86352:	6003      	str	r3, [r0, #0]
   86354:	684b      	ldr	r3, [r1, #4]
   86356:	6043      	str	r3, [r0, #4]
   86358:	688b      	ldr	r3, [r1, #8]
   8635a:	6083      	str	r3, [r0, #8]
   8635c:	68cb      	ldr	r3, [r1, #12]
   8635e:	60c3      	str	r3, [r0, #12]
   86360:	690b      	ldr	r3, [r1, #16]
   86362:	6103      	str	r3, [r0, #16]
   86364:	694b      	ldr	r3, [r1, #20]
   86366:	6143      	str	r3, [r0, #20]
   86368:	698b      	ldr	r3, [r1, #24]
   8636a:	6183      	str	r3, [r0, #24]
   8636c:	69cb      	ldr	r3, [r1, #28]
   8636e:	61c3      	str	r3, [r0, #28]
   86370:	6a0b      	ldr	r3, [r1, #32]
   86372:	6203      	str	r3, [r0, #32]
   86374:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   86376:	6243      	str	r3, [r0, #36]	; 0x24
   86378:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   8637a:	6283      	str	r3, [r0, #40]	; 0x28
   8637c:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   8637e:	62c3      	str	r3, [r0, #44]	; 0x2c
   86380:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   86382:	6303      	str	r3, [r0, #48]	; 0x30
   86384:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   86386:	6343      	str	r3, [r0, #52]	; 0x34
   86388:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   8638a:	6383      	str	r3, [r0, #56]	; 0x38
   8638c:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   8638e:	63c3      	str	r3, [r0, #60]	; 0x3c
   86390:	3040      	adds	r0, #64	; 0x40
   86392:	3140      	adds	r1, #64	; 0x40
   86394:	3a40      	subs	r2, #64	; 0x40
   86396:	d2db      	bcs.n	86350 <memcpy+0x10>
   86398:	3230      	adds	r2, #48	; 0x30
   8639a:	d30b      	bcc.n	863b4 <memcpy+0x74>
   8639c:	680b      	ldr	r3, [r1, #0]
   8639e:	6003      	str	r3, [r0, #0]
   863a0:	684b      	ldr	r3, [r1, #4]
   863a2:	6043      	str	r3, [r0, #4]
   863a4:	688b      	ldr	r3, [r1, #8]
   863a6:	6083      	str	r3, [r0, #8]
   863a8:	68cb      	ldr	r3, [r1, #12]
   863aa:	60c3      	str	r3, [r0, #12]
   863ac:	3010      	adds	r0, #16
   863ae:	3110      	adds	r1, #16
   863b0:	3a10      	subs	r2, #16
   863b2:	d2f3      	bcs.n	8639c <memcpy+0x5c>
   863b4:	320c      	adds	r2, #12
   863b6:	d305      	bcc.n	863c4 <memcpy+0x84>
   863b8:	f851 3b04 	ldr.w	r3, [r1], #4
   863bc:	f840 3b04 	str.w	r3, [r0], #4
   863c0:	3a04      	subs	r2, #4
   863c2:	d2f9      	bcs.n	863b8 <memcpy+0x78>
   863c4:	3204      	adds	r2, #4
   863c6:	d008      	beq.n	863da <memcpy+0x9a>
   863c8:	07d2      	lsls	r2, r2, #31
   863ca:	bf1c      	itt	ne
   863cc:	f811 3b01 	ldrbne.w	r3, [r1], #1
   863d0:	f800 3b01 	strbne.w	r3, [r0], #1
   863d4:	d301      	bcc.n	863da <memcpy+0x9a>
   863d6:	880b      	ldrh	r3, [r1, #0]
   863d8:	8003      	strh	r3, [r0, #0]
   863da:	4660      	mov	r0, ip
   863dc:	4770      	bx	lr
   863de:	bf00      	nop
   863e0:	2a08      	cmp	r2, #8
   863e2:	d313      	bcc.n	8640c <memcpy+0xcc>
   863e4:	078b      	lsls	r3, r1, #30
   863e6:	d0b1      	beq.n	8634c <memcpy+0xc>
   863e8:	f010 0303 	ands.w	r3, r0, #3
   863ec:	d0ae      	beq.n	8634c <memcpy+0xc>
   863ee:	f1c3 0304 	rsb	r3, r3, #4
   863f2:	1ad2      	subs	r2, r2, r3
   863f4:	07db      	lsls	r3, r3, #31
   863f6:	bf1c      	itt	ne
   863f8:	f811 3b01 	ldrbne.w	r3, [r1], #1
   863fc:	f800 3b01 	strbne.w	r3, [r0], #1
   86400:	d3a4      	bcc.n	8634c <memcpy+0xc>
   86402:	f831 3b02 	ldrh.w	r3, [r1], #2
   86406:	f820 3b02 	strh.w	r3, [r0], #2
   8640a:	e79f      	b.n	8634c <memcpy+0xc>
   8640c:	3a04      	subs	r2, #4
   8640e:	d3d9      	bcc.n	863c4 <memcpy+0x84>
   86410:	3a01      	subs	r2, #1
   86412:	f811 3b01 	ldrb.w	r3, [r1], #1
   86416:	f800 3b01 	strb.w	r3, [r0], #1
   8641a:	d2f9      	bcs.n	86410 <memcpy+0xd0>
   8641c:	780b      	ldrb	r3, [r1, #0]
   8641e:	7003      	strb	r3, [r0, #0]
   86420:	784b      	ldrb	r3, [r1, #1]
   86422:	7043      	strb	r3, [r0, #1]
   86424:	788b      	ldrb	r3, [r1, #2]
   86426:	7083      	strb	r3, [r0, #2]
   86428:	4660      	mov	r0, ip
   8642a:	4770      	bx	lr

0008642c <memmove>:
   8642c:	4288      	cmp	r0, r1
   8642e:	b4f0      	push	{r4, r5, r6, r7}
   86430:	d910      	bls.n	86454 <memmove+0x28>
   86432:	188c      	adds	r4, r1, r2
   86434:	42a0      	cmp	r0, r4
   86436:	d20d      	bcs.n	86454 <memmove+0x28>
   86438:	1885      	adds	r5, r0, r2
   8643a:	1e53      	subs	r3, r2, #1
   8643c:	b142      	cbz	r2, 86450 <memmove+0x24>
   8643e:	4621      	mov	r1, r4
   86440:	462a      	mov	r2, r5
   86442:	f811 4d01 	ldrb.w	r4, [r1, #-1]!
   86446:	3b01      	subs	r3, #1
   86448:	f802 4d01 	strb.w	r4, [r2, #-1]!
   8644c:	1c5c      	adds	r4, r3, #1
   8644e:	d1f8      	bne.n	86442 <memmove+0x16>
   86450:	bcf0      	pop	{r4, r5, r6, r7}
   86452:	4770      	bx	lr
   86454:	2a0f      	cmp	r2, #15
   86456:	d944      	bls.n	864e2 <memmove+0xb6>
   86458:	ea40 0301 	orr.w	r3, r0, r1
   8645c:	079b      	lsls	r3, r3, #30
   8645e:	d144      	bne.n	864ea <memmove+0xbe>
   86460:	f1a2 0710 	sub.w	r7, r2, #16
   86464:	093f      	lsrs	r7, r7, #4
   86466:	eb00 1607 	add.w	r6, r0, r7, lsl #4
   8646a:	3610      	adds	r6, #16
   8646c:	460c      	mov	r4, r1
   8646e:	4603      	mov	r3, r0
   86470:	6825      	ldr	r5, [r4, #0]
   86472:	3310      	adds	r3, #16
   86474:	f843 5c10 	str.w	r5, [r3, #-16]
   86478:	6865      	ldr	r5, [r4, #4]
   8647a:	3410      	adds	r4, #16
   8647c:	f843 5c0c 	str.w	r5, [r3, #-12]
   86480:	f854 5c08 	ldr.w	r5, [r4, #-8]
   86484:	f843 5c08 	str.w	r5, [r3, #-8]
   86488:	f854 5c04 	ldr.w	r5, [r4, #-4]
   8648c:	f843 5c04 	str.w	r5, [r3, #-4]
   86490:	42b3      	cmp	r3, r6
   86492:	d1ed      	bne.n	86470 <memmove+0x44>
   86494:	1c7b      	adds	r3, r7, #1
   86496:	f002 0c0f 	and.w	ip, r2, #15
   8649a:	011b      	lsls	r3, r3, #4
   8649c:	f1bc 0f03 	cmp.w	ip, #3
   864a0:	4419      	add	r1, r3
   864a2:	4403      	add	r3, r0
   864a4:	d923      	bls.n	864ee <memmove+0xc2>
   864a6:	460e      	mov	r6, r1
   864a8:	461d      	mov	r5, r3
   864aa:	4664      	mov	r4, ip
   864ac:	f856 7b04 	ldr.w	r7, [r6], #4
   864b0:	3c04      	subs	r4, #4
   864b2:	2c03      	cmp	r4, #3
   864b4:	f845 7b04 	str.w	r7, [r5], #4
   864b8:	d8f8      	bhi.n	864ac <memmove+0x80>
   864ba:	f1ac 0404 	sub.w	r4, ip, #4
   864be:	f024 0403 	bic.w	r4, r4, #3
   864c2:	3404      	adds	r4, #4
   864c4:	f002 0203 	and.w	r2, r2, #3
   864c8:	4423      	add	r3, r4
   864ca:	4421      	add	r1, r4
   864cc:	2a00      	cmp	r2, #0
   864ce:	d0bf      	beq.n	86450 <memmove+0x24>
   864d0:	441a      	add	r2, r3
   864d2:	f811 4b01 	ldrb.w	r4, [r1], #1
   864d6:	f803 4b01 	strb.w	r4, [r3], #1
   864da:	4293      	cmp	r3, r2
   864dc:	d1f9      	bne.n	864d2 <memmove+0xa6>
   864de:	bcf0      	pop	{r4, r5, r6, r7}
   864e0:	4770      	bx	lr
   864e2:	4603      	mov	r3, r0
   864e4:	2a00      	cmp	r2, #0
   864e6:	d1f3      	bne.n	864d0 <memmove+0xa4>
   864e8:	e7b2      	b.n	86450 <memmove+0x24>
   864ea:	4603      	mov	r3, r0
   864ec:	e7f0      	b.n	864d0 <memmove+0xa4>
   864ee:	4662      	mov	r2, ip
   864f0:	2a00      	cmp	r2, #0
   864f2:	d1ed      	bne.n	864d0 <memmove+0xa4>
   864f4:	e7ac      	b.n	86450 <memmove+0x24>
   864f6:	bf00      	nop

000864f8 <__malloc_lock>:
   864f8:	4770      	bx	lr
   864fa:	bf00      	nop

000864fc <__malloc_unlock>:
   864fc:	4770      	bx	lr
   864fe:	bf00      	nop

00086500 <_Balloc>:
   86500:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
   86502:	b570      	push	{r4, r5, r6, lr}
   86504:	4605      	mov	r5, r0
   86506:	460c      	mov	r4, r1
   86508:	b14a      	cbz	r2, 8651e <_Balloc+0x1e>
   8650a:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
   8650e:	b180      	cbz	r0, 86532 <_Balloc+0x32>
   86510:	6801      	ldr	r1, [r0, #0]
   86512:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
   86516:	2200      	movs	r2, #0
   86518:	6102      	str	r2, [r0, #16]
   8651a:	60c2      	str	r2, [r0, #12]
   8651c:	bd70      	pop	{r4, r5, r6, pc}
   8651e:	2221      	movs	r2, #33	; 0x21
   86520:	2104      	movs	r1, #4
   86522:	f000 fe79 	bl	87218 <_calloc_r>
   86526:	64e8      	str	r0, [r5, #76]	; 0x4c
   86528:	4602      	mov	r2, r0
   8652a:	2800      	cmp	r0, #0
   8652c:	d1ed      	bne.n	8650a <_Balloc+0xa>
   8652e:	2000      	movs	r0, #0
   86530:	bd70      	pop	{r4, r5, r6, pc}
   86532:	2101      	movs	r1, #1
   86534:	fa01 f604 	lsl.w	r6, r1, r4
   86538:	1d72      	adds	r2, r6, #5
   8653a:	4628      	mov	r0, r5
   8653c:	0092      	lsls	r2, r2, #2
   8653e:	f000 fe6b 	bl	87218 <_calloc_r>
   86542:	2800      	cmp	r0, #0
   86544:	d0f3      	beq.n	8652e <_Balloc+0x2e>
   86546:	6044      	str	r4, [r0, #4]
   86548:	6086      	str	r6, [r0, #8]
   8654a:	e7e4      	b.n	86516 <_Balloc+0x16>

0008654c <_Bfree>:
   8654c:	b131      	cbz	r1, 8655c <_Bfree+0x10>
   8654e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   86550:	684a      	ldr	r2, [r1, #4]
   86552:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   86556:	6008      	str	r0, [r1, #0]
   86558:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   8655c:	4770      	bx	lr
   8655e:	bf00      	nop

00086560 <__multadd>:
   86560:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   86564:	690f      	ldr	r7, [r1, #16]
   86566:	b083      	sub	sp, #12
   86568:	4688      	mov	r8, r1
   8656a:	4681      	mov	r9, r0
   8656c:	f101 0514 	add.w	r5, r1, #20
   86570:	2400      	movs	r4, #0
   86572:	682e      	ldr	r6, [r5, #0]
   86574:	3401      	adds	r4, #1
   86576:	b2b1      	uxth	r1, r6
   86578:	0c36      	lsrs	r6, r6, #16
   8657a:	fb02 3301 	mla	r3, r2, r1, r3
   8657e:	fb02 f606 	mul.w	r6, r2, r6
   86582:	b299      	uxth	r1, r3
   86584:	eb06 4313 	add.w	r3, r6, r3, lsr #16
   86588:	eb01 4103 	add.w	r1, r1, r3, lsl #16
   8658c:	42a7      	cmp	r7, r4
   8658e:	f845 1b04 	str.w	r1, [r5], #4
   86592:	ea4f 4313 	mov.w	r3, r3, lsr #16
   86596:	dcec      	bgt.n	86572 <__multadd+0x12>
   86598:	b14b      	cbz	r3, 865ae <__multadd+0x4e>
   8659a:	f8d8 2008 	ldr.w	r2, [r8, #8]
   8659e:	4297      	cmp	r7, r2
   865a0:	da09      	bge.n	865b6 <__multadd+0x56>
   865a2:	eb08 0287 	add.w	r2, r8, r7, lsl #2
   865a6:	3701      	adds	r7, #1
   865a8:	6153      	str	r3, [r2, #20]
   865aa:	f8c8 7010 	str.w	r7, [r8, #16]
   865ae:	4640      	mov	r0, r8
   865b0:	b003      	add	sp, #12
   865b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   865b6:	f8d8 1004 	ldr.w	r1, [r8, #4]
   865ba:	4648      	mov	r0, r9
   865bc:	3101      	adds	r1, #1
   865be:	9301      	str	r3, [sp, #4]
   865c0:	f7ff ff9e 	bl	86500 <_Balloc>
   865c4:	f8d8 2010 	ldr.w	r2, [r8, #16]
   865c8:	f108 010c 	add.w	r1, r8, #12
   865cc:	3202      	adds	r2, #2
   865ce:	4604      	mov	r4, r0
   865d0:	0092      	lsls	r2, r2, #2
   865d2:	300c      	adds	r0, #12
   865d4:	f7ff feb4 	bl	86340 <memcpy>
   865d8:	f8d9 204c 	ldr.w	r2, [r9, #76]	; 0x4c
   865dc:	f8d8 1004 	ldr.w	r1, [r8, #4]
   865e0:	9b01      	ldr	r3, [sp, #4]
   865e2:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   865e6:	f8c8 0000 	str.w	r0, [r8]
   865ea:	f842 8021 	str.w	r8, [r2, r1, lsl #2]
   865ee:	46a0      	mov	r8, r4
   865f0:	e7d7      	b.n	865a2 <__multadd+0x42>
   865f2:	bf00      	nop

000865f4 <__hi0bits>:
   865f4:	0c03      	lsrs	r3, r0, #16
   865f6:	041b      	lsls	r3, r3, #16
   865f8:	b9b3      	cbnz	r3, 86628 <__hi0bits+0x34>
   865fa:	0400      	lsls	r0, r0, #16
   865fc:	2310      	movs	r3, #16
   865fe:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
   86602:	bf04      	itt	eq
   86604:	0200      	lsleq	r0, r0, #8
   86606:	3308      	addeq	r3, #8
   86608:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
   8660c:	bf04      	itt	eq
   8660e:	0100      	lsleq	r0, r0, #4
   86610:	3304      	addeq	r3, #4
   86612:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
   86616:	bf04      	itt	eq
   86618:	0080      	lsleq	r0, r0, #2
   8661a:	3302      	addeq	r3, #2
   8661c:	2800      	cmp	r0, #0
   8661e:	db07      	blt.n	86630 <__hi0bits+0x3c>
   86620:	0042      	lsls	r2, r0, #1
   86622:	d403      	bmi.n	8662c <__hi0bits+0x38>
   86624:	2020      	movs	r0, #32
   86626:	4770      	bx	lr
   86628:	2300      	movs	r3, #0
   8662a:	e7e8      	b.n	865fe <__hi0bits+0xa>
   8662c:	1c58      	adds	r0, r3, #1
   8662e:	4770      	bx	lr
   86630:	4618      	mov	r0, r3
   86632:	4770      	bx	lr

00086634 <__lo0bits>:
   86634:	6803      	ldr	r3, [r0, #0]
   86636:	f013 0207 	ands.w	r2, r3, #7
   8663a:	d007      	beq.n	8664c <__lo0bits+0x18>
   8663c:	07d9      	lsls	r1, r3, #31
   8663e:	d420      	bmi.n	86682 <__lo0bits+0x4e>
   86640:	079a      	lsls	r2, r3, #30
   86642:	d420      	bmi.n	86686 <__lo0bits+0x52>
   86644:	089b      	lsrs	r3, r3, #2
   86646:	6003      	str	r3, [r0, #0]
   86648:	2002      	movs	r0, #2
   8664a:	4770      	bx	lr
   8664c:	b299      	uxth	r1, r3
   8664e:	b909      	cbnz	r1, 86654 <__lo0bits+0x20>
   86650:	0c1b      	lsrs	r3, r3, #16
   86652:	2210      	movs	r2, #16
   86654:	f013 0fff 	tst.w	r3, #255	; 0xff
   86658:	bf04      	itt	eq
   8665a:	0a1b      	lsreq	r3, r3, #8
   8665c:	3208      	addeq	r2, #8
   8665e:	0719      	lsls	r1, r3, #28
   86660:	bf04      	itt	eq
   86662:	091b      	lsreq	r3, r3, #4
   86664:	3204      	addeq	r2, #4
   86666:	0799      	lsls	r1, r3, #30
   86668:	bf04      	itt	eq
   8666a:	089b      	lsreq	r3, r3, #2
   8666c:	3202      	addeq	r2, #2
   8666e:	07d9      	lsls	r1, r3, #31
   86670:	d404      	bmi.n	8667c <__lo0bits+0x48>
   86672:	085b      	lsrs	r3, r3, #1
   86674:	d101      	bne.n	8667a <__lo0bits+0x46>
   86676:	2020      	movs	r0, #32
   86678:	4770      	bx	lr
   8667a:	3201      	adds	r2, #1
   8667c:	6003      	str	r3, [r0, #0]
   8667e:	4610      	mov	r0, r2
   86680:	4770      	bx	lr
   86682:	2000      	movs	r0, #0
   86684:	4770      	bx	lr
   86686:	085b      	lsrs	r3, r3, #1
   86688:	6003      	str	r3, [r0, #0]
   8668a:	2001      	movs	r0, #1
   8668c:	4770      	bx	lr
   8668e:	bf00      	nop

00086690 <__i2b>:
   86690:	b510      	push	{r4, lr}
   86692:	460c      	mov	r4, r1
   86694:	2101      	movs	r1, #1
   86696:	f7ff ff33 	bl	86500 <_Balloc>
   8669a:	2201      	movs	r2, #1
   8669c:	6144      	str	r4, [r0, #20]
   8669e:	6102      	str	r2, [r0, #16]
   866a0:	bd10      	pop	{r4, pc}
   866a2:	bf00      	nop

000866a4 <__multiply>:
   866a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   866a8:	690d      	ldr	r5, [r1, #16]
   866aa:	f8d2 9010 	ldr.w	r9, [r2, #16]
   866ae:	b085      	sub	sp, #20
   866b0:	454d      	cmp	r5, r9
   866b2:	460c      	mov	r4, r1
   866b4:	4692      	mov	sl, r2
   866b6:	da04      	bge.n	866c2 <__multiply+0x1e>
   866b8:	462a      	mov	r2, r5
   866ba:	4654      	mov	r4, sl
   866bc:	464d      	mov	r5, r9
   866be:	468a      	mov	sl, r1
   866c0:	4691      	mov	r9, r2
   866c2:	68a3      	ldr	r3, [r4, #8]
   866c4:	eb05 0709 	add.w	r7, r5, r9
   866c8:	6861      	ldr	r1, [r4, #4]
   866ca:	429f      	cmp	r7, r3
   866cc:	bfc8      	it	gt
   866ce:	3101      	addgt	r1, #1
   866d0:	f7ff ff16 	bl	86500 <_Balloc>
   866d4:	f100 0614 	add.w	r6, r0, #20
   866d8:	eb06 0887 	add.w	r8, r6, r7, lsl #2
   866dc:	4546      	cmp	r6, r8
   866de:	9001      	str	r0, [sp, #4]
   866e0:	d205      	bcs.n	866ee <__multiply+0x4a>
   866e2:	4633      	mov	r3, r6
   866e4:	2000      	movs	r0, #0
   866e6:	f843 0b04 	str.w	r0, [r3], #4
   866ea:	4598      	cmp	r8, r3
   866ec:	d8fb      	bhi.n	866e6 <__multiply+0x42>
   866ee:	f10a 0c14 	add.w	ip, sl, #20
   866f2:	eb0c 0989 	add.w	r9, ip, r9, lsl #2
   866f6:	3414      	adds	r4, #20
   866f8:	45cc      	cmp	ip, r9
   866fa:	9400      	str	r4, [sp, #0]
   866fc:	eb04 0585 	add.w	r5, r4, r5, lsl #2
   86700:	d25b      	bcs.n	867ba <__multiply+0x116>
   86702:	f8cd 8008 	str.w	r8, [sp, #8]
   86706:	9703      	str	r7, [sp, #12]
   86708:	46c8      	mov	r8, r9
   8670a:	f85c 3b04 	ldr.w	r3, [ip], #4
   8670e:	b29c      	uxth	r4, r3
   86710:	b324      	cbz	r4, 8675c <__multiply+0xb8>
   86712:	9a00      	ldr	r2, [sp, #0]
   86714:	4633      	mov	r3, r6
   86716:	f04f 0900 	mov.w	r9, #0
   8671a:	e000      	b.n	8671e <__multiply+0x7a>
   8671c:	460b      	mov	r3, r1
   8671e:	f852 7b04 	ldr.w	r7, [r2], #4
   86722:	6819      	ldr	r1, [r3, #0]
   86724:	fa1f fb87 	uxth.w	fp, r7
   86728:	fa1f fa81 	uxth.w	sl, r1
   8672c:	0c38      	lsrs	r0, r7, #16
   8672e:	0c09      	lsrs	r1, r1, #16
   86730:	fb04 aa0b 	mla	sl, r4, fp, sl
   86734:	fb04 1000 	mla	r0, r4, r0, r1
   86738:	44d1      	add	r9, sl
   8673a:	eb00 4019 	add.w	r0, r0, r9, lsr #16
   8673e:	fa1f f989 	uxth.w	r9, r9
   86742:	ea49 4700 	orr.w	r7, r9, r0, lsl #16
   86746:	4619      	mov	r1, r3
   86748:	4295      	cmp	r5, r2
   8674a:	ea4f 4910 	mov.w	r9, r0, lsr #16
   8674e:	f841 7b04 	str.w	r7, [r1], #4
   86752:	d8e3      	bhi.n	8671c <__multiply+0x78>
   86754:	f8c3 9004 	str.w	r9, [r3, #4]
   86758:	f85c 3c04 	ldr.w	r3, [ip, #-4]
   8675c:	ea5f 4913 	movs.w	r9, r3, lsr #16
   86760:	d024      	beq.n	867ac <__multiply+0x108>
   86762:	f8d6 a000 	ldr.w	sl, [r6]
   86766:	9b00      	ldr	r3, [sp, #0]
   86768:	4650      	mov	r0, sl
   8676a:	4631      	mov	r1, r6
   8676c:	f04f 0b00 	mov.w	fp, #0
   86770:	e000      	b.n	86774 <__multiply+0xd0>
   86772:	4611      	mov	r1, r2
   86774:	881a      	ldrh	r2, [r3, #0]
   86776:	0c00      	lsrs	r0, r0, #16
   86778:	fb09 0002 	mla	r0, r9, r2, r0
   8677c:	fa1f fa8a 	uxth.w	sl, sl
   86780:	4483      	add	fp, r0
   86782:	ea4a 400b 	orr.w	r0, sl, fp, lsl #16
   86786:	460a      	mov	r2, r1
   86788:	f842 0b04 	str.w	r0, [r2], #4
   8678c:	f853 7b04 	ldr.w	r7, [r3], #4
   86790:	6848      	ldr	r0, [r1, #4]
   86792:	ea4f 4a17 	mov.w	sl, r7, lsr #16
   86796:	b284      	uxth	r4, r0
   86798:	fb09 4a0a 	mla	sl, r9, sl, r4
   8679c:	429d      	cmp	r5, r3
   8679e:	eb0a 4a1b 	add.w	sl, sl, fp, lsr #16
   867a2:	ea4f 4b1a 	mov.w	fp, sl, lsr #16
   867a6:	d8e4      	bhi.n	86772 <__multiply+0xce>
   867a8:	f8c1 a004 	str.w	sl, [r1, #4]
   867ac:	45e0      	cmp	r8, ip
   867ae:	f106 0604 	add.w	r6, r6, #4
   867b2:	d8aa      	bhi.n	8670a <__multiply+0x66>
   867b4:	f8dd 8008 	ldr.w	r8, [sp, #8]
   867b8:	9f03      	ldr	r7, [sp, #12]
   867ba:	2f00      	cmp	r7, #0
   867bc:	dd0a      	ble.n	867d4 <__multiply+0x130>
   867be:	f858 3c04 	ldr.w	r3, [r8, #-4]
   867c2:	f1a8 0804 	sub.w	r8, r8, #4
   867c6:	b11b      	cbz	r3, 867d0 <__multiply+0x12c>
   867c8:	e004      	b.n	867d4 <__multiply+0x130>
   867ca:	f858 3d04 	ldr.w	r3, [r8, #-4]!
   867ce:	b90b      	cbnz	r3, 867d4 <__multiply+0x130>
   867d0:	3f01      	subs	r7, #1
   867d2:	d1fa      	bne.n	867ca <__multiply+0x126>
   867d4:	9b01      	ldr	r3, [sp, #4]
   867d6:	4618      	mov	r0, r3
   867d8:	611f      	str	r7, [r3, #16]
   867da:	b005      	add	sp, #20
   867dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000867e0 <__pow5mult>:
   867e0:	f012 0303 	ands.w	r3, r2, #3
   867e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   867e8:	4614      	mov	r4, r2
   867ea:	4607      	mov	r7, r0
   867ec:	460e      	mov	r6, r1
   867ee:	d12c      	bne.n	8684a <__pow5mult+0x6a>
   867f0:	10a4      	asrs	r4, r4, #2
   867f2:	d01c      	beq.n	8682e <__pow5mult+0x4e>
   867f4:	6cbd      	ldr	r5, [r7, #72]	; 0x48
   867f6:	2d00      	cmp	r5, #0
   867f8:	d030      	beq.n	8685c <__pow5mult+0x7c>
   867fa:	f04f 0800 	mov.w	r8, #0
   867fe:	e004      	b.n	8680a <__pow5mult+0x2a>
   86800:	1064      	asrs	r4, r4, #1
   86802:	d014      	beq.n	8682e <__pow5mult+0x4e>
   86804:	6828      	ldr	r0, [r5, #0]
   86806:	b1a8      	cbz	r0, 86834 <__pow5mult+0x54>
   86808:	4605      	mov	r5, r0
   8680a:	07e3      	lsls	r3, r4, #31
   8680c:	d5f8      	bpl.n	86800 <__pow5mult+0x20>
   8680e:	4638      	mov	r0, r7
   86810:	4631      	mov	r1, r6
   86812:	462a      	mov	r2, r5
   86814:	f7ff ff46 	bl	866a4 <__multiply>
   86818:	b1ae      	cbz	r6, 86846 <__pow5mult+0x66>
   8681a:	6872      	ldr	r2, [r6, #4]
   8681c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   8681e:	1064      	asrs	r4, r4, #1
   86820:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   86824:	6031      	str	r1, [r6, #0]
   86826:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   8682a:	4606      	mov	r6, r0
   8682c:	d1ea      	bne.n	86804 <__pow5mult+0x24>
   8682e:	4630      	mov	r0, r6
   86830:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   86834:	4638      	mov	r0, r7
   86836:	4629      	mov	r1, r5
   86838:	462a      	mov	r2, r5
   8683a:	f7ff ff33 	bl	866a4 <__multiply>
   8683e:	6028      	str	r0, [r5, #0]
   86840:	f8c0 8000 	str.w	r8, [r0]
   86844:	e7e0      	b.n	86808 <__pow5mult+0x28>
   86846:	4606      	mov	r6, r0
   86848:	e7da      	b.n	86800 <__pow5mult+0x20>
   8684a:	4a0b      	ldr	r2, [pc, #44]	; (86878 <__pow5mult+0x98>)
   8684c:	3b01      	subs	r3, #1
   8684e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   86852:	2300      	movs	r3, #0
   86854:	f7ff fe84 	bl	86560 <__multadd>
   86858:	4606      	mov	r6, r0
   8685a:	e7c9      	b.n	867f0 <__pow5mult+0x10>
   8685c:	2101      	movs	r1, #1
   8685e:	4638      	mov	r0, r7
   86860:	f7ff fe4e 	bl	86500 <_Balloc>
   86864:	f240 2171 	movw	r1, #625	; 0x271
   86868:	2201      	movs	r2, #1
   8686a:	2300      	movs	r3, #0
   8686c:	6141      	str	r1, [r0, #20]
   8686e:	6102      	str	r2, [r0, #16]
   86870:	4605      	mov	r5, r0
   86872:	64b8      	str	r0, [r7, #72]	; 0x48
   86874:	6003      	str	r3, [r0, #0]
   86876:	e7c0      	b.n	867fa <__pow5mult+0x1a>
   86878:	00087c60 	.word	0x00087c60

0008687c <__lshift>:
   8687c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86880:	690b      	ldr	r3, [r1, #16]
   86882:	ea4f 1a62 	mov.w	sl, r2, asr #5
   86886:	eb0a 0903 	add.w	r9, sl, r3
   8688a:	688b      	ldr	r3, [r1, #8]
   8688c:	f109 0601 	add.w	r6, r9, #1
   86890:	429e      	cmp	r6, r3
   86892:	460f      	mov	r7, r1
   86894:	4693      	mov	fp, r2
   86896:	4680      	mov	r8, r0
   86898:	6849      	ldr	r1, [r1, #4]
   8689a:	dd04      	ble.n	868a6 <__lshift+0x2a>
   8689c:	005b      	lsls	r3, r3, #1
   8689e:	429e      	cmp	r6, r3
   868a0:	f101 0101 	add.w	r1, r1, #1
   868a4:	dcfa      	bgt.n	8689c <__lshift+0x20>
   868a6:	4640      	mov	r0, r8
   868a8:	f7ff fe2a 	bl	86500 <_Balloc>
   868ac:	f1ba 0f00 	cmp.w	sl, #0
   868b0:	f100 0414 	add.w	r4, r0, #20
   868b4:	dd09      	ble.n	868ca <__lshift+0x4e>
   868b6:	2300      	movs	r3, #0
   868b8:	461a      	mov	r2, r3
   868ba:	4625      	mov	r5, r4
   868bc:	3301      	adds	r3, #1
   868be:	4553      	cmp	r3, sl
   868c0:	f845 2b04 	str.w	r2, [r5], #4
   868c4:	d1fa      	bne.n	868bc <__lshift+0x40>
   868c6:	eb04 0483 	add.w	r4, r4, r3, lsl #2
   868ca:	693a      	ldr	r2, [r7, #16]
   868cc:	f107 0314 	add.w	r3, r7, #20
   868d0:	f01b 0b1f 	ands.w	fp, fp, #31
   868d4:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
   868d8:	d021      	beq.n	8691e <__lshift+0xa2>
   868da:	f1cb 0a20 	rsb	sl, fp, #32
   868de:	2200      	movs	r2, #0
   868e0:	e000      	b.n	868e4 <__lshift+0x68>
   868e2:	462c      	mov	r4, r5
   868e4:	6819      	ldr	r1, [r3, #0]
   868e6:	4625      	mov	r5, r4
   868e8:	fa01 f10b 	lsl.w	r1, r1, fp
   868ec:	430a      	orrs	r2, r1
   868ee:	f845 2b04 	str.w	r2, [r5], #4
   868f2:	f853 2b04 	ldr.w	r2, [r3], #4
   868f6:	4563      	cmp	r3, ip
   868f8:	fa22 f20a 	lsr.w	r2, r2, sl
   868fc:	d3f1      	bcc.n	868e2 <__lshift+0x66>
   868fe:	6062      	str	r2, [r4, #4]
   86900:	b10a      	cbz	r2, 86906 <__lshift+0x8a>
   86902:	f109 0602 	add.w	r6, r9, #2
   86906:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
   8690a:	687a      	ldr	r2, [r7, #4]
   8690c:	3e01      	subs	r6, #1
   8690e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   86912:	6106      	str	r6, [r0, #16]
   86914:	6039      	str	r1, [r7, #0]
   86916:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   8691a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8691e:	f853 2b04 	ldr.w	r2, [r3], #4
   86922:	459c      	cmp	ip, r3
   86924:	f844 2b04 	str.w	r2, [r4], #4
   86928:	d9ed      	bls.n	86906 <__lshift+0x8a>
   8692a:	f853 2b04 	ldr.w	r2, [r3], #4
   8692e:	459c      	cmp	ip, r3
   86930:	f844 2b04 	str.w	r2, [r4], #4
   86934:	d8f3      	bhi.n	8691e <__lshift+0xa2>
   86936:	e7e6      	b.n	86906 <__lshift+0x8a>

00086938 <__mcmp>:
   86938:	6902      	ldr	r2, [r0, #16]
   8693a:	690b      	ldr	r3, [r1, #16]
   8693c:	b410      	push	{r4}
   8693e:	1ad2      	subs	r2, r2, r3
   86940:	d115      	bne.n	8696e <__mcmp+0x36>
   86942:	009b      	lsls	r3, r3, #2
   86944:	3014      	adds	r0, #20
   86946:	3114      	adds	r1, #20
   86948:	4419      	add	r1, r3
   8694a:	4403      	add	r3, r0
   8694c:	e001      	b.n	86952 <__mcmp+0x1a>
   8694e:	4298      	cmp	r0, r3
   86950:	d211      	bcs.n	86976 <__mcmp+0x3e>
   86952:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   86956:	f851 4d04 	ldr.w	r4, [r1, #-4]!
   8695a:	42a2      	cmp	r2, r4
   8695c:	d0f7      	beq.n	8694e <__mcmp+0x16>
   8695e:	4294      	cmp	r4, r2
   86960:	bf94      	ite	ls
   86962:	2001      	movls	r0, #1
   86964:	f04f 30ff 	movhi.w	r0, #4294967295
   86968:	f85d 4b04 	ldr.w	r4, [sp], #4
   8696c:	4770      	bx	lr
   8696e:	4610      	mov	r0, r2
   86970:	f85d 4b04 	ldr.w	r4, [sp], #4
   86974:	4770      	bx	lr
   86976:	2000      	movs	r0, #0
   86978:	f85d 4b04 	ldr.w	r4, [sp], #4
   8697c:	4770      	bx	lr
   8697e:	bf00      	nop

00086980 <__mdiff>:
   86980:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   86984:	460d      	mov	r5, r1
   86986:	4604      	mov	r4, r0
   86988:	4611      	mov	r1, r2
   8698a:	4628      	mov	r0, r5
   8698c:	4616      	mov	r6, r2
   8698e:	f7ff ffd3 	bl	86938 <__mcmp>
   86992:	1e07      	subs	r7, r0, #0
   86994:	d056      	beq.n	86a44 <__mdiff+0xc4>
   86996:	db4f      	blt.n	86a38 <__mdiff+0xb8>
   86998:	f04f 0900 	mov.w	r9, #0
   8699c:	6869      	ldr	r1, [r5, #4]
   8699e:	4620      	mov	r0, r4
   869a0:	f7ff fdae 	bl	86500 <_Balloc>
   869a4:	692f      	ldr	r7, [r5, #16]
   869a6:	6932      	ldr	r2, [r6, #16]
   869a8:	3514      	adds	r5, #20
   869aa:	3614      	adds	r6, #20
   869ac:	f8c0 900c 	str.w	r9, [r0, #12]
   869b0:	f100 0314 	add.w	r3, r0, #20
   869b4:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
   869b8:	eb06 0882 	add.w	r8, r6, r2, lsl #2
   869bc:	2100      	movs	r1, #0
   869be:	f855 4b04 	ldr.w	r4, [r5], #4
   869c2:	f856 2b04 	ldr.w	r2, [r6], #4
   869c6:	fa1f fa84 	uxth.w	sl, r4
   869ca:	448a      	add	sl, r1
   869cc:	fa1f f982 	uxth.w	r9, r2
   869d0:	0c11      	lsrs	r1, r2, #16
   869d2:	ebc1 4114 	rsb	r1, r1, r4, lsr #16
   869d6:	ebc9 020a 	rsb	r2, r9, sl
   869da:	eb01 4122 	add.w	r1, r1, r2, asr #16
   869de:	b292      	uxth	r2, r2
   869e0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   869e4:	45b0      	cmp	r8, r6
   869e6:	f843 2b04 	str.w	r2, [r3], #4
   869ea:	ea4f 4121 	mov.w	r1, r1, asr #16
   869ee:	462c      	mov	r4, r5
   869f0:	d8e5      	bhi.n	869be <__mdiff+0x3e>
   869f2:	45ac      	cmp	ip, r5
   869f4:	4698      	mov	r8, r3
   869f6:	d915      	bls.n	86a24 <__mdiff+0xa4>
   869f8:	f854 6b04 	ldr.w	r6, [r4], #4
   869fc:	b2b2      	uxth	r2, r6
   869fe:	4411      	add	r1, r2
   86a00:	0c36      	lsrs	r6, r6, #16
   86a02:	eb06 4621 	add.w	r6, r6, r1, asr #16
   86a06:	b289      	uxth	r1, r1
   86a08:	ea41 4206 	orr.w	r2, r1, r6, lsl #16
   86a0c:	45a4      	cmp	ip, r4
   86a0e:	f843 2b04 	str.w	r2, [r3], #4
   86a12:	ea4f 4126 	mov.w	r1, r6, asr #16
   86a16:	d8ef      	bhi.n	869f8 <__mdiff+0x78>
   86a18:	43eb      	mvns	r3, r5
   86a1a:	4463      	add	r3, ip
   86a1c:	f023 0303 	bic.w	r3, r3, #3
   86a20:	3304      	adds	r3, #4
   86a22:	4443      	add	r3, r8
   86a24:	3b04      	subs	r3, #4
   86a26:	b922      	cbnz	r2, 86a32 <__mdiff+0xb2>
   86a28:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   86a2c:	3f01      	subs	r7, #1
   86a2e:	2a00      	cmp	r2, #0
   86a30:	d0fa      	beq.n	86a28 <__mdiff+0xa8>
   86a32:	6107      	str	r7, [r0, #16]
   86a34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86a38:	462b      	mov	r3, r5
   86a3a:	f04f 0901 	mov.w	r9, #1
   86a3e:	4635      	mov	r5, r6
   86a40:	461e      	mov	r6, r3
   86a42:	e7ab      	b.n	8699c <__mdiff+0x1c>
   86a44:	4620      	mov	r0, r4
   86a46:	4639      	mov	r1, r7
   86a48:	f7ff fd5a 	bl	86500 <_Balloc>
   86a4c:	2301      	movs	r3, #1
   86a4e:	6147      	str	r7, [r0, #20]
   86a50:	6103      	str	r3, [r0, #16]
   86a52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86a56:	bf00      	nop

00086a58 <__d2b>:
   86a58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   86a5c:	2101      	movs	r1, #1
   86a5e:	b083      	sub	sp, #12
   86a60:	461d      	mov	r5, r3
   86a62:	f3c3 560a 	ubfx	r6, r3, #20, #11
   86a66:	4614      	mov	r4, r2
   86a68:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   86a6a:	f7ff fd49 	bl	86500 <_Balloc>
   86a6e:	f3c5 0313 	ubfx	r3, r5, #0, #20
   86a72:	4680      	mov	r8, r0
   86a74:	b10e      	cbz	r6, 86a7a <__d2b+0x22>
   86a76:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   86a7a:	9301      	str	r3, [sp, #4]
   86a7c:	b324      	cbz	r4, 86ac8 <__d2b+0x70>
   86a7e:	a802      	add	r0, sp, #8
   86a80:	f840 4d08 	str.w	r4, [r0, #-8]!
   86a84:	4668      	mov	r0, sp
   86a86:	f7ff fdd5 	bl	86634 <__lo0bits>
   86a8a:	2800      	cmp	r0, #0
   86a8c:	d135      	bne.n	86afa <__d2b+0xa2>
   86a8e:	e89d 000c 	ldmia.w	sp, {r2, r3}
   86a92:	f8c8 2014 	str.w	r2, [r8, #20]
   86a96:	2b00      	cmp	r3, #0
   86a98:	bf0c      	ite	eq
   86a9a:	2401      	moveq	r4, #1
   86a9c:	2402      	movne	r4, #2
   86a9e:	f8c8 3018 	str.w	r3, [r8, #24]
   86aa2:	f8c8 4010 	str.w	r4, [r8, #16]
   86aa6:	b9de      	cbnz	r6, 86ae0 <__d2b+0x88>
   86aa8:	eb08 0384 	add.w	r3, r8, r4, lsl #2
   86aac:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   86ab0:	6038      	str	r0, [r7, #0]
   86ab2:	6918      	ldr	r0, [r3, #16]
   86ab4:	f7ff fd9e 	bl	865f4 <__hi0bits>
   86ab8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   86aba:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
   86abe:	6018      	str	r0, [r3, #0]
   86ac0:	4640      	mov	r0, r8
   86ac2:	b003      	add	sp, #12
   86ac4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   86ac8:	a801      	add	r0, sp, #4
   86aca:	f7ff fdb3 	bl	86634 <__lo0bits>
   86ace:	9b01      	ldr	r3, [sp, #4]
   86ad0:	2401      	movs	r4, #1
   86ad2:	3020      	adds	r0, #32
   86ad4:	f8c8 3014 	str.w	r3, [r8, #20]
   86ad8:	f8c8 4010 	str.w	r4, [r8, #16]
   86adc:	2e00      	cmp	r6, #0
   86ade:	d0e3      	beq.n	86aa8 <__d2b+0x50>
   86ae0:	f2a6 4933 	subw	r9, r6, #1075	; 0x433
   86ae4:	eb09 0300 	add.w	r3, r9, r0
   86ae8:	603b      	str	r3, [r7, #0]
   86aea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   86aec:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   86af0:	6018      	str	r0, [r3, #0]
   86af2:	4640      	mov	r0, r8
   86af4:	b003      	add	sp, #12
   86af6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   86afa:	9b01      	ldr	r3, [sp, #4]
   86afc:	f1c0 0120 	rsb	r1, r0, #32
   86b00:	fa03 f101 	lsl.w	r1, r3, r1
   86b04:	40c3      	lsrs	r3, r0
   86b06:	9a00      	ldr	r2, [sp, #0]
   86b08:	9301      	str	r3, [sp, #4]
   86b0a:	430a      	orrs	r2, r1
   86b0c:	f8c8 2014 	str.w	r2, [r8, #20]
   86b10:	e7c1      	b.n	86a96 <__d2b+0x3e>
   86b12:	bf00      	nop

00086b14 <_realloc_r>:
   86b14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86b18:	460c      	mov	r4, r1
   86b1a:	b083      	sub	sp, #12
   86b1c:	4690      	mov	r8, r2
   86b1e:	4681      	mov	r9, r0
   86b20:	2900      	cmp	r1, #0
   86b22:	f000 80ba 	beq.w	86c9a <_realloc_r+0x186>
   86b26:	f7ff fce7 	bl	864f8 <__malloc_lock>
   86b2a:	f108 060b 	add.w	r6, r8, #11
   86b2e:	f854 3c04 	ldr.w	r3, [r4, #-4]
   86b32:	2e16      	cmp	r6, #22
   86b34:	f023 0503 	bic.w	r5, r3, #3
   86b38:	f1a4 0708 	sub.w	r7, r4, #8
   86b3c:	d84b      	bhi.n	86bd6 <_realloc_r+0xc2>
   86b3e:	2110      	movs	r1, #16
   86b40:	460e      	mov	r6, r1
   86b42:	45b0      	cmp	r8, r6
   86b44:	d84c      	bhi.n	86be0 <_realloc_r+0xcc>
   86b46:	428d      	cmp	r5, r1
   86b48:	da51      	bge.n	86bee <_realloc_r+0xda>
   86b4a:	f8df b384 	ldr.w	fp, [pc, #900]	; 86ed0 <_realloc_r+0x3bc>
   86b4e:	1978      	adds	r0, r7, r5
   86b50:	f8db e008 	ldr.w	lr, [fp, #8]
   86b54:	4586      	cmp	lr, r0
   86b56:	f000 80a6 	beq.w	86ca6 <_realloc_r+0x192>
   86b5a:	6842      	ldr	r2, [r0, #4]
   86b5c:	f022 0c01 	bic.w	ip, r2, #1
   86b60:	4484      	add	ip, r0
   86b62:	f8dc c004 	ldr.w	ip, [ip, #4]
   86b66:	f01c 0f01 	tst.w	ip, #1
   86b6a:	d054      	beq.n	86c16 <_realloc_r+0x102>
   86b6c:	2200      	movs	r2, #0
   86b6e:	4610      	mov	r0, r2
   86b70:	07db      	lsls	r3, r3, #31
   86b72:	d46f      	bmi.n	86c54 <_realloc_r+0x140>
   86b74:	f854 3c08 	ldr.w	r3, [r4, #-8]
   86b78:	ebc3 0a07 	rsb	sl, r3, r7
   86b7c:	f8da 3004 	ldr.w	r3, [sl, #4]
   86b80:	f023 0303 	bic.w	r3, r3, #3
   86b84:	442b      	add	r3, r5
   86b86:	2800      	cmp	r0, #0
   86b88:	d062      	beq.n	86c50 <_realloc_r+0x13c>
   86b8a:	4570      	cmp	r0, lr
   86b8c:	f000 80e9 	beq.w	86d62 <_realloc_r+0x24e>
   86b90:	eb02 0e03 	add.w	lr, r2, r3
   86b94:	458e      	cmp	lr, r1
   86b96:	db5b      	blt.n	86c50 <_realloc_r+0x13c>
   86b98:	68c3      	ldr	r3, [r0, #12]
   86b9a:	6882      	ldr	r2, [r0, #8]
   86b9c:	46d0      	mov	r8, sl
   86b9e:	60d3      	str	r3, [r2, #12]
   86ba0:	609a      	str	r2, [r3, #8]
   86ba2:	f858 1f08 	ldr.w	r1, [r8, #8]!
   86ba6:	f8da 300c 	ldr.w	r3, [sl, #12]
   86baa:	1f2a      	subs	r2, r5, #4
   86bac:	2a24      	cmp	r2, #36	; 0x24
   86bae:	60cb      	str	r3, [r1, #12]
   86bb0:	6099      	str	r1, [r3, #8]
   86bb2:	f200 8123 	bhi.w	86dfc <_realloc_r+0x2e8>
   86bb6:	2a13      	cmp	r2, #19
   86bb8:	f240 80b0 	bls.w	86d1c <_realloc_r+0x208>
   86bbc:	6823      	ldr	r3, [r4, #0]
   86bbe:	2a1b      	cmp	r2, #27
   86bc0:	f8ca 3008 	str.w	r3, [sl, #8]
   86bc4:	6863      	ldr	r3, [r4, #4]
   86bc6:	f8ca 300c 	str.w	r3, [sl, #12]
   86bca:	f200 812b 	bhi.w	86e24 <_realloc_r+0x310>
   86bce:	3408      	adds	r4, #8
   86bd0:	f10a 0310 	add.w	r3, sl, #16
   86bd4:	e0a3      	b.n	86d1e <_realloc_r+0x20a>
   86bd6:	f026 0607 	bic.w	r6, r6, #7
   86bda:	2e00      	cmp	r6, #0
   86bdc:	4631      	mov	r1, r6
   86bde:	dab0      	bge.n	86b42 <_realloc_r+0x2e>
   86be0:	230c      	movs	r3, #12
   86be2:	2000      	movs	r0, #0
   86be4:	f8c9 3000 	str.w	r3, [r9]
   86be8:	b003      	add	sp, #12
   86bea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86bee:	46a0      	mov	r8, r4
   86bf0:	1baa      	subs	r2, r5, r6
   86bf2:	2a0f      	cmp	r2, #15
   86bf4:	f003 0301 	and.w	r3, r3, #1
   86bf8:	d81a      	bhi.n	86c30 <_realloc_r+0x11c>
   86bfa:	432b      	orrs	r3, r5
   86bfc:	607b      	str	r3, [r7, #4]
   86bfe:	443d      	add	r5, r7
   86c00:	686b      	ldr	r3, [r5, #4]
   86c02:	f043 0301 	orr.w	r3, r3, #1
   86c06:	606b      	str	r3, [r5, #4]
   86c08:	4648      	mov	r0, r9
   86c0a:	f7ff fc77 	bl	864fc <__malloc_unlock>
   86c0e:	4640      	mov	r0, r8
   86c10:	b003      	add	sp, #12
   86c12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86c16:	f022 0203 	bic.w	r2, r2, #3
   86c1a:	eb02 0c05 	add.w	ip, r2, r5
   86c1e:	458c      	cmp	ip, r1
   86c20:	dba6      	blt.n	86b70 <_realloc_r+0x5c>
   86c22:	68c2      	ldr	r2, [r0, #12]
   86c24:	6881      	ldr	r1, [r0, #8]
   86c26:	46a0      	mov	r8, r4
   86c28:	60ca      	str	r2, [r1, #12]
   86c2a:	4665      	mov	r5, ip
   86c2c:	6091      	str	r1, [r2, #8]
   86c2e:	e7df      	b.n	86bf0 <_realloc_r+0xdc>
   86c30:	19b9      	adds	r1, r7, r6
   86c32:	4333      	orrs	r3, r6
   86c34:	f042 0001 	orr.w	r0, r2, #1
   86c38:	607b      	str	r3, [r7, #4]
   86c3a:	440a      	add	r2, r1
   86c3c:	6048      	str	r0, [r1, #4]
   86c3e:	6853      	ldr	r3, [r2, #4]
   86c40:	3108      	adds	r1, #8
   86c42:	f043 0301 	orr.w	r3, r3, #1
   86c46:	6053      	str	r3, [r2, #4]
   86c48:	4648      	mov	r0, r9
   86c4a:	f7fe fd91 	bl	85770 <_free_r>
   86c4e:	e7db      	b.n	86c08 <_realloc_r+0xf4>
   86c50:	428b      	cmp	r3, r1
   86c52:	da33      	bge.n	86cbc <_realloc_r+0x1a8>
   86c54:	4641      	mov	r1, r8
   86c56:	4648      	mov	r0, r9
   86c58:	f7ff f88c 	bl	85d74 <_malloc_r>
   86c5c:	4680      	mov	r8, r0
   86c5e:	2800      	cmp	r0, #0
   86c60:	d0d2      	beq.n	86c08 <_realloc_r+0xf4>
   86c62:	f854 3c04 	ldr.w	r3, [r4, #-4]
   86c66:	f1a0 0108 	sub.w	r1, r0, #8
   86c6a:	f023 0201 	bic.w	r2, r3, #1
   86c6e:	443a      	add	r2, r7
   86c70:	4291      	cmp	r1, r2
   86c72:	f000 80bc 	beq.w	86dee <_realloc_r+0x2da>
   86c76:	1f2a      	subs	r2, r5, #4
   86c78:	2a24      	cmp	r2, #36	; 0x24
   86c7a:	d86e      	bhi.n	86d5a <_realloc_r+0x246>
   86c7c:	2a13      	cmp	r2, #19
   86c7e:	d842      	bhi.n	86d06 <_realloc_r+0x1f2>
   86c80:	4603      	mov	r3, r0
   86c82:	4622      	mov	r2, r4
   86c84:	6811      	ldr	r1, [r2, #0]
   86c86:	6019      	str	r1, [r3, #0]
   86c88:	6851      	ldr	r1, [r2, #4]
   86c8a:	6059      	str	r1, [r3, #4]
   86c8c:	6892      	ldr	r2, [r2, #8]
   86c8e:	609a      	str	r2, [r3, #8]
   86c90:	4621      	mov	r1, r4
   86c92:	4648      	mov	r0, r9
   86c94:	f7fe fd6c 	bl	85770 <_free_r>
   86c98:	e7b6      	b.n	86c08 <_realloc_r+0xf4>
   86c9a:	4611      	mov	r1, r2
   86c9c:	b003      	add	sp, #12
   86c9e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86ca2:	f7ff b867 	b.w	85d74 <_malloc_r>
   86ca6:	f8de 2004 	ldr.w	r2, [lr, #4]
   86caa:	f106 0c10 	add.w	ip, r6, #16
   86cae:	f022 0203 	bic.w	r2, r2, #3
   86cb2:	1950      	adds	r0, r2, r5
   86cb4:	4560      	cmp	r0, ip
   86cb6:	da3d      	bge.n	86d34 <_realloc_r+0x220>
   86cb8:	4670      	mov	r0, lr
   86cba:	e759      	b.n	86b70 <_realloc_r+0x5c>
   86cbc:	46d0      	mov	r8, sl
   86cbe:	f858 0f08 	ldr.w	r0, [r8, #8]!
   86cc2:	f8da 100c 	ldr.w	r1, [sl, #12]
   86cc6:	1f2a      	subs	r2, r5, #4
   86cc8:	2a24      	cmp	r2, #36	; 0x24
   86cca:	60c1      	str	r1, [r0, #12]
   86ccc:	6088      	str	r0, [r1, #8]
   86cce:	f200 80a0 	bhi.w	86e12 <_realloc_r+0x2fe>
   86cd2:	2a13      	cmp	r2, #19
   86cd4:	f240 809b 	bls.w	86e0e <_realloc_r+0x2fa>
   86cd8:	6821      	ldr	r1, [r4, #0]
   86cda:	2a1b      	cmp	r2, #27
   86cdc:	f8ca 1008 	str.w	r1, [sl, #8]
   86ce0:	6861      	ldr	r1, [r4, #4]
   86ce2:	f8ca 100c 	str.w	r1, [sl, #12]
   86ce6:	f200 80b2 	bhi.w	86e4e <_realloc_r+0x33a>
   86cea:	3408      	adds	r4, #8
   86cec:	f10a 0210 	add.w	r2, sl, #16
   86cf0:	6821      	ldr	r1, [r4, #0]
   86cf2:	461d      	mov	r5, r3
   86cf4:	6011      	str	r1, [r2, #0]
   86cf6:	6861      	ldr	r1, [r4, #4]
   86cf8:	4657      	mov	r7, sl
   86cfa:	6051      	str	r1, [r2, #4]
   86cfc:	68a3      	ldr	r3, [r4, #8]
   86cfe:	6093      	str	r3, [r2, #8]
   86d00:	f8da 3004 	ldr.w	r3, [sl, #4]
   86d04:	e774      	b.n	86bf0 <_realloc_r+0xdc>
   86d06:	6823      	ldr	r3, [r4, #0]
   86d08:	2a1b      	cmp	r2, #27
   86d0a:	6003      	str	r3, [r0, #0]
   86d0c:	6863      	ldr	r3, [r4, #4]
   86d0e:	6043      	str	r3, [r0, #4]
   86d10:	d862      	bhi.n	86dd8 <_realloc_r+0x2c4>
   86d12:	f100 0308 	add.w	r3, r0, #8
   86d16:	f104 0208 	add.w	r2, r4, #8
   86d1a:	e7b3      	b.n	86c84 <_realloc_r+0x170>
   86d1c:	4643      	mov	r3, r8
   86d1e:	6822      	ldr	r2, [r4, #0]
   86d20:	4675      	mov	r5, lr
   86d22:	601a      	str	r2, [r3, #0]
   86d24:	6862      	ldr	r2, [r4, #4]
   86d26:	4657      	mov	r7, sl
   86d28:	605a      	str	r2, [r3, #4]
   86d2a:	68a2      	ldr	r2, [r4, #8]
   86d2c:	609a      	str	r2, [r3, #8]
   86d2e:	f8da 3004 	ldr.w	r3, [sl, #4]
   86d32:	e75d      	b.n	86bf0 <_realloc_r+0xdc>
   86d34:	1b83      	subs	r3, r0, r6
   86d36:	4437      	add	r7, r6
   86d38:	f043 0301 	orr.w	r3, r3, #1
   86d3c:	f8cb 7008 	str.w	r7, [fp, #8]
   86d40:	607b      	str	r3, [r7, #4]
   86d42:	f854 3c04 	ldr.w	r3, [r4, #-4]
   86d46:	4648      	mov	r0, r9
   86d48:	f003 0301 	and.w	r3, r3, #1
   86d4c:	431e      	orrs	r6, r3
   86d4e:	f844 6c04 	str.w	r6, [r4, #-4]
   86d52:	f7ff fbd3 	bl	864fc <__malloc_unlock>
   86d56:	4620      	mov	r0, r4
   86d58:	e75a      	b.n	86c10 <_realloc_r+0xfc>
   86d5a:	4621      	mov	r1, r4
   86d5c:	f7ff fb66 	bl	8642c <memmove>
   86d60:	e796      	b.n	86c90 <_realloc_r+0x17c>
   86d62:	eb02 0c03 	add.w	ip, r2, r3
   86d66:	f106 0210 	add.w	r2, r6, #16
   86d6a:	4594      	cmp	ip, r2
   86d6c:	f6ff af70 	blt.w	86c50 <_realloc_r+0x13c>
   86d70:	4657      	mov	r7, sl
   86d72:	f857 1f08 	ldr.w	r1, [r7, #8]!
   86d76:	f8da 300c 	ldr.w	r3, [sl, #12]
   86d7a:	1f2a      	subs	r2, r5, #4
   86d7c:	2a24      	cmp	r2, #36	; 0x24
   86d7e:	60cb      	str	r3, [r1, #12]
   86d80:	6099      	str	r1, [r3, #8]
   86d82:	f200 8086 	bhi.w	86e92 <_realloc_r+0x37e>
   86d86:	2a13      	cmp	r2, #19
   86d88:	d977      	bls.n	86e7a <_realloc_r+0x366>
   86d8a:	6823      	ldr	r3, [r4, #0]
   86d8c:	2a1b      	cmp	r2, #27
   86d8e:	f8ca 3008 	str.w	r3, [sl, #8]
   86d92:	6863      	ldr	r3, [r4, #4]
   86d94:	f8ca 300c 	str.w	r3, [sl, #12]
   86d98:	f200 8084 	bhi.w	86ea4 <_realloc_r+0x390>
   86d9c:	3408      	adds	r4, #8
   86d9e:	f10a 0310 	add.w	r3, sl, #16
   86da2:	6822      	ldr	r2, [r4, #0]
   86da4:	601a      	str	r2, [r3, #0]
   86da6:	6862      	ldr	r2, [r4, #4]
   86da8:	605a      	str	r2, [r3, #4]
   86daa:	68a2      	ldr	r2, [r4, #8]
   86dac:	609a      	str	r2, [r3, #8]
   86dae:	ebc6 020c 	rsb	r2, r6, ip
   86db2:	eb0a 0306 	add.w	r3, sl, r6
   86db6:	f042 0201 	orr.w	r2, r2, #1
   86dba:	f8cb 3008 	str.w	r3, [fp, #8]
   86dbe:	605a      	str	r2, [r3, #4]
   86dc0:	f8da 3004 	ldr.w	r3, [sl, #4]
   86dc4:	4648      	mov	r0, r9
   86dc6:	f003 0301 	and.w	r3, r3, #1
   86dca:	431e      	orrs	r6, r3
   86dcc:	f8ca 6004 	str.w	r6, [sl, #4]
   86dd0:	f7ff fb94 	bl	864fc <__malloc_unlock>
   86dd4:	4638      	mov	r0, r7
   86dd6:	e71b      	b.n	86c10 <_realloc_r+0xfc>
   86dd8:	68a3      	ldr	r3, [r4, #8]
   86dda:	2a24      	cmp	r2, #36	; 0x24
   86ddc:	6083      	str	r3, [r0, #8]
   86dde:	68e3      	ldr	r3, [r4, #12]
   86de0:	60c3      	str	r3, [r0, #12]
   86de2:	d02b      	beq.n	86e3c <_realloc_r+0x328>
   86de4:	f100 0310 	add.w	r3, r0, #16
   86de8:	f104 0210 	add.w	r2, r4, #16
   86dec:	e74a      	b.n	86c84 <_realloc_r+0x170>
   86dee:	f850 2c04 	ldr.w	r2, [r0, #-4]
   86df2:	46a0      	mov	r8, r4
   86df4:	f022 0203 	bic.w	r2, r2, #3
   86df8:	4415      	add	r5, r2
   86dfa:	e6f9      	b.n	86bf0 <_realloc_r+0xdc>
   86dfc:	4621      	mov	r1, r4
   86dfe:	4640      	mov	r0, r8
   86e00:	4675      	mov	r5, lr
   86e02:	4657      	mov	r7, sl
   86e04:	f7ff fb12 	bl	8642c <memmove>
   86e08:	f8da 3004 	ldr.w	r3, [sl, #4]
   86e0c:	e6f0      	b.n	86bf0 <_realloc_r+0xdc>
   86e0e:	4642      	mov	r2, r8
   86e10:	e76e      	b.n	86cf0 <_realloc_r+0x1dc>
   86e12:	4621      	mov	r1, r4
   86e14:	4640      	mov	r0, r8
   86e16:	461d      	mov	r5, r3
   86e18:	4657      	mov	r7, sl
   86e1a:	f7ff fb07 	bl	8642c <memmove>
   86e1e:	f8da 3004 	ldr.w	r3, [sl, #4]
   86e22:	e6e5      	b.n	86bf0 <_realloc_r+0xdc>
   86e24:	68a3      	ldr	r3, [r4, #8]
   86e26:	2a24      	cmp	r2, #36	; 0x24
   86e28:	f8ca 3010 	str.w	r3, [sl, #16]
   86e2c:	68e3      	ldr	r3, [r4, #12]
   86e2e:	f8ca 3014 	str.w	r3, [sl, #20]
   86e32:	d018      	beq.n	86e66 <_realloc_r+0x352>
   86e34:	3410      	adds	r4, #16
   86e36:	f10a 0318 	add.w	r3, sl, #24
   86e3a:	e770      	b.n	86d1e <_realloc_r+0x20a>
   86e3c:	6922      	ldr	r2, [r4, #16]
   86e3e:	f100 0318 	add.w	r3, r0, #24
   86e42:	6102      	str	r2, [r0, #16]
   86e44:	6961      	ldr	r1, [r4, #20]
   86e46:	f104 0218 	add.w	r2, r4, #24
   86e4a:	6141      	str	r1, [r0, #20]
   86e4c:	e71a      	b.n	86c84 <_realloc_r+0x170>
   86e4e:	68a1      	ldr	r1, [r4, #8]
   86e50:	2a24      	cmp	r2, #36	; 0x24
   86e52:	f8ca 1010 	str.w	r1, [sl, #16]
   86e56:	68e1      	ldr	r1, [r4, #12]
   86e58:	f8ca 1014 	str.w	r1, [sl, #20]
   86e5c:	d00f      	beq.n	86e7e <_realloc_r+0x36a>
   86e5e:	3410      	adds	r4, #16
   86e60:	f10a 0218 	add.w	r2, sl, #24
   86e64:	e744      	b.n	86cf0 <_realloc_r+0x1dc>
   86e66:	6922      	ldr	r2, [r4, #16]
   86e68:	f10a 0320 	add.w	r3, sl, #32
   86e6c:	f8ca 2018 	str.w	r2, [sl, #24]
   86e70:	6962      	ldr	r2, [r4, #20]
   86e72:	3418      	adds	r4, #24
   86e74:	f8ca 201c 	str.w	r2, [sl, #28]
   86e78:	e751      	b.n	86d1e <_realloc_r+0x20a>
   86e7a:	463b      	mov	r3, r7
   86e7c:	e791      	b.n	86da2 <_realloc_r+0x28e>
   86e7e:	6921      	ldr	r1, [r4, #16]
   86e80:	f10a 0220 	add.w	r2, sl, #32
   86e84:	f8ca 1018 	str.w	r1, [sl, #24]
   86e88:	6961      	ldr	r1, [r4, #20]
   86e8a:	3418      	adds	r4, #24
   86e8c:	f8ca 101c 	str.w	r1, [sl, #28]
   86e90:	e72e      	b.n	86cf0 <_realloc_r+0x1dc>
   86e92:	4621      	mov	r1, r4
   86e94:	4638      	mov	r0, r7
   86e96:	f8cd c004 	str.w	ip, [sp, #4]
   86e9a:	f7ff fac7 	bl	8642c <memmove>
   86e9e:	f8dd c004 	ldr.w	ip, [sp, #4]
   86ea2:	e784      	b.n	86dae <_realloc_r+0x29a>
   86ea4:	68a3      	ldr	r3, [r4, #8]
   86ea6:	2a24      	cmp	r2, #36	; 0x24
   86ea8:	f8ca 3010 	str.w	r3, [sl, #16]
   86eac:	68e3      	ldr	r3, [r4, #12]
   86eae:	f8ca 3014 	str.w	r3, [sl, #20]
   86eb2:	d003      	beq.n	86ebc <_realloc_r+0x3a8>
   86eb4:	3410      	adds	r4, #16
   86eb6:	f10a 0318 	add.w	r3, sl, #24
   86eba:	e772      	b.n	86da2 <_realloc_r+0x28e>
   86ebc:	6922      	ldr	r2, [r4, #16]
   86ebe:	f10a 0320 	add.w	r3, sl, #32
   86ec2:	f8ca 2018 	str.w	r2, [sl, #24]
   86ec6:	6962      	ldr	r2, [r4, #20]
   86ec8:	3418      	adds	r4, #24
   86eca:	f8ca 201c 	str.w	r2, [sl, #28]
   86ece:	e768      	b.n	86da2 <_realloc_r+0x28e>
   86ed0:	200705c0 	.word	0x200705c0

00086ed4 <_sbrk_r>:
   86ed4:	b538      	push	{r3, r4, r5, lr}
   86ed6:	4c07      	ldr	r4, [pc, #28]	; (86ef4 <_sbrk_r+0x20>)
   86ed8:	2300      	movs	r3, #0
   86eda:	4605      	mov	r5, r0
   86edc:	4608      	mov	r0, r1
   86ede:	6023      	str	r3, [r4, #0]
   86ee0:	f7fa f8ea 	bl	810b8 <_sbrk>
   86ee4:	1c43      	adds	r3, r0, #1
   86ee6:	d000      	beq.n	86eea <_sbrk_r+0x16>
   86ee8:	bd38      	pop	{r3, r4, r5, pc}
   86eea:	6823      	ldr	r3, [r4, #0]
   86eec:	2b00      	cmp	r3, #0
   86eee:	d0fb      	beq.n	86ee8 <_sbrk_r+0x14>
   86ef0:	602b      	str	r3, [r5, #0]
   86ef2:	bd38      	pop	{r3, r4, r5, pc}
   86ef4:	20070b5c 	.word	0x20070b5c

00086ef8 <__sread>:
   86ef8:	b510      	push	{r4, lr}
   86efa:	460c      	mov	r4, r1
   86efc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   86f00:	f000 fa4e 	bl	873a0 <_read_r>
   86f04:	2800      	cmp	r0, #0
   86f06:	db03      	blt.n	86f10 <__sread+0x18>
   86f08:	6d23      	ldr	r3, [r4, #80]	; 0x50
   86f0a:	4403      	add	r3, r0
   86f0c:	6523      	str	r3, [r4, #80]	; 0x50
   86f0e:	bd10      	pop	{r4, pc}
   86f10:	89a3      	ldrh	r3, [r4, #12]
   86f12:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   86f16:	81a3      	strh	r3, [r4, #12]
   86f18:	bd10      	pop	{r4, pc}
   86f1a:	bf00      	nop

00086f1c <__swrite>:
   86f1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   86f20:	460c      	mov	r4, r1
   86f22:	8989      	ldrh	r1, [r1, #12]
   86f24:	461d      	mov	r5, r3
   86f26:	05cb      	lsls	r3, r1, #23
   86f28:	4616      	mov	r6, r2
   86f2a:	4607      	mov	r7, r0
   86f2c:	d506      	bpl.n	86f3c <__swrite+0x20>
   86f2e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   86f32:	2200      	movs	r2, #0
   86f34:	2302      	movs	r3, #2
   86f36:	f000 fa1f 	bl	87378 <_lseek_r>
   86f3a:	89a1      	ldrh	r1, [r4, #12]
   86f3c:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   86f40:	81a1      	strh	r1, [r4, #12]
   86f42:	4638      	mov	r0, r7
   86f44:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   86f48:	4632      	mov	r2, r6
   86f4a:	462b      	mov	r3, r5
   86f4c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   86f50:	f000 b8fa 	b.w	87148 <_write_r>

00086f54 <__sseek>:
   86f54:	b510      	push	{r4, lr}
   86f56:	460c      	mov	r4, r1
   86f58:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   86f5c:	f000 fa0c 	bl	87378 <_lseek_r>
   86f60:	89a3      	ldrh	r3, [r4, #12]
   86f62:	1c42      	adds	r2, r0, #1
   86f64:	bf0e      	itee	eq
   86f66:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   86f6a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   86f6e:	6520      	strne	r0, [r4, #80]	; 0x50
   86f70:	81a3      	strh	r3, [r4, #12]
   86f72:	bd10      	pop	{r4, pc}

00086f74 <__sclose>:
   86f74:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   86f78:	f000 b97e 	b.w	87278 <_close_r>

00086f7c <strlen>:
   86f7c:	f020 0103 	bic.w	r1, r0, #3
   86f80:	f010 0003 	ands.w	r0, r0, #3
   86f84:	f1c0 0000 	rsb	r0, r0, #0
   86f88:	f851 3b04 	ldr.w	r3, [r1], #4
   86f8c:	f100 0c04 	add.w	ip, r0, #4
   86f90:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   86f94:	f06f 0200 	mvn.w	r2, #0
   86f98:	bf1c      	itt	ne
   86f9a:	fa22 f20c 	lsrne.w	r2, r2, ip
   86f9e:	4313      	orrne	r3, r2
   86fa0:	f04f 0c01 	mov.w	ip, #1
   86fa4:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   86fa8:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   86fac:	eba3 020c 	sub.w	r2, r3, ip
   86fb0:	ea22 0203 	bic.w	r2, r2, r3
   86fb4:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   86fb8:	bf04      	itt	eq
   86fba:	f851 3b04 	ldreq.w	r3, [r1], #4
   86fbe:	3004      	addeq	r0, #4
   86fc0:	d0f4      	beq.n	86fac <strlen+0x30>
   86fc2:	f013 0fff 	tst.w	r3, #255	; 0xff
   86fc6:	bf1f      	itttt	ne
   86fc8:	3001      	addne	r0, #1
   86fca:	f413 4f7f 	tstne.w	r3, #65280	; 0xff00
   86fce:	3001      	addne	r0, #1
   86fd0:	f413 0f7f 	tstne.w	r3, #16711680	; 0xff0000
   86fd4:	bf18      	it	ne
   86fd6:	3001      	addne	r0, #1
   86fd8:	4770      	bx	lr
   86fda:	bf00      	nop

00086fdc <__ssprint_r>:
   86fdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86fe0:	6894      	ldr	r4, [r2, #8]
   86fe2:	b083      	sub	sp, #12
   86fe4:	4692      	mov	sl, r2
   86fe6:	4680      	mov	r8, r0
   86fe8:	460d      	mov	r5, r1
   86fea:	6816      	ldr	r6, [r2, #0]
   86fec:	2c00      	cmp	r4, #0
   86fee:	d06f      	beq.n	870d0 <__ssprint_r+0xf4>
   86ff0:	f04f 0b00 	mov.w	fp, #0
   86ff4:	6808      	ldr	r0, [r1, #0]
   86ff6:	688b      	ldr	r3, [r1, #8]
   86ff8:	465c      	mov	r4, fp
   86ffa:	2c00      	cmp	r4, #0
   86ffc:	d043      	beq.n	87086 <__ssprint_r+0xaa>
   86ffe:	429c      	cmp	r4, r3
   87000:	461f      	mov	r7, r3
   87002:	d345      	bcc.n	87090 <__ssprint_r+0xb4>
   87004:	89ab      	ldrh	r3, [r5, #12]
   87006:	f413 6f90 	tst.w	r3, #1152	; 0x480
   8700a:	d044      	beq.n	87096 <__ssprint_r+0xba>
   8700c:	696f      	ldr	r7, [r5, #20]
   8700e:	6929      	ldr	r1, [r5, #16]
   87010:	eb07 0747 	add.w	r7, r7, r7, lsl #1
   87014:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
   87018:	ebc1 0900 	rsb	r9, r1, r0
   8701c:	1c62      	adds	r2, r4, #1
   8701e:	107f      	asrs	r7, r7, #1
   87020:	444a      	add	r2, r9
   87022:	4297      	cmp	r7, r2
   87024:	bf34      	ite	cc
   87026:	4617      	movcc	r7, r2
   87028:	463a      	movcs	r2, r7
   8702a:	055b      	lsls	r3, r3, #21
   8702c:	d535      	bpl.n	8709a <__ssprint_r+0xbe>
   8702e:	4611      	mov	r1, r2
   87030:	4640      	mov	r0, r8
   87032:	f7fe fe9f 	bl	85d74 <_malloc_r>
   87036:	2800      	cmp	r0, #0
   87038:	d039      	beq.n	870ae <__ssprint_r+0xd2>
   8703a:	6929      	ldr	r1, [r5, #16]
   8703c:	464a      	mov	r2, r9
   8703e:	9001      	str	r0, [sp, #4]
   87040:	f7ff f97e 	bl	86340 <memcpy>
   87044:	89aa      	ldrh	r2, [r5, #12]
   87046:	9b01      	ldr	r3, [sp, #4]
   87048:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   8704c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   87050:	81aa      	strh	r2, [r5, #12]
   87052:	ebc9 0207 	rsb	r2, r9, r7
   87056:	eb03 0009 	add.w	r0, r3, r9
   8705a:	616f      	str	r7, [r5, #20]
   8705c:	612b      	str	r3, [r5, #16]
   8705e:	6028      	str	r0, [r5, #0]
   87060:	60aa      	str	r2, [r5, #8]
   87062:	4627      	mov	r7, r4
   87064:	46a1      	mov	r9, r4
   87066:	464a      	mov	r2, r9
   87068:	4659      	mov	r1, fp
   8706a:	f7ff f9df 	bl	8642c <memmove>
   8706e:	f8da 2008 	ldr.w	r2, [sl, #8]
   87072:	68ab      	ldr	r3, [r5, #8]
   87074:	6828      	ldr	r0, [r5, #0]
   87076:	1bdb      	subs	r3, r3, r7
   87078:	4448      	add	r0, r9
   8707a:	1b14      	subs	r4, r2, r4
   8707c:	60ab      	str	r3, [r5, #8]
   8707e:	6028      	str	r0, [r5, #0]
   87080:	f8ca 4008 	str.w	r4, [sl, #8]
   87084:	b324      	cbz	r4, 870d0 <__ssprint_r+0xf4>
   87086:	f8d6 b000 	ldr.w	fp, [r6]
   8708a:	6874      	ldr	r4, [r6, #4]
   8708c:	3608      	adds	r6, #8
   8708e:	e7b4      	b.n	86ffa <__ssprint_r+0x1e>
   87090:	4627      	mov	r7, r4
   87092:	46a1      	mov	r9, r4
   87094:	e7e7      	b.n	87066 <__ssprint_r+0x8a>
   87096:	46b9      	mov	r9, r7
   87098:	e7e5      	b.n	87066 <__ssprint_r+0x8a>
   8709a:	4640      	mov	r0, r8
   8709c:	f7ff fd3a 	bl	86b14 <_realloc_r>
   870a0:	4603      	mov	r3, r0
   870a2:	2800      	cmp	r0, #0
   870a4:	d1d5      	bne.n	87052 <__ssprint_r+0x76>
   870a6:	4640      	mov	r0, r8
   870a8:	6929      	ldr	r1, [r5, #16]
   870aa:	f7fe fb61 	bl	85770 <_free_r>
   870ae:	89aa      	ldrh	r2, [r5, #12]
   870b0:	230c      	movs	r3, #12
   870b2:	f8c8 3000 	str.w	r3, [r8]
   870b6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   870ba:	2300      	movs	r3, #0
   870bc:	f04f 30ff 	mov.w	r0, #4294967295
   870c0:	81aa      	strh	r2, [r5, #12]
   870c2:	f8ca 3008 	str.w	r3, [sl, #8]
   870c6:	f8ca 3004 	str.w	r3, [sl, #4]
   870ca:	b003      	add	sp, #12
   870cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   870d0:	4620      	mov	r0, r4
   870d2:	f8ca 4004 	str.w	r4, [sl, #4]
   870d6:	b003      	add	sp, #12
   870d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000870dc <_wcrtomb_r>:
   870dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   870e0:	461e      	mov	r6, r3
   870e2:	b086      	sub	sp, #24
   870e4:	460c      	mov	r4, r1
   870e6:	4605      	mov	r5, r0
   870e8:	4617      	mov	r7, r2
   870ea:	4b0f      	ldr	r3, [pc, #60]	; (87128 <_wcrtomb_r+0x4c>)
   870ec:	b191      	cbz	r1, 87114 <_wcrtomb_r+0x38>
   870ee:	f8d3 8000 	ldr.w	r8, [r3]
   870f2:	f7fe fdb9 	bl	85c68 <__locale_charset>
   870f6:	9600      	str	r6, [sp, #0]
   870f8:	4603      	mov	r3, r0
   870fa:	4621      	mov	r1, r4
   870fc:	463a      	mov	r2, r7
   870fe:	4628      	mov	r0, r5
   87100:	47c0      	blx	r8
   87102:	1c43      	adds	r3, r0, #1
   87104:	d103      	bne.n	8710e <_wcrtomb_r+0x32>
   87106:	2200      	movs	r2, #0
   87108:	238a      	movs	r3, #138	; 0x8a
   8710a:	6032      	str	r2, [r6, #0]
   8710c:	602b      	str	r3, [r5, #0]
   8710e:	b006      	add	sp, #24
   87110:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   87114:	681f      	ldr	r7, [r3, #0]
   87116:	f7fe fda7 	bl	85c68 <__locale_charset>
   8711a:	9600      	str	r6, [sp, #0]
   8711c:	4603      	mov	r3, r0
   8711e:	4622      	mov	r2, r4
   87120:	4628      	mov	r0, r5
   87122:	a903      	add	r1, sp, #12
   87124:	47b8      	blx	r7
   87126:	e7ec      	b.n	87102 <_wcrtomb_r+0x26>
   87128:	200709d0 	.word	0x200709d0

0008712c <__ascii_wctomb>:
   8712c:	b121      	cbz	r1, 87138 <__ascii_wctomb+0xc>
   8712e:	2aff      	cmp	r2, #255	; 0xff
   87130:	d804      	bhi.n	8713c <__ascii_wctomb+0x10>
   87132:	700a      	strb	r2, [r1, #0]
   87134:	2001      	movs	r0, #1
   87136:	4770      	bx	lr
   87138:	4608      	mov	r0, r1
   8713a:	4770      	bx	lr
   8713c:	238a      	movs	r3, #138	; 0x8a
   8713e:	6003      	str	r3, [r0, #0]
   87140:	f04f 30ff 	mov.w	r0, #4294967295
   87144:	4770      	bx	lr
   87146:	bf00      	nop

00087148 <_write_r>:
   87148:	b570      	push	{r4, r5, r6, lr}
   8714a:	4c08      	ldr	r4, [pc, #32]	; (8716c <_write_r+0x24>)
   8714c:	4606      	mov	r6, r0
   8714e:	2500      	movs	r5, #0
   87150:	4608      	mov	r0, r1
   87152:	4611      	mov	r1, r2
   87154:	461a      	mov	r2, r3
   87156:	6025      	str	r5, [r4, #0]
   87158:	f7f9 f8f2 	bl	80340 <_write>
   8715c:	1c43      	adds	r3, r0, #1
   8715e:	d000      	beq.n	87162 <_write_r+0x1a>
   87160:	bd70      	pop	{r4, r5, r6, pc}
   87162:	6823      	ldr	r3, [r4, #0]
   87164:	2b00      	cmp	r3, #0
   87166:	d0fb      	beq.n	87160 <_write_r+0x18>
   87168:	6033      	str	r3, [r6, #0]
   8716a:	bd70      	pop	{r4, r5, r6, pc}
   8716c:	20070b5c 	.word	0x20070b5c

00087170 <__register_exitproc>:
   87170:	b5f0      	push	{r4, r5, r6, r7, lr}
   87172:	4c27      	ldr	r4, [pc, #156]	; (87210 <__register_exitproc+0xa0>)
   87174:	b085      	sub	sp, #20
   87176:	6826      	ldr	r6, [r4, #0]
   87178:	4607      	mov	r7, r0
   8717a:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
   8717e:	2c00      	cmp	r4, #0
   87180:	d040      	beq.n	87204 <__register_exitproc+0x94>
   87182:	6865      	ldr	r5, [r4, #4]
   87184:	2d1f      	cmp	r5, #31
   87186:	dd1e      	ble.n	871c6 <__register_exitproc+0x56>
   87188:	4822      	ldr	r0, [pc, #136]	; (87214 <__register_exitproc+0xa4>)
   8718a:	b918      	cbnz	r0, 87194 <__register_exitproc+0x24>
   8718c:	f04f 30ff 	mov.w	r0, #4294967295
   87190:	b005      	add	sp, #20
   87192:	bdf0      	pop	{r4, r5, r6, r7, pc}
   87194:	f44f 70c8 	mov.w	r0, #400	; 0x190
   87198:	9103      	str	r1, [sp, #12]
   8719a:	9202      	str	r2, [sp, #8]
   8719c:	9301      	str	r3, [sp, #4]
   8719e:	f7fe fde1 	bl	85d64 <malloc>
   871a2:	9903      	ldr	r1, [sp, #12]
   871a4:	4604      	mov	r4, r0
   871a6:	9a02      	ldr	r2, [sp, #8]
   871a8:	9b01      	ldr	r3, [sp, #4]
   871aa:	2800      	cmp	r0, #0
   871ac:	d0ee      	beq.n	8718c <__register_exitproc+0x1c>
   871ae:	f8d6 5148 	ldr.w	r5, [r6, #328]	; 0x148
   871b2:	2000      	movs	r0, #0
   871b4:	6025      	str	r5, [r4, #0]
   871b6:	6060      	str	r0, [r4, #4]
   871b8:	4605      	mov	r5, r0
   871ba:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   871be:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
   871c2:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
   871c6:	b93f      	cbnz	r7, 871d8 <__register_exitproc+0x68>
   871c8:	1c6b      	adds	r3, r5, #1
   871ca:	2000      	movs	r0, #0
   871cc:	3502      	adds	r5, #2
   871ce:	6063      	str	r3, [r4, #4]
   871d0:	f844 1025 	str.w	r1, [r4, r5, lsl #2]
   871d4:	b005      	add	sp, #20
   871d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   871d8:	2601      	movs	r6, #1
   871da:	40ae      	lsls	r6, r5
   871dc:	eb04 0085 	add.w	r0, r4, r5, lsl #2
   871e0:	f8c0 2088 	str.w	r2, [r0, #136]	; 0x88
   871e4:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   871e8:	2f02      	cmp	r7, #2
   871ea:	ea42 0206 	orr.w	r2, r2, r6
   871ee:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   871f2:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108
   871f6:	d1e7      	bne.n	871c8 <__register_exitproc+0x58>
   871f8:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   871fc:	431e      	orrs	r6, r3
   871fe:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
   87202:	e7e1      	b.n	871c8 <__register_exitproc+0x58>
   87204:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
   87208:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   8720c:	e7b9      	b.n	87182 <__register_exitproc+0x12>
   8720e:	bf00      	nop
   87210:	00087ac8 	.word	0x00087ac8
   87214:	00085d65 	.word	0x00085d65

00087218 <_calloc_r>:
   87218:	b510      	push	{r4, lr}
   8721a:	fb02 f101 	mul.w	r1, r2, r1
   8721e:	f7fe fda9 	bl	85d74 <_malloc_r>
   87222:	4604      	mov	r4, r0
   87224:	b168      	cbz	r0, 87242 <_calloc_r+0x2a>
   87226:	f850 2c04 	ldr.w	r2, [r0, #-4]
   8722a:	f022 0203 	bic.w	r2, r2, #3
   8722e:	3a04      	subs	r2, #4
   87230:	2a24      	cmp	r2, #36	; 0x24
   87232:	d818      	bhi.n	87266 <_calloc_r+0x4e>
   87234:	2a13      	cmp	r2, #19
   87236:	d806      	bhi.n	87246 <_calloc_r+0x2e>
   87238:	4603      	mov	r3, r0
   8723a:	2200      	movs	r2, #0
   8723c:	601a      	str	r2, [r3, #0]
   8723e:	605a      	str	r2, [r3, #4]
   87240:	609a      	str	r2, [r3, #8]
   87242:	4620      	mov	r0, r4
   87244:	bd10      	pop	{r4, pc}
   87246:	2300      	movs	r3, #0
   87248:	2a1b      	cmp	r2, #27
   8724a:	6003      	str	r3, [r0, #0]
   8724c:	6043      	str	r3, [r0, #4]
   8724e:	d90f      	bls.n	87270 <_calloc_r+0x58>
   87250:	2a24      	cmp	r2, #36	; 0x24
   87252:	6083      	str	r3, [r0, #8]
   87254:	60c3      	str	r3, [r0, #12]
   87256:	bf05      	ittet	eq
   87258:	6103      	streq	r3, [r0, #16]
   8725a:	6143      	streq	r3, [r0, #20]
   8725c:	f100 0310 	addne.w	r3, r0, #16
   87260:	f100 0318 	addeq.w	r3, r0, #24
   87264:	e7e9      	b.n	8723a <_calloc_r+0x22>
   87266:	2100      	movs	r1, #0
   87268:	f7fa fdf4 	bl	81e54 <memset>
   8726c:	4620      	mov	r0, r4
   8726e:	bd10      	pop	{r4, pc}
   87270:	f100 0308 	add.w	r3, r0, #8
   87274:	e7e1      	b.n	8723a <_calloc_r+0x22>
   87276:	bf00      	nop

00087278 <_close_r>:
   87278:	b538      	push	{r3, r4, r5, lr}
   8727a:	4c07      	ldr	r4, [pc, #28]	; (87298 <_close_r+0x20>)
   8727c:	2300      	movs	r3, #0
   8727e:	4605      	mov	r5, r0
   87280:	4608      	mov	r0, r1
   87282:	6023      	str	r3, [r4, #0]
   87284:	f7f9 ff32 	bl	810ec <_close>
   87288:	1c43      	adds	r3, r0, #1
   8728a:	d000      	beq.n	8728e <_close_r+0x16>
   8728c:	bd38      	pop	{r3, r4, r5, pc}
   8728e:	6823      	ldr	r3, [r4, #0]
   87290:	2b00      	cmp	r3, #0
   87292:	d0fb      	beq.n	8728c <_close_r+0x14>
   87294:	602b      	str	r3, [r5, #0]
   87296:	bd38      	pop	{r3, r4, r5, pc}
   87298:	20070b5c 	.word	0x20070b5c

0008729c <_fclose_r>:
   8729c:	b570      	push	{r4, r5, r6, lr}
   8729e:	460c      	mov	r4, r1
   872a0:	4605      	mov	r5, r0
   872a2:	b131      	cbz	r1, 872b2 <_fclose_r+0x16>
   872a4:	b110      	cbz	r0, 872ac <_fclose_r+0x10>
   872a6:	6b83      	ldr	r3, [r0, #56]	; 0x38
   872a8:	2b00      	cmp	r3, #0
   872aa:	d02f      	beq.n	8730c <_fclose_r+0x70>
   872ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   872b0:	b90b      	cbnz	r3, 872b6 <_fclose_r+0x1a>
   872b2:	2000      	movs	r0, #0
   872b4:	bd70      	pop	{r4, r5, r6, pc}
   872b6:	4628      	mov	r0, r5
   872b8:	4621      	mov	r1, r4
   872ba:	f7fe f8f9 	bl	854b0 <_fflush_r>
   872be:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   872c0:	4606      	mov	r6, r0
   872c2:	b133      	cbz	r3, 872d2 <_fclose_r+0x36>
   872c4:	4628      	mov	r0, r5
   872c6:	69e1      	ldr	r1, [r4, #28]
   872c8:	4798      	blx	r3
   872ca:	2800      	cmp	r0, #0
   872cc:	bfb8      	it	lt
   872ce:	f04f 36ff 	movlt.w	r6, #4294967295
   872d2:	89a3      	ldrh	r3, [r4, #12]
   872d4:	061b      	lsls	r3, r3, #24
   872d6:	d41c      	bmi.n	87312 <_fclose_r+0x76>
   872d8:	6b21      	ldr	r1, [r4, #48]	; 0x30
   872da:	b141      	cbz	r1, 872ee <_fclose_r+0x52>
   872dc:	f104 0340 	add.w	r3, r4, #64	; 0x40
   872e0:	4299      	cmp	r1, r3
   872e2:	d002      	beq.n	872ea <_fclose_r+0x4e>
   872e4:	4628      	mov	r0, r5
   872e6:	f7fe fa43 	bl	85770 <_free_r>
   872ea:	2300      	movs	r3, #0
   872ec:	6323      	str	r3, [r4, #48]	; 0x30
   872ee:	6c61      	ldr	r1, [r4, #68]	; 0x44
   872f0:	b121      	cbz	r1, 872fc <_fclose_r+0x60>
   872f2:	4628      	mov	r0, r5
   872f4:	f7fe fa3c 	bl	85770 <_free_r>
   872f8:	2300      	movs	r3, #0
   872fa:	6463      	str	r3, [r4, #68]	; 0x44
   872fc:	f7fe f96e 	bl	855dc <__sfp_lock_acquire>
   87300:	2300      	movs	r3, #0
   87302:	81a3      	strh	r3, [r4, #12]
   87304:	f7fe f96c 	bl	855e0 <__sfp_lock_release>
   87308:	4630      	mov	r0, r6
   8730a:	bd70      	pop	{r4, r5, r6, pc}
   8730c:	f7fe f8ec 	bl	854e8 <__sinit>
   87310:	e7cc      	b.n	872ac <_fclose_r+0x10>
   87312:	4628      	mov	r0, r5
   87314:	6921      	ldr	r1, [r4, #16]
   87316:	f7fe fa2b 	bl	85770 <_free_r>
   8731a:	e7dd      	b.n	872d8 <_fclose_r+0x3c>

0008731c <fclose>:
   8731c:	4b02      	ldr	r3, [pc, #8]	; (87328 <fclose+0xc>)
   8731e:	4601      	mov	r1, r0
   87320:	6818      	ldr	r0, [r3, #0]
   87322:	f7ff bfbb 	b.w	8729c <_fclose_r>
   87326:	bf00      	nop
   87328:	20070560 	.word	0x20070560

0008732c <_fstat_r>:
   8732c:	b538      	push	{r3, r4, r5, lr}
   8732e:	4c08      	ldr	r4, [pc, #32]	; (87350 <_fstat_r+0x24>)
   87330:	2300      	movs	r3, #0
   87332:	4605      	mov	r5, r0
   87334:	4608      	mov	r0, r1
   87336:	4611      	mov	r1, r2
   87338:	6023      	str	r3, [r4, #0]
   8733a:	f7f9 fedb 	bl	810f4 <_fstat>
   8733e:	1c43      	adds	r3, r0, #1
   87340:	d000      	beq.n	87344 <_fstat_r+0x18>
   87342:	bd38      	pop	{r3, r4, r5, pc}
   87344:	6823      	ldr	r3, [r4, #0]
   87346:	2b00      	cmp	r3, #0
   87348:	d0fb      	beq.n	87342 <_fstat_r+0x16>
   8734a:	602b      	str	r3, [r5, #0]
   8734c:	bd38      	pop	{r3, r4, r5, pc}
   8734e:	bf00      	nop
   87350:	20070b5c 	.word	0x20070b5c

00087354 <_isatty_r>:
   87354:	b538      	push	{r3, r4, r5, lr}
   87356:	4c07      	ldr	r4, [pc, #28]	; (87374 <_isatty_r+0x20>)
   87358:	2300      	movs	r3, #0
   8735a:	4605      	mov	r5, r0
   8735c:	4608      	mov	r0, r1
   8735e:	6023      	str	r3, [r4, #0]
   87360:	f7f9 fece 	bl	81100 <_isatty>
   87364:	1c43      	adds	r3, r0, #1
   87366:	d000      	beq.n	8736a <_isatty_r+0x16>
   87368:	bd38      	pop	{r3, r4, r5, pc}
   8736a:	6823      	ldr	r3, [r4, #0]
   8736c:	2b00      	cmp	r3, #0
   8736e:	d0fb      	beq.n	87368 <_isatty_r+0x14>
   87370:	602b      	str	r3, [r5, #0]
   87372:	bd38      	pop	{r3, r4, r5, pc}
   87374:	20070b5c 	.word	0x20070b5c

00087378 <_lseek_r>:
   87378:	b570      	push	{r4, r5, r6, lr}
   8737a:	4c08      	ldr	r4, [pc, #32]	; (8739c <_lseek_r+0x24>)
   8737c:	4606      	mov	r6, r0
   8737e:	2500      	movs	r5, #0
   87380:	4608      	mov	r0, r1
   87382:	4611      	mov	r1, r2
   87384:	461a      	mov	r2, r3
   87386:	6025      	str	r5, [r4, #0]
   87388:	f7f9 febc 	bl	81104 <_lseek>
   8738c:	1c43      	adds	r3, r0, #1
   8738e:	d000      	beq.n	87392 <_lseek_r+0x1a>
   87390:	bd70      	pop	{r4, r5, r6, pc}
   87392:	6823      	ldr	r3, [r4, #0]
   87394:	2b00      	cmp	r3, #0
   87396:	d0fb      	beq.n	87390 <_lseek_r+0x18>
   87398:	6033      	str	r3, [r6, #0]
   8739a:	bd70      	pop	{r4, r5, r6, pc}
   8739c:	20070b5c 	.word	0x20070b5c

000873a0 <_read_r>:
   873a0:	b570      	push	{r4, r5, r6, lr}
   873a2:	4c08      	ldr	r4, [pc, #32]	; (873c4 <_read_r+0x24>)
   873a4:	4606      	mov	r6, r0
   873a6:	2500      	movs	r5, #0
   873a8:	4608      	mov	r0, r1
   873aa:	4611      	mov	r1, r2
   873ac:	461a      	mov	r2, r3
   873ae:	6025      	str	r5, [r4, #0]
   873b0:	f7f8 ffa6 	bl	80300 <_read>
   873b4:	1c43      	adds	r3, r0, #1
   873b6:	d000      	beq.n	873ba <_read_r+0x1a>
   873b8:	bd70      	pop	{r4, r5, r6, pc}
   873ba:	6823      	ldr	r3, [r4, #0]
   873bc:	2b00      	cmp	r3, #0
   873be:	d0fb      	beq.n	873b8 <_read_r+0x18>
   873c0:	6033      	str	r3, [r6, #0]
   873c2:	bd70      	pop	{r4, r5, r6, pc}
   873c4:	20070b5c 	.word	0x20070b5c

000873c8 <__aeabi_uldivmod>:
   873c8:	b94b      	cbnz	r3, 873de <__aeabi_uldivmod+0x16>
   873ca:	b942      	cbnz	r2, 873de <__aeabi_uldivmod+0x16>
   873cc:	2900      	cmp	r1, #0
   873ce:	bf08      	it	eq
   873d0:	2800      	cmpeq	r0, #0
   873d2:	d002      	beq.n	873da <__aeabi_uldivmod+0x12>
   873d4:	f04f 31ff 	mov.w	r1, #4294967295
   873d8:	4608      	mov	r0, r1
   873da:	f000 b83b 	b.w	87454 <__aeabi_idiv0>
   873de:	b082      	sub	sp, #8
   873e0:	46ec      	mov	ip, sp
   873e2:	e92d 5000 	stmdb	sp!, {ip, lr}
   873e6:	f000 f81d 	bl	87424 <__gnu_uldivmod_helper>
   873ea:	f8dd e004 	ldr.w	lr, [sp, #4]
   873ee:	b002      	add	sp, #8
   873f0:	bc0c      	pop	{r2, r3}
   873f2:	4770      	bx	lr

000873f4 <__gnu_ldivmod_helper>:
   873f4:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   873f8:	9e08      	ldr	r6, [sp, #32]
   873fa:	4614      	mov	r4, r2
   873fc:	461d      	mov	r5, r3
   873fe:	4680      	mov	r8, r0
   87400:	4689      	mov	r9, r1
   87402:	f000 f829 	bl	87458 <__divdi3>
   87406:	fb04 f301 	mul.w	r3, r4, r1
   8740a:	fba4 ab00 	umull	sl, fp, r4, r0
   8740e:	fb00 3205 	mla	r2, r0, r5, r3
   87412:	4493      	add	fp, r2
   87414:	ebb8 080a 	subs.w	r8, r8, sl
   87418:	eb69 090b 	sbc.w	r9, r9, fp
   8741c:	e9c6 8900 	strd	r8, r9, [r6]
   87420:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

00087424 <__gnu_uldivmod_helper>:
   87424:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   87428:	9e08      	ldr	r6, [sp, #32]
   8742a:	4614      	mov	r4, r2
   8742c:	461d      	mov	r5, r3
   8742e:	4680      	mov	r8, r0
   87430:	4689      	mov	r9, r1
   87432:	f000 f961 	bl	876f8 <__udivdi3>
   87436:	fb00 f505 	mul.w	r5, r0, r5
   8743a:	fba0 ab04 	umull	sl, fp, r0, r4
   8743e:	fb04 5401 	mla	r4, r4, r1, r5
   87442:	44a3      	add	fp, r4
   87444:	ebb8 080a 	subs.w	r8, r8, sl
   87448:	eb69 090b 	sbc.w	r9, r9, fp
   8744c:	e9c6 8900 	strd	r8, r9, [r6]
   87450:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

00087454 <__aeabi_idiv0>:
   87454:	4770      	bx	lr
   87456:	bf00      	nop

00087458 <__divdi3>:
   87458:	2900      	cmp	r1, #0
   8745a:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8745e:	f2c0 80a1 	blt.w	875a4 <__divdi3+0x14c>
   87462:	2400      	movs	r4, #0
   87464:	2b00      	cmp	r3, #0
   87466:	f2c0 8098 	blt.w	8759a <__divdi3+0x142>
   8746a:	4615      	mov	r5, r2
   8746c:	4606      	mov	r6, r0
   8746e:	460f      	mov	r7, r1
   87470:	2b00      	cmp	r3, #0
   87472:	d13f      	bne.n	874f4 <__divdi3+0x9c>
   87474:	428a      	cmp	r2, r1
   87476:	d958      	bls.n	8752a <__divdi3+0xd2>
   87478:	fab2 f382 	clz	r3, r2
   8747c:	b14b      	cbz	r3, 87492 <__divdi3+0x3a>
   8747e:	f1c3 0220 	rsb	r2, r3, #32
   87482:	fa01 f703 	lsl.w	r7, r1, r3
   87486:	fa20 f202 	lsr.w	r2, r0, r2
   8748a:	409d      	lsls	r5, r3
   8748c:	fa00 f603 	lsl.w	r6, r0, r3
   87490:	4317      	orrs	r7, r2
   87492:	0c29      	lsrs	r1, r5, #16
   87494:	fbb7 f2f1 	udiv	r2, r7, r1
   87498:	fb01 7712 	mls	r7, r1, r2, r7
   8749c:	b2a8      	uxth	r0, r5
   8749e:	fb00 f302 	mul.w	r3, r0, r2
   874a2:	ea4f 4c16 	mov.w	ip, r6, lsr #16
   874a6:	ea4c 4707 	orr.w	r7, ip, r7, lsl #16
   874aa:	42bb      	cmp	r3, r7
   874ac:	d909      	bls.n	874c2 <__divdi3+0x6a>
   874ae:	197f      	adds	r7, r7, r5
   874b0:	f102 3cff 	add.w	ip, r2, #4294967295
   874b4:	f080 8105 	bcs.w	876c2 <__divdi3+0x26a>
   874b8:	42bb      	cmp	r3, r7
   874ba:	f240 8102 	bls.w	876c2 <__divdi3+0x26a>
   874be:	3a02      	subs	r2, #2
   874c0:	442f      	add	r7, r5
   874c2:	1aff      	subs	r7, r7, r3
   874c4:	fbb7 f3f1 	udiv	r3, r7, r1
   874c8:	fb01 7113 	mls	r1, r1, r3, r7
   874cc:	fb00 f003 	mul.w	r0, r0, r3
   874d0:	b2b6      	uxth	r6, r6
   874d2:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
   874d6:	4288      	cmp	r0, r1
   874d8:	d908      	bls.n	874ec <__divdi3+0x94>
   874da:	1949      	adds	r1, r1, r5
   874dc:	f103 37ff 	add.w	r7, r3, #4294967295
   874e0:	f080 80f1 	bcs.w	876c6 <__divdi3+0x26e>
   874e4:	4288      	cmp	r0, r1
   874e6:	f240 80ee 	bls.w	876c6 <__divdi3+0x26e>
   874ea:	3b02      	subs	r3, #2
   874ec:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   874f0:	2300      	movs	r3, #0
   874f2:	e003      	b.n	874fc <__divdi3+0xa4>
   874f4:	428b      	cmp	r3, r1
   874f6:	d90a      	bls.n	8750e <__divdi3+0xb6>
   874f8:	2300      	movs	r3, #0
   874fa:	461a      	mov	r2, r3
   874fc:	4610      	mov	r0, r2
   874fe:	4619      	mov	r1, r3
   87500:	b114      	cbz	r4, 87508 <__divdi3+0xb0>
   87502:	4240      	negs	r0, r0
   87504:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   87508:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8750c:	4770      	bx	lr
   8750e:	fab3 f883 	clz	r8, r3
   87512:	f1b8 0f00 	cmp.w	r8, #0
   87516:	f040 8088 	bne.w	8762a <__divdi3+0x1d2>
   8751a:	428b      	cmp	r3, r1
   8751c:	d302      	bcc.n	87524 <__divdi3+0xcc>
   8751e:	4282      	cmp	r2, r0
   87520:	f200 80e2 	bhi.w	876e8 <__divdi3+0x290>
   87524:	2300      	movs	r3, #0
   87526:	2201      	movs	r2, #1
   87528:	e7e8      	b.n	874fc <__divdi3+0xa4>
   8752a:	b912      	cbnz	r2, 87532 <__divdi3+0xda>
   8752c:	2301      	movs	r3, #1
   8752e:	fbb3 f5f2 	udiv	r5, r3, r2
   87532:	fab5 f285 	clz	r2, r5
   87536:	2a00      	cmp	r2, #0
   87538:	d13a      	bne.n	875b0 <__divdi3+0x158>
   8753a:	1b7f      	subs	r7, r7, r5
   8753c:	0c28      	lsrs	r0, r5, #16
   8753e:	fa1f fc85 	uxth.w	ip, r5
   87542:	2301      	movs	r3, #1
   87544:	fbb7 f1f0 	udiv	r1, r7, r0
   87548:	fb00 7711 	mls	r7, r0, r1, r7
   8754c:	fb0c f201 	mul.w	r2, ip, r1
   87550:	ea4f 4816 	mov.w	r8, r6, lsr #16
   87554:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   87558:	42ba      	cmp	r2, r7
   8755a:	d907      	bls.n	8756c <__divdi3+0x114>
   8755c:	197f      	adds	r7, r7, r5
   8755e:	f101 38ff 	add.w	r8, r1, #4294967295
   87562:	d202      	bcs.n	8756a <__divdi3+0x112>
   87564:	42ba      	cmp	r2, r7
   87566:	f200 80c4 	bhi.w	876f2 <__divdi3+0x29a>
   8756a:	4641      	mov	r1, r8
   8756c:	1abf      	subs	r7, r7, r2
   8756e:	fbb7 f2f0 	udiv	r2, r7, r0
   87572:	fb00 7012 	mls	r0, r0, r2, r7
   87576:	fb0c fc02 	mul.w	ip, ip, r2
   8757a:	b2b6      	uxth	r6, r6
   8757c:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
   87580:	4584      	cmp	ip, r0
   87582:	d907      	bls.n	87594 <__divdi3+0x13c>
   87584:	1940      	adds	r0, r0, r5
   87586:	f102 37ff 	add.w	r7, r2, #4294967295
   8758a:	d202      	bcs.n	87592 <__divdi3+0x13a>
   8758c:	4584      	cmp	ip, r0
   8758e:	f200 80ae 	bhi.w	876ee <__divdi3+0x296>
   87592:	463a      	mov	r2, r7
   87594:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   87598:	e7b0      	b.n	874fc <__divdi3+0xa4>
   8759a:	43e4      	mvns	r4, r4
   8759c:	4252      	negs	r2, r2
   8759e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   875a2:	e762      	b.n	8746a <__divdi3+0x12>
   875a4:	4240      	negs	r0, r0
   875a6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   875aa:	f04f 34ff 	mov.w	r4, #4294967295
   875ae:	e759      	b.n	87464 <__divdi3+0xc>
   875b0:	4095      	lsls	r5, r2
   875b2:	f1c2 0920 	rsb	r9, r2, #32
   875b6:	fa27 f109 	lsr.w	r1, r7, r9
   875ba:	fa26 f909 	lsr.w	r9, r6, r9
   875be:	4097      	lsls	r7, r2
   875c0:	0c28      	lsrs	r0, r5, #16
   875c2:	fbb1 f8f0 	udiv	r8, r1, r0
   875c6:	fb00 1118 	mls	r1, r0, r8, r1
   875ca:	fa1f fc85 	uxth.w	ip, r5
   875ce:	fb0c f308 	mul.w	r3, ip, r8
   875d2:	ea49 0907 	orr.w	r9, r9, r7
   875d6:	ea4f 4719 	mov.w	r7, r9, lsr #16
   875da:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
   875de:	428b      	cmp	r3, r1
   875e0:	fa06 f602 	lsl.w	r6, r6, r2
   875e4:	d908      	bls.n	875f8 <__divdi3+0x1a0>
   875e6:	1949      	adds	r1, r1, r5
   875e8:	f108 32ff 	add.w	r2, r8, #4294967295
   875ec:	d27a      	bcs.n	876e4 <__divdi3+0x28c>
   875ee:	428b      	cmp	r3, r1
   875f0:	d978      	bls.n	876e4 <__divdi3+0x28c>
   875f2:	f1a8 0802 	sub.w	r8, r8, #2
   875f6:	4429      	add	r1, r5
   875f8:	1ac9      	subs	r1, r1, r3
   875fa:	fbb1 f3f0 	udiv	r3, r1, r0
   875fe:	fb00 1713 	mls	r7, r0, r3, r1
   87602:	fb0c f203 	mul.w	r2, ip, r3
   87606:	fa1f f989 	uxth.w	r9, r9
   8760a:	ea49 4707 	orr.w	r7, r9, r7, lsl #16
   8760e:	42ba      	cmp	r2, r7
   87610:	d907      	bls.n	87622 <__divdi3+0x1ca>
   87612:	197f      	adds	r7, r7, r5
   87614:	f103 31ff 	add.w	r1, r3, #4294967295
   87618:	d260      	bcs.n	876dc <__divdi3+0x284>
   8761a:	42ba      	cmp	r2, r7
   8761c:	d95e      	bls.n	876dc <__divdi3+0x284>
   8761e:	3b02      	subs	r3, #2
   87620:	442f      	add	r7, r5
   87622:	1abf      	subs	r7, r7, r2
   87624:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   87628:	e78c      	b.n	87544 <__divdi3+0xec>
   8762a:	f1c8 0220 	rsb	r2, r8, #32
   8762e:	fa25 f102 	lsr.w	r1, r5, r2
   87632:	fa03 fc08 	lsl.w	ip, r3, r8
   87636:	fa27 f302 	lsr.w	r3, r7, r2
   8763a:	fa20 f202 	lsr.w	r2, r0, r2
   8763e:	fa07 f708 	lsl.w	r7, r7, r8
   87642:	ea41 0c0c 	orr.w	ip, r1, ip
   87646:	ea4f 491c 	mov.w	r9, ip, lsr #16
   8764a:	fbb3 f1f9 	udiv	r1, r3, r9
   8764e:	fb09 3311 	mls	r3, r9, r1, r3
   87652:	fa1f fa8c 	uxth.w	sl, ip
   87656:	fb0a fb01 	mul.w	fp, sl, r1
   8765a:	4317      	orrs	r7, r2
   8765c:	0c3a      	lsrs	r2, r7, #16
   8765e:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   87662:	459b      	cmp	fp, r3
   87664:	fa05 f008 	lsl.w	r0, r5, r8
   87668:	d908      	bls.n	8767c <__divdi3+0x224>
   8766a:	eb13 030c 	adds.w	r3, r3, ip
   8766e:	f101 32ff 	add.w	r2, r1, #4294967295
   87672:	d235      	bcs.n	876e0 <__divdi3+0x288>
   87674:	459b      	cmp	fp, r3
   87676:	d933      	bls.n	876e0 <__divdi3+0x288>
   87678:	3902      	subs	r1, #2
   8767a:	4463      	add	r3, ip
   8767c:	ebcb 0303 	rsb	r3, fp, r3
   87680:	fbb3 f2f9 	udiv	r2, r3, r9
   87684:	fb09 3312 	mls	r3, r9, r2, r3
   87688:	fb0a fa02 	mul.w	sl, sl, r2
   8768c:	b2bf      	uxth	r7, r7
   8768e:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
   87692:	45ba      	cmp	sl, r7
   87694:	d908      	bls.n	876a8 <__divdi3+0x250>
   87696:	eb17 070c 	adds.w	r7, r7, ip
   8769a:	f102 33ff 	add.w	r3, r2, #4294967295
   8769e:	d21b      	bcs.n	876d8 <__divdi3+0x280>
   876a0:	45ba      	cmp	sl, r7
   876a2:	d919      	bls.n	876d8 <__divdi3+0x280>
   876a4:	3a02      	subs	r2, #2
   876a6:	4467      	add	r7, ip
   876a8:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
   876ac:	fba5 0100 	umull	r0, r1, r5, r0
   876b0:	ebca 0707 	rsb	r7, sl, r7
   876b4:	428f      	cmp	r7, r1
   876b6:	f04f 0300 	mov.w	r3, #0
   876ba:	d30a      	bcc.n	876d2 <__divdi3+0x27a>
   876bc:	d005      	beq.n	876ca <__divdi3+0x272>
   876be:	462a      	mov	r2, r5
   876c0:	e71c      	b.n	874fc <__divdi3+0xa4>
   876c2:	4662      	mov	r2, ip
   876c4:	e6fd      	b.n	874c2 <__divdi3+0x6a>
   876c6:	463b      	mov	r3, r7
   876c8:	e710      	b.n	874ec <__divdi3+0x94>
   876ca:	fa06 f608 	lsl.w	r6, r6, r8
   876ce:	4286      	cmp	r6, r0
   876d0:	d2f5      	bcs.n	876be <__divdi3+0x266>
   876d2:	1e6a      	subs	r2, r5, #1
   876d4:	2300      	movs	r3, #0
   876d6:	e711      	b.n	874fc <__divdi3+0xa4>
   876d8:	461a      	mov	r2, r3
   876da:	e7e5      	b.n	876a8 <__divdi3+0x250>
   876dc:	460b      	mov	r3, r1
   876de:	e7a0      	b.n	87622 <__divdi3+0x1ca>
   876e0:	4611      	mov	r1, r2
   876e2:	e7cb      	b.n	8767c <__divdi3+0x224>
   876e4:	4690      	mov	r8, r2
   876e6:	e787      	b.n	875f8 <__divdi3+0x1a0>
   876e8:	4643      	mov	r3, r8
   876ea:	4642      	mov	r2, r8
   876ec:	e706      	b.n	874fc <__divdi3+0xa4>
   876ee:	3a02      	subs	r2, #2
   876f0:	e750      	b.n	87594 <__divdi3+0x13c>
   876f2:	3902      	subs	r1, #2
   876f4:	442f      	add	r7, r5
   876f6:	e739      	b.n	8756c <__divdi3+0x114>

000876f8 <__udivdi3>:
   876f8:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   876fc:	4614      	mov	r4, r2
   876fe:	4605      	mov	r5, r0
   87700:	460e      	mov	r6, r1
   87702:	2b00      	cmp	r3, #0
   87704:	d143      	bne.n	8778e <__udivdi3+0x96>
   87706:	428a      	cmp	r2, r1
   87708:	d953      	bls.n	877b2 <__udivdi3+0xba>
   8770a:	fab2 f782 	clz	r7, r2
   8770e:	b157      	cbz	r7, 87726 <__udivdi3+0x2e>
   87710:	f1c7 0620 	rsb	r6, r7, #32
   87714:	fa20 f606 	lsr.w	r6, r0, r6
   87718:	fa01 f307 	lsl.w	r3, r1, r7
   8771c:	fa02 f407 	lsl.w	r4, r2, r7
   87720:	fa00 f507 	lsl.w	r5, r0, r7
   87724:	431e      	orrs	r6, r3
   87726:	0c21      	lsrs	r1, r4, #16
   87728:	fbb6 f2f1 	udiv	r2, r6, r1
   8772c:	fb01 6612 	mls	r6, r1, r2, r6
   87730:	b2a0      	uxth	r0, r4
   87732:	fb00 f302 	mul.w	r3, r0, r2
   87736:	0c2f      	lsrs	r7, r5, #16
   87738:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
   8773c:	42b3      	cmp	r3, r6
   8773e:	d909      	bls.n	87754 <__udivdi3+0x5c>
   87740:	1936      	adds	r6, r6, r4
   87742:	f102 37ff 	add.w	r7, r2, #4294967295
   87746:	f080 80fd 	bcs.w	87944 <__udivdi3+0x24c>
   8774a:	42b3      	cmp	r3, r6
   8774c:	f240 80fa 	bls.w	87944 <__udivdi3+0x24c>
   87750:	3a02      	subs	r2, #2
   87752:	4426      	add	r6, r4
   87754:	1af6      	subs	r6, r6, r3
   87756:	fbb6 f3f1 	udiv	r3, r6, r1
   8775a:	fb01 6113 	mls	r1, r1, r3, r6
   8775e:	fb00 f003 	mul.w	r0, r0, r3
   87762:	b2ad      	uxth	r5, r5
   87764:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
   87768:	4288      	cmp	r0, r1
   8776a:	d908      	bls.n	8777e <__udivdi3+0x86>
   8776c:	1909      	adds	r1, r1, r4
   8776e:	f103 36ff 	add.w	r6, r3, #4294967295
   87772:	f080 80e9 	bcs.w	87948 <__udivdi3+0x250>
   87776:	4288      	cmp	r0, r1
   87778:	f240 80e6 	bls.w	87948 <__udivdi3+0x250>
   8777c:	3b02      	subs	r3, #2
   8777e:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   87782:	2300      	movs	r3, #0
   87784:	4610      	mov	r0, r2
   87786:	4619      	mov	r1, r3
   87788:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8778c:	4770      	bx	lr
   8778e:	428b      	cmp	r3, r1
   87790:	d84c      	bhi.n	8782c <__udivdi3+0x134>
   87792:	fab3 f683 	clz	r6, r3
   87796:	2e00      	cmp	r6, #0
   87798:	d14f      	bne.n	8783a <__udivdi3+0x142>
   8779a:	428b      	cmp	r3, r1
   8779c:	d302      	bcc.n	877a4 <__udivdi3+0xac>
   8779e:	4282      	cmp	r2, r0
   877a0:	f200 80dd 	bhi.w	8795e <__udivdi3+0x266>
   877a4:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   877a8:	2300      	movs	r3, #0
   877aa:	2201      	movs	r2, #1
   877ac:	4610      	mov	r0, r2
   877ae:	4619      	mov	r1, r3
   877b0:	4770      	bx	lr
   877b2:	b912      	cbnz	r2, 877ba <__udivdi3+0xc2>
   877b4:	2401      	movs	r4, #1
   877b6:	fbb4 f4f2 	udiv	r4, r4, r2
   877ba:	fab4 f284 	clz	r2, r4
   877be:	2a00      	cmp	r2, #0
   877c0:	f040 8082 	bne.w	878c8 <__udivdi3+0x1d0>
   877c4:	1b09      	subs	r1, r1, r4
   877c6:	0c26      	lsrs	r6, r4, #16
   877c8:	b2a7      	uxth	r7, r4
   877ca:	2301      	movs	r3, #1
   877cc:	fbb1 f0f6 	udiv	r0, r1, r6
   877d0:	fb06 1110 	mls	r1, r6, r0, r1
   877d4:	fb07 f200 	mul.w	r2, r7, r0
   877d8:	ea4f 4c15 	mov.w	ip, r5, lsr #16
   877dc:	ea4c 4101 	orr.w	r1, ip, r1, lsl #16
   877e0:	428a      	cmp	r2, r1
   877e2:	d907      	bls.n	877f4 <__udivdi3+0xfc>
   877e4:	1909      	adds	r1, r1, r4
   877e6:	f100 3cff 	add.w	ip, r0, #4294967295
   877ea:	d202      	bcs.n	877f2 <__udivdi3+0xfa>
   877ec:	428a      	cmp	r2, r1
   877ee:	f200 80c8 	bhi.w	87982 <__udivdi3+0x28a>
   877f2:	4660      	mov	r0, ip
   877f4:	1a89      	subs	r1, r1, r2
   877f6:	fbb1 f2f6 	udiv	r2, r1, r6
   877fa:	fb06 1112 	mls	r1, r6, r2, r1
   877fe:	fb07 f702 	mul.w	r7, r7, r2
   87802:	b2ad      	uxth	r5, r5
   87804:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
   87808:	42af      	cmp	r7, r5
   8780a:	d908      	bls.n	8781e <__udivdi3+0x126>
   8780c:	192c      	adds	r4, r5, r4
   8780e:	f102 31ff 	add.w	r1, r2, #4294967295
   87812:	f080 809b 	bcs.w	8794c <__udivdi3+0x254>
   87816:	42a7      	cmp	r7, r4
   87818:	f240 8098 	bls.w	8794c <__udivdi3+0x254>
   8781c:	3a02      	subs	r2, #2
   8781e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
   87822:	4610      	mov	r0, r2
   87824:	4619      	mov	r1, r3
   87826:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8782a:	4770      	bx	lr
   8782c:	2300      	movs	r3, #0
   8782e:	461a      	mov	r2, r3
   87830:	4610      	mov	r0, r2
   87832:	4619      	mov	r1, r3
   87834:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   87838:	4770      	bx	lr
   8783a:	f1c6 0520 	rsb	r5, r6, #32
   8783e:	fa22 f705 	lsr.w	r7, r2, r5
   87842:	fa03 f406 	lsl.w	r4, r3, r6
   87846:	fa21 f305 	lsr.w	r3, r1, r5
   8784a:	fa01 fb06 	lsl.w	fp, r1, r6
   8784e:	fa20 f505 	lsr.w	r5, r0, r5
   87852:	433c      	orrs	r4, r7
   87854:	ea4f 4814 	mov.w	r8, r4, lsr #16
   87858:	fbb3 fcf8 	udiv	ip, r3, r8
   8785c:	fb08 331c 	mls	r3, r8, ip, r3
   87860:	fa1f f984 	uxth.w	r9, r4
   87864:	fb09 fa0c 	mul.w	sl, r9, ip
   87868:	ea45 0b0b 	orr.w	fp, r5, fp
   8786c:	ea4f 451b 	mov.w	r5, fp, lsr #16
   87870:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
   87874:	459a      	cmp	sl, r3
   87876:	fa02 f206 	lsl.w	r2, r2, r6
   8787a:	d904      	bls.n	87886 <__udivdi3+0x18e>
   8787c:	191b      	adds	r3, r3, r4
   8787e:	f10c 35ff 	add.w	r5, ip, #4294967295
   87882:	d36f      	bcc.n	87964 <__udivdi3+0x26c>
   87884:	46ac      	mov	ip, r5
   87886:	ebca 0303 	rsb	r3, sl, r3
   8788a:	fbb3 f5f8 	udiv	r5, r3, r8
   8788e:	fb08 3315 	mls	r3, r8, r5, r3
   87892:	fb09 f905 	mul.w	r9, r9, r5
   87896:	fa1f fb8b 	uxth.w	fp, fp
   8789a:	ea4b 4703 	orr.w	r7, fp, r3, lsl #16
   8789e:	45b9      	cmp	r9, r7
   878a0:	d904      	bls.n	878ac <__udivdi3+0x1b4>
   878a2:	193f      	adds	r7, r7, r4
   878a4:	f105 33ff 	add.w	r3, r5, #4294967295
   878a8:	d362      	bcc.n	87970 <__udivdi3+0x278>
   878aa:	461d      	mov	r5, r3
   878ac:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
   878b0:	fbac 2302 	umull	r2, r3, ip, r2
   878b4:	ebc9 0707 	rsb	r7, r9, r7
   878b8:	429f      	cmp	r7, r3
   878ba:	f04f 0500 	mov.w	r5, #0
   878be:	d34a      	bcc.n	87956 <__udivdi3+0x25e>
   878c0:	d046      	beq.n	87950 <__udivdi3+0x258>
   878c2:	4662      	mov	r2, ip
   878c4:	462b      	mov	r3, r5
   878c6:	e75d      	b.n	87784 <__udivdi3+0x8c>
   878c8:	4094      	lsls	r4, r2
   878ca:	f1c2 0920 	rsb	r9, r2, #32
   878ce:	fa21 fc09 	lsr.w	ip, r1, r9
   878d2:	4091      	lsls	r1, r2
   878d4:	fa20 f909 	lsr.w	r9, r0, r9
   878d8:	0c26      	lsrs	r6, r4, #16
   878da:	fbbc f8f6 	udiv	r8, ip, r6
   878de:	fb06 cc18 	mls	ip, r6, r8, ip
   878e2:	b2a7      	uxth	r7, r4
   878e4:	fb07 f308 	mul.w	r3, r7, r8
   878e8:	ea49 0901 	orr.w	r9, r9, r1
   878ec:	ea4f 4119 	mov.w	r1, r9, lsr #16
   878f0:	ea41 4c0c 	orr.w	ip, r1, ip, lsl #16
   878f4:	4563      	cmp	r3, ip
   878f6:	fa00 f502 	lsl.w	r5, r0, r2
   878fa:	d909      	bls.n	87910 <__udivdi3+0x218>
   878fc:	eb1c 0c04 	adds.w	ip, ip, r4
   87900:	f108 32ff 	add.w	r2, r8, #4294967295
   87904:	d23b      	bcs.n	8797e <__udivdi3+0x286>
   87906:	4563      	cmp	r3, ip
   87908:	d939      	bls.n	8797e <__udivdi3+0x286>
   8790a:	f1a8 0802 	sub.w	r8, r8, #2
   8790e:	44a4      	add	ip, r4
   87910:	ebc3 0c0c 	rsb	ip, r3, ip
   87914:	fbbc f3f6 	udiv	r3, ip, r6
   87918:	fb06 c113 	mls	r1, r6, r3, ip
   8791c:	fb07 f203 	mul.w	r2, r7, r3
   87920:	fa1f f989 	uxth.w	r9, r9
   87924:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
   87928:	428a      	cmp	r2, r1
   8792a:	d907      	bls.n	8793c <__udivdi3+0x244>
   8792c:	1909      	adds	r1, r1, r4
   8792e:	f103 30ff 	add.w	r0, r3, #4294967295
   87932:	d222      	bcs.n	8797a <__udivdi3+0x282>
   87934:	428a      	cmp	r2, r1
   87936:	d920      	bls.n	8797a <__udivdi3+0x282>
   87938:	3b02      	subs	r3, #2
   8793a:	4421      	add	r1, r4
   8793c:	1a89      	subs	r1, r1, r2
   8793e:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   87942:	e743      	b.n	877cc <__udivdi3+0xd4>
   87944:	463a      	mov	r2, r7
   87946:	e705      	b.n	87754 <__udivdi3+0x5c>
   87948:	4633      	mov	r3, r6
   8794a:	e718      	b.n	8777e <__udivdi3+0x86>
   8794c:	460a      	mov	r2, r1
   8794e:	e766      	b.n	8781e <__udivdi3+0x126>
   87950:	40b0      	lsls	r0, r6
   87952:	4290      	cmp	r0, r2
   87954:	d2b5      	bcs.n	878c2 <__udivdi3+0x1ca>
   87956:	f10c 32ff 	add.w	r2, ip, #4294967295
   8795a:	2300      	movs	r3, #0
   8795c:	e712      	b.n	87784 <__udivdi3+0x8c>
   8795e:	4633      	mov	r3, r6
   87960:	4632      	mov	r2, r6
   87962:	e70f      	b.n	87784 <__udivdi3+0x8c>
   87964:	459a      	cmp	sl, r3
   87966:	d98d      	bls.n	87884 <__udivdi3+0x18c>
   87968:	f1ac 0c02 	sub.w	ip, ip, #2
   8796c:	4423      	add	r3, r4
   8796e:	e78a      	b.n	87886 <__udivdi3+0x18e>
   87970:	45b9      	cmp	r9, r7
   87972:	d99a      	bls.n	878aa <__udivdi3+0x1b2>
   87974:	3d02      	subs	r5, #2
   87976:	4427      	add	r7, r4
   87978:	e798      	b.n	878ac <__udivdi3+0x1b4>
   8797a:	4603      	mov	r3, r0
   8797c:	e7de      	b.n	8793c <__udivdi3+0x244>
   8797e:	4690      	mov	r8, r2
   87980:	e7c6      	b.n	87910 <__udivdi3+0x218>
   87982:	3802      	subs	r0, #2
   87984:	4421      	add	r1, r4
   87986:	e735      	b.n	877f4 <__udivdi3+0xfc>
   87988:	7269440a 	.word	0x7269440a
   8798c:	69746365 	.word	0x69746365
   87990:	203a6e6f 	.word	0x203a6e6f
   87994:	00006425 	.word	0x00006425
   87998:	77654e0a 	.word	0x77654e0a
   8799c:	72696420 	.word	0x72696420
   879a0:	69746365 	.word	0x69746365
   879a4:	203a6e6f 	.word	0x203a6e6f
   879a8:	00006425 	.word	0x00006425
   879ac:	77654e0a 	.word	0x77654e0a
   879b0:	676e6120 	.word	0x676e6120
   879b4:	203a656c 	.word	0x203a656c
   879b8:	00006425 	.word	0x00006425
   879bc:	7269640a 	.word	0x7269640a
   879c0:	5f746365 	.word	0x5f746365
   879c4:	6c676e61 	.word	0x6c676e61
   879c8:	203d2065 	.word	0x203d2065
   879cc:	00006425 	.word	0x00006425
   879d0:	635f720a 	.word	0x635f720a
   879d4:	746e756f 	.word	0x746e756f
   879d8:	25203d20 	.word	0x25203d20
   879dc:	00000064 	.word	0x00000064
   879e0:	756f630a 	.word	0x756f630a
   879e4:	725f746e 	.word	0x725f746e
   879e8:	74686769 	.word	0x74686769
   879ec:	25203d20 	.word	0x25203d20
   879f0:	00000064 	.word	0x00000064
   879f4:	635f6c0a 	.word	0x635f6c0a
   879f8:	746e756f 	.word	0x746e756f
   879fc:	25203d20 	.word	0x25203d20
   87a00:	00000064 	.word	0x00000064
   87a04:	756f630a 	.word	0x756f630a
   87a08:	6c5f746e 	.word	0x6c5f746e
   87a0c:	20746665 	.word	0x20746665
   87a10:	6425203d 	.word	0x6425203d
   87a14:	00000000 	.word	0x00000000
   87a18:	746e490a 	.word	0x746e490a
   87a1c:	75727265 	.word	0x75727265
   87a20:	00007470 	.word	0x00007470
   87a24:	756f430a 	.word	0x756f430a
   87a28:	745f746e 	.word	0x745f746e
   87a2c:	3a747365 	.word	0x3a747365
   87a30:	00642520 	.word	0x00642520
   87a34:	7272450a 	.word	0x7272450a
   87a38:	0000726f 	.word	0x0000726f
   87a3c:	696e490a 	.word	0x696e490a
   87a40:	6e695f74 	.word	0x6e695f74
   87a44:	72726574 	.word	0x72726574
   87a48:	00747075 	.word	0x00747075
   87a4c:	736e6f4b 	.word	0x736e6f4b
   87a50:	6e656c6f 	.word	0x6e656c6f
   87a54:	61657220 	.word	0x61657220
   87a58:	000a6f64 	.word	0x000a6f64
   87a5c:	3d3d3d3d 	.word	0x3d3d3d3d
   87a60:	3d3d3d3d 	.word	0x3d3d3d3d
   87a64:	3d3d3d3d 	.word	0x3d3d3d3d
   87a68:	0a3d3d3d 	.word	0x0a3d3d3d
   87a6c:	00000000 	.word	0x00000000
   87a70:	25202d2d 	.word	0x25202d2d
   87a74:	000d0a73 	.word	0x000d0a73
   87a78:	75647241 	.word	0x75647241
   87a7c:	206f6e69 	.word	0x206f6e69
   87a80:	2f657544 	.word	0x2f657544
   87a84:	00000058 	.word	0x00000058
   87a88:	43202d2d 	.word	0x43202d2d
   87a8c:	69706d6f 	.word	0x69706d6f
   87a90:	3a64656c 	.word	0x3a64656c
   87a94:	20732520 	.word	0x20732520
   87a98:	2d207325 	.word	0x2d207325
   87a9c:	000d0a2d 	.word	0x000d0a2d
   87aa0:	2079614d 	.word	0x2079614d
   87aa4:	32203631 	.word	0x32203631
   87aa8:	00373130 	.word	0x00373130
   87aac:	333a3931 	.word	0x333a3931
   87ab0:	31313a34 	.word	0x31313a34
   87ab4:	00000000 	.word	0x00000000
   87ab8:	6c696857 	.word	0x6c696857
   87abc:	74617365 	.word	0x74617365
   87ac0:	006e6573 	.word	0x006e6573
   87ac4:	00000043 	.word	0x00000043

00087ac8 <_global_impure_ptr>:
   87ac8:	20070138                                8.. 

00087acc <zeroes.6763>:
   87acc:	30303030 30303030 30303030 30303030     0000000000000000
   87adc:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   87aec:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   87afc:	00000000 33323130 37363534 62613938     ....0123456789ab
   87b0c:	66656463 00000000 6c756e28 0000296c     cdef....(null)..
   87b1c:	00000030                                0...

00087b20 <blanks.6762>:
   87b20:	20202020 20202020 20202020 20202020                     

00087b30 <zeroes.6721>:
   87b30:	30303030 30303030 30303030 30303030     0000000000000000

00087b40 <blanks.6720>:
   87b40:	20202020 20202020 20202020 20202020                     
   87b50:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   87b60:	49534f50 00000058 0000002e 00000000     POSIX...........

00087b70 <__mprec_tens>:
   87b70:	00000000 3ff00000 00000000 40240000     .......?......$@
   87b80:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   87b90:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   87ba0:	00000000 412e8480 00000000 416312d0     .......A......cA
   87bb0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   87bc0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   87bd0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   87be0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   87bf0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   87c00:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   87c10:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   87c20:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   87c30:	79d99db4 44ea7843                       ...yCx.D

00087c38 <__mprec_bigtens>:
   87c38:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   87c48:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   87c58:	7f73bf3c 75154fdd                       <.s..O.u

00087c60 <p05.5269>:
   87c60:	00000005 00000019 0000007d              ........}...

00087c6c <_init>:
   87c6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87c6e:	bf00      	nop
   87c70:	bcf8      	pop	{r3, r4, r5, r6, r7}
   87c72:	bc08      	pop	{r3}
   87c74:	469e      	mov	lr, r3
   87c76:	4770      	bx	lr

00087c78 <__init_array_start>:
   87c78:	000843d9 	.word	0x000843d9

00087c7c <__frame_dummy_init_array_entry>:
   87c7c:	00080119                                ....

00087c80 <_fini>:
   87c80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87c82:	bf00      	nop
   87c84:	bcf8      	pop	{r3, r4, r5, r6, r7}
   87c86:	bc08      	pop	{r3}
   87c88:	469e      	mov	lr, r3
   87c8a:	4770      	bx	lr

00087c8c <__fini_array_start>:
   87c8c:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <SystemInit>:
__no_inline
RAMFUNC
void SystemInit(void)
{
	/* Set FWS according to SYS_BOARD_MCKR configuration */
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20070000:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070004:	4a20      	ldr	r2, [pc, #128]	; (20070088 <SystemInit+0x88>)
20070006:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070008:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007000c:	6013      	str	r3, [r2, #0]

	/* Initialize main oscillator */
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007000e:	4b1f      	ldr	r3, [pc, #124]	; (2007008c <SystemInit+0x8c>)
20070010:	6a1b      	ldr	r3, [r3, #32]
20070012:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070016:	d107      	bne.n	20070028 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070018:	4a1d      	ldr	r2, [pc, #116]	; (20070090 <SystemInit+0x90>)
2007001a:	4b1c      	ldr	r3, [pc, #112]	; (2007008c <SystemInit+0x8c>)
2007001c:	621a      	str	r2, [r3, #32]
			                     CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007001e:	461a      	mov	r2, r3
20070020:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070022:	f013 0f01 	tst.w	r3, #1
20070026:	d0fb      	beq.n	20070020 <SystemInit+0x20>
		}
	}

	/* Switch to 3-20MHz Xtal oscillator */
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070028:	4a1a      	ldr	r2, [pc, #104]	; (20070094 <SystemInit+0x94>)
2007002a:	4b18      	ldr	r3, [pc, #96]	; (2007008c <SystemInit+0x8c>)
2007002c:	621a      	str	r2, [r3, #32]
	                           CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;

	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007002e:	461a      	mov	r2, r3
20070030:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070032:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070036:	d0fb      	beq.n	20070030 <SystemInit+0x30>
	}
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070038:	4b14      	ldr	r3, [pc, #80]	; (2007008c <SystemInit+0x8c>)
2007003a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
2007003c:	f022 0203 	bic.w	r2, r2, #3
20070040:	f042 0201 	orr.w	r2, r2, #1
20070044:	631a      	str	r2, [r3, #48]	; 0x30
		                     PMC_MCKR_CSS_MAIN_CLK;
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070046:	461a      	mov	r2, r3
20070048:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007004a:	f013 0f08 	tst.w	r3, #8
2007004e:	d0fb      	beq.n	20070048 <SystemInit+0x48>
	}

	/* Initialize PLLA */
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
20070050:	4a11      	ldr	r2, [pc, #68]	; (20070098 <SystemInit+0x98>)
20070052:	4b0e      	ldr	r3, [pc, #56]	; (2007008c <SystemInit+0x8c>)
20070054:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070056:	461a      	mov	r2, r3
20070058:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007005a:	f013 0f02 	tst.w	r3, #2
2007005e:	d0fb      	beq.n	20070058 <SystemInit+0x58>
	}

	/* Switch to main clock */
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
20070060:	2211      	movs	r2, #17
20070062:	4b0a      	ldr	r3, [pc, #40]	; (2007008c <SystemInit+0x8c>)
20070064:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070066:	461a      	mov	r2, r3
20070068:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007006a:	f013 0f08 	tst.w	r3, #8
2007006e:	d0fb      	beq.n	20070068 <SystemInit+0x68>
	}

	/* Switch to PLLA */
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
20070070:	2212      	movs	r2, #18
20070072:	4b06      	ldr	r3, [pc, #24]	; (2007008c <SystemInit+0x8c>)
20070074:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070076:	461a      	mov	r2, r3
20070078:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007007a:	f013 0f08 	tst.w	r3, #8
2007007e:	d0fb      	beq.n	20070078 <SystemInit+0x78>
	}

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
20070080:	4a06      	ldr	r2, [pc, #24]	; (2007009c <SystemInit+0x9c>)
20070082:	4b07      	ldr	r3, [pc, #28]	; (200700a0 <SystemInit+0xa0>)
20070084:	601a      	str	r2, [r3, #0]
20070086:	4770      	bx	lr
20070088:	400e0a00 	.word	0x400e0a00
2007008c:	400e0600 	.word	0x400e0600
20070090:	00370809 	.word	0x00370809
20070094:	01370809 	.word	0x01370809
20070098:	200d3f01 	.word	0x200d3f01
2007009c:	0501bd00 	.word	0x0501bd00
200700a0:	20070130 	.word	0x20070130

200700a4 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700a4:	4b1b      	ldr	r3, [pc, #108]	; (20070114 <system_init_flash+0x70>)
200700a6:	4298      	cmp	r0, r3
200700a8:	d806      	bhi.n	200700b8 <system_init_flash+0x14>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700aa:	2300      	movs	r3, #0
200700ac:	4a1a      	ldr	r2, [pc, #104]	; (20070118 <system_init_flash+0x74>)
200700ae:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700b0:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700b4:	6013      	str	r3, [r2, #0]
200700b6:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b8:	4b18      	ldr	r3, [pc, #96]	; (2007011c <system_init_flash+0x78>)
200700ba:	4298      	cmp	r0, r3
200700bc:	d807      	bhi.n	200700ce <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700be:	f44f 7380 	mov.w	r3, #256	; 0x100
200700c2:	4a15      	ldr	r2, [pc, #84]	; (20070118 <system_init_flash+0x74>)
200700c4:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700c6:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ca:	6013      	str	r3, [r2, #0]
200700cc:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700ce:	4b14      	ldr	r3, [pc, #80]	; (20070120 <system_init_flash+0x7c>)
200700d0:	4298      	cmp	r0, r3
200700d2:	d807      	bhi.n	200700e4 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
200700d4:	f44f 7300 	mov.w	r3, #512	; 0x200
200700d8:	4a0f      	ldr	r2, [pc, #60]	; (20070118 <system_init_flash+0x74>)
200700da:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
200700dc:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700e0:	6013      	str	r3, [r2, #0]
200700e2:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700e4:	4b0f      	ldr	r3, [pc, #60]	; (20070124 <system_init_flash+0x80>)
200700e6:	4298      	cmp	r0, r3
200700e8:	d807      	bhi.n	200700fa <system_init_flash+0x56>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
200700ea:	f44f 7340 	mov.w	r3, #768	; 0x300
200700ee:	4a0a      	ldr	r2, [pc, #40]	; (20070118 <system_init_flash+0x74>)
200700f0:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
200700f2:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700f6:	6013      	str	r3, [r2, #0]
200700f8:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700fa:	4b0b      	ldr	r3, [pc, #44]	; (20070128 <system_init_flash+0x84>)
200700fc:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700fe:	bf94      	ite	ls
20070100:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
20070104:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
20070108:	4a03      	ldr	r2, [pc, #12]	; (20070118 <system_init_flash+0x74>)
2007010a:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
2007010c:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070110:	6013      	str	r3, [r2, #0]
20070112:	4770      	bx	lr
20070114:	0121eabf 	.word	0x0121eabf
20070118:	400e0a00 	.word	0x400e0a00
2007011c:	02faf07f 	.word	0x02faf07f
20070120:	03d08fff 	.word	0x03d08fff
20070124:	04c4b3ff 	.word	0x04c4b3ff
20070128:	055d4a7f 	.word	0x055d4a7f

2007012c <g_interrupt_enabled>:
2007012c:	00000001                                ....

20070130 <SystemCoreClock>:
20070130:	003d0900 00000000                       ..=.....

20070138 <impure_data>:
20070138:	00000000 20070424 2007048c 200704f4     ....$.. ... ... 
	...
2007016c:	00087ac4 00000000 00000000 00000000     .z..............
	...
200701e0:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200701f0:	0005deec 0000000b 00000000 00000000     ................
	...

20070560 <_impure_ptr>:
20070560:	20070138                                8.. 

20070564 <lconv>:
20070564:	00087b68 00087a6c 00087a6c 00087a6c     h{..lz..lz..lz..
20070574:	00087a6c 00087a6c 00087a6c 00087a6c     lz..lz..lz..lz..
20070584:	00087a6c 00087a6c ffffffff ffffffff     lz..lz..........
20070594:	ffffffff 0000ffff                       ........

2007059c <lc_ctype_charset>:
2007059c:	49435341 00000049 00000000 00000000     ASCII...........
	...

200705bc <__mb_cur_max>:
200705bc:	00000001                                ....

200705c0 <__malloc_av_>:
	...
200705c8:	200705c0 200705c0 200705c8 200705c8     ... ... ... ... 
200705d8:	200705d0 200705d0 200705d8 200705d8     ... ... ... ... 
200705e8:	200705e0 200705e0 200705e8 200705e8     ... ... ... ... 
200705f8:	200705f0 200705f0 200705f8 200705f8     ... ... ... ... 
20070608:	20070600 20070600 20070608 20070608     ... ... ... ... 
20070618:	20070610 20070610 20070618 20070618     ... ... ... ... 
20070628:	20070620 20070620 20070628 20070628      ..  .. (.. (.. 
20070638:	20070630 20070630 20070638 20070638     0.. 0.. 8.. 8.. 
20070648:	20070640 20070640 20070648 20070648     @.. @.. H.. H.. 
20070658:	20070650 20070650 20070658 20070658     P.. P.. X.. X.. 
20070668:	20070660 20070660 20070668 20070668     `.. `.. h.. h.. 
20070678:	20070670 20070670 20070678 20070678     p.. p.. x.. x.. 
20070688:	20070680 20070680 20070688 20070688     ... ... ... ... 
20070698:	20070690 20070690 20070698 20070698     ... ... ... ... 
200706a8:	200706a0 200706a0 200706a8 200706a8     ... ... ... ... 
200706b8:	200706b0 200706b0 200706b8 200706b8     ... ... ... ... 
200706c8:	200706c0 200706c0 200706c8 200706c8     ... ... ... ... 
200706d8:	200706d0 200706d0 200706d8 200706d8     ... ... ... ... 
200706e8:	200706e0 200706e0 200706e8 200706e8     ... ... ... ... 
200706f8:	200706f0 200706f0 200706f8 200706f8     ... ... ... ... 
20070708:	20070700 20070700 20070708 20070708     ... ... ... ... 
20070718:	20070710 20070710 20070718 20070718     ... ... ... ... 
20070728:	20070720 20070720 20070728 20070728      ..  .. (.. (.. 
20070738:	20070730 20070730 20070738 20070738     0.. 0.. 8.. 8.. 
20070748:	20070740 20070740 20070748 20070748     @.. @.. H.. H.. 
20070758:	20070750 20070750 20070758 20070758     P.. P.. X.. X.. 
20070768:	20070760 20070760 20070768 20070768     `.. `.. h.. h.. 
20070778:	20070770 20070770 20070778 20070778     p.. p.. x.. x.. 
20070788:	20070780 20070780 20070788 20070788     ... ... ... ... 
20070798:	20070790 20070790 20070798 20070798     ... ... ... ... 
200707a8:	200707a0 200707a0 200707a8 200707a8     ... ... ... ... 
200707b8:	200707b0 200707b0 200707b8 200707b8     ... ... ... ... 
200707c8:	200707c0 200707c0 200707c8 200707c8     ... ... ... ... 
200707d8:	200707d0 200707d0 200707d8 200707d8     ... ... ... ... 
200707e8:	200707e0 200707e0 200707e8 200707e8     ... ... ... ... 
200707f8:	200707f0 200707f0 200707f8 200707f8     ... ... ... ... 
20070808:	20070800 20070800 20070808 20070808     ... ... ... ... 
20070818:	20070810 20070810 20070818 20070818     ... ... ... ... 
20070828:	20070820 20070820 20070828 20070828      ..  .. (.. (.. 
20070838:	20070830 20070830 20070838 20070838     0.. 0.. 8.. 8.. 
20070848:	20070840 20070840 20070848 20070848     @.. @.. H.. H.. 
20070858:	20070850 20070850 20070858 20070858     P.. P.. X.. X.. 
20070868:	20070860 20070860 20070868 20070868     `.. `.. h.. h.. 
20070878:	20070870 20070870 20070878 20070878     p.. p.. x.. x.. 
20070888:	20070880 20070880 20070888 20070888     ... ... ... ... 
20070898:	20070890 20070890 20070898 20070898     ... ... ... ... 
200708a8:	200708a0 200708a0 200708a8 200708a8     ... ... ... ... 
200708b8:	200708b0 200708b0 200708b8 200708b8     ... ... ... ... 
200708c8:	200708c0 200708c0 200708c8 200708c8     ... ... ... ... 
200708d8:	200708d0 200708d0 200708d8 200708d8     ... ... ... ... 
200708e8:	200708e0 200708e0 200708e8 200708e8     ... ... ... ... 
200708f8:	200708f0 200708f0 200708f8 200708f8     ... ... ... ... 
20070908:	20070900 20070900 20070908 20070908     ... ... ... ... 
20070918:	20070910 20070910 20070918 20070918     ... ... ... ... 
20070928:	20070920 20070920 20070928 20070928      ..  .. (.. (.. 
20070938:	20070930 20070930 20070938 20070938     0.. 0.. 8.. 8.. 
20070948:	20070940 20070940 20070948 20070948     @.. @.. H.. H.. 
20070958:	20070950 20070950 20070958 20070958     P.. P.. X.. X.. 
20070968:	20070960 20070960 20070968 20070968     `.. `.. h.. h.. 
20070978:	20070970 20070970 20070978 20070978     p.. p.. x.. x.. 
20070988:	20070980 20070980 20070988 20070988     ... ... ... ... 
20070998:	20070990 20070990 20070998 20070998     ... ... ... ... 
200709a8:	200709a0 200709a0 200709a8 200709a8     ... ... ... ... 
200709b8:	200709b0 200709b0 200709b8 200709b8     ... ... ... ... 

200709c8 <__malloc_trim_threshold>:
200709c8:	00020000                                ....

200709cc <__malloc_sbrk_base>:
200709cc:	ffffffff                                ....

200709d0 <__wctomb>:
200709d0:	0008712d                                -q..
