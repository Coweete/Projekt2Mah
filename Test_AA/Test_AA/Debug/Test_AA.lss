
Test_AA.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007b08  00080000  00080000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00087b08  00087b08  0000fb08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d4  20070000  00087b10  00010000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000184  200709d4  000884e4  000109d4  2**2
                  ALLOC
  4 .stack        00002000  20070b58  00088668  000109d4  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  000109d4  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  000109fd  2**0
                  CONTENTS, READONLY
  7 .debug_info   000153fe  00000000  00000000  00010a58  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003878  00000000  00000000  00025e56  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00005b50  00000000  00000000  000296ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000c70  00000000  00000000  0002f21e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000dc8  00000000  00000000  0002fe8e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00019f6d  00000000  00000000  00030c56  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00015fea  00000000  00000000  0004abc3  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00063f52  00000000  00000000  00060bad  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002888  00000000  00000000  000c4b00  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <_sfixed>:
   80000:	20072b58 	.word	0x20072b58
   80004:	00080e79 	.word	0x00080e79
   80008:	00080e75 	.word	0x00080e75
   8000c:	00080e75 	.word	0x00080e75
   80010:	00080e75 	.word	0x00080e75
   80014:	00080e75 	.word	0x00080e75
   80018:	00080e75 	.word	0x00080e75
	...
   8002c:	00080e75 	.word	0x00080e75
   80030:	00080e75 	.word	0x00080e75
   80034:	00000000 	.word	0x00000000
   80038:	00080e75 	.word	0x00080e75
   8003c:	00080e75 	.word	0x00080e75
   80040:	00080e75 	.word	0x00080e75
   80044:	00080e75 	.word	0x00080e75
   80048:	00080e75 	.word	0x00080e75
   8004c:	00080e75 	.word	0x00080e75
   80050:	00080e75 	.word	0x00080e75
   80054:	00080e75 	.word	0x00080e75
   80058:	00080e75 	.word	0x00080e75
   8005c:	00080e75 	.word	0x00080e75
   80060:	00080e75 	.word	0x00080e75
   80064:	00080e75 	.word	0x00080e75
   80068:	00000000 	.word	0x00000000
   8006c:	00080ce5 	.word	0x00080ce5
   80070:	00080cf9 	.word	0x00080cf9
   80074:	00080d0d 	.word	0x00080d0d
   80078:	00080d21 	.word	0x00080d21
	...
   80084:	00080459 	.word	0x00080459
   80088:	00080e75 	.word	0x00080e75
   8008c:	00080e75 	.word	0x00080e75
   80090:	00080e75 	.word	0x00080e75
   80094:	00080e75 	.word	0x00080e75
   80098:	00080e75 	.word	0x00080e75
   8009c:	00080e75 	.word	0x00080e75
   800a0:	00080e75 	.word	0x00080e75
   800a4:	00000000 	.word	0x00000000
   800a8:	00080e75 	.word	0x00080e75
   800ac:	00080e75 	.word	0x00080e75
   800b0:	00080e75 	.word	0x00080e75
   800b4:	00080e75 	.word	0x00080e75
   800b8:	00080e75 	.word	0x00080e75
   800bc:	00080e75 	.word	0x00080e75
   800c0:	00080e75 	.word	0x00080e75
   800c4:	00080e75 	.word	0x00080e75
   800c8:	00080e75 	.word	0x00080e75
   800cc:	00080e75 	.word	0x00080e75
   800d0:	00080e75 	.word	0x00080e75
   800d4:	00080e75 	.word	0x00080e75
   800d8:	00080e75 	.word	0x00080e75
   800dc:	00080e75 	.word	0x00080e75
   800e0:	00080e75 	.word	0x00080e75
   800e4:	00080e75 	.word	0x00080e75
   800e8:	00080e75 	.word	0x00080e75
   800ec:	00080e75 	.word	0x00080e75
   800f0:	00080e75 	.word	0x00080e75

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	200709d4 	.word	0x200709d4
   80110:	00000000 	.word	0x00000000
   80114:	00087b10 	.word	0x00087b10

00080118 <frame_dummy>:
   80118:	b508      	push	{r3, lr}
   8011a:	4b06      	ldr	r3, [pc, #24]	; (80134 <frame_dummy+0x1c>)
   8011c:	b11b      	cbz	r3, 80126 <frame_dummy+0xe>
   8011e:	4806      	ldr	r0, [pc, #24]	; (80138 <frame_dummy+0x20>)
   80120:	4906      	ldr	r1, [pc, #24]	; (8013c <frame_dummy+0x24>)
   80122:	f3af 8000 	nop.w
   80126:	4806      	ldr	r0, [pc, #24]	; (80140 <frame_dummy+0x28>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b113      	cbz	r3, 80132 <frame_dummy+0x1a>
   8012c:	4b05      	ldr	r3, [pc, #20]	; (80144 <frame_dummy+0x2c>)
   8012e:	b103      	cbz	r3, 80132 <frame_dummy+0x1a>
   80130:	4798      	blx	r3
   80132:	bd08      	pop	{r3, pc}
   80134:	00000000 	.word	0x00000000
   80138:	00087b10 	.word	0x00087b10
   8013c:	200709d8 	.word	0x200709d8
   80140:	00087b10 	.word	0x00087b10
   80144:	00000000 	.word	0x00000000

00080148 <twi_set_speed>:
uint32_t twi_set_speed(Twi *p_twi, uint32_t ul_speed, uint32_t ul_mck)
{
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
   80148:	4b0f      	ldr	r3, [pc, #60]	; (80188 <twi_set_speed+0x40>)
   8014a:	4299      	cmp	r1, r3
   8014c:	d819      	bhi.n	80182 <twi_set_speed+0x3a>
		return FAIL;
	}

	c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
   8014e:	0049      	lsls	r1, r1, #1
   80150:	fbb2 f2f1 	udiv	r2, r2, r1
   80154:	3a04      	subs	r2, #4

	/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
	while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
   80156:	2aff      	cmp	r2, #255	; 0xff
   80158:	d907      	bls.n	8016a <twi_set_speed+0x22>
 * \retval PASS New speed setting is accepted.
 * \retval FAIL New speed setting is rejected.
 */
uint32_t twi_set_speed(Twi *p_twi, uint32_t ul_speed, uint32_t ul_mck)
{
	uint32_t ckdiv = 0;
   8015a:	2300      	movs	r3, #0
	c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;

	/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
	while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
		/* Increase clock divider */
		ckdiv++;
   8015c:	3301      	adds	r3, #1
		/* Divide cldiv value */
		c_lh_div /= TWI_CLK_DIVIDER;
   8015e:	0852      	lsrs	r2, r2, #1
	}

	c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;

	/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
	while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
   80160:	2aff      	cmp	r2, #255	; 0xff
   80162:	d903      	bls.n	8016c <twi_set_speed+0x24>
   80164:	2b07      	cmp	r3, #7
   80166:	d1f9      	bne.n	8015c <twi_set_speed+0x14>
   80168:	e000      	b.n	8016c <twi_set_speed+0x24>
 * \retval PASS New speed setting is accepted.
 * \retval FAIL New speed setting is rejected.
 */
uint32_t twi_set_speed(Twi *p_twi, uint32_t ul_speed, uint32_t ul_mck)
{
	uint32_t ckdiv = 0;
   8016a:	2300      	movs	r3, #0
		c_lh_div /= TWI_CLK_DIVIDER;
	}

	/* set clock waveform generator register */
	p_twi->TWI_CWGR =
			TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
   8016c:	0211      	lsls	r1, r2, #8
   8016e:	b289      	uxth	r1, r1
			TWI_CWGR_CKDIV(ckdiv);
   80170:	041b      	lsls	r3, r3, #16
   80172:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
		c_lh_div /= TWI_CLK_DIVIDER;
	}

	/* set clock waveform generator register */
	p_twi->TWI_CWGR =
			TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
   80176:	430b      	orrs	r3, r1
   80178:	b2d2      	uxtb	r2, r2
   8017a:	431a      	orrs	r2, r3
		/* Divide cldiv value */
		c_lh_div /= TWI_CLK_DIVIDER;
	}

	/* set clock waveform generator register */
	p_twi->TWI_CWGR =
   8017c:	6102      	str	r2, [r0, #16]
			TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
			TWI_CWGR_CKDIV(ckdiv);

	return PASS;
   8017e:	2000      	movs	r0, #0
   80180:	4770      	bx	lr
{
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
		return FAIL;
   80182:	2001      	movs	r0, #1
	p_twi->TWI_CWGR =
			TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
			TWI_CWGR_CKDIV(ckdiv);

	return PASS;
}
   80184:	4770      	bx	lr
   80186:	bf00      	nop
   80188:	00061a80 	.word	0x00061a80

0008018c <twi_master_init>:
 * \param p_opt Options for initializing the TWI module (see \ref twi_options_t).
 *
 * \return TWI_SUCCESS if initialization is complete, error code otherwise.
 */
uint32_t twi_master_init(Twi *p_twi, const twi_options_t *p_opt)
{
   8018c:	b538      	push	{r3, r4, r5, lr}
   8018e:	4604      	mov	r4, r0
   80190:	460d      	mov	r5, r1
	uint32_t status = TWI_SUCCESS;

	/* Disable TWI interrupts */
	p_twi->TWI_IDR = ~0UL;
   80192:	f04f 33ff 	mov.w	r3, #4294967295
   80196:	6283      	str	r3, [r0, #40]	; 0x28

	/* Dummy read in status register */
	p_twi->TWI_SR;
   80198:	6a03      	ldr	r3, [r0, #32]
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
   8019a:	2380      	movs	r3, #128	; 0x80
   8019c:	6003      	str	r3, [r0, #0]
	p_twi->TWI_RHR;
   8019e:	6b03      	ldr	r3, [r0, #48]	; 0x30
 * \param p_twi Pointer to a TWI instance.
 */
void twi_enable_master_mode(Twi *p_twi)
{
	/* Set Master Disable bit and Slave Disable bit */
	p_twi->TWI_CR = TWI_CR_MSDIS;
   801a0:	2308      	movs	r3, #8
   801a2:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
   801a4:	2320      	movs	r3, #32
   801a6:	6003      	str	r3, [r0, #0]

	/* Set Master Enable bit */
	p_twi->TWI_CR = TWI_CR_MSEN;
   801a8:	2304      	movs	r3, #4
   801aa:	6003      	str	r3, [r0, #0]
	twi_reset(p_twi);

	twi_enable_master_mode(p_twi);

	/* Select the speed */
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
   801ac:	6849      	ldr	r1, [r1, #4]
   801ae:	682a      	ldr	r2, [r5, #0]
   801b0:	4b05      	ldr	r3, [pc, #20]	; (801c8 <twi_master_init+0x3c>)
   801b2:	4798      	blx	r3
   801b4:	2801      	cmp	r0, #1
   801b6:	bf14      	ite	ne
   801b8:	2000      	movne	r0, #0
   801ba:	2001      	moveq	r0, #1
		/* The desired speed setting is rejected */
		status = TWI_INVALID_ARGUMENT;
	}

	if (p_opt->smbus == 1) {
   801bc:	7a6b      	ldrb	r3, [r5, #9]
   801be:	2b01      	cmp	r3, #1
		p_twi->TWI_CR = TWI_CR_QUICK;
   801c0:	bf04      	itt	eq
   801c2:	2340      	moveq	r3, #64	; 0x40
   801c4:	6023      	streq	r3, [r4, #0]
	}

	return status;
}
   801c6:	bd38      	pop	{r3, r4, r5, pc}
   801c8:	00080149 	.word	0x00080149

000801cc <init_sensor>:
#define EchoPin PIO_PC23_IDX
//DigitalPin 8
#define TriggerPin PIO_PC22_IDX


void init_sensor(){
   801cc:	b510      	push	{r4, lr}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   801ce:	200b      	movs	r0, #11
   801d0:	4c09      	ldr	r4, [pc, #36]	; (801f8 <init_sensor+0x2c>)
   801d2:	47a0      	blx	r4
   801d4:	200c      	movs	r0, #12
   801d6:	47a0      	blx	r4
   801d8:	200d      	movs	r0, #13
   801da:	47a0      	blx	r4
   801dc:	200e      	movs	r0, #14
   801de:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   801e0:	4b06      	ldr	r3, [pc, #24]	; (801fc <init_sensor+0x30>)
   801e2:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
   801e6:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   801e8:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   801ec:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
   801f0:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   801f2:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
   801f6:	bd10      	pop	{r4, pc}
   801f8:	00080e1d 	.word	0x00080e1d
   801fc:	400e1200 	.word	0x400e1200

00080200 <init_twi_functions>:
	.chip			= TWI_SLAVE_NAVIGERING,
	.buffer			= (void*) data_received_nav,
	.length			= TWI_DATA_RECIEVE_LENGTH
};

void init_twi_functions(){
   80200:	b500      	push	{lr}
   80202:	b085      	sub	sp, #20
	twi_master_options_t opt;
	opt.speed = TWI_SPEED;
   80204:	4b08      	ldr	r3, [pc, #32]	; (80228 <init_twi_functions+0x28>)
   80206:	9302      	str	r3, [sp, #8]
typedef twi_packet_t twi_package_t;

static inline uint32_t twi_master_setup(twi_master_t p_twi,
		twi_master_options_t *p_opt)
{
	p_opt->master_clk = sysclk_get_cpu_hz();
   80208:	4b08      	ldr	r3, [pc, #32]	; (8022c <init_twi_functions+0x2c>)
   8020a:	9301      	str	r3, [sp, #4]
	p_opt->smbus      = 0;
   8020c:	2300      	movs	r3, #0
   8020e:	f88d 300d 	strb.w	r3, [sp, #13]
   80212:	2016      	movs	r0, #22
   80214:	4b06      	ldr	r3, [pc, #24]	; (80230 <init_twi_functions+0x30>)
   80216:	4798      	blx	r3
#endif
	} else {
		// Do Nothing
	}

	return (twi_master_init(p_twi, p_opt));
   80218:	4806      	ldr	r0, [pc, #24]	; (80234 <init_twi_functions+0x34>)
   8021a:	a901      	add	r1, sp, #4
   8021c:	4b06      	ldr	r3, [pc, #24]	; (80238 <init_twi_functions+0x38>)
   8021e:	4798      	blx	r3
	if(twi_master_setup(TWI_MASTER,&opt) == TWI_SUCCESS){
		//pa_sendstatus(TWI_CMD_ARM_INIT,0);
	}
}
   80220:	b005      	add	sp, #20
   80222:	f85d fb04 	ldr.w	pc, [sp], #4
   80226:	bf00      	nop
   80228:	000186a0 	.word	0x000186a0
   8022c:	0501bd00 	.word	0x0501bd00
   80230:	00080e1d 	.word	0x00080e1d
   80234:	4008c000 	.word	0x4008c000
   80238:	0008018d 	.word	0x0008018d

0008023c <usart_serial_read_packet>:
 * \param len    Length of data
 *
 */
status_code_t usart_serial_read_packet(usart_if usart, uint8_t *data,
		size_t len)
{
   8023c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   80240:	b083      	sub	sp, #12
   80242:	4605      	mov	r5, r0
	while (len) {
   80244:	4690      	mov	r8, r2
   80246:	2a00      	cmp	r2, #0
   80248:	d047      	beq.n	802da <usart_serial_read_packet+0x9e>
   8024a:	1c4e      	adds	r6, r1, #1
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   8024c:	4f25      	ldr	r7, [pc, #148]	; (802e4 <usart_serial_read_packet+0xa8>)
		while (usart_read(p_usart, &val));
   8024e:	4c26      	ldr	r4, [pc, #152]	; (802e8 <usart_serial_read_packet+0xac>)
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   80250:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 802fc <usart_serial_read_packet+0xc0>
	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
   80254:	f8df b094 	ldr.w	fp, [pc, #148]	; 802ec <usart_serial_read_packet+0xb0>
   80258:	f106 39ff 	add.w	r9, r6, #4294967295
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
	uint32_t val = 0;
   8025c:	2300      	movs	r3, #0
   8025e:	9301      	str	r3, [sp, #4]

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   80260:	4b22      	ldr	r3, [pc, #136]	; (802ec <usart_serial_read_packet+0xb0>)
   80262:	429d      	cmp	r5, r3
   80264:	d106      	bne.n	80274 <usart_serial_read_packet+0x38>
		while (uart_read((Uart*)p_usart, data));
   80266:	4658      	mov	r0, fp
   80268:	4649      	mov	r1, r9
   8026a:	4b21      	ldr	r3, [pc, #132]	; (802f0 <usart_serial_read_packet+0xb4>)
   8026c:	4798      	blx	r3
   8026e:	2800      	cmp	r0, #0
   80270:	d1f9      	bne.n	80266 <usart_serial_read_packet+0x2a>
   80272:	e019      	b.n	802a8 <usart_serial_read_packet+0x6c>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   80274:	4b1f      	ldr	r3, [pc, #124]	; (802f4 <usart_serial_read_packet+0xb8>)
   80276:	429d      	cmp	r5, r3
   80278:	d109      	bne.n	8028e <usart_serial_read_packet+0x52>
		while (usart_read(p_usart, &val));
   8027a:	4699      	mov	r9, r3
   8027c:	4648      	mov	r0, r9
   8027e:	a901      	add	r1, sp, #4
   80280:	47a0      	blx	r4
   80282:	2800      	cmp	r0, #0
   80284:	d1fa      	bne.n	8027c <usart_serial_read_packet+0x40>
		*data = (uint8_t)(val & 0xFF);
   80286:	9b01      	ldr	r3, [sp, #4]
   80288:	f806 3c01 	strb.w	r3, [r6, #-1]
   8028c:	e017      	b.n	802be <usart_serial_read_packet+0x82>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   8028e:	4b1a      	ldr	r3, [pc, #104]	; (802f8 <usart_serial_read_packet+0xbc>)
   80290:	429d      	cmp	r5, r3
   80292:	d109      	bne.n	802a8 <usart_serial_read_packet+0x6c>
		while (usart_read(p_usart, &val));
   80294:	4699      	mov	r9, r3
   80296:	4648      	mov	r0, r9
   80298:	a901      	add	r1, sp, #4
   8029a:	47a0      	blx	r4
   8029c:	2800      	cmp	r0, #0
   8029e:	d1fa      	bne.n	80296 <usart_serial_read_packet+0x5a>
		*data = (uint8_t)(val & 0xFF);
   802a0:	9b01      	ldr	r3, [sp, #4]
   802a2:	f806 3c01 	strb.w	r3, [r6, #-1]
   802a6:	e014      	b.n	802d2 <usart_serial_read_packet+0x96>
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   802a8:	4555      	cmp	r5, sl
   802aa:	d108      	bne.n	802be <usart_serial_read_packet+0x82>
		while (usart_read(p_usart, &val));
   802ac:	4650      	mov	r0, sl
   802ae:	a901      	add	r1, sp, #4
   802b0:	47a0      	blx	r4
   802b2:	2800      	cmp	r0, #0
   802b4:	d1fa      	bne.n	802ac <usart_serial_read_packet+0x70>
		*data = (uint8_t)(val & 0xFF);
   802b6:	9b01      	ldr	r3, [sp, #4]
   802b8:	f806 3c01 	strb.w	r3, [r6, #-1]
   802bc:	e009      	b.n	802d2 <usart_serial_read_packet+0x96>
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   802be:	42bd      	cmp	r5, r7
   802c0:	d107      	bne.n	802d2 <usart_serial_read_packet+0x96>
		while (usart_read(p_usart, &val));
   802c2:	4638      	mov	r0, r7
   802c4:	a901      	add	r1, sp, #4
   802c6:	47a0      	blx	r4
   802c8:	2800      	cmp	r0, #0
   802ca:	d1fa      	bne.n	802c2 <usart_serial_read_packet+0x86>
		*data = (uint8_t)(val & 0xFF);
   802cc:	9b01      	ldr	r3, [sp, #4]
   802ce:	f806 3c01 	strb.w	r3, [r6, #-1]
   802d2:	3601      	adds	r6, #1
   802d4:	f1b8 0801 	subs.w	r8, r8, #1
   802d8:	d1be      	bne.n	80258 <usart_serial_read_packet+0x1c>
		usart_serial_getchar(usart, data);
		len--;
		data++;
	}
	return STATUS_OK;
}
   802da:	2000      	movs	r0, #0
   802dc:	b003      	add	sp, #12
   802de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   802e2:	bf00      	nop
   802e4:	400a4000 	.word	0x400a4000
   802e8:	00080441 	.word	0x00080441
   802ec:	400e0800 	.word	0x400e0800
   802f0:	00080419 	.word	0x00080419
   802f4:	40098000 	.word	0x40098000
   802f8:	4009c000 	.word	0x4009c000
   802fc:	400a0000 	.word	0x400a0000

00080300 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
   80300:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80304:	460c      	mov	r4, r1
   80306:	4690      	mov	r8, r2
	int nChars = 0;

	if (file != 0) {
   80308:	b960      	cbnz	r0, 80324 <_read+0x24>
		return -1;
	}

	for (; len > 0; --len) {
   8030a:	2a00      	cmp	r2, #0
   8030c:	dd0e      	ble.n	8032c <_read+0x2c>
   8030e:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
   80310:	4e09      	ldr	r6, [pc, #36]	; (80338 <_read+0x38>)
   80312:	4d0a      	ldr	r5, [pc, #40]	; (8033c <_read+0x3c>)
   80314:	6830      	ldr	r0, [r6, #0]
   80316:	4621      	mov	r1, r4
   80318:	682b      	ldr	r3, [r5, #0]
   8031a:	4798      	blx	r3
		ptr++;
   8031c:	3401      	adds	r4, #1

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
   8031e:	42bc      	cmp	r4, r7
   80320:	d1f8      	bne.n	80314 <_read+0x14>
   80322:	e006      	b.n	80332 <_read+0x32>
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
		return -1;
   80324:	f04f 30ff 	mov.w	r0, #4294967295
   80328:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}

	for (; len > 0; --len) {
   8032c:	2000      	movs	r0, #0
   8032e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
   80332:	4640      	mov	r0, r8
	}
	return nChars;
}
   80334:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80338:	20070b50 	.word	0x20070b50
   8033c:	20070b48 	.word	0x20070b48

00080340 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len);

int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
   80340:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80344:	460e      	mov	r6, r1
   80346:	4615      	mov	r5, r2
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
   80348:	3801      	subs	r0, #1
   8034a:	2802      	cmp	r0, #2
   8034c:	d80f      	bhi.n	8036e <_write+0x2e>
		return -1;
	}

	for (; len != 0; --len) {
   8034e:	b192      	cbz	r2, 80376 <_write+0x36>
   80350:	2400      	movs	r4, #0
		if (ptr_put(stdio_base, *ptr++) < 0) {
   80352:	f8df 803c 	ldr.w	r8, [pc, #60]	; 80390 <_write+0x50>
   80356:	4f0d      	ldr	r7, [pc, #52]	; (8038c <_write+0x4c>)
   80358:	f8d8 0000 	ldr.w	r0, [r8]
   8035c:	5d31      	ldrb	r1, [r6, r4]
   8035e:	683b      	ldr	r3, [r7, #0]
   80360:	4798      	blx	r3
   80362:	2800      	cmp	r0, #0
   80364:	db0a      	blt.n	8037c <_write+0x3c>
			return -1;
		}
		++nChars;
   80366:	3401      	adds	r4, #1

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
   80368:	42a5      	cmp	r5, r4
   8036a:	d1f5      	bne.n	80358 <_write+0x18>
   8036c:	e00a      	b.n	80384 <_write+0x44>
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
   8036e:	f04f 30ff 	mov.w	r0, #4294967295
   80372:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}

	for (; len != 0; --len) {
   80376:	2000      	movs	r0, #0
   80378:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
   8037c:	f04f 30ff 	mov.w	r0, #4294967295
   80380:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		}
		++nChars;
   80384:	4620      	mov	r0, r4
	}
	return nChars;
}
   80386:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8038a:	bf00      	nop
   8038c:	20070b4c 	.word	0x20070b4c
   80390:	20070b50 	.word	0x20070b50

00080394 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   80394:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80396:	0189      	lsls	r1, r1, #6
   80398:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   8039a:	2402      	movs	r4, #2
   8039c:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   8039e:	f04f 31ff 	mov.w	r1, #4294967295
   803a2:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   803a4:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   803a6:	605a      	str	r2, [r3, #4]
}
   803a8:	f85d 4b04 	ldr.w	r4, [sp], #4
   803ac:	4770      	bx	lr
   803ae:	bf00      	nop

000803b0 <tc_set_block_mode>:
		uint32_t ul_blockmode)
{
	/* Validate inputs. */
	Assert(p_tc);
	
	p_tc->TC_BMR = ul_blockmode;
   803b0:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
   803b4:	4770      	bx	lr
   803b6:	bf00      	nop

000803b8 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   803b8:	0189      	lsls	r1, r1, #6
   803ba:	2305      	movs	r3, #5
   803bc:	5043      	str	r3, [r0, r1]
   803be:	4770      	bx	lr

000803c0 <tc_stop>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKDIS;
   803c0:	0189      	lsls	r1, r1, #6
   803c2:	2302      	movs	r3, #2
   803c4:	5043      	str	r3, [r0, r1]
   803c6:	4770      	bx	lr

000803c8 <tc_read_cv>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	return p_tc->TC_CHANNEL[ul_channel].TC_CV;
   803c8:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   803cc:	6908      	ldr	r0, [r1, #16]
}
   803ce:	4770      	bx	lr

000803d0 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
   803d0:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
   803d2:	23ac      	movs	r3, #172	; 0xac
   803d4:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   803d6:	680a      	ldr	r2, [r1, #0]
   803d8:	684b      	ldr	r3, [r1, #4]
   803da:	fbb2 f3f3 	udiv	r3, r2, r3
   803de:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   803e0:	1e5c      	subs	r4, r3, #1
   803e2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
   803e6:	4294      	cmp	r4, r2
   803e8:	d80a      	bhi.n	80400 <uart_init+0x30>
		return 1;

	p_uart->UART_BRGR = cd;
   803ea:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
   803ec:	688b      	ldr	r3, [r1, #8]
   803ee:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   803f0:	f240 2302 	movw	r3, #514	; 0x202
   803f4:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   803f8:	2350      	movs	r3, #80	; 0x50
   803fa:	6003      	str	r3, [r0, #0]

	return 0;
   803fc:	2000      	movs	r0, #0
   803fe:	e000      	b.n	80402 <uart_init+0x32>

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
		return 1;
   80400:	2001      	movs	r0, #1

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;

	return 0;
}
   80402:	f85d 4b04 	ldr.w	r4, [sp], #4
   80406:	4770      	bx	lr

00080408 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
   80408:	6943      	ldr	r3, [r0, #20]
   8040a:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
   8040e:	bf1a      	itte	ne
   80410:	61c1      	strne	r1, [r0, #28]
	return 0;
   80412:	2000      	movne	r0, #0
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
		return 1;
   80414:	2001      	moveq	r0, #1

	/* Send character */
	p_uart->UART_THR = uc_data;
	return 0;
}
   80416:	4770      	bx	lr

00080418 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
   80418:	6943      	ldr	r3, [r0, #20]
   8041a:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
   8041e:	bf1d      	ittte	ne
   80420:	6983      	ldrne	r3, [r0, #24]
   80422:	700b      	strbne	r3, [r1, #0]
	return 0;
   80424:	2000      	movne	r0, #0
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
		return 1;
   80426:	2001      	moveq	r0, #1

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
	return 0;
}
   80428:	4770      	bx	lr
   8042a:	bf00      	nop

0008042c <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
   8042c:	6943      	ldr	r3, [r0, #20]
   8042e:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
   80432:	bf1d      	ittte	ne
   80434:	f3c1 0108 	ubfxne	r1, r1, #0, #9
   80438:	61c1      	strne	r1, [r0, #28]
	return 0;
   8043a:	2000      	movne	r0, #0
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
		return 1;
   8043c:	2001      	moveq	r0, #1
	}

	p_usart->US_THR = US_THR_TXCHR(c);
	return 0;
}
   8043e:	4770      	bx	lr

00080440 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
   80440:	6943      	ldr	r3, [r0, #20]
   80442:	f013 0f01 	tst.w	r3, #1
   80446:	d005      	beq.n	80454 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
   80448:	6983      	ldr	r3, [r0, #24]
   8044a:	f3c3 0308 	ubfx	r3, r3, #0, #9
   8044e:	600b      	str	r3, [r1, #0]

	return 0;
   80450:	2000      	movs	r0, #0
   80452:	4770      	bx	lr
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
		return 1;
   80454:	2001      	movs	r0, #1

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;

	return 0;
}
   80456:	4770      	bx	lr

00080458 <USART0_Handler>:
#if SAMD || SAMR21 || SAML21
void USART_HOST_ISR_VECT(uint8_t instance)
#else
USART_HOST_ISR_VECT()
#endif
{
   80458:	b500      	push	{lr}
   8045a:	b083      	sub	sp, #12
	uint8_t temp;
#if SAMD || SAMR21 || SAML21
	usart_serial_read_packet(&host_uart_module, &temp, 1);
#else
	usart_serial_read_packet(USART_HOST, &temp, 1);
   8045c:	4811      	ldr	r0, [pc, #68]	; (804a4 <USART0_Handler+0x4c>)
   8045e:	f10d 0107 	add.w	r1, sp, #7
   80462:	2201      	movs	r2, #1
   80464:	4b10      	ldr	r3, [pc, #64]	; (804a8 <USART0_Handler+0x50>)
   80466:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
   80468:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   8046a:	f3bf 8f5f 	dmb	sy
#endif

	/* Introducing critical section to avoid buffer corruption. */
	cpu_irq_disable();
   8046e:	2200      	movs	r2, #0
   80470:	4b0e      	ldr	r3, [pc, #56]	; (804ac <USART0_Handler+0x54>)
   80472:	701a      	strb	r2, [r3, #0]

	/* The number of data in the receive buffer is incremented and the
	 * buffer is updated. */

	serial_rx_buf[serial_rx_buf_tail] = temp;
   80474:	4b0e      	ldr	r3, [pc, #56]	; (804b0 <USART0_Handler+0x58>)
   80476:	781b      	ldrb	r3, [r3, #0]
   80478:	f89d 1007 	ldrb.w	r1, [sp, #7]
   8047c:	4a0d      	ldr	r2, [pc, #52]	; (804b4 <USART0_Handler+0x5c>)
   8047e:	54d1      	strb	r1, [r2, r3]

	if ((SERIAL_RX_BUF_SIZE_HOST - 1) == serial_rx_buf_tail) {
   80480:	2b9b      	cmp	r3, #155	; 0x9b
   80482:	d103      	bne.n	8048c <USART0_Handler+0x34>
		/* Reached the end of buffer, revert back to beginning of
		 * buffer. */
		serial_rx_buf_tail = 0x00;
   80484:	2200      	movs	r2, #0
   80486:	4b0a      	ldr	r3, [pc, #40]	; (804b0 <USART0_Handler+0x58>)
   80488:	701a      	strb	r2, [r3, #0]
   8048a:	e002      	b.n	80492 <USART0_Handler+0x3a>
	} else {
		serial_rx_buf_tail++;
   8048c:	3301      	adds	r3, #1
   8048e:	4a08      	ldr	r2, [pc, #32]	; (804b0 <USART0_Handler+0x58>)
   80490:	7013      	strb	r3, [r2, #0]
	}

	cpu_irq_enable();
   80492:	2201      	movs	r2, #1
   80494:	4b05      	ldr	r3, [pc, #20]	; (804ac <USART0_Handler+0x54>)
   80496:	701a      	strb	r2, [r3, #0]
   80498:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
   8049c:	b662      	cpsie	i
}
   8049e:	b003      	add	sp, #12
   804a0:	f85d fb04 	ldr.w	pc, [sp], #4
   804a4:	40098000 	.word	0x40098000
   804a8:	0008023d 	.word	0x0008023d
   804ac:	2007012c 	.word	0x2007012c
   804b0:	20070a8c 	.word	0x20070a8c
   804b4:	200709f0 	.word	0x200709f0

000804b8 <initDrive>:





void initDrive(void){
   804b8:	b470      	push	{r4, r5, r6}
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   804ba:	4b20      	ldr	r3, [pc, #128]	; (8053c <initDrive+0x84>)
   804bc:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
   804c0:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   804c2:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   804c6:	491e      	ldr	r1, [pc, #120]	; (80540 <initDrive+0x88>)
   804c8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
   804cc:	610b      	str	r3, [r1, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   804ce:	f8c1 30a0 	str.w	r3, [r1, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   804d2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   804d6:	614b      	str	r3, [r1, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   804d8:	f8c1 30a0 	str.w	r3, [r1, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   804dc:	4b19      	ldr	r3, [pc, #100]	; (80544 <initDrive+0x8c>)
   804de:	2402      	movs	r4, #2
   804e0:	615c      	str	r4, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   804e2:	f8c3 40a0 	str.w	r4, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   804e6:	2008      	movs	r0, #8
   804e8:	6158      	str	r0, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   804ea:	f8c3 00a0 	str.w	r0, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   804ee:	f44f 7200 	mov.w	r2, #512	; 0x200
   804f2:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   804f4:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   804f8:	f44f 6280 	mov.w	r2, #1024	; 0x400
   804fc:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   804fe:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80502:	4a11      	ldr	r2, [pc, #68]	; (80548 <initDrive+0x90>)
   80504:	2504      	movs	r5, #4
   80506:	6155      	str	r5, [r2, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80508:	f8c2 50a0 	str.w	r5, [r2, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   8050c:	2601      	movs	r6, #1
   8050e:	615e      	str	r6, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80510:	f8c3 60a0 	str.w	r6, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80514:	615d      	str	r5, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80516:	f8c3 50a0 	str.w	r5, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   8051a:	2540      	movs	r5, #64	; 0x40
   8051c:	615d      	str	r5, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8051e:	f8c3 50a0 	str.w	r5, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80522:	2380      	movs	r3, #128	; 0x80
   80524:	614b      	str	r3, [r1, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80526:	f8c1 30a0 	str.w	r3, [r1, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   8052a:	6154      	str	r4, [r2, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8052c:	f8c2 40a0 	str.w	r4, [r2, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80530:	6150      	str	r0, [r2, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80532:	f8c2 00a0 	str.w	r0, [r2, #160]	; 0xa0
	ioport_set_pin_dir(L1,IOPORT_DIR_INPUT);
	ioport_set_pin_dir(L2,IOPORT_DIR_INPUT);
	ioport_set_pin_dir(L3,IOPORT_DIR_INPUT);
	ioport_set_pin_dir(L4,IOPORT_DIR_INPUT);
	ioport_set_pin_dir(L5,IOPORT_DIR_INPUT);
}
   80536:	bc70      	pop	{r4, r5, r6}
   80538:	4770      	bx	lr
   8053a:	bf00      	nop
   8053c:	400e1000 	.word	0x400e1000
   80540:	400e0e00 	.word	0x400e0e00
   80544:	400e1400 	.word	0x400e1400
   80548:	400e1200 	.word	0x400e1200

0008054c <initRegulator>:
int speed=1650;
int r_speed=0;
int l_speed=0;


void initRegulator(void){
   8054c:	4770      	bx	lr
   8054e:	bf00      	nop

00080550 <delayInit>:

#include "asf.h"
#include "DelayFunctions.h"

void delayInit(void)		/* Initializes the timer used for delays */
{
   80550:	b510      	push	{r4, lr}
	pmc_enable_periph_clk(ID_TC0);
   80552:	201b      	movs	r0, #27
   80554:	4b08      	ldr	r3, [pc, #32]	; (80578 <delayInit+0x28>)
   80556:	4798      	blx	r3
	tc_init(TC0,0,0);		 /* TC0, channel 0, TCLK1 och capturemode */
   80558:	4c08      	ldr	r4, [pc, #32]	; (8057c <delayInit+0x2c>)
   8055a:	4620      	mov	r0, r4
   8055c:	2100      	movs	r1, #0
   8055e:	460a      	mov	r2, r1
   80560:	4b07      	ldr	r3, [pc, #28]	; (80580 <delayInit+0x30>)
   80562:	4798      	blx	r3
	tc_set_block_mode(TC0,0);
   80564:	4620      	mov	r0, r4
   80566:	2100      	movs	r1, #0
   80568:	4b06      	ldr	r3, [pc, #24]	; (80584 <delayInit+0x34>)
   8056a:	4798      	blx	r3
	tc_stop(TC0,0);			/* making sure the timer does not run  */
   8056c:	4620      	mov	r0, r4
   8056e:	2100      	movs	r1, #0
   80570:	4b05      	ldr	r3, [pc, #20]	; (80588 <delayInit+0x38>)
   80572:	4798      	blx	r3
   80574:	bd10      	pop	{r4, pc}
   80576:	bf00      	nop
   80578:	00080e1d 	.word	0x00080e1d
   8057c:	40080000 	.word	0x40080000
   80580:	00080395 	.word	0x00080395
   80584:	000803b1 	.word	0x000803b1
   80588:	000803c1 	.word	0x000803c1

0008058c <delayMicroseconds>:
}


void delayMicroseconds(uint32_t us)		/* A simple implementation for a delay in us (not calibrated) */
{
   8058c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8058e:	4604      	mov	r4, r0
	tc_start(TC0,0);
   80590:	4809      	ldr	r0, [pc, #36]	; (805b8 <delayMicroseconds+0x2c>)
   80592:	2100      	movs	r1, #0
   80594:	4b09      	ldr	r3, [pc, #36]	; (805bc <delayMicroseconds+0x30>)
   80596:	4798      	blx	r3
	while (tc_read_cv(TC0,0) < us*42); /* Only works in newere version of ASF */
   80598:	272a      	movs	r7, #42	; 0x2a
   8059a:	fb07 f704 	mul.w	r7, r7, r4
   8059e:	4e06      	ldr	r6, [pc, #24]	; (805b8 <delayMicroseconds+0x2c>)
   805a0:	2500      	movs	r5, #0
   805a2:	4c07      	ldr	r4, [pc, #28]	; (805c0 <delayMicroseconds+0x34>)
   805a4:	4630      	mov	r0, r6
   805a6:	4629      	mov	r1, r5
   805a8:	47a0      	blx	r4
   805aa:	42b8      	cmp	r0, r7
   805ac:	d3fa      	bcc.n	805a4 <delayMicroseconds+0x18>
	tc_stop(TC0,0);
   805ae:	4802      	ldr	r0, [pc, #8]	; (805b8 <delayMicroseconds+0x2c>)
   805b0:	2100      	movs	r1, #0
   805b2:	4b04      	ldr	r3, [pc, #16]	; (805c4 <delayMicroseconds+0x38>)
   805b4:	4798      	blx	r3
   805b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   805b8:	40080000 	.word	0x40080000
   805bc:	000803b9 	.word	0x000803b9
   805c0:	000803c9 	.word	0x000803c9
   805c4:	000803c1 	.word	0x000803c1

000805c8 <initMotor>:
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   805c8:	4b04      	ldr	r3, [pc, #16]	; (805dc <initMotor+0x14>)
   805ca:	2210      	movs	r2, #16
   805cc:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   805ce:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   805d2:	2220      	movs	r2, #32
   805d4:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   805d6:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
   805da:	4770      	bx	lr
   805dc:	400e1200 	.word	0x400e1200

000805e0 <pulseLeft>:
}




void pulseLeft(int p1){
   805e0:	b538      	push	{r3, r4, r5, lr}
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   805e2:	4c03      	ldr	r4, [pc, #12]	; (805f0 <pulseLeft+0x10>)
   805e4:	2510      	movs	r5, #16
   805e6:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LEFT,HIGH);
	delayMicroseconds(p1);
   805e8:	4b02      	ldr	r3, [pc, #8]	; (805f4 <pulseLeft+0x14>)
   805ea:	4798      	blx	r3
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   805ec:	6365      	str	r5, [r4, #52]	; 0x34
   805ee:	bd38      	pop	{r3, r4, r5, pc}
   805f0:	400e1200 	.word	0x400e1200
   805f4:	0008058d 	.word	0x0008058d

000805f8 <pulseRight>:
	ioport_set_pin_level(LEFT,LOW);
}
void pulseRight(int p2){
   805f8:	b538      	push	{r3, r4, r5, lr}
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   805fa:	4c03      	ldr	r4, [pc, #12]	; (80608 <pulseRight+0x10>)
   805fc:	2520      	movs	r5, #32
   805fe:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(RIGHT,HIGH);
	delayMicroseconds(p2);
   80600:	4b02      	ldr	r3, [pc, #8]	; (8060c <pulseRight+0x14>)
   80602:	4798      	blx	r3
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80604:	6365      	str	r5, [r4, #52]	; 0x34
   80606:	bd38      	pop	{r3, r4, r5, pc}
   80608:	400e1200 	.word	0x400e1200
   8060c:	0008058d 	.word	0x0008058d

00080610 <moveForward>:
	ioport_set_pin_level(RIGHT,LOW);
}

void moveForward(int l,int r){
   80610:	b510      	push	{r4, lr}
   80612:	460c      	mov	r4, r1
	pulseLeft(l);
   80614:	4b04      	ldr	r3, [pc, #16]	; (80628 <moveForward+0x18>)
   80616:	4798      	blx	r3
	pulseRight(r);
   80618:	4620      	mov	r0, r4
   8061a:	4b04      	ldr	r3, [pc, #16]	; (8062c <moveForward+0x1c>)
   8061c:	4798      	blx	r3
	delayMicroseconds(5250);
   8061e:	f241 4082 	movw	r0, #5250	; 0x1482
   80622:	4b03      	ldr	r3, [pc, #12]	; (80630 <moveForward+0x20>)
   80624:	4798      	blx	r3
   80626:	bd10      	pop	{r4, pc}
   80628:	000805e1 	.word	0x000805e1
   8062c:	000805f9 	.word	0x000805f9
   80630:	0008058d 	.word	0x0008058d

00080634 <initRotateMotor>:
uint16_t firstx = 0;
uint16_t firsty = 0;
uint16_t secondx = 0;
uint16_t secondy = 0;

void initRotateMotor(void){
   80634:	b470      	push	{r4, r5, r6}
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   80636:	4b20      	ldr	r3, [pc, #128]	; (806b8 <initRotateMotor+0x84>)
   80638:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
   8063c:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8063e:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   80642:	491e      	ldr	r1, [pc, #120]	; (806bc <initRotateMotor+0x88>)
   80644:	f44f 4380 	mov.w	r3, #16384	; 0x4000
   80648:	610b      	str	r3, [r1, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8064a:	f8c1 30a0 	str.w	r3, [r1, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   8064e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   80652:	614b      	str	r3, [r1, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80654:	f8c1 30a0 	str.w	r3, [r1, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80658:	4b19      	ldr	r3, [pc, #100]	; (806c0 <initRotateMotor+0x8c>)
   8065a:	2402      	movs	r4, #2
   8065c:	615c      	str	r4, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8065e:	f8c3 40a0 	str.w	r4, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80662:	2008      	movs	r0, #8
   80664:	6158      	str	r0, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80666:	f8c3 00a0 	str.w	r0, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   8066a:	f44f 7200 	mov.w	r2, #512	; 0x200
   8066e:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80670:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80674:	f44f 6280 	mov.w	r2, #1024	; 0x400
   80678:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8067a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   8067e:	4a11      	ldr	r2, [pc, #68]	; (806c4 <initRotateMotor+0x90>)
   80680:	2504      	movs	r5, #4
   80682:	6155      	str	r5, [r2, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80684:	f8c2 50a0 	str.w	r5, [r2, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80688:	2601      	movs	r6, #1
   8068a:	615e      	str	r6, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8068c:	f8c3 60a0 	str.w	r6, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80690:	615d      	str	r5, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80692:	f8c3 50a0 	str.w	r5, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80696:	2540      	movs	r5, #64	; 0x40
   80698:	615d      	str	r5, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8069a:	f8c3 50a0 	str.w	r5, [r3, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   8069e:	2380      	movs	r3, #128	; 0x80
   806a0:	614b      	str	r3, [r1, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   806a2:	f8c1 30a0 	str.w	r3, [r1, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   806a6:	6154      	str	r4, [r2, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   806a8:	f8c2 40a0 	str.w	r4, [r2, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   806ac:	6150      	str	r0, [r2, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   806ae:	f8c2 00a0 	str.w	r0, [r2, #160]	; 0xa0
    ioport_set_pin_dir(L4,IOPORT_DIR_INPUT);
    ioport_set_pin_dir(L5,IOPORT_DIR_INPUT);

	
    
}
   806b2:	bc70      	pop	{r4, r5, r6}
   806b4:	4770      	bx	lr
   806b6:	bf00      	nop
   806b8:	400e1000 	.word	0x400e1000
   806bc:	400e0e00 	.word	0x400e0e00
   806c0:	400e1400 	.word	0x400e1400
   806c4:	400e1200 	.word	0x400e1200

000806c8 <updateDirection>:
	char str[20];
	sprintf(str,"\nDirection: %d",direction);
	printf (str);
}

void updateDirection(int d){
   806c8:	b500      	push	{lr}
   806ca:	b087      	sub	sp, #28
   806cc:	4602      	mov	r2, r0
	direction = d;	
   806ce:	4b06      	ldr	r3, [pc, #24]	; (806e8 <updateDirection+0x20>)
   806d0:	6018      	str	r0, [r3, #0]
	//direction = (d + 360 - direction) % 360;
	char str[20];
	sprintf(str,"\nNew direction: %d",direction);
   806d2:	a801      	add	r0, sp, #4
   806d4:	4905      	ldr	r1, [pc, #20]	; (806ec <updateDirection+0x24>)
   806d6:	4b06      	ldr	r3, [pc, #24]	; (806f0 <updateDirection+0x28>)
   806d8:	4798      	blx	r3
	printf (str);
   806da:	a801      	add	r0, sp, #4
   806dc:	4b05      	ldr	r3, [pc, #20]	; (806f4 <updateDirection+0x2c>)
   806de:	4798      	blx	r3
}
   806e0:	b007      	add	sp, #28
   806e2:	f85d fb04 	ldr.w	pc, [sp], #4
   806e6:	bf00      	nop
   806e8:	20070a94 	.word	0x20070a94
   806ec:	00087848 	.word	0x00087848
   806f0:	00081ea9 	.word	0x00081ea9
   806f4:	00081cdd 	.word	0x00081cdd

000806f8 <rotate>:

	
    
}

void rotate(int d){					//Minimum d is 4
   806f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   806fc:	b086      	sub	sp, #24
   806fe:	4680      	mov	r8, r0
    //double ticks = d * 0.25;
	
	int reverse_angle = (direction + 180) % 360;
   80700:	4b8c      	ldr	r3, [pc, #560]	; (80934 <rotate+0x23c>)
   80702:	681a      	ldr	r2, [r3, #0]
   80704:	32b4      	adds	r2, #180	; 0xb4
   80706:	4c8c      	ldr	r4, [pc, #560]	; (80938 <rotate+0x240>)
   80708:	fb82 6704 	smull	r6, r7, r2, r4
   8070c:	19d1      	adds	r1, r2, r7
   8070e:	17d3      	asrs	r3, r2, #31
   80710:	ebc3 2321 	rsb	r3, r3, r1, asr #8
   80714:	f44f 71b4 	mov.w	r1, #360	; 0x168
   80718:	fb01 2313 	mls	r3, r1, r3, r2
	
	int direct_angle = ((abs(reverse_angle - 360) + d) % 360) - 180;
   8071c:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
   80720:	2b00      	cmp	r3, #0
   80722:	bfb8      	it	lt
   80724:	425b      	neglt	r3, r3
   80726:	4403      	add	r3, r0
   80728:	fb83 4504 	smull	r4, r5, r3, r4
   8072c:	195c      	adds	r4, r3, r5
   8072e:	17da      	asrs	r2, r3, #31
   80730:	ebc2 2424 	rsb	r4, r2, r4, asr #8
   80734:	fb01 3314 	mls	r3, r1, r4, r3
   80738:	f1a3 04b4 	sub.w	r4, r3, #180	; 0xb4
	
	char str[20];
	
	sprintf(str,"\nNew angle: %d", d);
   8073c:	a801      	add	r0, sp, #4
   8073e:	497f      	ldr	r1, [pc, #508]	; (8093c <rotate+0x244>)
   80740:	4642      	mov	r2, r8
   80742:	4e7f      	ldr	r6, [pc, #508]	; (80940 <rotate+0x248>)
   80744:	47b0      	blx	r6
	printf(str);
   80746:	a801      	add	r0, sp, #4
   80748:	4d7e      	ldr	r5, [pc, #504]	; (80944 <rotate+0x24c>)
   8074a:	47a8      	blx	r5
	
	sprintf(str,"\ndirect_angle = %d", direct_angle);
   8074c:	a801      	add	r0, sp, #4
   8074e:	497e      	ldr	r1, [pc, #504]	; (80948 <rotate+0x250>)
   80750:	4622      	mov	r2, r4
   80752:	47b0      	blx	r6
	printf(str);
   80754:	a801      	add	r0, sp, #4
   80756:	47a8      	blx	r5
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80758:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   8075c:	4b7b      	ldr	r3, [pc, #492]	; (8094c <rotate+0x254>)
   8075e:	635a      	str	r2, [r3, #52]	; 0x34
   80760:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
   80764:	f503 7300 	add.w	r3, r3, #512	; 0x200
   80768:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(L_RESET,LOW);
	ioport_set_pin_level(R_RESET,LOW);
	
	//Turn left
	
	if(direct_angle > 0){								
   8076a:	2c00      	cmp	r4, #0
   8076c:	dd63      	ble.n	80836 <rotate+0x13e>
		while(r_count < (abs(direct_angle) * 0.25)){
   8076e:	4b78      	ldr	r3, [pc, #480]	; (80950 <rotate+0x258>)
   80770:	681f      	ldr	r7, [r3, #0]
   80772:	4e78      	ldr	r6, [pc, #480]	; (80954 <rotate+0x25c>)
   80774:	ea84 70e4 	eor.w	r0, r4, r4, asr #31
   80778:	eba0 70e4 	sub.w	r0, r0, r4, asr #31
   8077c:	47b0      	blx	r6
   8077e:	2200      	movs	r2, #0
   80780:	4b75      	ldr	r3, [pc, #468]	; (80958 <rotate+0x260>)
   80782:	4c76      	ldr	r4, [pc, #472]	; (8095c <rotate+0x264>)
   80784:	47a0      	blx	r4
   80786:	4604      	mov	r4, r0
   80788:	460d      	mov	r5, r1
   8078a:	4638      	mov	r0, r7
   8078c:	47b0      	blx	r6
   8078e:	4622      	mov	r2, r4
   80790:	462b      	mov	r3, r5
   80792:	4e73      	ldr	r6, [pc, #460]	; (80960 <rotate+0x268>)
   80794:	47b0      	blx	r6
   80796:	2800      	cmp	r0, #0
   80798:	d036      	beq.n	80808 <rotate+0x110>
	base->PIO_CODR = mask & ~level;
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   8079a:	f8df a1b0 	ldr.w	sl, [pc, #432]	; 8094c <rotate+0x254>
   8079e:	4e71      	ldr	r6, [pc, #452]	; (80964 <rotate+0x26c>)
   807a0:	f8df 91e0 	ldr.w	r9, [pc, #480]	; 80984 <rotate+0x28c>
   807a4:	f8da c03c 	ldr.w	ip, [sl, #60]	; 0x3c
   807a8:	f8d6 e03c 	ldr.w	lr, [r6, #60]	; 0x3c
   807ac:	6bf0      	ldr	r0, [r6, #60]	; 0x3c
   807ae:	6bf1      	ldr	r1, [r6, #60]	; 0x3c
   807b0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
   807b2:	f8d9 303c 	ldr.w	r3, [r9, #60]	; 0x3c
			r_count = ioport_get_pin_level(R0)+ioport_get_pin_level(R1)*2+ioport_get_pin_level(R2)*4+ioport_get_pin_level(R3)*8
   807b6:	4f66      	ldr	r7, [pc, #408]	; (80950 <rotate+0x258>)
   807b8:	f3cc 3cc0 	ubfx	ip, ip, #15, #1
   807bc:	f3ce 0e40 	ubfx	lr, lr, #1, #1
   807c0:	eb0c 0e4e 	add.w	lr, ip, lr, lsl #1
   807c4:	f3c0 00c0 	ubfx	r0, r0, #3, #1
   807c8:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
   807cc:	f3c1 2140 	ubfx	r1, r1, #9, #1
   807d0:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
   807d4:	f3c2 2280 	ubfx	r2, r2, #10, #1
			+ioport_get_pin_level(R4)*16+ioport_get_pin_level(R5)*32;
   807d8:	eb01 1202 	add.w	r2, r1, r2, lsl #4
   807dc:	f3c3 0380 	ubfx	r3, r3, #2, #1
   807e0:	eb02 1343 	add.w	r3, r2, r3, lsl #5
	
	//Turn left
	
	if(direct_angle > 0){								
		while(r_count < (abs(direct_angle) * 0.25)){
			r_count = ioport_get_pin_level(R0)+ioport_get_pin_level(R1)*2+ioport_get_pin_level(R2)*4+ioport_get_pin_level(R3)*8
   807e4:	603b      	str	r3, [r7, #0]
			+ioport_get_pin_level(R4)*16+ioport_get_pin_level(R5)*32;
			//ioport_set_pin_level(R_RESET,HIGH);
			
			moveForward(1400,1600);
   807e6:	f44f 60af 	mov.w	r0, #1400	; 0x578
   807ea:	f44f 61c8 	mov.w	r1, #1600	; 0x640
   807ee:	4b5e      	ldr	r3, [pc, #376]	; (80968 <rotate+0x270>)
   807f0:	4798      	blx	r3
	ioport_set_pin_level(R_RESET,LOW);
	
	//Turn left
	
	if(direct_angle > 0){								
		while(r_count < (abs(direct_angle) * 0.25)){
   807f2:	683f      	ldr	r7, [r7, #0]
   807f4:	4638      	mov	r0, r7
   807f6:	4b57      	ldr	r3, [pc, #348]	; (80954 <rotate+0x25c>)
   807f8:	4798      	blx	r3
   807fa:	4622      	mov	r2, r4
   807fc:	462b      	mov	r3, r5
   807fe:	f8df c160 	ldr.w	ip, [pc, #352]	; 80960 <rotate+0x268>
   80802:	47e0      	blx	ip
   80804:	2800      	cmp	r0, #0
   80806:	d1cd      	bne.n	807a4 <rotate+0xac>
			moveForward(1400,1600);
			
		}
		
		int count_right = r_count * 4;
		sprintf(str,"\nr_count = %d", r_count);
   80808:	a801      	add	r0, sp, #4
   8080a:	4958      	ldr	r1, [pc, #352]	; (8096c <rotate+0x274>)
   8080c:	463a      	mov	r2, r7
   8080e:	4d4c      	ldr	r5, [pc, #304]	; (80940 <rotate+0x248>)
   80810:	47a8      	blx	r5
		printf(str);
   80812:	a801      	add	r0, sp, #4
   80814:	4c4b      	ldr	r4, [pc, #300]	; (80944 <rotate+0x24c>)
   80816:	47a0      	blx	r4
		sprintf(str,"\ncount_right = %d", count_right);
   80818:	a801      	add	r0, sp, #4
   8081a:	4955      	ldr	r1, [pc, #340]	; (80970 <rotate+0x278>)
   8081c:	00ba      	lsls	r2, r7, #2
   8081e:	47a8      	blx	r5
		printf(str);
   80820:	a801      	add	r0, sp, #4
   80822:	47a0      	blx	r4
		updateDirection(d);
   80824:	4640      	mov	r0, r8
   80826:	4b53      	ldr	r3, [pc, #332]	; (80974 <rotate+0x27c>)
   80828:	4798      	blx	r3
		//direction = (d + 360 - direction) % 360;
		moveForward(1500,1500);	
   8082a:	f240 50dc 	movw	r0, #1500	; 0x5dc
   8082e:	4601      	mov	r1, r0
   80830:	4b4d      	ldr	r3, [pc, #308]	; (80968 <rotate+0x270>)
   80832:	4798      	blx	r3
   80834:	e06c      	b.n	80910 <rotate+0x218>
	}
	
	//Turn right
	
	else if(direct_angle < 0){
   80836:	2c00      	cmp	r4, #0
   80838:	da65      	bge.n	80906 <rotate+0x20e>
		while(l_count < (abs(direct_angle) * 0.25)){			
   8083a:	4b4f      	ldr	r3, [pc, #316]	; (80978 <rotate+0x280>)
   8083c:	681f      	ldr	r7, [r3, #0]
   8083e:	4e45      	ldr	r6, [pc, #276]	; (80954 <rotate+0x25c>)
   80840:	ea84 70e4 	eor.w	r0, r4, r4, asr #31
   80844:	eba0 70e4 	sub.w	r0, r0, r4, asr #31
   80848:	47b0      	blx	r6
   8084a:	2200      	movs	r2, #0
   8084c:	4b42      	ldr	r3, [pc, #264]	; (80958 <rotate+0x260>)
   8084e:	4c43      	ldr	r4, [pc, #268]	; (8095c <rotate+0x264>)
   80850:	47a0      	blx	r4
   80852:	4604      	mov	r4, r0
   80854:	460d      	mov	r5, r1
   80856:	4638      	mov	r0, r7
   80858:	47b0      	blx	r6
   8085a:	4622      	mov	r2, r4
   8085c:	462b      	mov	r3, r5
   8085e:	4e40      	ldr	r6, [pc, #256]	; (80960 <rotate+0x268>)
   80860:	47b0      	blx	r6
   80862:	2800      	cmp	r0, #0
   80864:	d038      	beq.n	808d8 <rotate+0x1e0>
   80866:	4e3f      	ldr	r6, [pc, #252]	; (80964 <rotate+0x26c>)
   80868:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 8094c <rotate+0x254>
   8086c:	f8df 9114 	ldr.w	r9, [pc, #276]	; 80984 <rotate+0x28c>
   80870:	f8d6 c03c 	ldr.w	ip, [r6, #60]	; 0x3c
   80874:	f8d6 e03c 	ldr.w	lr, [r6, #60]	; 0x3c
   80878:	6bf0      	ldr	r0, [r6, #60]	; 0x3c
   8087a:	f8da 103c 	ldr.w	r1, [sl, #60]	; 0x3c
   8087e:	f8d9 203c 	ldr.w	r2, [r9, #60]	; 0x3c
   80882:	f8d9 303c 	ldr.w	r3, [r9, #60]	; 0x3c
			l_count = ioport_get_pin_level(L0)+ioport_get_pin_level(L1)*2+ioport_get_pin_level(L2)*4+ioport_get_pin_level(L3)*8
   80886:	4f3c      	ldr	r7, [pc, #240]	; (80978 <rotate+0x280>)
   80888:	f00c 0c01 	and.w	ip, ip, #1
   8088c:	f3ce 0e80 	ubfx	lr, lr, #2, #1
   80890:	eb0c 0e4e 	add.w	lr, ip, lr, lsl #1
   80894:	f3c0 1080 	ubfx	r0, r0, #6, #1
   80898:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
   8089c:	f3c1 11c0 	ubfx	r1, r1, #7, #1
   808a0:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
   808a4:	f3c2 0240 	ubfx	r2, r2, #1, #1
			+ioport_get_pin_level(L4)*16+ioport_get_pin_level(L5)*32;
   808a8:	eb01 1202 	add.w	r2, r1, r2, lsl #4
   808ac:	f3c3 03c0 	ubfx	r3, r3, #3, #1
   808b0:	eb02 1343 	add.w	r3, r2, r3, lsl #5
	
	//Turn right
	
	else if(direct_angle < 0){
		while(l_count < (abs(direct_angle) * 0.25)){			
			l_count = ioport_get_pin_level(L0)+ioport_get_pin_level(L1)*2+ioport_get_pin_level(L2)*4+ioport_get_pin_level(L3)*8
   808b4:	603b      	str	r3, [r7, #0]
			+ioport_get_pin_level(L4)*16+ioport_get_pin_level(L5)*32;
			//ioport_set_pin_level(L_RESET,HIGH);
			
			moveForward(1600,1400);
   808b6:	f44f 60c8 	mov.w	r0, #1600	; 0x640
   808ba:	f44f 61af 	mov.w	r1, #1400	; 0x578
   808be:	4b2a      	ldr	r3, [pc, #168]	; (80968 <rotate+0x270>)
   808c0:	4798      	blx	r3
	}
	
	//Turn right
	
	else if(direct_angle < 0){
		while(l_count < (abs(direct_angle) * 0.25)){			
   808c2:	683f      	ldr	r7, [r7, #0]
   808c4:	4638      	mov	r0, r7
   808c6:	4b23      	ldr	r3, [pc, #140]	; (80954 <rotate+0x25c>)
   808c8:	4798      	blx	r3
   808ca:	4622      	mov	r2, r4
   808cc:	462b      	mov	r3, r5
   808ce:	f8df c090 	ldr.w	ip, [pc, #144]	; 80960 <rotate+0x268>
   808d2:	47e0      	blx	ip
   808d4:	2800      	cmp	r0, #0
   808d6:	d1cb      	bne.n	80870 <rotate+0x178>
			moveForward(1600,1400);

		}
		
		int count_left = l_count * 4;
		sprintf(str,"\nl_count = %d", l_count);
   808d8:	a801      	add	r0, sp, #4
   808da:	4928      	ldr	r1, [pc, #160]	; (8097c <rotate+0x284>)
   808dc:	463a      	mov	r2, r7
   808de:	4d18      	ldr	r5, [pc, #96]	; (80940 <rotate+0x248>)
   808e0:	47a8      	blx	r5
		printf(str);
   808e2:	a801      	add	r0, sp, #4
   808e4:	4c17      	ldr	r4, [pc, #92]	; (80944 <rotate+0x24c>)
   808e6:	47a0      	blx	r4
		sprintf(str,"\ncount_left = %d", count_left);
   808e8:	a801      	add	r0, sp, #4
   808ea:	4925      	ldr	r1, [pc, #148]	; (80980 <rotate+0x288>)
   808ec:	00ba      	lsls	r2, r7, #2
   808ee:	47a8      	blx	r5
		printf(str);
   808f0:	a801      	add	r0, sp, #4
   808f2:	47a0      	blx	r4
		updateDirection(d);
   808f4:	4640      	mov	r0, r8
   808f6:	4b1f      	ldr	r3, [pc, #124]	; (80974 <rotate+0x27c>)
   808f8:	4798      	blx	r3
		//direction = (d + 360 - direction) % 360;
		moveForward(1500,1500);	
   808fa:	f240 50dc 	movw	r0, #1500	; 0x5dc
   808fe:	4601      	mov	r1, r0
   80900:	4b19      	ldr	r3, [pc, #100]	; (80968 <rotate+0x270>)
   80902:	4798      	blx	r3
   80904:	e004      	b.n	80910 <rotate+0x218>
	}
	
	else{
		moveForward(1500,1500);
   80906:	f240 50dc 	movw	r0, #1500	; 0x5dc
   8090a:	4601      	mov	r1, r0
   8090c:	4b16      	ldr	r3, [pc, #88]	; (80968 <rotate+0x270>)
   8090e:	4798      	blx	r3
	}
	
	l_count = 0;
   80910:	2300      	movs	r3, #0
   80912:	4a19      	ldr	r2, [pc, #100]	; (80978 <rotate+0x280>)
   80914:	6013      	str	r3, [r2, #0]
	r_count = 0;
   80916:	4a0e      	ldr	r2, [pc, #56]	; (80950 <rotate+0x258>)
   80918:	6013      	str	r3, [r2, #0]
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   8091a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   8091e:	4b0b      	ldr	r3, [pc, #44]	; (8094c <rotate+0x254>)
   80920:	631a      	str	r2, [r3, #48]	; 0x30
   80922:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
   80926:	f503 7300 	add.w	r3, r3, #512	; 0x200
   8092a:	631a      	str	r2, [r3, #48]	; 0x30
// 	sprintf(str,"\nVinkel: %d",d);
// 	printf (str);
// 	sprintf(str,"\nTicks: %f",ticks);
// 	printf (str);
	
}
   8092c:	b006      	add	sp, #24
   8092e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   80932:	bf00      	nop
   80934:	20070a94 	.word	0x20070a94
   80938:	b60b60b7 	.word	0xb60b60b7
   8093c:	0008785c 	.word	0x0008785c
   80940:	00081ea9 	.word	0x00081ea9
   80944:	00081cdd 	.word	0x00081cdd
   80948:	0008786c 	.word	0x0008786c
   8094c:	400e0e00 	.word	0x400e0e00
   80950:	20070a98 	.word	0x20070a98
   80954:	0008163d 	.word	0x0008163d
   80958:	3fd00000 	.word	0x3fd00000
   8095c:	00081709 	.word	0x00081709
   80960:	00081bed 	.word	0x00081bed
   80964:	400e1400 	.word	0x400e1400
   80968:	00080611 	.word	0x00080611
   8096c:	00087880 	.word	0x00087880
   80970:	00087890 	.word	0x00087890
   80974:	000806c9 	.word	0x000806c9
   80978:	20070a90 	.word	0x20070a90
   8097c:	000878a4 	.word	0x000878a4
   80980:	000878b4 	.word	0x000878b4
   80984:	400e1200 	.word	0x400e1200

00080988 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   80988:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   8098a:	480e      	ldr	r0, [pc, #56]	; (809c4 <sysclk_init+0x3c>)
   8098c:	4b0e      	ldr	r3, [pc, #56]	; (809c8 <sysclk_init+0x40>)
   8098e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   80990:	2000      	movs	r0, #0
   80992:	213e      	movs	r1, #62	; 0x3e
   80994:	4b0d      	ldr	r3, [pc, #52]	; (809cc <sysclk_init+0x44>)
   80996:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   80998:	4c0d      	ldr	r4, [pc, #52]	; (809d0 <sysclk_init+0x48>)
   8099a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   8099c:	2800      	cmp	r0, #0
   8099e:	d0fc      	beq.n	8099a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   809a0:	4b0c      	ldr	r3, [pc, #48]	; (809d4 <sysclk_init+0x4c>)
   809a2:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   809a4:	4a0c      	ldr	r2, [pc, #48]	; (809d8 <sysclk_init+0x50>)
   809a6:	4b0d      	ldr	r3, [pc, #52]	; (809dc <sysclk_init+0x54>)
   809a8:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   809aa:	4c0d      	ldr	r4, [pc, #52]	; (809e0 <sysclk_init+0x58>)
   809ac:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   809ae:	2800      	cmp	r0, #0
   809b0:	d0fc      	beq.n	809ac <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   809b2:	2010      	movs	r0, #16
   809b4:	4b0b      	ldr	r3, [pc, #44]	; (809e4 <sysclk_init+0x5c>)
   809b6:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   809b8:	4b0b      	ldr	r3, [pc, #44]	; (809e8 <sysclk_init+0x60>)
   809ba:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   809bc:	4801      	ldr	r0, [pc, #4]	; (809c4 <sysclk_init+0x3c>)
   809be:	4b02      	ldr	r3, [pc, #8]	; (809c8 <sysclk_init+0x40>)
   809c0:	4798      	blx	r3
   809c2:	bd10      	pop	{r4, pc}
   809c4:	0501bd00 	.word	0x0501bd00
   809c8:	200700a5 	.word	0x200700a5
   809cc:	00080d99 	.word	0x00080d99
   809d0:	00080ded 	.word	0x00080ded
   809d4:	00080dfd 	.word	0x00080dfd
   809d8:	200d3f01 	.word	0x200d3f01
   809dc:	400e0600 	.word	0x400e0600
   809e0:	00080e0d 	.word	0x00080e0d
   809e4:	00080d35 	.word	0x00080d35
   809e8:	00080f29 	.word	0x00080f29

000809ec <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   809ec:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   809ee:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   809f2:	4b18      	ldr	r3, [pc, #96]	; (80a54 <board_init+0x68>)
   809f4:	605a      	str	r2, [r3, #4]
   809f6:	200b      	movs	r0, #11
   809f8:	4c17      	ldr	r4, [pc, #92]	; (80a58 <board_init+0x6c>)
   809fa:	47a0      	blx	r4
   809fc:	200c      	movs	r0, #12
   809fe:	47a0      	blx	r4
   80a00:	200d      	movs	r0, #13
   80a02:	47a0      	blx	r4
   80a04:	200e      	movs	r0, #14
   80a06:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   80a08:	203b      	movs	r0, #59	; 0x3b
   80a0a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80a0e:	4c13      	ldr	r4, [pc, #76]	; (80a5c <board_init+0x70>)
   80a10:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   80a12:	2055      	movs	r0, #85	; 0x55
   80a14:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80a18:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   80a1a:	2056      	movs	r0, #86	; 0x56
   80a1c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80a20:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   80a22:	2068      	movs	r0, #104	; 0x68
   80a24:	490e      	ldr	r1, [pc, #56]	; (80a60 <board_init+0x74>)
   80a26:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   80a28:	205c      	movs	r0, #92	; 0x5c
   80a2a:	490e      	ldr	r1, [pc, #56]	; (80a64 <board_init+0x78>)
   80a2c:	47a0      	blx	r4
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
   80a2e:	480e      	ldr	r0, [pc, #56]	; (80a68 <board_init+0x7c>)
   80a30:	f44f 5340 	mov.w	r3, #12288	; 0x3000
   80a34:	6603      	str	r3, [r0, #96]	; 0x60
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
   80a36:	6543      	str	r3, [r0, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
   80a38:	6243      	str	r3, [r0, #36]	; 0x24
#else
		base->PIO_IFSCER = mask;
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
   80a3a:	f8c0 3080 	str.w	r3, [r0, #128]	; 0x80

#if !defined(IOPORT_MODE_MUX_BIT1)
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABSR |= mask;
	} else {
		base->PIO_ABSR &= ~mask;
   80a3e:	6f02      	ldr	r2, [r0, #112]	; 0x70
   80a40:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
   80a44:	6702      	str	r2, [r0, #112]	; 0x70
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   80a46:	6043      	str	r3, [r0, #4]

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	ioport_set_port_mode(IOPORT_PIOA, PIO_PA12A_RXD1 | PIO_PA13A_TXD1, IOPORT_MODE_MUX_A);
	ioport_disable_port(IOPORT_PIOA, PIO_PA12A_RXD1 | PIO_PA13A_TXD1);
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   80a48:	f44f 7140 	mov.w	r1, #768	; 0x300
   80a4c:	4a07      	ldr	r2, [pc, #28]	; (80a6c <board_init+0x80>)
   80a4e:	4b08      	ldr	r3, [pc, #32]	; (80a70 <board_init+0x84>)
   80a50:	4798      	blx	r3
   80a52:	bd10      	pop	{r4, pc}
   80a54:	400e1a50 	.word	0x400e1a50
   80a58:	00080e1d 	.word	0x00080e1d
   80a5c:	00080b19 	.word	0x00080b19
   80a60:	28000079 	.word	0x28000079
   80a64:	28000001 	.word	0x28000001
   80a68:	400e0e00 	.word	0x400e0e00
   80a6c:	08000001 	.word	0x08000001
   80a70:	00080bed 	.word	0x00080bed

00080a74 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   80a74:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   80a76:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   80a7a:	d016      	beq.n	80aaa <pio_set_peripheral+0x36>
   80a7c:	d804      	bhi.n	80a88 <pio_set_peripheral+0x14>
   80a7e:	b1c1      	cbz	r1, 80ab2 <pio_set_peripheral+0x3e>
   80a80:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   80a84:	d00a      	beq.n	80a9c <pio_set_peripheral+0x28>
   80a86:	e013      	b.n	80ab0 <pio_set_peripheral+0x3c>
   80a88:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   80a8c:	d011      	beq.n	80ab2 <pio_set_peripheral+0x3e>
   80a8e:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   80a92:	d00e      	beq.n	80ab2 <pio_set_peripheral+0x3e>
   80a94:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   80a98:	d10a      	bne.n	80ab0 <pio_set_peripheral+0x3c>
   80a9a:	4770      	bx	lr
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   80a9c:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   80a9e:	6f01      	ldr	r1, [r0, #112]	; 0x70
   80aa0:	400b      	ands	r3, r1
   80aa2:	ea23 0302 	bic.w	r3, r3, r2
   80aa6:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   80aa8:	e002      	b.n	80ab0 <pio_set_peripheral+0x3c>

	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABSR;
   80aaa:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   80aac:	4313      	orrs	r3, r2
   80aae:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   80ab0:	6042      	str	r2, [r0, #4]
   80ab2:	4770      	bx	lr

00080ab4 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80ab4:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80ab6:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   80aba:	bf14      	ite	ne
   80abc:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80abe:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   80ac0:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   80ac4:	bf14      	ite	ne
   80ac6:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
   80ac8:	6241      	streq	r1, [r0, #36]	; 0x24
			p_pio->PIO_IFSCER = ul_mask;
		}
	}
#elif (SAM3XA|| SAM3U)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
   80aca:	f012 0f02 	tst.w	r2, #2
   80ace:	d002      	beq.n	80ad6 <pio_set_input+0x22>
		p_pio->PIO_SCIFSR = ul_mask;
   80ad0:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   80ad4:	e004      	b.n	80ae0 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
   80ad6:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   80ada:	bf18      	it	ne
   80adc:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
   80ae0:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   80ae2:	6001      	str	r1, [r0, #0]
   80ae4:	4770      	bx	lr
   80ae6:	bf00      	nop

00080ae8 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
   80ae8:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80aea:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80aec:	9c01      	ldr	r4, [sp, #4]
   80aee:	b10c      	cbz	r4, 80af4 <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
   80af0:	6641      	str	r1, [r0, #100]	; 0x64
   80af2:	e000      	b.n	80af6 <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80af4:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
   80af6:	b10b      	cbz	r3, 80afc <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
   80af8:	6501      	str	r1, [r0, #80]	; 0x50
   80afa:	e000      	b.n	80afe <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
   80afc:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
   80afe:	b10a      	cbz	r2, 80b04 <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
   80b00:	6301      	str	r1, [r0, #48]	; 0x30
   80b02:	e000      	b.n	80b06 <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
   80b04:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
   80b06:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   80b08:	6001      	str	r1, [r0, #0]
}
   80b0a:	f85d 4b04 	ldr.w	r4, [sp], #4
   80b0e:	4770      	bx	lr

00080b10 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   80b10:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   80b12:	4770      	bx	lr

00080b14 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   80b14:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   80b16:	4770      	bx	lr

00080b18 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   80b18:	b570      	push	{r4, r5, r6, lr}
   80b1a:	b082      	sub	sp, #8
   80b1c:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80b1e:	0944      	lsrs	r4, r0, #5
   80b20:	f504 1400 	add.w	r4, r4, #2097152	; 0x200000
   80b24:	f204 7407 	addw	r4, r4, #1799	; 0x707
   80b28:	0266      	lsls	r6, r4, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80b2a:	f001 44f0 	and.w	r4, r1, #2013265920	; 0x78000000
   80b2e:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80b32:	d030      	beq.n	80b96 <pio_configure_pin+0x7e>
   80b34:	d806      	bhi.n	80b44 <pio_configure_pin+0x2c>
   80b36:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80b3a:	d00a      	beq.n	80b52 <pio_configure_pin+0x3a>
   80b3c:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80b40:	d018      	beq.n	80b74 <pio_configure_pin+0x5c>
   80b42:	e049      	b.n	80bd8 <pio_configure_pin+0xc0>
   80b44:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80b48:	d030      	beq.n	80bac <pio_configure_pin+0x94>
   80b4a:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   80b4e:	d02d      	beq.n	80bac <pio_configure_pin+0x94>
   80b50:	e042      	b.n	80bd8 <pio_configure_pin+0xc0>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   80b52:	f000 001f 	and.w	r0, r0, #31
   80b56:	2401      	movs	r4, #1
   80b58:	4084      	lsls	r4, r0
   80b5a:	4630      	mov	r0, r6
   80b5c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80b60:	4622      	mov	r2, r4
   80b62:	4b1f      	ldr	r3, [pc, #124]	; (80be0 <pio_configure_pin+0xc8>)
   80b64:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80b66:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80b6a:	bf14      	ite	ne
   80b6c:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80b6e:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80b70:	2001      	movs	r0, #1
   80b72:	e032      	b.n	80bda <pio_configure_pin+0xc2>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   80b74:	f000 001f 	and.w	r0, r0, #31
   80b78:	2401      	movs	r4, #1
   80b7a:	4084      	lsls	r4, r0
   80b7c:	4630      	mov	r0, r6
   80b7e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80b82:	4622      	mov	r2, r4
   80b84:	4b16      	ldr	r3, [pc, #88]	; (80be0 <pio_configure_pin+0xc8>)
   80b86:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80b88:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80b8c:	bf14      	ite	ne
   80b8e:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80b90:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80b92:	2001      	movs	r0, #1
   80b94:	e021      	b.n	80bda <pio_configure_pin+0xc2>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   80b96:	f000 011f 	and.w	r1, r0, #31
   80b9a:	2401      	movs	r4, #1
   80b9c:	4630      	mov	r0, r6
   80b9e:	fa04 f101 	lsl.w	r1, r4, r1
   80ba2:	462a      	mov	r2, r5
   80ba4:	4b0f      	ldr	r3, [pc, #60]	; (80be4 <pio_configure_pin+0xcc>)
   80ba6:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80ba8:	4620      	mov	r0, r4
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
   80baa:	e016      	b.n	80bda <pio_configure_pin+0xc2>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80bac:	f000 011f 	and.w	r1, r0, #31
   80bb0:	2401      	movs	r4, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80bb2:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80bb6:	ea05 0304 	and.w	r3, r5, r4
   80bba:	9300      	str	r3, [sp, #0]
   80bbc:	4630      	mov	r0, r6
   80bbe:	fa04 f101 	lsl.w	r1, r4, r1
   80bc2:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80bc6:	bf14      	ite	ne
   80bc8:	2200      	movne	r2, #0
   80bca:	2201      	moveq	r2, #1
   80bcc:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80bd0:	4d05      	ldr	r5, [pc, #20]	; (80be8 <pio_configure_pin+0xd0>)
   80bd2:	47a8      	blx	r5

	default:
		return 0;
	}

	return 1;
   80bd4:	4620      	mov	r0, r4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80bd6:	e000      	b.n	80bda <pio_configure_pin+0xc2>

	default:
		return 0;
   80bd8:	2000      	movs	r0, #0
	}

	return 1;
}
   80bda:	b002      	add	sp, #8
   80bdc:	bd70      	pop	{r4, r5, r6, pc}
   80bde:	bf00      	nop
   80be0:	00080a75 	.word	0x00080a75
   80be4:	00080ab5 	.word	0x00080ab5
   80be8:	00080ae9 	.word	0x00080ae9

00080bec <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
   80bec:	b5f0      	push	{r4, r5, r6, r7, lr}
   80bee:	b083      	sub	sp, #12
   80bf0:	4607      	mov	r7, r0
   80bf2:	460e      	mov	r6, r1
   80bf4:	4615      	mov	r5, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80bf6:	f002 44f0 	and.w	r4, r2, #2013265920	; 0x78000000
   80bfa:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80bfe:	d026      	beq.n	80c4e <pio_configure_pin_group+0x62>
   80c00:	d806      	bhi.n	80c10 <pio_configure_pin_group+0x24>
   80c02:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80c06:	d00a      	beq.n	80c1e <pio_configure_pin_group+0x32>
   80c08:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80c0c:	d013      	beq.n	80c36 <pio_configure_pin_group+0x4a>
   80c0e:	e034      	b.n	80c7a <pio_configure_pin_group+0x8e>
   80c10:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80c14:	d01f      	beq.n	80c56 <pio_configure_pin_group+0x6a>
   80c16:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   80c1a:	d01c      	beq.n	80c56 <pio_configure_pin_group+0x6a>
   80c1c:	e02d      	b.n	80c7a <pio_configure_pin_group+0x8e>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   80c1e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80c22:	4632      	mov	r2, r6
   80c24:	4b16      	ldr	r3, [pc, #88]	; (80c80 <pio_configure_pin_group+0x94>)
   80c26:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80c28:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80c2c:	bf14      	ite	ne
   80c2e:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80c30:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80c32:	2001      	movs	r0, #1
   80c34:	e022      	b.n	80c7c <pio_configure_pin_group+0x90>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   80c36:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80c3a:	4632      	mov	r2, r6
   80c3c:	4b10      	ldr	r3, [pc, #64]	; (80c80 <pio_configure_pin_group+0x94>)
   80c3e:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80c40:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80c44:	bf14      	ite	ne
   80c46:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80c48:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80c4a:	2001      	movs	r0, #1
   80c4c:	e016      	b.n	80c7c <pio_configure_pin_group+0x90>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
   80c4e:	4b0d      	ldr	r3, [pc, #52]	; (80c84 <pio_configure_pin_group+0x98>)
   80c50:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80c52:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
   80c54:	e012      	b.n	80c7c <pio_configure_pin_group+0x90>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80c56:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
   80c5a:	f005 0301 	and.w	r3, r5, #1
   80c5e:	9300      	str	r3, [sp, #0]
   80c60:	4638      	mov	r0, r7
   80c62:	4631      	mov	r1, r6
   80c64:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80c68:	bf14      	ite	ne
   80c6a:	2200      	movne	r2, #0
   80c6c:	2201      	moveq	r2, #1
   80c6e:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80c72:	4c05      	ldr	r4, [pc, #20]	; (80c88 <pio_configure_pin_group+0x9c>)
   80c74:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
   80c76:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80c78:	e000      	b.n	80c7c <pio_configure_pin_group+0x90>

	default:
		return 0;
   80c7a:	2000      	movs	r0, #0
	}

	return 1;
}
   80c7c:	b003      	add	sp, #12
   80c7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80c80:	00080a75 	.word	0x00080a75
   80c84:	00080ab5 	.word	0x00080ab5
   80c88:	00080ae9 	.word	0x00080ae9

00080c8c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   80c8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80c90:	4604      	mov	r4, r0
   80c92:	460e      	mov	r6, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   80c94:	4b10      	ldr	r3, [pc, #64]	; (80cd8 <pio_handler_process+0x4c>)
   80c96:	4798      	blx	r3
   80c98:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80c9a:	4620      	mov	r0, r4
   80c9c:	4b0f      	ldr	r3, [pc, #60]	; (80cdc <pio_handler_process+0x50>)
   80c9e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   80ca0:	4005      	ands	r5, r0
   80ca2:	d017      	beq.n	80cd4 <pio_handler_process+0x48>
   80ca4:	4f0e      	ldr	r7, [pc, #56]	; (80ce0 <pio_handler_process+0x54>)
   80ca6:	f107 040c 	add.w	r4, r7, #12
   80caa:	376c      	adds	r7, #108	; 0x6c
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
   80cac:	f854 3c0c 	ldr.w	r3, [r4, #-12]
   80cb0:	42b3      	cmp	r3, r6
   80cb2:	d10a      	bne.n	80cca <pio_handler_process+0x3e>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80cb4:	f854 1c08 	ldr.w	r1, [r4, #-8]
   80cb8:	4229      	tst	r1, r5
   80cba:	d006      	beq.n	80cca <pio_handler_process+0x3e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80cbc:	6823      	ldr	r3, [r4, #0]
   80cbe:	4630      	mov	r0, r6
   80cc0:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
   80cc2:	f854 3c08 	ldr.w	r3, [r4, #-8]
   80cc6:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   80cca:	42bc      	cmp	r4, r7
   80ccc:	d002      	beq.n	80cd4 <pio_handler_process+0x48>
   80cce:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
   80cd0:	2d00      	cmp	r5, #0
   80cd2:	d1eb      	bne.n	80cac <pio_handler_process+0x20>
   80cd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80cd8:	00080b11 	.word	0x00080b11
   80cdc:	00080b15 	.word	0x00080b15
   80ce0:	20070a9c 	.word	0x20070a9c

00080ce4 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80ce4:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   80ce6:	4802      	ldr	r0, [pc, #8]	; (80cf0 <PIOA_Handler+0xc>)
   80ce8:	210b      	movs	r1, #11
   80cea:	4b02      	ldr	r3, [pc, #8]	; (80cf4 <PIOA_Handler+0x10>)
   80cec:	4798      	blx	r3
   80cee:	bd08      	pop	{r3, pc}
   80cf0:	400e0e00 	.word	0x400e0e00
   80cf4:	00080c8d 	.word	0x00080c8d

00080cf8 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80cf8:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80cfa:	4802      	ldr	r0, [pc, #8]	; (80d04 <PIOB_Handler+0xc>)
   80cfc:	210c      	movs	r1, #12
   80cfe:	4b02      	ldr	r3, [pc, #8]	; (80d08 <PIOB_Handler+0x10>)
   80d00:	4798      	blx	r3
   80d02:	bd08      	pop	{r3, pc}
   80d04:	400e1000 	.word	0x400e1000
   80d08:	00080c8d 	.word	0x00080c8d

00080d0c <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80d0c:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   80d0e:	4802      	ldr	r0, [pc, #8]	; (80d18 <PIOC_Handler+0xc>)
   80d10:	210d      	movs	r1, #13
   80d12:	4b02      	ldr	r3, [pc, #8]	; (80d1c <PIOC_Handler+0x10>)
   80d14:	4798      	blx	r3
   80d16:	bd08      	pop	{r3, pc}
   80d18:	400e1200 	.word	0x400e1200
   80d1c:	00080c8d 	.word	0x00080c8d

00080d20 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   80d20:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   80d22:	4802      	ldr	r0, [pc, #8]	; (80d2c <PIOD_Handler+0xc>)
   80d24:	210e      	movs	r1, #14
   80d26:	4b02      	ldr	r3, [pc, #8]	; (80d30 <PIOD_Handler+0x10>)
   80d28:	4798      	blx	r3
   80d2a:	bd08      	pop	{r3, pc}
   80d2c:	400e1400 	.word	0x400e1400
   80d30:	00080c8d 	.word	0x00080c8d

00080d34 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   80d34:	4b17      	ldr	r3, [pc, #92]	; (80d94 <pmc_switch_mck_to_pllack+0x60>)
   80d36:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80d38:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   80d3c:	4310      	orrs	r0, r2
   80d3e:	6318      	str	r0, [r3, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80d40:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80d42:	f013 0f08 	tst.w	r3, #8
   80d46:	d109      	bne.n	80d5c <pmc_switch_mck_to_pllack+0x28>
   80d48:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80d4c:	4911      	ldr	r1, [pc, #68]	; (80d94 <pmc_switch_mck_to_pllack+0x60>)
   80d4e:	e001      	b.n	80d54 <pmc_switch_mck_to_pllack+0x20>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80d50:	3b01      	subs	r3, #1
   80d52:	d019      	beq.n	80d88 <pmc_switch_mck_to_pllack+0x54>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80d54:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80d56:	f012 0f08 	tst.w	r2, #8
   80d5a:	d0f9      	beq.n	80d50 <pmc_switch_mck_to_pllack+0x1c>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   80d5c:	4b0d      	ldr	r3, [pc, #52]	; (80d94 <pmc_switch_mck_to_pllack+0x60>)
   80d5e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80d60:	f022 0203 	bic.w	r2, r2, #3
   80d64:	f042 0202 	orr.w	r2, r2, #2
   80d68:	631a      	str	r2, [r3, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80d6a:	6e98      	ldr	r0, [r3, #104]	; 0x68
   80d6c:	f010 0008 	ands.w	r0, r0, #8
   80d70:	d10c      	bne.n	80d8c <pmc_switch_mck_to_pllack+0x58>
   80d72:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80d76:	4907      	ldr	r1, [pc, #28]	; (80d94 <pmc_switch_mck_to_pllack+0x60>)
   80d78:	e001      	b.n	80d7e <pmc_switch_mck_to_pllack+0x4a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80d7a:	3b01      	subs	r3, #1
   80d7c:	d008      	beq.n	80d90 <pmc_switch_mck_to_pllack+0x5c>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80d7e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80d80:	f012 0f08 	tst.w	r2, #8
   80d84:	d0f9      	beq.n	80d7a <pmc_switch_mck_to_pllack+0x46>
   80d86:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80d88:	2001      	movs	r0, #1
   80d8a:	4770      	bx	lr
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
   80d8c:	2000      	movs	r0, #0
   80d8e:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80d90:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   80d92:	4770      	bx	lr
   80d94:	400e0600 	.word	0x400e0600

00080d98 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   80d98:	b138      	cbz	r0, 80daa <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80d9a:	4911      	ldr	r1, [pc, #68]	; (80de0 <pmc_switch_mainck_to_xtal+0x48>)
   80d9c:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   80d9e:	4a11      	ldr	r2, [pc, #68]	; (80de4 <pmc_switch_mainck_to_xtal+0x4c>)
   80da0:	401a      	ands	r2, r3
   80da2:	4b11      	ldr	r3, [pc, #68]	; (80de8 <pmc_switch_mainck_to_xtal+0x50>)
   80da4:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80da6:	620b      	str	r3, [r1, #32]
   80da8:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80daa:	4a0d      	ldr	r2, [pc, #52]	; (80de0 <pmc_switch_mainck_to_xtal+0x48>)
   80dac:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80dae:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   80db2:	f023 0303 	bic.w	r3, r3, #3
   80db6:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   80dba:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   80dbe:	0209      	lsls	r1, r1, #8
   80dc0:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80dc2:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80dc4:	6213      	str	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   80dc6:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80dc8:	f013 0f01 	tst.w	r3, #1
   80dcc:	d0fb      	beq.n	80dc6 <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   80dce:	4a04      	ldr	r2, [pc, #16]	; (80de0 <pmc_switch_mainck_to_xtal+0x48>)
   80dd0:	6a13      	ldr	r3, [r2, #32]
   80dd2:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   80dd6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   80dda:	6213      	str	r3, [r2, #32]
   80ddc:	4770      	bx	lr
   80dde:	bf00      	nop
   80de0:	400e0600 	.word	0x400e0600
   80de4:	fec8fffc 	.word	0xfec8fffc
   80de8:	01370002 	.word	0x01370002

00080dec <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   80dec:	4b02      	ldr	r3, [pc, #8]	; (80df8 <pmc_osc_is_ready_mainck+0xc>)
   80dee:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80df0:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80df4:	4770      	bx	lr
   80df6:	bf00      	nop
   80df8:	400e0600 	.word	0x400e0600

00080dfc <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   80dfc:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   80e00:	4b01      	ldr	r3, [pc, #4]	; (80e08 <pmc_disable_pllack+0xc>)
   80e02:	629a      	str	r2, [r3, #40]	; 0x28
   80e04:	4770      	bx	lr
   80e06:	bf00      	nop
   80e08:	400e0600 	.word	0x400e0600

00080e0c <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   80e0c:	4b02      	ldr	r3, [pc, #8]	; (80e18 <pmc_is_locked_pllack+0xc>)
   80e0e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80e10:	f000 0002 	and.w	r0, r0, #2
   80e14:	4770      	bx	lr
   80e16:	bf00      	nop
   80e18:	400e0600 	.word	0x400e0600

00080e1c <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   80e1c:	282c      	cmp	r0, #44	; 0x2c
   80e1e:	d820      	bhi.n	80e62 <pmc_enable_periph_clk+0x46>
		return 1;
	}

	if (ul_id < 32) {
   80e20:	281f      	cmp	r0, #31
   80e22:	d80d      	bhi.n	80e40 <pmc_enable_periph_clk+0x24>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   80e24:	4b12      	ldr	r3, [pc, #72]	; (80e70 <pmc_enable_periph_clk+0x54>)
   80e26:	699a      	ldr	r2, [r3, #24]
   80e28:	2301      	movs	r3, #1
   80e2a:	4083      	lsls	r3, r0
   80e2c:	401a      	ands	r2, r3
   80e2e:	4293      	cmp	r3, r2
   80e30:	d019      	beq.n	80e66 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER0 = 1 << ul_id;
   80e32:	2301      	movs	r3, #1
   80e34:	fa03 f000 	lsl.w	r0, r3, r0
   80e38:	4b0d      	ldr	r3, [pc, #52]	; (80e70 <pmc_enable_periph_clk+0x54>)
   80e3a:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80e3c:	2000      	movs	r0, #0
   80e3e:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80e40:	4b0b      	ldr	r3, [pc, #44]	; (80e70 <pmc_enable_periph_clk+0x54>)
   80e42:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
   80e46:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80e48:	2301      	movs	r3, #1
   80e4a:	4083      	lsls	r3, r0
   80e4c:	401a      	ands	r2, r3
   80e4e:	4293      	cmp	r3, r2
   80e50:	d00b      	beq.n	80e6a <pmc_enable_periph_clk+0x4e>
			PMC->PMC_PCER1 = 1 << ul_id;
   80e52:	2301      	movs	r3, #1
   80e54:	fa03 f000 	lsl.w	r0, r3, r0
   80e58:	4b05      	ldr	r3, [pc, #20]	; (80e70 <pmc_enable_periph_clk+0x54>)
   80e5a:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
   80e5e:	2000      	movs	r0, #0
   80e60:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
   80e62:	2001      	movs	r0, #1
   80e64:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80e66:	2000      	movs	r0, #0
   80e68:	4770      	bx	lr
   80e6a:	2000      	movs	r0, #0
}
   80e6c:	4770      	bx	lr
   80e6e:	bf00      	nop
   80e70:	400e0600 	.word	0x400e0600

00080e74 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80e74:	e7fe      	b.n	80e74 <Dummy_Handler>
   80e76:	bf00      	nop

00080e78 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80e78:	b510      	push	{r4, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   80e7a:	4b1e      	ldr	r3, [pc, #120]	; (80ef4 <Reset_Handler+0x7c>)
   80e7c:	4a1e      	ldr	r2, [pc, #120]	; (80ef8 <Reset_Handler+0x80>)
   80e7e:	429a      	cmp	r2, r3
   80e80:	d003      	beq.n	80e8a <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
   80e82:	4b1e      	ldr	r3, [pc, #120]	; (80efc <Reset_Handler+0x84>)
   80e84:	4a1b      	ldr	r2, [pc, #108]	; (80ef4 <Reset_Handler+0x7c>)
   80e86:	429a      	cmp	r2, r3
   80e88:	d304      	bcc.n	80e94 <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80e8a:	4b1d      	ldr	r3, [pc, #116]	; (80f00 <Reset_Handler+0x88>)
   80e8c:	4a1d      	ldr	r2, [pc, #116]	; (80f04 <Reset_Handler+0x8c>)
   80e8e:	429a      	cmp	r2, r3
   80e90:	d30f      	bcc.n	80eb2 <Reset_Handler+0x3a>
   80e92:	e01a      	b.n	80eca <Reset_Handler+0x52>
   80e94:	4b1c      	ldr	r3, [pc, #112]	; (80f08 <Reset_Handler+0x90>)
   80e96:	4c1d      	ldr	r4, [pc, #116]	; (80f0c <Reset_Handler+0x94>)
   80e98:	1ae4      	subs	r4, r4, r3
   80e9a:	f024 0403 	bic.w	r4, r4, #3
   80e9e:	3404      	adds	r4, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80ea0:	2300      	movs	r3, #0
			*pDest++ = *pSrc++;
   80ea2:	4814      	ldr	r0, [pc, #80]	; (80ef4 <Reset_Handler+0x7c>)
   80ea4:	4914      	ldr	r1, [pc, #80]	; (80ef8 <Reset_Handler+0x80>)
   80ea6:	585a      	ldr	r2, [r3, r1]
   80ea8:	501a      	str	r2, [r3, r0]
   80eaa:	3304      	adds	r3, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80eac:	42a3      	cmp	r3, r4
   80eae:	d1fa      	bne.n	80ea6 <Reset_Handler+0x2e>
   80eb0:	e7eb      	b.n	80e8a <Reset_Handler+0x12>
   80eb2:	4b17      	ldr	r3, [pc, #92]	; (80f10 <Reset_Handler+0x98>)
   80eb4:	4917      	ldr	r1, [pc, #92]	; (80f14 <Reset_Handler+0x9c>)
   80eb6:	1ac9      	subs	r1, r1, r3
   80eb8:	f021 0103 	bic.w	r1, r1, #3
   80ebc:	1d1a      	adds	r2, r3, #4
   80ebe:	4411      	add	r1, r2
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
		*pDest++ = 0;
   80ec0:	2200      	movs	r2, #0
   80ec2:	f843 2f04 	str.w	r2, [r3, #4]!
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80ec6:	428b      	cmp	r3, r1
   80ec8:	d1fb      	bne.n	80ec2 <Reset_Handler+0x4a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80eca:	4a13      	ldr	r2, [pc, #76]	; (80f18 <Reset_Handler+0xa0>)
   80ecc:	f022 4360 	bic.w	r3, r2, #3758096384	; 0xe0000000
   80ed0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   80ed4:	4911      	ldr	r1, [pc, #68]	; (80f1c <Reset_Handler+0xa4>)
   80ed6:	608b      	str	r3, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80ed8:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
   80edc:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
   80ee0:	d203      	bcs.n	80eea <Reset_Handler+0x72>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80ee2:	688a      	ldr	r2, [r1, #8]
   80ee4:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
   80ee8:	608a      	str	r2, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   80eea:	4b0d      	ldr	r3, [pc, #52]	; (80f20 <Reset_Handler+0xa8>)
   80eec:	4798      	blx	r3

	/* Branch to main function */
	main();
   80eee:	4b0d      	ldr	r3, [pc, #52]	; (80f24 <Reset_Handler+0xac>)
   80ef0:	4798      	blx	r3
   80ef2:	e7fe      	b.n	80ef2 <Reset_Handler+0x7a>
   80ef4:	20070000 	.word	0x20070000
   80ef8:	00087b10 	.word	0x00087b10
   80efc:	200709d4 	.word	0x200709d4
   80f00:	20070b58 	.word	0x20070b58
   80f04:	200709d4 	.word	0x200709d4
   80f08:	20070004 	.word	0x20070004
   80f0c:	200709d7 	.word	0x200709d7
   80f10:	200709d0 	.word	0x200709d0
   80f14:	20070b53 	.word	0x20070b53
   80f18:	00080000 	.word	0x00080000
   80f1c:	e000ed00 	.word	0xe000ed00
   80f20:	00081c8d 	.word	0x00081c8d
   80f24:	000811e5 	.word	0x000811e5

00080f28 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   80f28:	4b3e      	ldr	r3, [pc, #248]	; (81024 <SystemCoreClockUpdate+0xfc>)
   80f2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80f2c:	f003 0303 	and.w	r3, r3, #3
   80f30:	2b03      	cmp	r3, #3
   80f32:	d85f      	bhi.n	80ff4 <SystemCoreClockUpdate+0xcc>
   80f34:	e8df f003 	tbb	[pc, r3]
   80f38:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   80f3c:	4b3a      	ldr	r3, [pc, #232]	; (81028 <SystemCoreClockUpdate+0x100>)
   80f3e:	695b      	ldr	r3, [r3, #20]
   80f40:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   80f44:	bf14      	ite	ne
   80f46:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   80f4a:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   80f4e:	4b37      	ldr	r3, [pc, #220]	; (8102c <SystemCoreClockUpdate+0x104>)
   80f50:	601a      	str	r2, [r3, #0]
   80f52:	e04f      	b.n	80ff4 <SystemCoreClockUpdate+0xcc>
		}
		break;
	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80f54:	4b33      	ldr	r3, [pc, #204]	; (81024 <SystemCoreClockUpdate+0xfc>)
   80f56:	6a1b      	ldr	r3, [r3, #32]
   80f58:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80f5c:	d003      	beq.n	80f66 <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80f5e:	4a34      	ldr	r2, [pc, #208]	; (81030 <SystemCoreClockUpdate+0x108>)
   80f60:	4b32      	ldr	r3, [pc, #200]	; (8102c <SystemCoreClockUpdate+0x104>)
   80f62:	601a      	str	r2, [r3, #0]
   80f64:	e046      	b.n	80ff4 <SystemCoreClockUpdate+0xcc>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80f66:	4a33      	ldr	r2, [pc, #204]	; (81034 <SystemCoreClockUpdate+0x10c>)
   80f68:	4b30      	ldr	r3, [pc, #192]	; (8102c <SystemCoreClockUpdate+0x104>)
   80f6a:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80f6c:	4b2d      	ldr	r3, [pc, #180]	; (81024 <SystemCoreClockUpdate+0xfc>)
   80f6e:	6a1b      	ldr	r3, [r3, #32]
   80f70:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80f74:	2b10      	cmp	r3, #16
   80f76:	d002      	beq.n	80f7e <SystemCoreClockUpdate+0x56>
   80f78:	2b20      	cmp	r3, #32
   80f7a:	d004      	beq.n	80f86 <SystemCoreClockUpdate+0x5e>
   80f7c:	e03a      	b.n	80ff4 <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80f7e:	4a2e      	ldr	r2, [pc, #184]	; (81038 <SystemCoreClockUpdate+0x110>)
   80f80:	4b2a      	ldr	r3, [pc, #168]	; (8102c <SystemCoreClockUpdate+0x104>)
   80f82:	601a      	str	r2, [r3, #0]
				break;
   80f84:	e036      	b.n	80ff4 <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80f86:	4a2a      	ldr	r2, [pc, #168]	; (81030 <SystemCoreClockUpdate+0x108>)
   80f88:	4b28      	ldr	r3, [pc, #160]	; (8102c <SystemCoreClockUpdate+0x104>)
   80f8a:	601a      	str	r2, [r3, #0]
				break;
   80f8c:	e032      	b.n	80ff4 <SystemCoreClockUpdate+0xcc>
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80f8e:	4b25      	ldr	r3, [pc, #148]	; (81024 <SystemCoreClockUpdate+0xfc>)
   80f90:	6a1b      	ldr	r3, [r3, #32]
   80f92:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80f96:	d003      	beq.n	80fa0 <SystemCoreClockUpdate+0x78>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80f98:	4a25      	ldr	r2, [pc, #148]	; (81030 <SystemCoreClockUpdate+0x108>)
   80f9a:	4b24      	ldr	r3, [pc, #144]	; (8102c <SystemCoreClockUpdate+0x104>)
   80f9c:	601a      	str	r2, [r3, #0]
   80f9e:	e012      	b.n	80fc6 <SystemCoreClockUpdate+0x9e>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80fa0:	4a24      	ldr	r2, [pc, #144]	; (81034 <SystemCoreClockUpdate+0x10c>)
   80fa2:	4b22      	ldr	r3, [pc, #136]	; (8102c <SystemCoreClockUpdate+0x104>)
   80fa4:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80fa6:	4b1f      	ldr	r3, [pc, #124]	; (81024 <SystemCoreClockUpdate+0xfc>)
   80fa8:	6a1b      	ldr	r3, [r3, #32]
   80faa:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80fae:	2b10      	cmp	r3, #16
   80fb0:	d002      	beq.n	80fb8 <SystemCoreClockUpdate+0x90>
   80fb2:	2b20      	cmp	r3, #32
   80fb4:	d004      	beq.n	80fc0 <SystemCoreClockUpdate+0x98>
   80fb6:	e006      	b.n	80fc6 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80fb8:	4a1f      	ldr	r2, [pc, #124]	; (81038 <SystemCoreClockUpdate+0x110>)
   80fba:	4b1c      	ldr	r3, [pc, #112]	; (8102c <SystemCoreClockUpdate+0x104>)
   80fbc:	601a      	str	r2, [r3, #0]
				break;
   80fbe:	e002      	b.n	80fc6 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80fc0:	4a1b      	ldr	r2, [pc, #108]	; (81030 <SystemCoreClockUpdate+0x108>)
   80fc2:	4b1a      	ldr	r3, [pc, #104]	; (8102c <SystemCoreClockUpdate+0x104>)
   80fc4:	601a      	str	r2, [r3, #0]
				break;
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   80fc6:	4b17      	ldr	r3, [pc, #92]	; (81024 <SystemCoreClockUpdate+0xfc>)
   80fc8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80fca:	f003 0303 	and.w	r3, r3, #3
   80fce:	2b02      	cmp	r3, #2
   80fd0:	d10d      	bne.n	80fee <SystemCoreClockUpdate+0xc6>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80fd2:	4b14      	ldr	r3, [pc, #80]	; (81024 <SystemCoreClockUpdate+0xfc>)
   80fd4:	6a98      	ldr	r0, [r3, #40]	; 0x28
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80fd6:	6a99      	ldr	r1, [r3, #40]	; 0x28
   80fd8:	4b14      	ldr	r3, [pc, #80]	; (8102c <SystemCoreClockUpdate+0x104>)
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80fda:	f3c0 400a 	ubfx	r0, r0, #16, #11
   80fde:	681a      	ldr	r2, [r3, #0]
   80fe0:	fb00 2202 	mla	r2, r0, r2, r2
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80fe4:	b2c9      	uxtb	r1, r1
   80fe6:	fbb2 f2f1 	udiv	r2, r2, r1
   80fea:	601a      	str	r2, [r3, #0]
   80fec:	e002      	b.n	80ff4 <SystemCoreClockUpdate+0xcc>
				                             CKGR_PLLAR_DIVA_Pos));
		} else {
			SystemCoreClock = SYS_UTMIPLL / 2U;
   80fee:	4a13      	ldr	r2, [pc, #76]	; (8103c <SystemCoreClockUpdate+0x114>)
   80ff0:	4b0e      	ldr	r3, [pc, #56]	; (8102c <SystemCoreClockUpdate+0x104>)
   80ff2:	601a      	str	r2, [r3, #0]
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   80ff4:	4b0b      	ldr	r3, [pc, #44]	; (81024 <SystemCoreClockUpdate+0xfc>)
   80ff6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80ff8:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80ffc:	2b70      	cmp	r3, #112	; 0x70
   80ffe:	d107      	bne.n	81010 <SystemCoreClockUpdate+0xe8>
		SystemCoreClock /= 3U;
   81000:	4b0a      	ldr	r3, [pc, #40]	; (8102c <SystemCoreClockUpdate+0x104>)
   81002:	681a      	ldr	r2, [r3, #0]
   81004:	490e      	ldr	r1, [pc, #56]	; (81040 <SystemCoreClockUpdate+0x118>)
   81006:	fba1 0202 	umull	r0, r2, r1, r2
   8100a:	0852      	lsrs	r2, r2, #1
   8100c:	601a      	str	r2, [r3, #0]
   8100e:	4770      	bx	lr
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   81010:	4b04      	ldr	r3, [pc, #16]	; (81024 <SystemCoreClockUpdate+0xfc>)
   81012:	6b19      	ldr	r1, [r3, #48]	; 0x30
   81014:	4b05      	ldr	r3, [pc, #20]	; (8102c <SystemCoreClockUpdate+0x104>)
   81016:	f3c1 1102 	ubfx	r1, r1, #4, #3
   8101a:	681a      	ldr	r2, [r3, #0]
   8101c:	40ca      	lsrs	r2, r1
   8101e:	601a      	str	r2, [r3, #0]
   81020:	4770      	bx	lr
   81022:	bf00      	nop
   81024:	400e0600 	.word	0x400e0600
   81028:	400e1a10 	.word	0x400e1a10
   8102c:	20070130 	.word	0x20070130
   81030:	00b71b00 	.word	0x00b71b00
   81034:	003d0900 	.word	0x003d0900
   81038:	007a1200 	.word	0x007a1200
   8103c:	0e4e1c00 	.word	0x0e4e1c00
   81040:	aaaaaaab 	.word	0xaaaaaaab

00081044 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   81044:	4b09      	ldr	r3, [pc, #36]	; (8106c <_sbrk+0x28>)
   81046:	681b      	ldr	r3, [r3, #0]
   81048:	b913      	cbnz	r3, 81050 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
   8104a:	4a09      	ldr	r2, [pc, #36]	; (81070 <_sbrk+0x2c>)
   8104c:	4b07      	ldr	r3, [pc, #28]	; (8106c <_sbrk+0x28>)
   8104e:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
   81050:	4b06      	ldr	r3, [pc, #24]	; (8106c <_sbrk+0x28>)
   81052:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   81054:	181a      	adds	r2, r3, r0
   81056:	4907      	ldr	r1, [pc, #28]	; (81074 <_sbrk+0x30>)
   81058:	4291      	cmp	r1, r2
   8105a:	db04      	blt.n	81066 <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
   8105c:	4610      	mov	r0, r2
   8105e:	4a03      	ldr	r2, [pc, #12]	; (8106c <_sbrk+0x28>)
   81060:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   81062:	4618      	mov	r0, r3
   81064:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
   81066:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
   8106a:	4770      	bx	lr
   8106c:	20070b0c 	.word	0x20070b0c
   81070:	20072b58 	.word	0x20072b58
   81074:	20087ffc 	.word	0x20087ffc

00081078 <_close>:
}

extern int _close(int file)
{
	return -1;
}
   81078:	f04f 30ff 	mov.w	r0, #4294967295
   8107c:	4770      	bx	lr
   8107e:	bf00      	nop

00081080 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
   81080:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   81084:	604b      	str	r3, [r1, #4]

	return 0;
}
   81086:	2000      	movs	r0, #0
   81088:	4770      	bx	lr
   8108a:	bf00      	nop

0008108c <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
   8108c:	2001      	movs	r0, #1
   8108e:	4770      	bx	lr

00081090 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
   81090:	2000      	movs	r0, #0
   81092:	4770      	bx	lr

00081094 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
   81094:	b5f0      	push	{r4, r5, r6, r7, lr}
   81096:	b083      	sub	sp, #12
   81098:	4604      	mov	r4, r0
   8109a:	460d      	mov	r5, r1
	uint32_t val = 0;
   8109c:	2300      	movs	r3, #0
   8109e:	9301      	str	r3, [sp, #4]

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   810a0:	4b1f      	ldr	r3, [pc, #124]	; (81120 <usart_serial_getchar+0x8c>)
   810a2:	4298      	cmp	r0, r3
   810a4:	d107      	bne.n	810b6 <usart_serial_getchar+0x22>
		while (uart_read((Uart*)p_usart, data));
   810a6:	461f      	mov	r7, r3
   810a8:	4e1e      	ldr	r6, [pc, #120]	; (81124 <usart_serial_getchar+0x90>)
   810aa:	4638      	mov	r0, r7
   810ac:	4629      	mov	r1, r5
   810ae:	47b0      	blx	r6
   810b0:	2800      	cmp	r0, #0
   810b2:	d1fa      	bne.n	810aa <usart_serial_getchar+0x16>
   810b4:	e019      	b.n	810ea <usart_serial_getchar+0x56>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   810b6:	4b1c      	ldr	r3, [pc, #112]	; (81128 <usart_serial_getchar+0x94>)
   810b8:	4298      	cmp	r0, r3
   810ba:	d109      	bne.n	810d0 <usart_serial_getchar+0x3c>
		while (usart_read(p_usart, &val));
   810bc:	461f      	mov	r7, r3
   810be:	4e1b      	ldr	r6, [pc, #108]	; (8112c <usart_serial_getchar+0x98>)
   810c0:	4638      	mov	r0, r7
   810c2:	a901      	add	r1, sp, #4
   810c4:	47b0      	blx	r6
   810c6:	2800      	cmp	r0, #0
   810c8:	d1fa      	bne.n	810c0 <usart_serial_getchar+0x2c>
		*data = (uint8_t)(val & 0xFF);
   810ca:	9b01      	ldr	r3, [sp, #4]
   810cc:	702b      	strb	r3, [r5, #0]
   810ce:	e019      	b.n	81104 <usart_serial_getchar+0x70>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   810d0:	4b17      	ldr	r3, [pc, #92]	; (81130 <usart_serial_getchar+0x9c>)
   810d2:	4298      	cmp	r0, r3
   810d4:	d109      	bne.n	810ea <usart_serial_getchar+0x56>
		while (usart_read(p_usart, &val));
   810d6:	461e      	mov	r6, r3
   810d8:	4c14      	ldr	r4, [pc, #80]	; (8112c <usart_serial_getchar+0x98>)
   810da:	4630      	mov	r0, r6
   810dc:	a901      	add	r1, sp, #4
   810de:	47a0      	blx	r4
   810e0:	2800      	cmp	r0, #0
   810e2:	d1fa      	bne.n	810da <usart_serial_getchar+0x46>
		*data = (uint8_t)(val & 0xFF);
   810e4:	9b01      	ldr	r3, [sp, #4]
   810e6:	702b      	strb	r3, [r5, #0]
   810e8:	e018      	b.n	8111c <usart_serial_getchar+0x88>
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   810ea:	4b12      	ldr	r3, [pc, #72]	; (81134 <usart_serial_getchar+0xa0>)
   810ec:	429c      	cmp	r4, r3
   810ee:	d109      	bne.n	81104 <usart_serial_getchar+0x70>
		while (usart_read(p_usart, &val));
   810f0:	461e      	mov	r6, r3
   810f2:	4c0e      	ldr	r4, [pc, #56]	; (8112c <usart_serial_getchar+0x98>)
   810f4:	4630      	mov	r0, r6
   810f6:	a901      	add	r1, sp, #4
   810f8:	47a0      	blx	r4
   810fa:	2800      	cmp	r0, #0
   810fc:	d1fa      	bne.n	810f4 <usart_serial_getchar+0x60>
		*data = (uint8_t)(val & 0xFF);
   810fe:	9b01      	ldr	r3, [sp, #4]
   81100:	702b      	strb	r3, [r5, #0]
   81102:	e00b      	b.n	8111c <usart_serial_getchar+0x88>
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   81104:	4b0c      	ldr	r3, [pc, #48]	; (81138 <usart_serial_getchar+0xa4>)
   81106:	429c      	cmp	r4, r3
   81108:	d108      	bne.n	8111c <usart_serial_getchar+0x88>
		while (usart_read(p_usart, &val));
   8110a:	461e      	mov	r6, r3
   8110c:	4c07      	ldr	r4, [pc, #28]	; (8112c <usart_serial_getchar+0x98>)
   8110e:	4630      	mov	r0, r6
   81110:	a901      	add	r1, sp, #4
   81112:	47a0      	blx	r4
   81114:	2800      	cmp	r0, #0
   81116:	d1fa      	bne.n	8110e <usart_serial_getchar+0x7a>
		*data = (uint8_t)(val & 0xFF);
   81118:	9b01      	ldr	r3, [sp, #4]
   8111a:	702b      	strb	r3, [r5, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
   8111c:	b003      	add	sp, #12
   8111e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   81120:	400e0800 	.word	0x400e0800
   81124:	00080419 	.word	0x00080419
   81128:	40098000 	.word	0x40098000
   8112c:	00080441 	.word	0x00080441
   81130:	4009c000 	.word	0x4009c000
   81134:	400a0000 	.word	0x400a0000
   81138:	400a4000 	.word	0x400a4000

0008113c <usart_serial_putchar>:
 *   \retval 1  The character was written.
 *   \retval 0  The function timed out before the USART transmitter became
 * ready to send.
 */
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
   8113c:	b570      	push	{r4, r5, r6, lr}
   8113e:	460c      	mov	r4, r1
#ifdef UART
	if (UART == (Uart*)p_usart) {
   81140:	4b21      	ldr	r3, [pc, #132]	; (811c8 <usart_serial_putchar+0x8c>)
   81142:	4298      	cmp	r0, r3
   81144:	d107      	bne.n	81156 <usart_serial_putchar+0x1a>
		while (uart_write((Uart*)p_usart, c)!=0);
   81146:	461e      	mov	r6, r3
   81148:	4d20      	ldr	r5, [pc, #128]	; (811cc <usart_serial_putchar+0x90>)
   8114a:	4630      	mov	r0, r6
   8114c:	4621      	mov	r1, r4
   8114e:	47a8      	blx	r5
   81150:	2800      	cmp	r0, #0
   81152:	d1fa      	bne.n	8114a <usart_serial_putchar+0xe>
   81154:	e02b      	b.n	811ae <usart_serial_putchar+0x72>
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   81156:	4b1e      	ldr	r3, [pc, #120]	; (811d0 <usart_serial_putchar+0x94>)
   81158:	4298      	cmp	r0, r3
   8115a:	d107      	bne.n	8116c <usart_serial_putchar+0x30>
		while (usart_write(p_usart, c)!=0);
   8115c:	461e      	mov	r6, r3
   8115e:	4d1d      	ldr	r5, [pc, #116]	; (811d4 <usart_serial_putchar+0x98>)
   81160:	4630      	mov	r0, r6
   81162:	4621      	mov	r1, r4
   81164:	47a8      	blx	r5
   81166:	2800      	cmp	r0, #0
   81168:	d1fa      	bne.n	81160 <usart_serial_putchar+0x24>
   8116a:	e022      	b.n	811b2 <usart_serial_putchar+0x76>
		return 1;
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   8116c:	4b1a      	ldr	r3, [pc, #104]	; (811d8 <usart_serial_putchar+0x9c>)
   8116e:	4298      	cmp	r0, r3
   81170:	d107      	bne.n	81182 <usart_serial_putchar+0x46>
		while (usart_write(p_usart, c)!=0);
   81172:	461e      	mov	r6, r3
   81174:	4d17      	ldr	r5, [pc, #92]	; (811d4 <usart_serial_putchar+0x98>)
   81176:	4630      	mov	r0, r6
   81178:	4621      	mov	r1, r4
   8117a:	47a8      	blx	r5
   8117c:	2800      	cmp	r0, #0
   8117e:	d1fa      	bne.n	81176 <usart_serial_putchar+0x3a>
   81180:	e019      	b.n	811b6 <usart_serial_putchar+0x7a>
		return 1;
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   81182:	4b16      	ldr	r3, [pc, #88]	; (811dc <usart_serial_putchar+0xa0>)
   81184:	4298      	cmp	r0, r3
   81186:	d107      	bne.n	81198 <usart_serial_putchar+0x5c>
		while (usart_write(p_usart, c)!=0);
   81188:	461e      	mov	r6, r3
   8118a:	4d12      	ldr	r5, [pc, #72]	; (811d4 <usart_serial_putchar+0x98>)
   8118c:	4630      	mov	r0, r6
   8118e:	4621      	mov	r1, r4
   81190:	47a8      	blx	r5
   81192:	2800      	cmp	r0, #0
   81194:	d1fa      	bne.n	8118c <usart_serial_putchar+0x50>
   81196:	e010      	b.n	811ba <usart_serial_putchar+0x7e>
		return 1;
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   81198:	4b11      	ldr	r3, [pc, #68]	; (811e0 <usart_serial_putchar+0xa4>)
   8119a:	4298      	cmp	r0, r3
   8119c:	d10f      	bne.n	811be <usart_serial_putchar+0x82>
		while (usart_write(p_usart, c)!=0);
   8119e:	461e      	mov	r6, r3
   811a0:	4d0c      	ldr	r5, [pc, #48]	; (811d4 <usart_serial_putchar+0x98>)
   811a2:	4630      	mov	r0, r6
   811a4:	4621      	mov	r1, r4
   811a6:	47a8      	blx	r5
   811a8:	2800      	cmp	r0, #0
   811aa:	d1fa      	bne.n	811a2 <usart_serial_putchar+0x66>
   811ac:	e009      	b.n	811c2 <usart_serial_putchar+0x86>
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
#ifdef UART
	if (UART == (Uart*)p_usart) {
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
   811ae:	2001      	movs	r0, #1
   811b0:	bd70      	pop	{r4, r5, r6, pc}
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   811b2:	2001      	movs	r0, #1
   811b4:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   811b6:	2001      	movs	r0, #1
   811b8:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   811ba:	2001      	movs	r0, #1
   811bc:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
	}
# endif
#endif /* ifdef USART */

	return 0;
   811be:	2000      	movs	r0, #0
   811c0:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   811c2:	2001      	movs	r0, #1
	}
# endif
#endif /* ifdef USART */

	return 0;
}
   811c4:	bd70      	pop	{r4, r5, r6, pc}
   811c6:	bf00      	nop
   811c8:	400e0800 	.word	0x400e0800
   811cc:	00080409 	.word	0x00080409
   811d0:	40098000 	.word	0x40098000
   811d4:	0008042d 	.word	0x0008042d
   811d8:	4009c000 	.word	0x4009c000
   811dc:	400a0000 	.word	0x400a0000
   811e0:	400a4000 	.word	0x400a4000

000811e4 <main>:




int main (void)
{
   811e4:	b570      	push	{r4, r5, r6, lr}
   811e6:	b084      	sub	sp, #16
	sysclk_init();
   811e8:	4b36      	ldr	r3, [pc, #216]	; (812c4 <main+0xe0>)
   811ea:	4798      	blx	r3
	board_init();
   811ec:	4b36      	ldr	r3, [pc, #216]	; (812c8 <main+0xe4>)
   811ee:	4798      	blx	r3
   811f0:	200b      	movs	r0, #11
   811f2:	4c36      	ldr	r4, [pc, #216]	; (812cc <main+0xe8>)
   811f4:	47a0      	blx	r4
   811f6:	200c      	movs	r0, #12
   811f8:	47a0      	blx	r4
   811fa:	200d      	movs	r0, #13
   811fc:	47a0      	blx	r4
   811fe:	200e      	movs	r0, #14
   81200:	47a0      	blx	r4
	ioport_init();
	delayInit();
   81202:	4b33      	ldr	r3, [pc, #204]	; (812d0 <main+0xec>)
   81204:	4798      	blx	r3
	initRegulator();
   81206:	4b33      	ldr	r3, [pc, #204]	; (812d4 <main+0xf0>)
   81208:	4798      	blx	r3
	initMotor();
   8120a:	4b33      	ldr	r3, [pc, #204]	; (812d8 <main+0xf4>)
   8120c:	4798      	blx	r3
	initRotateMotor();
   8120e:	4b33      	ldr	r3, [pc, #204]	; (812dc <main+0xf8>)
   81210:	4798      	blx	r3
   81212:	2008      	movs	r0, #8
   81214:	47a0      	blx	r4
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
   81216:	4d32      	ldr	r5, [pc, #200]	; (812e0 <main+0xfc>)
   81218:	4b32      	ldr	r3, [pc, #200]	; (812e4 <main+0x100>)
   8121a:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   8121c:	4a32      	ldr	r2, [pc, #200]	; (812e8 <main+0x104>)
   8121e:	4b33      	ldr	r3, [pc, #204]	; (812ec <main+0x108>)
   81220:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   81222:	4a33      	ldr	r2, [pc, #204]	; (812f0 <main+0x10c>)
   81224:	4b33      	ldr	r3, [pc, #204]	; (812f4 <main+0x110>)
   81226:	601a      	str	r2, [r3, #0]
static inline void usart_serial_init(usart_if p_usart,
		usart_serial_options_t *opt)
{
#if ((!SAM4L) && (!SAMG55))
	sam_uart_opt_t uart_settings;
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   81228:	4b33      	ldr	r3, [pc, #204]	; (812f8 <main+0x114>)
   8122a:	9301      	str	r3, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
   8122c:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
   81230:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
   81232:	f44f 6300 	mov.w	r3, #2048	; 0x800
   81236:	9303      	str	r3, [sp, #12]
   81238:	2008      	movs	r0, #8
   8123a:	47a0      	blx	r4
	
#ifdef UART
	if (UART == (Uart*)p_usart) {
		sysclk_enable_peripheral_clock(ID_UART);
		/* Configure UART */
		uart_init((Uart*)p_usart, &uart_settings);
   8123c:	4628      	mov	r0, r5
   8123e:	a901      	add	r1, sp, #4
   81240:	4b2e      	ldr	r3, [pc, #184]	; (812fc <main+0x118>)
   81242:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
   81244:	4d2e      	ldr	r5, [pc, #184]	; (81300 <main+0x11c>)
   81246:	682b      	ldr	r3, [r5, #0]
   81248:	6898      	ldr	r0, [r3, #8]
   8124a:	2100      	movs	r1, #0
   8124c:	4c2d      	ldr	r4, [pc, #180]	; (81304 <main+0x120>)
   8124e:	47a0      	blx	r4
	setbuf(stdin, NULL);
   81250:	682b      	ldr	r3, [r5, #0]
   81252:	6858      	ldr	r0, [r3, #4]
   81254:	2100      	movs	r1, #0
   81256:	47a0      	blx	r4
	};
	
	/* Configure console UART. */
	sysclk_enable_peripheral_clock(CONSOLE_UART_ID);
	stdio_serial_init(CONF_UART, &uart_serial_options);
	printf("Konsolen reado\n");
   81258:	482b      	ldr	r0, [pc, #172]	; (81308 <main+0x124>)
   8125a:	4c2c      	ldr	r4, [pc, #176]	; (8130c <main+0x128>)
   8125c:	47a0      	blx	r4
	printf("===============\n");
   8125e:	482c      	ldr	r0, [pc, #176]	; (81310 <main+0x12c>)
   81260:	47a0      	blx	r4
	printf("-- %s\n\r", BOARD_NAME);
   81262:	482c      	ldr	r0, [pc, #176]	; (81314 <main+0x130>)
   81264:	492c      	ldr	r1, [pc, #176]	; (81318 <main+0x134>)
   81266:	47a0      	blx	r4
	printf("-- Compiled: %s %s --\n\r", __DATE__, __TIME__);
   81268:	482c      	ldr	r0, [pc, #176]	; (8131c <main+0x138>)
   8126a:	492d      	ldr	r1, [pc, #180]	; (81320 <main+0x13c>)
   8126c:	4a2d      	ldr	r2, [pc, #180]	; (81324 <main+0x140>)
   8126e:	47a0      	blx	r4
	printf("Whilesatsen");
   81270:	482d      	ldr	r0, [pc, #180]	; (81328 <main+0x144>)
   81272:	47a0      	blx	r4
	delayInit();
	initRegulator();
	initMotor();
	initRotateMotor();
	configure_console();
	initDrive();
   81274:	4b2d      	ldr	r3, [pc, #180]	; (8132c <main+0x148>)
   81276:	4798      	blx	r3
	init_sensor();
   81278:	4b2d      	ldr	r3, [pc, #180]	; (81330 <main+0x14c>)
   8127a:	4798      	blx	r3
	init_twi_functions();
   8127c:	4b2d      	ldr	r3, [pc, #180]	; (81334 <main+0x150>)
   8127e:	4798      	blx	r3
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   81280:	4b2d      	ldr	r3, [pc, #180]	; (81338 <main+0x154>)
   81282:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   81286:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   81288:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   8128c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
   81290:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   81292:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   81296:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   8129a:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8129c:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		
// 		
// 		sprintf(str,"\nSensor: %d",sensor);
//  		printf (str);
		
		angle = (angle + 90) % 360;
   812a0:	4c26      	ldr	r4, [pc, #152]	; (8133c <main+0x158>)
   812a2:	4e27      	ldr	r6, [pc, #156]	; (81340 <main+0x15c>)
		
		rotate(angle);
   812a4:	4d27      	ldr	r5, [pc, #156]	; (81344 <main+0x160>)
		
// 		
// 		sprintf(str,"\nSensor: %d",sensor);
//  		printf (str);
		
		angle = (angle + 90) % 360;
   812a6:	6821      	ldr	r1, [r4, #0]
   812a8:	315a      	adds	r1, #90	; 0x5a
   812aa:	fb81 2306 	smull	r2, r3, r1, r6
   812ae:	18c8      	adds	r0, r1, r3
   812b0:	17cb      	asrs	r3, r1, #31
   812b2:	ebc3 2020 	rsb	r0, r3, r0, asr #8
   812b6:	f44f 73b4 	mov.w	r3, #360	; 0x168
   812ba:	fb03 1010 	mls	r0, r3, r0, r1
   812be:	6020      	str	r0, [r4, #0]
		
		rotate(angle);
   812c0:	47a8      	blx	r5
   812c2:	e7f0      	b.n	812a6 <main+0xc2>
   812c4:	00080989 	.word	0x00080989
   812c8:	000809ed 	.word	0x000809ed
   812cc:	00080e1d 	.word	0x00080e1d
   812d0:	00080551 	.word	0x00080551
   812d4:	0008054d 	.word	0x0008054d
   812d8:	000805c9 	.word	0x000805c9
   812dc:	00080635 	.word	0x00080635
   812e0:	400e0800 	.word	0x400e0800
   812e4:	20070b50 	.word	0x20070b50
   812e8:	0008113d 	.word	0x0008113d
   812ec:	20070b4c 	.word	0x20070b4c
   812f0:	00081095 	.word	0x00081095
   812f4:	20070b48 	.word	0x20070b48
   812f8:	0501bd00 	.word	0x0501bd00
   812fc:	000803d1 	.word	0x000803d1
   81300:	20070560 	.word	0x20070560
   81304:	00081d99 	.word	0x00081d99
   81308:	000878c8 	.word	0x000878c8
   8130c:	00081cdd 	.word	0x00081cdd
   81310:	000878d8 	.word	0x000878d8
   81314:	000878ec 	.word	0x000878ec
   81318:	000878f4 	.word	0x000878f4
   8131c:	00087904 	.word	0x00087904
   81320:	0008791c 	.word	0x0008791c
   81324:	00087928 	.word	0x00087928
   81328:	00087934 	.word	0x00087934
   8132c:	000804b9 	.word	0x000804b9
   81330:	000801cd 	.word	0x000801cd
   81334:	00080201 	.word	0x00080201
   81338:	400e1200 	.word	0x400e1200
   8133c:	20070b10 	.word	0x20070b10
   81340:	b60b60b7 	.word	0xb60b60b7
   81344:	000806f9 	.word	0x000806f9

00081348 <__fpclassifyd>:
   81348:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   8134c:	b410      	push	{r4}
   8134e:	d008      	beq.n	81362 <__fpclassifyd+0x1a>
   81350:	4a0f      	ldr	r2, [pc, #60]	; (81390 <__fpclassifyd+0x48>)
   81352:	f5a3 1480 	sub.w	r4, r3, #1048576	; 0x100000
   81356:	4294      	cmp	r4, r2
   81358:	d80a      	bhi.n	81370 <__fpclassifyd+0x28>
   8135a:	2004      	movs	r0, #4
   8135c:	f85d 4b04 	ldr.w	r4, [sp], #4
   81360:	4770      	bx	lr
   81362:	2800      	cmp	r0, #0
   81364:	bf0c      	ite	eq
   81366:	2002      	moveq	r0, #2
   81368:	2003      	movne	r0, #3
   8136a:	f85d 4b04 	ldr.w	r4, [sp], #4
   8136e:	4770      	bx	lr
   81370:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   81374:	d201      	bcs.n	8137a <__fpclassifyd+0x32>
   81376:	2003      	movs	r0, #3
   81378:	e7f7      	b.n	8136a <__fpclassifyd+0x22>
   8137a:	4a06      	ldr	r2, [pc, #24]	; (81394 <__fpclassifyd+0x4c>)
   8137c:	4293      	cmp	r3, r2
   8137e:	d001      	beq.n	81384 <__fpclassifyd+0x3c>
   81380:	2000      	movs	r0, #0
   81382:	e7f2      	b.n	8136a <__fpclassifyd+0x22>
   81384:	f1d0 0001 	rsbs	r0, r0, #1
   81388:	bf38      	it	cc
   8138a:	2000      	movcc	r0, #0
   8138c:	e7ed      	b.n	8136a <__fpclassifyd+0x22>
   8138e:	bf00      	nop
   81390:	7fdfffff 	.word	0x7fdfffff
   81394:	7ff00000 	.word	0x7ff00000

00081398 <__aeabi_drsub>:
   81398:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   8139c:	e002      	b.n	813a4 <__adddf3>
   8139e:	bf00      	nop

000813a0 <__aeabi_dsub>:
   813a0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000813a4 <__adddf3>:
   813a4:	b530      	push	{r4, r5, lr}
   813a6:	ea4f 0441 	mov.w	r4, r1, lsl #1
   813aa:	ea4f 0543 	mov.w	r5, r3, lsl #1
   813ae:	ea94 0f05 	teq	r4, r5
   813b2:	bf08      	it	eq
   813b4:	ea90 0f02 	teqeq	r0, r2
   813b8:	bf1f      	itttt	ne
   813ba:	ea54 0c00 	orrsne.w	ip, r4, r0
   813be:	ea55 0c02 	orrsne.w	ip, r5, r2
   813c2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   813c6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   813ca:	f000 80e2 	beq.w	81592 <__adddf3+0x1ee>
   813ce:	ea4f 5454 	mov.w	r4, r4, lsr #21
   813d2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   813d6:	bfb8      	it	lt
   813d8:	426d      	neglt	r5, r5
   813da:	dd0c      	ble.n	813f6 <__adddf3+0x52>
   813dc:	442c      	add	r4, r5
   813de:	ea80 0202 	eor.w	r2, r0, r2
   813e2:	ea81 0303 	eor.w	r3, r1, r3
   813e6:	ea82 0000 	eor.w	r0, r2, r0
   813ea:	ea83 0101 	eor.w	r1, r3, r1
   813ee:	ea80 0202 	eor.w	r2, r0, r2
   813f2:	ea81 0303 	eor.w	r3, r1, r3
   813f6:	2d36      	cmp	r5, #54	; 0x36
   813f8:	bf88      	it	hi
   813fa:	bd30      	pophi	{r4, r5, pc}
   813fc:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   81400:	ea4f 3101 	mov.w	r1, r1, lsl #12
   81404:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   81408:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   8140c:	d002      	beq.n	81414 <__adddf3+0x70>
   8140e:	4240      	negs	r0, r0
   81410:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   81414:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   81418:	ea4f 3303 	mov.w	r3, r3, lsl #12
   8141c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   81420:	d002      	beq.n	81428 <__adddf3+0x84>
   81422:	4252      	negs	r2, r2
   81424:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   81428:	ea94 0f05 	teq	r4, r5
   8142c:	f000 80a7 	beq.w	8157e <__adddf3+0x1da>
   81430:	f1a4 0401 	sub.w	r4, r4, #1
   81434:	f1d5 0e20 	rsbs	lr, r5, #32
   81438:	db0d      	blt.n	81456 <__adddf3+0xb2>
   8143a:	fa02 fc0e 	lsl.w	ip, r2, lr
   8143e:	fa22 f205 	lsr.w	r2, r2, r5
   81442:	1880      	adds	r0, r0, r2
   81444:	f141 0100 	adc.w	r1, r1, #0
   81448:	fa03 f20e 	lsl.w	r2, r3, lr
   8144c:	1880      	adds	r0, r0, r2
   8144e:	fa43 f305 	asr.w	r3, r3, r5
   81452:	4159      	adcs	r1, r3
   81454:	e00e      	b.n	81474 <__adddf3+0xd0>
   81456:	f1a5 0520 	sub.w	r5, r5, #32
   8145a:	f10e 0e20 	add.w	lr, lr, #32
   8145e:	2a01      	cmp	r2, #1
   81460:	fa03 fc0e 	lsl.w	ip, r3, lr
   81464:	bf28      	it	cs
   81466:	f04c 0c02 	orrcs.w	ip, ip, #2
   8146a:	fa43 f305 	asr.w	r3, r3, r5
   8146e:	18c0      	adds	r0, r0, r3
   81470:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   81474:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   81478:	d507      	bpl.n	8148a <__adddf3+0xe6>
   8147a:	f04f 0e00 	mov.w	lr, #0
   8147e:	f1dc 0c00 	rsbs	ip, ip, #0
   81482:	eb7e 0000 	sbcs.w	r0, lr, r0
   81486:	eb6e 0101 	sbc.w	r1, lr, r1
   8148a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   8148e:	d31b      	bcc.n	814c8 <__adddf3+0x124>
   81490:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   81494:	d30c      	bcc.n	814b0 <__adddf3+0x10c>
   81496:	0849      	lsrs	r1, r1, #1
   81498:	ea5f 0030 	movs.w	r0, r0, rrx
   8149c:	ea4f 0c3c 	mov.w	ip, ip, rrx
   814a0:	f104 0401 	add.w	r4, r4, #1
   814a4:	ea4f 5244 	mov.w	r2, r4, lsl #21
   814a8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   814ac:	f080 809a 	bcs.w	815e4 <__adddf3+0x240>
   814b0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   814b4:	bf08      	it	eq
   814b6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   814ba:	f150 0000 	adcs.w	r0, r0, #0
   814be:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   814c2:	ea41 0105 	orr.w	r1, r1, r5
   814c6:	bd30      	pop	{r4, r5, pc}
   814c8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   814cc:	4140      	adcs	r0, r0
   814ce:	eb41 0101 	adc.w	r1, r1, r1
   814d2:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   814d6:	f1a4 0401 	sub.w	r4, r4, #1
   814da:	d1e9      	bne.n	814b0 <__adddf3+0x10c>
   814dc:	f091 0f00 	teq	r1, #0
   814e0:	bf04      	itt	eq
   814e2:	4601      	moveq	r1, r0
   814e4:	2000      	moveq	r0, #0
   814e6:	fab1 f381 	clz	r3, r1
   814ea:	bf08      	it	eq
   814ec:	3320      	addeq	r3, #32
   814ee:	f1a3 030b 	sub.w	r3, r3, #11
   814f2:	f1b3 0220 	subs.w	r2, r3, #32
   814f6:	da0c      	bge.n	81512 <__adddf3+0x16e>
   814f8:	320c      	adds	r2, #12
   814fa:	dd08      	ble.n	8150e <__adddf3+0x16a>
   814fc:	f102 0c14 	add.w	ip, r2, #20
   81500:	f1c2 020c 	rsb	r2, r2, #12
   81504:	fa01 f00c 	lsl.w	r0, r1, ip
   81508:	fa21 f102 	lsr.w	r1, r1, r2
   8150c:	e00c      	b.n	81528 <__adddf3+0x184>
   8150e:	f102 0214 	add.w	r2, r2, #20
   81512:	bfd8      	it	le
   81514:	f1c2 0c20 	rsble	ip, r2, #32
   81518:	fa01 f102 	lsl.w	r1, r1, r2
   8151c:	fa20 fc0c 	lsr.w	ip, r0, ip
   81520:	bfdc      	itt	le
   81522:	ea41 010c 	orrle.w	r1, r1, ip
   81526:	4090      	lslle	r0, r2
   81528:	1ae4      	subs	r4, r4, r3
   8152a:	bfa2      	ittt	ge
   8152c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   81530:	4329      	orrge	r1, r5
   81532:	bd30      	popge	{r4, r5, pc}
   81534:	ea6f 0404 	mvn.w	r4, r4
   81538:	3c1f      	subs	r4, #31
   8153a:	da1c      	bge.n	81576 <__adddf3+0x1d2>
   8153c:	340c      	adds	r4, #12
   8153e:	dc0e      	bgt.n	8155e <__adddf3+0x1ba>
   81540:	f104 0414 	add.w	r4, r4, #20
   81544:	f1c4 0220 	rsb	r2, r4, #32
   81548:	fa20 f004 	lsr.w	r0, r0, r4
   8154c:	fa01 f302 	lsl.w	r3, r1, r2
   81550:	ea40 0003 	orr.w	r0, r0, r3
   81554:	fa21 f304 	lsr.w	r3, r1, r4
   81558:	ea45 0103 	orr.w	r1, r5, r3
   8155c:	bd30      	pop	{r4, r5, pc}
   8155e:	f1c4 040c 	rsb	r4, r4, #12
   81562:	f1c4 0220 	rsb	r2, r4, #32
   81566:	fa20 f002 	lsr.w	r0, r0, r2
   8156a:	fa01 f304 	lsl.w	r3, r1, r4
   8156e:	ea40 0003 	orr.w	r0, r0, r3
   81572:	4629      	mov	r1, r5
   81574:	bd30      	pop	{r4, r5, pc}
   81576:	fa21 f004 	lsr.w	r0, r1, r4
   8157a:	4629      	mov	r1, r5
   8157c:	bd30      	pop	{r4, r5, pc}
   8157e:	f094 0f00 	teq	r4, #0
   81582:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   81586:	bf06      	itte	eq
   81588:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   8158c:	3401      	addeq	r4, #1
   8158e:	3d01      	subne	r5, #1
   81590:	e74e      	b.n	81430 <__adddf3+0x8c>
   81592:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   81596:	bf18      	it	ne
   81598:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   8159c:	d029      	beq.n	815f2 <__adddf3+0x24e>
   8159e:	ea94 0f05 	teq	r4, r5
   815a2:	bf08      	it	eq
   815a4:	ea90 0f02 	teqeq	r0, r2
   815a8:	d005      	beq.n	815b6 <__adddf3+0x212>
   815aa:	ea54 0c00 	orrs.w	ip, r4, r0
   815ae:	bf04      	itt	eq
   815b0:	4619      	moveq	r1, r3
   815b2:	4610      	moveq	r0, r2
   815b4:	bd30      	pop	{r4, r5, pc}
   815b6:	ea91 0f03 	teq	r1, r3
   815ba:	bf1e      	ittt	ne
   815bc:	2100      	movne	r1, #0
   815be:	2000      	movne	r0, #0
   815c0:	bd30      	popne	{r4, r5, pc}
   815c2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   815c6:	d105      	bne.n	815d4 <__adddf3+0x230>
   815c8:	0040      	lsls	r0, r0, #1
   815ca:	4149      	adcs	r1, r1
   815cc:	bf28      	it	cs
   815ce:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   815d2:	bd30      	pop	{r4, r5, pc}
   815d4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   815d8:	bf3c      	itt	cc
   815da:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   815de:	bd30      	popcc	{r4, r5, pc}
   815e0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   815e4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   815e8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   815ec:	f04f 0000 	mov.w	r0, #0
   815f0:	bd30      	pop	{r4, r5, pc}
   815f2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   815f6:	bf1a      	itte	ne
   815f8:	4619      	movne	r1, r3
   815fa:	4610      	movne	r0, r2
   815fc:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   81600:	bf1c      	itt	ne
   81602:	460b      	movne	r3, r1
   81604:	4602      	movne	r2, r0
   81606:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8160a:	bf06      	itte	eq
   8160c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   81610:	ea91 0f03 	teqeq	r1, r3
   81614:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   81618:	bd30      	pop	{r4, r5, pc}
   8161a:	bf00      	nop

0008161c <__aeabi_ui2d>:
   8161c:	f090 0f00 	teq	r0, #0
   81620:	bf04      	itt	eq
   81622:	2100      	moveq	r1, #0
   81624:	4770      	bxeq	lr
   81626:	b530      	push	{r4, r5, lr}
   81628:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8162c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   81630:	f04f 0500 	mov.w	r5, #0
   81634:	f04f 0100 	mov.w	r1, #0
   81638:	e750      	b.n	814dc <__adddf3+0x138>
   8163a:	bf00      	nop

0008163c <__aeabi_i2d>:
   8163c:	f090 0f00 	teq	r0, #0
   81640:	bf04      	itt	eq
   81642:	2100      	moveq	r1, #0
   81644:	4770      	bxeq	lr
   81646:	b530      	push	{r4, r5, lr}
   81648:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8164c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   81650:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   81654:	bf48      	it	mi
   81656:	4240      	negmi	r0, r0
   81658:	f04f 0100 	mov.w	r1, #0
   8165c:	e73e      	b.n	814dc <__adddf3+0x138>
   8165e:	bf00      	nop

00081660 <__aeabi_f2d>:
   81660:	0042      	lsls	r2, r0, #1
   81662:	ea4f 01e2 	mov.w	r1, r2, asr #3
   81666:	ea4f 0131 	mov.w	r1, r1, rrx
   8166a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   8166e:	bf1f      	itttt	ne
   81670:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   81674:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   81678:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   8167c:	4770      	bxne	lr
   8167e:	f092 0f00 	teq	r2, #0
   81682:	bf14      	ite	ne
   81684:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   81688:	4770      	bxeq	lr
   8168a:	b530      	push	{r4, r5, lr}
   8168c:	f44f 7460 	mov.w	r4, #896	; 0x380
   81690:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   81694:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   81698:	e720      	b.n	814dc <__adddf3+0x138>
   8169a:	bf00      	nop

0008169c <__aeabi_ul2d>:
   8169c:	ea50 0201 	orrs.w	r2, r0, r1
   816a0:	bf08      	it	eq
   816a2:	4770      	bxeq	lr
   816a4:	b530      	push	{r4, r5, lr}
   816a6:	f04f 0500 	mov.w	r5, #0
   816aa:	e00a      	b.n	816c2 <__aeabi_l2d+0x16>

000816ac <__aeabi_l2d>:
   816ac:	ea50 0201 	orrs.w	r2, r0, r1
   816b0:	bf08      	it	eq
   816b2:	4770      	bxeq	lr
   816b4:	b530      	push	{r4, r5, lr}
   816b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   816ba:	d502      	bpl.n	816c2 <__aeabi_l2d+0x16>
   816bc:	4240      	negs	r0, r0
   816be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   816c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
   816c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
   816ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   816ce:	f43f aedc 	beq.w	8148a <__adddf3+0xe6>
   816d2:	f04f 0203 	mov.w	r2, #3
   816d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   816da:	bf18      	it	ne
   816dc:	3203      	addne	r2, #3
   816de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   816e2:	bf18      	it	ne
   816e4:	3203      	addne	r2, #3
   816e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   816ea:	f1c2 0320 	rsb	r3, r2, #32
   816ee:	fa00 fc03 	lsl.w	ip, r0, r3
   816f2:	fa20 f002 	lsr.w	r0, r0, r2
   816f6:	fa01 fe03 	lsl.w	lr, r1, r3
   816fa:	ea40 000e 	orr.w	r0, r0, lr
   816fe:	fa21 f102 	lsr.w	r1, r1, r2
   81702:	4414      	add	r4, r2
   81704:	e6c1      	b.n	8148a <__adddf3+0xe6>
   81706:	bf00      	nop

00081708 <__aeabi_dmul>:
   81708:	b570      	push	{r4, r5, r6, lr}
   8170a:	f04f 0cff 	mov.w	ip, #255	; 0xff
   8170e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   81712:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   81716:	bf1d      	ittte	ne
   81718:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   8171c:	ea94 0f0c 	teqne	r4, ip
   81720:	ea95 0f0c 	teqne	r5, ip
   81724:	f000 f8de 	bleq	818e4 <__aeabi_dmul+0x1dc>
   81728:	442c      	add	r4, r5
   8172a:	ea81 0603 	eor.w	r6, r1, r3
   8172e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   81732:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   81736:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   8173a:	bf18      	it	ne
   8173c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   81740:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   81744:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   81748:	d038      	beq.n	817bc <__aeabi_dmul+0xb4>
   8174a:	fba0 ce02 	umull	ip, lr, r0, r2
   8174e:	f04f 0500 	mov.w	r5, #0
   81752:	fbe1 e502 	umlal	lr, r5, r1, r2
   81756:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   8175a:	fbe0 e503 	umlal	lr, r5, r0, r3
   8175e:	f04f 0600 	mov.w	r6, #0
   81762:	fbe1 5603 	umlal	r5, r6, r1, r3
   81766:	f09c 0f00 	teq	ip, #0
   8176a:	bf18      	it	ne
   8176c:	f04e 0e01 	orrne.w	lr, lr, #1
   81770:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   81774:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   81778:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   8177c:	d204      	bcs.n	81788 <__aeabi_dmul+0x80>
   8177e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   81782:	416d      	adcs	r5, r5
   81784:	eb46 0606 	adc.w	r6, r6, r6
   81788:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   8178c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   81790:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   81794:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   81798:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   8179c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   817a0:	bf88      	it	hi
   817a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   817a6:	d81e      	bhi.n	817e6 <__aeabi_dmul+0xde>
   817a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   817ac:	bf08      	it	eq
   817ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   817b2:	f150 0000 	adcs.w	r0, r0, #0
   817b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   817ba:	bd70      	pop	{r4, r5, r6, pc}
   817bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   817c0:	ea46 0101 	orr.w	r1, r6, r1
   817c4:	ea40 0002 	orr.w	r0, r0, r2
   817c8:	ea81 0103 	eor.w	r1, r1, r3
   817cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   817d0:	bfc2      	ittt	gt
   817d2:	ebd4 050c 	rsbsgt	r5, r4, ip
   817d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   817da:	bd70      	popgt	{r4, r5, r6, pc}
   817dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   817e0:	f04f 0e00 	mov.w	lr, #0
   817e4:	3c01      	subs	r4, #1
   817e6:	f300 80ab 	bgt.w	81940 <__aeabi_dmul+0x238>
   817ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
   817ee:	bfde      	ittt	le
   817f0:	2000      	movle	r0, #0
   817f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   817f6:	bd70      	pople	{r4, r5, r6, pc}
   817f8:	f1c4 0400 	rsb	r4, r4, #0
   817fc:	3c20      	subs	r4, #32
   817fe:	da35      	bge.n	8186c <__aeabi_dmul+0x164>
   81800:	340c      	adds	r4, #12
   81802:	dc1b      	bgt.n	8183c <__aeabi_dmul+0x134>
   81804:	f104 0414 	add.w	r4, r4, #20
   81808:	f1c4 0520 	rsb	r5, r4, #32
   8180c:	fa00 f305 	lsl.w	r3, r0, r5
   81810:	fa20 f004 	lsr.w	r0, r0, r4
   81814:	fa01 f205 	lsl.w	r2, r1, r5
   81818:	ea40 0002 	orr.w	r0, r0, r2
   8181c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   81820:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   81824:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   81828:	fa21 f604 	lsr.w	r6, r1, r4
   8182c:	eb42 0106 	adc.w	r1, r2, r6
   81830:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   81834:	bf08      	it	eq
   81836:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8183a:	bd70      	pop	{r4, r5, r6, pc}
   8183c:	f1c4 040c 	rsb	r4, r4, #12
   81840:	f1c4 0520 	rsb	r5, r4, #32
   81844:	fa00 f304 	lsl.w	r3, r0, r4
   81848:	fa20 f005 	lsr.w	r0, r0, r5
   8184c:	fa01 f204 	lsl.w	r2, r1, r4
   81850:	ea40 0002 	orr.w	r0, r0, r2
   81854:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81858:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   8185c:	f141 0100 	adc.w	r1, r1, #0
   81860:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   81864:	bf08      	it	eq
   81866:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8186a:	bd70      	pop	{r4, r5, r6, pc}
   8186c:	f1c4 0520 	rsb	r5, r4, #32
   81870:	fa00 f205 	lsl.w	r2, r0, r5
   81874:	ea4e 0e02 	orr.w	lr, lr, r2
   81878:	fa20 f304 	lsr.w	r3, r0, r4
   8187c:	fa01 f205 	lsl.w	r2, r1, r5
   81880:	ea43 0302 	orr.w	r3, r3, r2
   81884:	fa21 f004 	lsr.w	r0, r1, r4
   81888:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8188c:	fa21 f204 	lsr.w	r2, r1, r4
   81890:	ea20 0002 	bic.w	r0, r0, r2
   81894:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   81898:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8189c:	bf08      	it	eq
   8189e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   818a2:	bd70      	pop	{r4, r5, r6, pc}
   818a4:	f094 0f00 	teq	r4, #0
   818a8:	d10f      	bne.n	818ca <__aeabi_dmul+0x1c2>
   818aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   818ae:	0040      	lsls	r0, r0, #1
   818b0:	eb41 0101 	adc.w	r1, r1, r1
   818b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   818b8:	bf08      	it	eq
   818ba:	3c01      	subeq	r4, #1
   818bc:	d0f7      	beq.n	818ae <__aeabi_dmul+0x1a6>
   818be:	ea41 0106 	orr.w	r1, r1, r6
   818c2:	f095 0f00 	teq	r5, #0
   818c6:	bf18      	it	ne
   818c8:	4770      	bxne	lr
   818ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   818ce:	0052      	lsls	r2, r2, #1
   818d0:	eb43 0303 	adc.w	r3, r3, r3
   818d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   818d8:	bf08      	it	eq
   818da:	3d01      	subeq	r5, #1
   818dc:	d0f7      	beq.n	818ce <__aeabi_dmul+0x1c6>
   818de:	ea43 0306 	orr.w	r3, r3, r6
   818e2:	4770      	bx	lr
   818e4:	ea94 0f0c 	teq	r4, ip
   818e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   818ec:	bf18      	it	ne
   818ee:	ea95 0f0c 	teqne	r5, ip
   818f2:	d00c      	beq.n	8190e <__aeabi_dmul+0x206>
   818f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   818f8:	bf18      	it	ne
   818fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   818fe:	d1d1      	bne.n	818a4 <__aeabi_dmul+0x19c>
   81900:	ea81 0103 	eor.w	r1, r1, r3
   81904:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81908:	f04f 0000 	mov.w	r0, #0
   8190c:	bd70      	pop	{r4, r5, r6, pc}
   8190e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81912:	bf06      	itte	eq
   81914:	4610      	moveq	r0, r2
   81916:	4619      	moveq	r1, r3
   81918:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8191c:	d019      	beq.n	81952 <__aeabi_dmul+0x24a>
   8191e:	ea94 0f0c 	teq	r4, ip
   81922:	d102      	bne.n	8192a <__aeabi_dmul+0x222>
   81924:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   81928:	d113      	bne.n	81952 <__aeabi_dmul+0x24a>
   8192a:	ea95 0f0c 	teq	r5, ip
   8192e:	d105      	bne.n	8193c <__aeabi_dmul+0x234>
   81930:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   81934:	bf1c      	itt	ne
   81936:	4610      	movne	r0, r2
   81938:	4619      	movne	r1, r3
   8193a:	d10a      	bne.n	81952 <__aeabi_dmul+0x24a>
   8193c:	ea81 0103 	eor.w	r1, r1, r3
   81940:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81944:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   81948:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   8194c:	f04f 0000 	mov.w	r0, #0
   81950:	bd70      	pop	{r4, r5, r6, pc}
   81952:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   81956:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8195a:	bd70      	pop	{r4, r5, r6, pc}

0008195c <__aeabi_ddiv>:
   8195c:	b570      	push	{r4, r5, r6, lr}
   8195e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   81962:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   81966:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8196a:	bf1d      	ittte	ne
   8196c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   81970:	ea94 0f0c 	teqne	r4, ip
   81974:	ea95 0f0c 	teqne	r5, ip
   81978:	f000 f8a7 	bleq	81aca <__aeabi_ddiv+0x16e>
   8197c:	eba4 0405 	sub.w	r4, r4, r5
   81980:	ea81 0e03 	eor.w	lr, r1, r3
   81984:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   81988:	ea4f 3101 	mov.w	r1, r1, lsl #12
   8198c:	f000 8088 	beq.w	81aa0 <__aeabi_ddiv+0x144>
   81990:	ea4f 3303 	mov.w	r3, r3, lsl #12
   81994:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   81998:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   8199c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   819a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
   819a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   819a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   819ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
   819b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   819b4:	429d      	cmp	r5, r3
   819b6:	bf08      	it	eq
   819b8:	4296      	cmpeq	r6, r2
   819ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   819be:	f504 7440 	add.w	r4, r4, #768	; 0x300
   819c2:	d202      	bcs.n	819ca <__aeabi_ddiv+0x6e>
   819c4:	085b      	lsrs	r3, r3, #1
   819c6:	ea4f 0232 	mov.w	r2, r2, rrx
   819ca:	1ab6      	subs	r6, r6, r2
   819cc:	eb65 0503 	sbc.w	r5, r5, r3
   819d0:	085b      	lsrs	r3, r3, #1
   819d2:	ea4f 0232 	mov.w	r2, r2, rrx
   819d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   819da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   819de:	ebb6 0e02 	subs.w	lr, r6, r2
   819e2:	eb75 0e03 	sbcs.w	lr, r5, r3
   819e6:	bf22      	ittt	cs
   819e8:	1ab6      	subcs	r6, r6, r2
   819ea:	4675      	movcs	r5, lr
   819ec:	ea40 000c 	orrcs.w	r0, r0, ip
   819f0:	085b      	lsrs	r3, r3, #1
   819f2:	ea4f 0232 	mov.w	r2, r2, rrx
   819f6:	ebb6 0e02 	subs.w	lr, r6, r2
   819fa:	eb75 0e03 	sbcs.w	lr, r5, r3
   819fe:	bf22      	ittt	cs
   81a00:	1ab6      	subcs	r6, r6, r2
   81a02:	4675      	movcs	r5, lr
   81a04:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   81a08:	085b      	lsrs	r3, r3, #1
   81a0a:	ea4f 0232 	mov.w	r2, r2, rrx
   81a0e:	ebb6 0e02 	subs.w	lr, r6, r2
   81a12:	eb75 0e03 	sbcs.w	lr, r5, r3
   81a16:	bf22      	ittt	cs
   81a18:	1ab6      	subcs	r6, r6, r2
   81a1a:	4675      	movcs	r5, lr
   81a1c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   81a20:	085b      	lsrs	r3, r3, #1
   81a22:	ea4f 0232 	mov.w	r2, r2, rrx
   81a26:	ebb6 0e02 	subs.w	lr, r6, r2
   81a2a:	eb75 0e03 	sbcs.w	lr, r5, r3
   81a2e:	bf22      	ittt	cs
   81a30:	1ab6      	subcs	r6, r6, r2
   81a32:	4675      	movcs	r5, lr
   81a34:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   81a38:	ea55 0e06 	orrs.w	lr, r5, r6
   81a3c:	d018      	beq.n	81a70 <__aeabi_ddiv+0x114>
   81a3e:	ea4f 1505 	mov.w	r5, r5, lsl #4
   81a42:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   81a46:	ea4f 1606 	mov.w	r6, r6, lsl #4
   81a4a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   81a4e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   81a52:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   81a56:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   81a5a:	d1c0      	bne.n	819de <__aeabi_ddiv+0x82>
   81a5c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   81a60:	d10b      	bne.n	81a7a <__aeabi_ddiv+0x11e>
   81a62:	ea41 0100 	orr.w	r1, r1, r0
   81a66:	f04f 0000 	mov.w	r0, #0
   81a6a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   81a6e:	e7b6      	b.n	819de <__aeabi_ddiv+0x82>
   81a70:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   81a74:	bf04      	itt	eq
   81a76:	4301      	orreq	r1, r0
   81a78:	2000      	moveq	r0, #0
   81a7a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   81a7e:	bf88      	it	hi
   81a80:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   81a84:	f63f aeaf 	bhi.w	817e6 <__aeabi_dmul+0xde>
   81a88:	ebb5 0c03 	subs.w	ip, r5, r3
   81a8c:	bf04      	itt	eq
   81a8e:	ebb6 0c02 	subseq.w	ip, r6, r2
   81a92:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   81a96:	f150 0000 	adcs.w	r0, r0, #0
   81a9a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   81a9e:	bd70      	pop	{r4, r5, r6, pc}
   81aa0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   81aa4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   81aa8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   81aac:	bfc2      	ittt	gt
   81aae:	ebd4 050c 	rsbsgt	r5, r4, ip
   81ab2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   81ab6:	bd70      	popgt	{r4, r5, r6, pc}
   81ab8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   81abc:	f04f 0e00 	mov.w	lr, #0
   81ac0:	3c01      	subs	r4, #1
   81ac2:	e690      	b.n	817e6 <__aeabi_dmul+0xde>
   81ac4:	ea45 0e06 	orr.w	lr, r5, r6
   81ac8:	e68d      	b.n	817e6 <__aeabi_dmul+0xde>
   81aca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   81ace:	ea94 0f0c 	teq	r4, ip
   81ad2:	bf08      	it	eq
   81ad4:	ea95 0f0c 	teqeq	r5, ip
   81ad8:	f43f af3b 	beq.w	81952 <__aeabi_dmul+0x24a>
   81adc:	ea94 0f0c 	teq	r4, ip
   81ae0:	d10a      	bne.n	81af8 <__aeabi_ddiv+0x19c>
   81ae2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   81ae6:	f47f af34 	bne.w	81952 <__aeabi_dmul+0x24a>
   81aea:	ea95 0f0c 	teq	r5, ip
   81aee:	f47f af25 	bne.w	8193c <__aeabi_dmul+0x234>
   81af2:	4610      	mov	r0, r2
   81af4:	4619      	mov	r1, r3
   81af6:	e72c      	b.n	81952 <__aeabi_dmul+0x24a>
   81af8:	ea95 0f0c 	teq	r5, ip
   81afc:	d106      	bne.n	81b0c <__aeabi_ddiv+0x1b0>
   81afe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   81b02:	f43f aefd 	beq.w	81900 <__aeabi_dmul+0x1f8>
   81b06:	4610      	mov	r0, r2
   81b08:	4619      	mov	r1, r3
   81b0a:	e722      	b.n	81952 <__aeabi_dmul+0x24a>
   81b0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81b10:	bf18      	it	ne
   81b12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   81b16:	f47f aec5 	bne.w	818a4 <__aeabi_dmul+0x19c>
   81b1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   81b1e:	f47f af0d 	bne.w	8193c <__aeabi_dmul+0x234>
   81b22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   81b26:	f47f aeeb 	bne.w	81900 <__aeabi_dmul+0x1f8>
   81b2a:	e712      	b.n	81952 <__aeabi_dmul+0x24a>

00081b2c <__gedf2>:
   81b2c:	f04f 3cff 	mov.w	ip, #4294967295
   81b30:	e006      	b.n	81b40 <__cmpdf2+0x4>
   81b32:	bf00      	nop

00081b34 <__ledf2>:
   81b34:	f04f 0c01 	mov.w	ip, #1
   81b38:	e002      	b.n	81b40 <__cmpdf2+0x4>
   81b3a:	bf00      	nop

00081b3c <__cmpdf2>:
   81b3c:	f04f 0c01 	mov.w	ip, #1
   81b40:	f84d cd04 	str.w	ip, [sp, #-4]!
   81b44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   81b48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   81b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   81b50:	bf18      	it	ne
   81b52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   81b56:	d01b      	beq.n	81b90 <__cmpdf2+0x54>
   81b58:	b001      	add	sp, #4
   81b5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   81b5e:	bf0c      	ite	eq
   81b60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   81b64:	ea91 0f03 	teqne	r1, r3
   81b68:	bf02      	ittt	eq
   81b6a:	ea90 0f02 	teqeq	r0, r2
   81b6e:	2000      	moveq	r0, #0
   81b70:	4770      	bxeq	lr
   81b72:	f110 0f00 	cmn.w	r0, #0
   81b76:	ea91 0f03 	teq	r1, r3
   81b7a:	bf58      	it	pl
   81b7c:	4299      	cmppl	r1, r3
   81b7e:	bf08      	it	eq
   81b80:	4290      	cmpeq	r0, r2
   81b82:	bf2c      	ite	cs
   81b84:	17d8      	asrcs	r0, r3, #31
   81b86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   81b8a:	f040 0001 	orr.w	r0, r0, #1
   81b8e:	4770      	bx	lr
   81b90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   81b94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   81b98:	d102      	bne.n	81ba0 <__cmpdf2+0x64>
   81b9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   81b9e:	d107      	bne.n	81bb0 <__cmpdf2+0x74>
   81ba0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   81ba4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   81ba8:	d1d6      	bne.n	81b58 <__cmpdf2+0x1c>
   81baa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   81bae:	d0d3      	beq.n	81b58 <__cmpdf2+0x1c>
   81bb0:	f85d 0b04 	ldr.w	r0, [sp], #4
   81bb4:	4770      	bx	lr
   81bb6:	bf00      	nop

00081bb8 <__aeabi_cdrcmple>:
   81bb8:	4684      	mov	ip, r0
   81bba:	4610      	mov	r0, r2
   81bbc:	4662      	mov	r2, ip
   81bbe:	468c      	mov	ip, r1
   81bc0:	4619      	mov	r1, r3
   81bc2:	4663      	mov	r3, ip
   81bc4:	e000      	b.n	81bc8 <__aeabi_cdcmpeq>
   81bc6:	bf00      	nop

00081bc8 <__aeabi_cdcmpeq>:
   81bc8:	b501      	push	{r0, lr}
   81bca:	f7ff ffb7 	bl	81b3c <__cmpdf2>
   81bce:	2800      	cmp	r0, #0
   81bd0:	bf48      	it	mi
   81bd2:	f110 0f00 	cmnmi.w	r0, #0
   81bd6:	bd01      	pop	{r0, pc}

00081bd8 <__aeabi_dcmpeq>:
   81bd8:	f84d ed08 	str.w	lr, [sp, #-8]!
   81bdc:	f7ff fff4 	bl	81bc8 <__aeabi_cdcmpeq>
   81be0:	bf0c      	ite	eq
   81be2:	2001      	moveq	r0, #1
   81be4:	2000      	movne	r0, #0
   81be6:	f85d fb08 	ldr.w	pc, [sp], #8
   81bea:	bf00      	nop

00081bec <__aeabi_dcmplt>:
   81bec:	f84d ed08 	str.w	lr, [sp, #-8]!
   81bf0:	f7ff ffea 	bl	81bc8 <__aeabi_cdcmpeq>
   81bf4:	bf34      	ite	cc
   81bf6:	2001      	movcc	r0, #1
   81bf8:	2000      	movcs	r0, #0
   81bfa:	f85d fb08 	ldr.w	pc, [sp], #8
   81bfe:	bf00      	nop

00081c00 <__aeabi_dcmple>:
   81c00:	f84d ed08 	str.w	lr, [sp, #-8]!
   81c04:	f7ff ffe0 	bl	81bc8 <__aeabi_cdcmpeq>
   81c08:	bf94      	ite	ls
   81c0a:	2001      	movls	r0, #1
   81c0c:	2000      	movhi	r0, #0
   81c0e:	f85d fb08 	ldr.w	pc, [sp], #8
   81c12:	bf00      	nop

00081c14 <__aeabi_dcmpge>:
   81c14:	f84d ed08 	str.w	lr, [sp, #-8]!
   81c18:	f7ff ffce 	bl	81bb8 <__aeabi_cdrcmple>
   81c1c:	bf94      	ite	ls
   81c1e:	2001      	movls	r0, #1
   81c20:	2000      	movhi	r0, #0
   81c22:	f85d fb08 	ldr.w	pc, [sp], #8
   81c26:	bf00      	nop

00081c28 <__aeabi_dcmpgt>:
   81c28:	f84d ed08 	str.w	lr, [sp, #-8]!
   81c2c:	f7ff ffc4 	bl	81bb8 <__aeabi_cdrcmple>
   81c30:	bf34      	ite	cc
   81c32:	2001      	movcc	r0, #1
   81c34:	2000      	movcs	r0, #0
   81c36:	f85d fb08 	ldr.w	pc, [sp], #8
   81c3a:	bf00      	nop

00081c3c <__aeabi_d2iz>:
   81c3c:	ea4f 0241 	mov.w	r2, r1, lsl #1
   81c40:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   81c44:	d215      	bcs.n	81c72 <__aeabi_d2iz+0x36>
   81c46:	d511      	bpl.n	81c6c <__aeabi_d2iz+0x30>
   81c48:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   81c4c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   81c50:	d912      	bls.n	81c78 <__aeabi_d2iz+0x3c>
   81c52:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   81c56:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   81c5a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   81c5e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   81c62:	fa23 f002 	lsr.w	r0, r3, r2
   81c66:	bf18      	it	ne
   81c68:	4240      	negne	r0, r0
   81c6a:	4770      	bx	lr
   81c6c:	f04f 0000 	mov.w	r0, #0
   81c70:	4770      	bx	lr
   81c72:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   81c76:	d105      	bne.n	81c84 <__aeabi_d2iz+0x48>
   81c78:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   81c7c:	bf08      	it	eq
   81c7e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   81c82:	4770      	bx	lr
   81c84:	f04f 0000 	mov.w	r0, #0
   81c88:	4770      	bx	lr
   81c8a:	bf00      	nop

00081c8c <__libc_init_array>:
   81c8c:	b570      	push	{r4, r5, r6, lr}
   81c8e:	4e0f      	ldr	r6, [pc, #60]	; (81ccc <__libc_init_array+0x40>)
   81c90:	4d0f      	ldr	r5, [pc, #60]	; (81cd0 <__libc_init_array+0x44>)
   81c92:	1b76      	subs	r6, r6, r5
   81c94:	10b6      	asrs	r6, r6, #2
   81c96:	d007      	beq.n	81ca8 <__libc_init_array+0x1c>
   81c98:	3d04      	subs	r5, #4
   81c9a:	2400      	movs	r4, #0
   81c9c:	3401      	adds	r4, #1
   81c9e:	f855 3f04 	ldr.w	r3, [r5, #4]!
   81ca2:	4798      	blx	r3
   81ca4:	42a6      	cmp	r6, r4
   81ca6:	d1f9      	bne.n	81c9c <__libc_init_array+0x10>
   81ca8:	4e0a      	ldr	r6, [pc, #40]	; (81cd4 <__libc_init_array+0x48>)
   81caa:	4d0b      	ldr	r5, [pc, #44]	; (81cd8 <__libc_init_array+0x4c>)
   81cac:	f005 ff1a 	bl	87ae4 <_init>
   81cb0:	1b76      	subs	r6, r6, r5
   81cb2:	10b6      	asrs	r6, r6, #2
   81cb4:	d008      	beq.n	81cc8 <__libc_init_array+0x3c>
   81cb6:	3d04      	subs	r5, #4
   81cb8:	2400      	movs	r4, #0
   81cba:	3401      	adds	r4, #1
   81cbc:	f855 3f04 	ldr.w	r3, [r5, #4]!
   81cc0:	4798      	blx	r3
   81cc2:	42a6      	cmp	r6, r4
   81cc4:	d1f9      	bne.n	81cba <__libc_init_array+0x2e>
   81cc6:	bd70      	pop	{r4, r5, r6, pc}
   81cc8:	bd70      	pop	{r4, r5, r6, pc}
   81cca:	bf00      	nop
   81ccc:	00087af0 	.word	0x00087af0
   81cd0:	00087af0 	.word	0x00087af0
   81cd4:	00087af8 	.word	0x00087af8
   81cd8:	00087af0 	.word	0x00087af0

00081cdc <iprintf>:
   81cdc:	b40f      	push	{r0, r1, r2, r3}
   81cde:	b510      	push	{r4, lr}
   81ce0:	4b07      	ldr	r3, [pc, #28]	; (81d00 <iprintf+0x24>)
   81ce2:	b082      	sub	sp, #8
   81ce4:	ac04      	add	r4, sp, #16
   81ce6:	f854 2b04 	ldr.w	r2, [r4], #4
   81cea:	6818      	ldr	r0, [r3, #0]
   81cec:	4623      	mov	r3, r4
   81cee:	6881      	ldr	r1, [r0, #8]
   81cf0:	9401      	str	r4, [sp, #4]
   81cf2:	f001 fbab 	bl	8344c <_vfiprintf_r>
   81cf6:	b002      	add	sp, #8
   81cf8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   81cfc:	b004      	add	sp, #16
   81cfe:	4770      	bx	lr
   81d00:	20070560 	.word	0x20070560

00081d04 <memset>:
   81d04:	b4f0      	push	{r4, r5, r6, r7}
   81d06:	0784      	lsls	r4, r0, #30
   81d08:	d043      	beq.n	81d92 <memset+0x8e>
   81d0a:	1e54      	subs	r4, r2, #1
   81d0c:	2a00      	cmp	r2, #0
   81d0e:	d03e      	beq.n	81d8e <memset+0x8a>
   81d10:	b2cd      	uxtb	r5, r1
   81d12:	4603      	mov	r3, r0
   81d14:	e003      	b.n	81d1e <memset+0x1a>
   81d16:	1e62      	subs	r2, r4, #1
   81d18:	2c00      	cmp	r4, #0
   81d1a:	d038      	beq.n	81d8e <memset+0x8a>
   81d1c:	4614      	mov	r4, r2
   81d1e:	f803 5b01 	strb.w	r5, [r3], #1
   81d22:	079a      	lsls	r2, r3, #30
   81d24:	d1f7      	bne.n	81d16 <memset+0x12>
   81d26:	2c03      	cmp	r4, #3
   81d28:	d92a      	bls.n	81d80 <memset+0x7c>
   81d2a:	b2cd      	uxtb	r5, r1
   81d2c:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   81d30:	2c0f      	cmp	r4, #15
   81d32:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   81d36:	d915      	bls.n	81d64 <memset+0x60>
   81d38:	f1a4 0710 	sub.w	r7, r4, #16
   81d3c:	093f      	lsrs	r7, r7, #4
   81d3e:	f103 0610 	add.w	r6, r3, #16
   81d42:	eb06 1607 	add.w	r6, r6, r7, lsl #4
   81d46:	461a      	mov	r2, r3
   81d48:	6015      	str	r5, [r2, #0]
   81d4a:	6055      	str	r5, [r2, #4]
   81d4c:	6095      	str	r5, [r2, #8]
   81d4e:	60d5      	str	r5, [r2, #12]
   81d50:	3210      	adds	r2, #16
   81d52:	42b2      	cmp	r2, r6
   81d54:	d1f8      	bne.n	81d48 <memset+0x44>
   81d56:	f004 040f 	and.w	r4, r4, #15
   81d5a:	3701      	adds	r7, #1
   81d5c:	2c03      	cmp	r4, #3
   81d5e:	eb03 1307 	add.w	r3, r3, r7, lsl #4
   81d62:	d90d      	bls.n	81d80 <memset+0x7c>
   81d64:	461e      	mov	r6, r3
   81d66:	4622      	mov	r2, r4
   81d68:	3a04      	subs	r2, #4
   81d6a:	2a03      	cmp	r2, #3
   81d6c:	f846 5b04 	str.w	r5, [r6], #4
   81d70:	d8fa      	bhi.n	81d68 <memset+0x64>
   81d72:	1f22      	subs	r2, r4, #4
   81d74:	f022 0203 	bic.w	r2, r2, #3
   81d78:	3204      	adds	r2, #4
   81d7a:	4413      	add	r3, r2
   81d7c:	f004 0403 	and.w	r4, r4, #3
   81d80:	b12c      	cbz	r4, 81d8e <memset+0x8a>
   81d82:	b2c9      	uxtb	r1, r1
   81d84:	441c      	add	r4, r3
   81d86:	f803 1b01 	strb.w	r1, [r3], #1
   81d8a:	42a3      	cmp	r3, r4
   81d8c:	d1fb      	bne.n	81d86 <memset+0x82>
   81d8e:	bcf0      	pop	{r4, r5, r6, r7}
   81d90:	4770      	bx	lr
   81d92:	4614      	mov	r4, r2
   81d94:	4603      	mov	r3, r0
   81d96:	e7c6      	b.n	81d26 <memset+0x22>

00081d98 <setbuf>:
   81d98:	2900      	cmp	r1, #0
   81d9a:	bf0c      	ite	eq
   81d9c:	2202      	moveq	r2, #2
   81d9e:	2200      	movne	r2, #0
   81da0:	f44f 6380 	mov.w	r3, #1024	; 0x400
   81da4:	f000 b800 	b.w	81da8 <setvbuf>

00081da8 <setvbuf>:
   81da8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81dac:	4d3c      	ldr	r5, [pc, #240]	; (81ea0 <setvbuf+0xf8>)
   81dae:	4604      	mov	r4, r0
   81db0:	682d      	ldr	r5, [r5, #0]
   81db2:	4688      	mov	r8, r1
   81db4:	4616      	mov	r6, r2
   81db6:	461f      	mov	r7, r3
   81db8:	b115      	cbz	r5, 81dc0 <setvbuf+0x18>
   81dba:	6bab      	ldr	r3, [r5, #56]	; 0x38
   81dbc:	2b00      	cmp	r3, #0
   81dbe:	d04f      	beq.n	81e60 <setvbuf+0xb8>
   81dc0:	2e02      	cmp	r6, #2
   81dc2:	d830      	bhi.n	81e26 <setvbuf+0x7e>
   81dc4:	2f00      	cmp	r7, #0
   81dc6:	db2e      	blt.n	81e26 <setvbuf+0x7e>
   81dc8:	4628      	mov	r0, r5
   81dca:	4621      	mov	r1, r4
   81dcc:	f003 fac8 	bl	85360 <_fflush_r>
   81dd0:	89a3      	ldrh	r3, [r4, #12]
   81dd2:	2200      	movs	r2, #0
   81dd4:	6062      	str	r2, [r4, #4]
   81dd6:	61a2      	str	r2, [r4, #24]
   81dd8:	061a      	lsls	r2, r3, #24
   81dda:	d428      	bmi.n	81e2e <setvbuf+0x86>
   81ddc:	f023 0383 	bic.w	r3, r3, #131	; 0x83
   81de0:	b29b      	uxth	r3, r3
   81de2:	2e02      	cmp	r6, #2
   81de4:	81a3      	strh	r3, [r4, #12]
   81de6:	d02d      	beq.n	81e44 <setvbuf+0x9c>
   81de8:	f1b8 0f00 	cmp.w	r8, #0
   81dec:	d03c      	beq.n	81e68 <setvbuf+0xc0>
   81dee:	2e01      	cmp	r6, #1
   81df0:	d013      	beq.n	81e1a <setvbuf+0x72>
   81df2:	b29b      	uxth	r3, r3
   81df4:	f003 0008 	and.w	r0, r3, #8
   81df8:	4a2a      	ldr	r2, [pc, #168]	; (81ea4 <setvbuf+0xfc>)
   81dfa:	b280      	uxth	r0, r0
   81dfc:	63ea      	str	r2, [r5, #60]	; 0x3c
   81dfe:	f8c4 8000 	str.w	r8, [r4]
   81e02:	f8c4 8010 	str.w	r8, [r4, #16]
   81e06:	6167      	str	r7, [r4, #20]
   81e08:	b178      	cbz	r0, 81e2a <setvbuf+0x82>
   81e0a:	f013 0f03 	tst.w	r3, #3
   81e0e:	bf18      	it	ne
   81e10:	2700      	movne	r7, #0
   81e12:	60a7      	str	r7, [r4, #8]
   81e14:	2000      	movs	r0, #0
   81e16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81e1a:	f043 0301 	orr.w	r3, r3, #1
   81e1e:	427a      	negs	r2, r7
   81e20:	81a3      	strh	r3, [r4, #12]
   81e22:	61a2      	str	r2, [r4, #24]
   81e24:	e7e5      	b.n	81df2 <setvbuf+0x4a>
   81e26:	f04f 30ff 	mov.w	r0, #4294967295
   81e2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81e2e:	4628      	mov	r0, r5
   81e30:	6921      	ldr	r1, [r4, #16]
   81e32:	f003 fbf5 	bl	85620 <_free_r>
   81e36:	89a3      	ldrh	r3, [r4, #12]
   81e38:	2e02      	cmp	r6, #2
   81e3a:	f023 0383 	bic.w	r3, r3, #131	; 0x83
   81e3e:	b29b      	uxth	r3, r3
   81e40:	81a3      	strh	r3, [r4, #12]
   81e42:	d1d1      	bne.n	81de8 <setvbuf+0x40>
   81e44:	2000      	movs	r0, #0
   81e46:	f104 0243 	add.w	r2, r4, #67	; 0x43
   81e4a:	f043 0302 	orr.w	r3, r3, #2
   81e4e:	2500      	movs	r5, #0
   81e50:	2101      	movs	r1, #1
   81e52:	81a3      	strh	r3, [r4, #12]
   81e54:	60a5      	str	r5, [r4, #8]
   81e56:	6022      	str	r2, [r4, #0]
   81e58:	6122      	str	r2, [r4, #16]
   81e5a:	6161      	str	r1, [r4, #20]
   81e5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81e60:	4628      	mov	r0, r5
   81e62:	f003 fa99 	bl	85398 <__sinit>
   81e66:	e7ab      	b.n	81dc0 <setvbuf+0x18>
   81e68:	2f00      	cmp	r7, #0
   81e6a:	bf08      	it	eq
   81e6c:	f44f 6780 	moveq.w	r7, #1024	; 0x400
   81e70:	4638      	mov	r0, r7
   81e72:	f003 fecf 	bl	85c14 <malloc>
   81e76:	4680      	mov	r8, r0
   81e78:	b128      	cbz	r0, 81e86 <setvbuf+0xde>
   81e7a:	89a3      	ldrh	r3, [r4, #12]
   81e7c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   81e80:	b29b      	uxth	r3, r3
   81e82:	81a3      	strh	r3, [r4, #12]
   81e84:	e7b3      	b.n	81dee <setvbuf+0x46>
   81e86:	f44f 6080 	mov.w	r0, #1024	; 0x400
   81e8a:	f003 fec3 	bl	85c14 <malloc>
   81e8e:	4680      	mov	r8, r0
   81e90:	b918      	cbnz	r0, 81e9a <setvbuf+0xf2>
   81e92:	89a3      	ldrh	r3, [r4, #12]
   81e94:	f04f 30ff 	mov.w	r0, #4294967295
   81e98:	e7d5      	b.n	81e46 <setvbuf+0x9e>
   81e9a:	f44f 6780 	mov.w	r7, #1024	; 0x400
   81e9e:	e7ec      	b.n	81e7a <setvbuf+0xd2>
   81ea0:	20070560 	.word	0x20070560
   81ea4:	0008538d 	.word	0x0008538d

00081ea8 <sprintf>:
   81ea8:	b40e      	push	{r1, r2, r3}
   81eaa:	b5f0      	push	{r4, r5, r6, r7, lr}
   81eac:	b09c      	sub	sp, #112	; 0x70
   81eae:	ac21      	add	r4, sp, #132	; 0x84
   81eb0:	f854 2b04 	ldr.w	r2, [r4], #4
   81eb4:	490e      	ldr	r1, [pc, #56]	; (81ef0 <sprintf+0x48>)
   81eb6:	4606      	mov	r6, r0
   81eb8:	4623      	mov	r3, r4
   81eba:	f44f 7e02 	mov.w	lr, #520	; 0x208
   81ebe:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   81ec2:	6808      	ldr	r0, [r1, #0]
   81ec4:	f64f 77ff 	movw	r7, #65535	; 0xffff
   81ec8:	a902      	add	r1, sp, #8
   81eca:	9602      	str	r6, [sp, #8]
   81ecc:	9606      	str	r6, [sp, #24]
   81ece:	9401      	str	r4, [sp, #4]
   81ed0:	f8ad e014 	strh.w	lr, [sp, #20]
   81ed4:	9504      	str	r5, [sp, #16]
   81ed6:	9507      	str	r5, [sp, #28]
   81ed8:	f8ad 7016 	strh.w	r7, [sp, #22]
   81edc:	f000 f80a 	bl	81ef4 <_svfprintf_r>
   81ee0:	9b02      	ldr	r3, [sp, #8]
   81ee2:	2200      	movs	r2, #0
   81ee4:	701a      	strb	r2, [r3, #0]
   81ee6:	b01c      	add	sp, #112	; 0x70
   81ee8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   81eec:	b003      	add	sp, #12
   81eee:	4770      	bx	lr
   81ef0:	20070560 	.word	0x20070560

00081ef4 <_svfprintf_r>:
   81ef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81ef8:	b0c9      	sub	sp, #292	; 0x124
   81efa:	9310      	str	r3, [sp, #64]	; 0x40
   81efc:	910c      	str	r1, [sp, #48]	; 0x30
   81efe:	4691      	mov	r9, r2
   81f00:	900d      	str	r0, [sp, #52]	; 0x34
   81f02:	f003 fe13 	bl	85b2c <_localeconv_r>
   81f06:	6800      	ldr	r0, [r0, #0]
   81f08:	9015      	str	r0, [sp, #84]	; 0x54
   81f0a:	f004 ff8f 	bl	86e2c <strlen>
   81f0e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   81f10:	9018      	str	r0, [sp, #96]	; 0x60
   81f12:	89a3      	ldrh	r3, [r4, #12]
   81f14:	061e      	lsls	r6, r3, #24
   81f16:	d503      	bpl.n	81f20 <_svfprintf_r+0x2c>
   81f18:	6923      	ldr	r3, [r4, #16]
   81f1a:	2b00      	cmp	r3, #0
   81f1c:	f001 8081 	beq.w	83022 <_svfprintf_r+0x112e>
   81f20:	ac38      	add	r4, sp, #224	; 0xe0
   81f22:	46a4      	mov	ip, r4
   81f24:	9408      	str	r4, [sp, #32]
   81f26:	942b      	str	r4, [sp, #172]	; 0xac
   81f28:	2500      	movs	r5, #0
   81f2a:	2400      	movs	r4, #0
   81f2c:	e9cd 4516 	strd	r4, r5, [sp, #88]	; 0x58
   81f30:	2300      	movs	r3, #0
   81f32:	9311      	str	r3, [sp, #68]	; 0x44
   81f34:	932d      	str	r3, [sp, #180]	; 0xb4
   81f36:	932c      	str	r3, [sp, #176]	; 0xb0
   81f38:	931a      	str	r3, [sp, #104]	; 0x68
   81f3a:	9319      	str	r3, [sp, #100]	; 0x64
   81f3c:	930e      	str	r3, [sp, #56]	; 0x38
   81f3e:	4666      	mov	r6, ip
   81f40:	f899 3000 	ldrb.w	r3, [r9]
   81f44:	2b00      	cmp	r3, #0
   81f46:	f000 80f8 	beq.w	8213a <_svfprintf_r+0x246>
   81f4a:	2b25      	cmp	r3, #37	; 0x25
   81f4c:	f000 80f5 	beq.w	8213a <_svfprintf_r+0x246>
   81f50:	f109 0201 	add.w	r2, r9, #1
   81f54:	e001      	b.n	81f5a <_svfprintf_r+0x66>
   81f56:	2b25      	cmp	r3, #37	; 0x25
   81f58:	d004      	beq.n	81f64 <_svfprintf_r+0x70>
   81f5a:	7813      	ldrb	r3, [r2, #0]
   81f5c:	4614      	mov	r4, r2
   81f5e:	3201      	adds	r2, #1
   81f60:	2b00      	cmp	r3, #0
   81f62:	d1f8      	bne.n	81f56 <_svfprintf_r+0x62>
   81f64:	ebc9 0504 	rsb	r5, r9, r4
   81f68:	b17d      	cbz	r5, 81f8a <_svfprintf_r+0x96>
   81f6a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81f6c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   81f6e:	3301      	adds	r3, #1
   81f70:	442a      	add	r2, r5
   81f72:	2b07      	cmp	r3, #7
   81f74:	f8c6 9000 	str.w	r9, [r6]
   81f78:	6075      	str	r5, [r6, #4]
   81f7a:	922d      	str	r2, [sp, #180]	; 0xb4
   81f7c:	932c      	str	r3, [sp, #176]	; 0xb0
   81f7e:	f300 80c2 	bgt.w	82106 <_svfprintf_r+0x212>
   81f82:	3608      	adds	r6, #8
   81f84:	980e      	ldr	r0, [sp, #56]	; 0x38
   81f86:	4428      	add	r0, r5
   81f88:	900e      	str	r0, [sp, #56]	; 0x38
   81f8a:	7823      	ldrb	r3, [r4, #0]
   81f8c:	2b00      	cmp	r3, #0
   81f8e:	f000 80c2 	beq.w	82116 <_svfprintf_r+0x222>
   81f92:	2300      	movs	r3, #0
   81f94:	f894 8001 	ldrb.w	r8, [r4, #1]
   81f98:	461a      	mov	r2, r3
   81f9a:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   81f9e:	930f      	str	r3, [sp, #60]	; 0x3c
   81fa0:	9309      	str	r3, [sp, #36]	; 0x24
   81fa2:	f104 0901 	add.w	r9, r4, #1
   81fa6:	f04f 34ff 	mov.w	r4, #4294967295
   81faa:	940a      	str	r4, [sp, #40]	; 0x28
   81fac:	f109 0901 	add.w	r9, r9, #1
   81fb0:	f1a8 0320 	sub.w	r3, r8, #32
   81fb4:	2b58      	cmp	r3, #88	; 0x58
   81fb6:	f200 83c5 	bhi.w	82744 <_svfprintf_r+0x850>
   81fba:	e8df f013 	tbh	[pc, r3, lsl #1]
   81fbe:	026a      	.short	0x026a
   81fc0:	03c303c3 	.word	0x03c303c3
   81fc4:	03c30271 	.word	0x03c30271
   81fc8:	03c303c3 	.word	0x03c303c3
   81fcc:	03c303c3 	.word	0x03c303c3
   81fd0:	031403c3 	.word	0x031403c3
   81fd4:	03c30366 	.word	0x03c30366
   81fd8:	00c0009d 	.word	0x00c0009d
   81fdc:	027803c3 	.word	0x027803c3
   81fe0:	027f027f 	.word	0x027f027f
   81fe4:	027f027f 	.word	0x027f027f
   81fe8:	027f027f 	.word	0x027f027f
   81fec:	027f027f 	.word	0x027f027f
   81ff0:	03c3027f 	.word	0x03c3027f
   81ff4:	03c303c3 	.word	0x03c303c3
   81ff8:	03c303c3 	.word	0x03c303c3
   81ffc:	03c303c3 	.word	0x03c303c3
   82000:	03c303c3 	.word	0x03c303c3
   82004:	029003c3 	.word	0x029003c3
   82008:	03c30371 	.word	0x03c30371
   8200c:	03c30371 	.word	0x03c30371
   82010:	03c303c3 	.word	0x03c303c3
   82014:	036a03c3 	.word	0x036a03c3
   82018:	03c303c3 	.word	0x03c303c3
   8201c:	03c30078 	.word	0x03c30078
   82020:	03c303c3 	.word	0x03c303c3
   82024:	03c303c3 	.word	0x03c303c3
   82028:	03c30059 	.word	0x03c30059
   8202c:	02af03c3 	.word	0x02af03c3
   82030:	03c303c3 	.word	0x03c303c3
   82034:	03c303c3 	.word	0x03c303c3
   82038:	03c303c3 	.word	0x03c303c3
   8203c:	03c303c3 	.word	0x03c303c3
   82040:	03c303c3 	.word	0x03c303c3
   82044:	03480337 	.word	0x03480337
   82048:	03710371 	.word	0x03710371
   8204c:	02ff0371 	.word	0x02ff0371
   82050:	03c30348 	.word	0x03c30348
   82054:	030803c3 	.word	0x030803c3
   82058:	02c503c3 	.word	0x02c503c3
   8205c:	0320007c 	.word	0x0320007c
   82060:	03c303a3 	.word	0x03c303a3
   82064:	03c302d9 	.word	0x03c302d9
   82068:	03c3005f 	.word	0x03c3005f
   8206c:	00de03c3 	.word	0x00de03c3
   82070:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82074:	f04c 0c10 	orr.w	ip, ip, #16
   82078:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   8207c:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8207e:	06a2      	lsls	r2, r4, #26
   82080:	f100 8354 	bmi.w	8272c <_svfprintf_r+0x838>
   82084:	9c09      	ldr	r4, [sp, #36]	; 0x24
   82086:	06e3      	lsls	r3, r4, #27
   82088:	f100 85bd 	bmi.w	82c06 <_svfprintf_r+0xd12>
   8208c:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82090:	f01c 0f40 	tst.w	ip, #64	; 0x40
   82094:	f000 85b7 	beq.w	82c06 <_svfprintf_r+0xd12>
   82098:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   8209c:	2500      	movs	r5, #0
   8209e:	f8bc 4000 	ldrh.w	r4, [ip]
   820a2:	f10c 0c04 	add.w	ip, ip, #4
   820a6:	2301      	movs	r3, #1
   820a8:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   820ac:	e08c      	b.n	821c8 <_svfprintf_r+0x2d4>
   820ae:	9d09      	ldr	r5, [sp, #36]	; 0x24
   820b0:	f045 0510 	orr.w	r5, r5, #16
   820b4:	9509      	str	r5, [sp, #36]	; 0x24
   820b6:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   820ba:	f01c 0320 	ands.w	r3, ip, #32
   820be:	f040 832a 	bne.w	82716 <_svfprintf_r+0x822>
   820c2:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   820c6:	f01c 0210 	ands.w	r2, ip, #16
   820ca:	f040 85a4 	bne.w	82c16 <_svfprintf_r+0xd22>
   820ce:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   820d2:	f01c 0340 	ands.w	r3, ip, #64	; 0x40
   820d6:	f000 859e 	beq.w	82c16 <_svfprintf_r+0xd22>
   820da:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   820de:	4613      	mov	r3, r2
   820e0:	f8bc 4000 	ldrh.w	r4, [ip]
   820e4:	f10c 0c04 	add.w	ip, ip, #4
   820e8:	2500      	movs	r5, #0
   820ea:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   820ee:	e06b      	b.n	821c8 <_svfprintf_r+0x2d4>
   820f0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   820f2:	9310      	str	r3, [sp, #64]	; 0x40
   820f4:	4264      	negs	r4, r4
   820f6:	940f      	str	r4, [sp, #60]	; 0x3c
   820f8:	9d09      	ldr	r5, [sp, #36]	; 0x24
   820fa:	f045 0504 	orr.w	r5, r5, #4
   820fe:	9509      	str	r5, [sp, #36]	; 0x24
   82100:	f899 8000 	ldrb.w	r8, [r9]
   82104:	e752      	b.n	81fac <_svfprintf_r+0xb8>
   82106:	980d      	ldr	r0, [sp, #52]	; 0x34
   82108:	990c      	ldr	r1, [sp, #48]	; 0x30
   8210a:	aa2b      	add	r2, sp, #172	; 0xac
   8210c:	f004 febe 	bl	86e8c <__ssprint_r>
   82110:	b940      	cbnz	r0, 82124 <_svfprintf_r+0x230>
   82112:	ae38      	add	r6, sp, #224	; 0xe0
   82114:	e736      	b.n	81f84 <_svfprintf_r+0x90>
   82116:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   82118:	b123      	cbz	r3, 82124 <_svfprintf_r+0x230>
   8211a:	980d      	ldr	r0, [sp, #52]	; 0x34
   8211c:	990c      	ldr	r1, [sp, #48]	; 0x30
   8211e:	aa2b      	add	r2, sp, #172	; 0xac
   82120:	f004 feb4 	bl	86e8c <__ssprint_r>
   82124:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82126:	980e      	ldr	r0, [sp, #56]	; 0x38
   82128:	89a3      	ldrh	r3, [r4, #12]
   8212a:	f013 0f40 	tst.w	r3, #64	; 0x40
   8212e:	bf18      	it	ne
   82130:	f04f 30ff 	movne.w	r0, #4294967295
   82134:	b049      	add	sp, #292	; 0x124
   82136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8213a:	464c      	mov	r4, r9
   8213c:	e725      	b.n	81f8a <_svfprintf_r+0x96>
   8213e:	f899 8000 	ldrb.w	r8, [r9]
   82142:	f109 0001 	add.w	r0, r9, #1
   82146:	f1b8 0f2a 	cmp.w	r8, #42	; 0x2a
   8214a:	f001 810c 	beq.w	83366 <_svfprintf_r+0x1472>
   8214e:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   82152:	2b09      	cmp	r3, #9
   82154:	bf98      	it	ls
   82156:	2100      	movls	r1, #0
   82158:	f201 806b 	bhi.w	83232 <_svfprintf_r+0x133e>
   8215c:	f810 8b01 	ldrb.w	r8, [r0], #1
   82160:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   82164:	eb03 0141 	add.w	r1, r3, r1, lsl #1
   82168:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   8216c:	2b09      	cmp	r3, #9
   8216e:	d9f5      	bls.n	8215c <_svfprintf_r+0x268>
   82170:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
   82174:	910a      	str	r1, [sp, #40]	; 0x28
   82176:	4681      	mov	r9, r0
   82178:	e71a      	b.n	81fb0 <_svfprintf_r+0xbc>
   8217a:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8217c:	4ca1      	ldr	r4, [pc, #644]	; (82404 <_svfprintf_r+0x510>)
   8217e:	06af      	lsls	r7, r5, #26
   82180:	941a      	str	r4, [sp, #104]	; 0x68
   82182:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   82186:	f140 81d1 	bpl.w	8252c <_svfprintf_r+0x638>
   8218a:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   8218e:	f10c 0307 	add.w	r3, ip, #7
   82192:	f023 0307 	bic.w	r3, r3, #7
   82196:	f103 0408 	add.w	r4, r3, #8
   8219a:	9410      	str	r4, [sp, #64]	; 0x40
   8219c:	e9d3 4500 	ldrd	r4, r5, [r3]
   821a0:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   821a4:	f01c 0f01 	tst.w	ip, #1
   821a8:	f000 8462 	beq.w	82a70 <_svfprintf_r+0xb7c>
   821ac:	ea54 0005 	orrs.w	r0, r4, r5
   821b0:	f000 845e 	beq.w	82a70 <_svfprintf_r+0xb7c>
   821b4:	2330      	movs	r3, #48	; 0x30
   821b6:	f04c 0c02 	orr.w	ip, ip, #2
   821ba:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
   821be:	f88d 8091 	strb.w	r8, [sp, #145]	; 0x91
   821c2:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   821c6:	2302      	movs	r3, #2
   821c8:	f04f 0a00 	mov.w	sl, #0
   821cc:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   821d0:	990a      	ldr	r1, [sp, #40]	; 0x28
   821d2:	2900      	cmp	r1, #0
   821d4:	db05      	blt.n	821e2 <_svfprintf_r+0x2ee>
   821d6:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   821da:	f02c 0c80 	bic.w	ip, ip, #128	; 0x80
   821de:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   821e2:	ea54 0005 	orrs.w	r0, r4, r5
   821e6:	f040 82c5 	bne.w	82774 <_svfprintf_r+0x880>
   821ea:	990a      	ldr	r1, [sp, #40]	; 0x28
   821ec:	2900      	cmp	r1, #0
   821ee:	f040 82c1 	bne.w	82774 <_svfprintf_r+0x880>
   821f2:	2b00      	cmp	r3, #0
   821f4:	f040 8438 	bne.w	82a68 <_svfprintf_r+0xb74>
   821f8:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   821fc:	f01c 0f01 	tst.w	ip, #1
   82200:	f000 8432 	beq.w	82a68 <_svfprintf_r+0xb74>
   82204:	af48      	add	r7, sp, #288	; 0x120
   82206:	2330      	movs	r3, #48	; 0x30
   82208:	9d08      	ldr	r5, [sp, #32]
   8220a:	f807 3d41 	strb.w	r3, [r7, #-65]!
   8220e:	1bec      	subs	r4, r5, r7
   82210:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
   82214:	2500      	movs	r5, #0
   82216:	4564      	cmp	r4, ip
   82218:	bfa8      	it	ge
   8221a:	46a4      	movge	ip, r4
   8221c:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   82220:	9514      	str	r5, [sp, #80]	; 0x50
   82222:	f1ba 0f00 	cmp.w	sl, #0
   82226:	d002      	beq.n	8222e <_svfprintf_r+0x33a>
   82228:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   8222a:	3501      	adds	r5, #1
   8222c:	950b      	str	r5, [sp, #44]	; 0x2c
   8222e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82230:	f013 0302 	ands.w	r3, r3, #2
   82234:	9312      	str	r3, [sp, #72]	; 0x48
   82236:	d002      	beq.n	8223e <_svfprintf_r+0x34a>
   82238:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   8223a:	3502      	adds	r5, #2
   8223c:	950b      	str	r5, [sp, #44]	; 0x2c
   8223e:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82242:	f01c 0c84 	ands.w	ip, ip, #132	; 0x84
   82246:	f8cd c04c 	str.w	ip, [sp, #76]	; 0x4c
   8224a:	f040 8290 	bne.w	8276e <_svfprintf_r+0x87a>
   8224e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   82250:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
   82254:	ebcc 0b05 	rsb	fp, ip, r5
   82258:	f1bb 0f00 	cmp.w	fp, #0
   8225c:	f340 8287 	ble.w	8276e <_svfprintf_r+0x87a>
   82260:	f1bb 0f10 	cmp.w	fp, #16
   82264:	992d      	ldr	r1, [sp, #180]	; 0xb4
   82266:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   82268:	f8df a1a0 	ldr.w	sl, [pc, #416]	; 8240c <_svfprintf_r+0x518>
   8226c:	dd2c      	ble.n	822c8 <_svfprintf_r+0x3d4>
   8226e:	971b      	str	r7, [sp, #108]	; 0x6c
   82270:	4630      	mov	r0, r6
   82272:	4657      	mov	r7, sl
   82274:	2510      	movs	r5, #16
   82276:	46ca      	mov	sl, r9
   82278:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   8227a:	46a1      	mov	r9, r4
   8227c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   8227e:	e006      	b.n	8228e <_svfprintf_r+0x39a>
   82280:	f1ab 0b10 	sub.w	fp, fp, #16
   82284:	f1bb 0f10 	cmp.w	fp, #16
   82288:	f100 0008 	add.w	r0, r0, #8
   8228c:	dd17      	ble.n	822be <_svfprintf_r+0x3ca>
   8228e:	3201      	adds	r2, #1
   82290:	3110      	adds	r1, #16
   82292:	2a07      	cmp	r2, #7
   82294:	912d      	str	r1, [sp, #180]	; 0xb4
   82296:	922c      	str	r2, [sp, #176]	; 0xb0
   82298:	6007      	str	r7, [r0, #0]
   8229a:	6045      	str	r5, [r0, #4]
   8229c:	ddf0      	ble.n	82280 <_svfprintf_r+0x38c>
   8229e:	4620      	mov	r0, r4
   822a0:	4631      	mov	r1, r6
   822a2:	aa2b      	add	r2, sp, #172	; 0xac
   822a4:	f004 fdf2 	bl	86e8c <__ssprint_r>
   822a8:	2800      	cmp	r0, #0
   822aa:	f47f af3b 	bne.w	82124 <_svfprintf_r+0x230>
   822ae:	f1ab 0b10 	sub.w	fp, fp, #16
   822b2:	f1bb 0f10 	cmp.w	fp, #16
   822b6:	992d      	ldr	r1, [sp, #180]	; 0xb4
   822b8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   822ba:	a838      	add	r0, sp, #224	; 0xe0
   822bc:	dce7      	bgt.n	8228e <_svfprintf_r+0x39a>
   822be:	464c      	mov	r4, r9
   822c0:	46d1      	mov	r9, sl
   822c2:	46ba      	mov	sl, r7
   822c4:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
   822c6:	4606      	mov	r6, r0
   822c8:	3201      	adds	r2, #1
   822ca:	eb0b 0c01 	add.w	ip, fp, r1
   822ce:	2a07      	cmp	r2, #7
   822d0:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   822d4:	922c      	str	r2, [sp, #176]	; 0xb0
   822d6:	e886 0c00 	stmia.w	r6, {sl, fp}
   822da:	f300 841a 	bgt.w	82b12 <_svfprintf_r+0xc1e>
   822de:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   822e2:	3608      	adds	r6, #8
   822e4:	f1ba 0f00 	cmp.w	sl, #0
   822e8:	d00f      	beq.n	8230a <_svfprintf_r+0x416>
   822ea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   822ec:	f10c 0c01 	add.w	ip, ip, #1
   822f0:	3301      	adds	r3, #1
   822f2:	f10d 018f 	add.w	r1, sp, #143	; 0x8f
   822f6:	2201      	movs	r2, #1
   822f8:	2b07      	cmp	r3, #7
   822fa:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   822fe:	932c      	str	r3, [sp, #176]	; 0xb0
   82300:	e886 0006 	stmia.w	r6, {r1, r2}
   82304:	f300 83a4 	bgt.w	82a50 <_svfprintf_r+0xb5c>
   82308:	3608      	adds	r6, #8
   8230a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8230c:	b173      	cbz	r3, 8232c <_svfprintf_r+0x438>
   8230e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82310:	f10c 0c02 	add.w	ip, ip, #2
   82314:	3301      	adds	r3, #1
   82316:	a924      	add	r1, sp, #144	; 0x90
   82318:	2202      	movs	r2, #2
   8231a:	2b07      	cmp	r3, #7
   8231c:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82320:	932c      	str	r3, [sp, #176]	; 0xb0
   82322:	e886 0006 	stmia.w	r6, {r1, r2}
   82326:	f300 8387 	bgt.w	82a38 <_svfprintf_r+0xb44>
   8232a:	3608      	adds	r6, #8
   8232c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
   8232e:	2d80      	cmp	r5, #128	; 0x80
   82330:	f000 82ca 	beq.w	828c8 <_svfprintf_r+0x9d4>
   82334:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82336:	ebc4 0a05 	rsb	sl, r4, r5
   8233a:	f1ba 0f00 	cmp.w	sl, #0
   8233e:	dd3b      	ble.n	823b8 <_svfprintf_r+0x4c4>
   82340:	f1ba 0f10 	cmp.w	sl, #16
   82344:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82346:	4d30      	ldr	r5, [pc, #192]	; (82408 <_svfprintf_r+0x514>)
   82348:	dd2b      	ble.n	823a2 <_svfprintf_r+0x4ae>
   8234a:	940a      	str	r4, [sp, #40]	; 0x28
   8234c:	4632      	mov	r2, r6
   8234e:	f04f 0b10 	mov.w	fp, #16
   82352:	462e      	mov	r6, r5
   82354:	4661      	mov	r1, ip
   82356:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   82358:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   8235a:	e006      	b.n	8236a <_svfprintf_r+0x476>
   8235c:	f1aa 0a10 	sub.w	sl, sl, #16
   82360:	f1ba 0f10 	cmp.w	sl, #16
   82364:	f102 0208 	add.w	r2, r2, #8
   82368:	dd17      	ble.n	8239a <_svfprintf_r+0x4a6>
   8236a:	3301      	adds	r3, #1
   8236c:	3110      	adds	r1, #16
   8236e:	2b07      	cmp	r3, #7
   82370:	912d      	str	r1, [sp, #180]	; 0xb4
   82372:	932c      	str	r3, [sp, #176]	; 0xb0
   82374:	e882 0840 	stmia.w	r2, {r6, fp}
   82378:	ddf0      	ble.n	8235c <_svfprintf_r+0x468>
   8237a:	4620      	mov	r0, r4
   8237c:	4629      	mov	r1, r5
   8237e:	aa2b      	add	r2, sp, #172	; 0xac
   82380:	f004 fd84 	bl	86e8c <__ssprint_r>
   82384:	2800      	cmp	r0, #0
   82386:	f47f aecd 	bne.w	82124 <_svfprintf_r+0x230>
   8238a:	f1aa 0a10 	sub.w	sl, sl, #16
   8238e:	f1ba 0f10 	cmp.w	sl, #16
   82392:	992d      	ldr	r1, [sp, #180]	; 0xb4
   82394:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82396:	aa38      	add	r2, sp, #224	; 0xe0
   82398:	dce7      	bgt.n	8236a <_svfprintf_r+0x476>
   8239a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   8239c:	4635      	mov	r5, r6
   8239e:	468c      	mov	ip, r1
   823a0:	4616      	mov	r6, r2
   823a2:	3301      	adds	r3, #1
   823a4:	44d4      	add	ip, sl
   823a6:	2b07      	cmp	r3, #7
   823a8:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   823ac:	932c      	str	r3, [sp, #176]	; 0xb0
   823ae:	e886 0420 	stmia.w	r6, {r5, sl}
   823b2:	f300 8335 	bgt.w	82a20 <_svfprintf_r+0xb2c>
   823b6:	3608      	adds	r6, #8
   823b8:	9d09      	ldr	r5, [sp, #36]	; 0x24
   823ba:	05ed      	lsls	r5, r5, #23
   823bc:	f100 8224 	bmi.w	82808 <_svfprintf_r+0x914>
   823c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   823c2:	44a4      	add	ip, r4
   823c4:	3301      	adds	r3, #1
   823c6:	2b07      	cmp	r3, #7
   823c8:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   823cc:	6037      	str	r7, [r6, #0]
   823ce:	6074      	str	r4, [r6, #4]
   823d0:	932c      	str	r3, [sp, #176]	; 0xb0
   823d2:	f300 830f 	bgt.w	829f4 <_svfprintf_r+0xb00>
   823d6:	3608      	adds	r6, #8
   823d8:	9c09      	ldr	r4, [sp, #36]	; 0x24
   823da:	0763      	lsls	r3, r4, #29
   823dc:	d549      	bpl.n	82472 <_svfprintf_r+0x57e>
   823de:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   823e0:	980b      	ldr	r0, [sp, #44]	; 0x2c
   823e2:	1a2c      	subs	r4, r5, r0
   823e4:	2c00      	cmp	r4, #0
   823e6:	dd44      	ble.n	82472 <_svfprintf_r+0x57e>
   823e8:	2c10      	cmp	r4, #16
   823ea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   823ec:	f8df a01c 	ldr.w	sl, [pc, #28]	; 8240c <_svfprintf_r+0x518>
   823f0:	dd2b      	ble.n	8244a <_svfprintf_r+0x556>
   823f2:	4657      	mov	r7, sl
   823f4:	2510      	movs	r5, #16
   823f6:	4662      	mov	r2, ip
   823f8:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   823fc:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
   82400:	e00b      	b.n	8241a <_svfprintf_r+0x526>
   82402:	bf00      	nop
   82404:	0008797c 	.word	0x0008797c
   82408:	00087948 	.word	0x00087948
   8240c:	0008799c 	.word	0x0008799c
   82410:	3c10      	subs	r4, #16
   82412:	2c10      	cmp	r4, #16
   82414:	f106 0608 	add.w	r6, r6, #8
   82418:	dd15      	ble.n	82446 <_svfprintf_r+0x552>
   8241a:	3301      	adds	r3, #1
   8241c:	3210      	adds	r2, #16
   8241e:	2b07      	cmp	r3, #7
   82420:	922d      	str	r2, [sp, #180]	; 0xb4
   82422:	932c      	str	r3, [sp, #176]	; 0xb0
   82424:	6037      	str	r7, [r6, #0]
   82426:	6075      	str	r5, [r6, #4]
   82428:	ddf2      	ble.n	82410 <_svfprintf_r+0x51c>
   8242a:	4650      	mov	r0, sl
   8242c:	4641      	mov	r1, r8
   8242e:	aa2b      	add	r2, sp, #172	; 0xac
   82430:	f004 fd2c 	bl	86e8c <__ssprint_r>
   82434:	2800      	cmp	r0, #0
   82436:	f47f ae75 	bne.w	82124 <_svfprintf_r+0x230>
   8243a:	3c10      	subs	r4, #16
   8243c:	2c10      	cmp	r4, #16
   8243e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   82440:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82442:	ae38      	add	r6, sp, #224	; 0xe0
   82444:	dce9      	bgt.n	8241a <_svfprintf_r+0x526>
   82446:	4694      	mov	ip, r2
   82448:	46ba      	mov	sl, r7
   8244a:	3301      	adds	r3, #1
   8244c:	44a4      	add	ip, r4
   8244e:	2b07      	cmp	r3, #7
   82450:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82454:	932c      	str	r3, [sp, #176]	; 0xb0
   82456:	f8c6 a000 	str.w	sl, [r6]
   8245a:	6074      	str	r4, [r6, #4]
   8245c:	dd09      	ble.n	82472 <_svfprintf_r+0x57e>
   8245e:	980d      	ldr	r0, [sp, #52]	; 0x34
   82460:	990c      	ldr	r1, [sp, #48]	; 0x30
   82462:	aa2b      	add	r2, sp, #172	; 0xac
   82464:	f004 fd12 	bl	86e8c <__ssprint_r>
   82468:	2800      	cmp	r0, #0
   8246a:	f47f ae5b 	bne.w	82124 <_svfprintf_r+0x230>
   8246e:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82472:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   82474:	980b      	ldr	r0, [sp, #44]	; 0x2c
   82476:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   82478:	42a8      	cmp	r0, r5
   8247a:	bfac      	ite	ge
   8247c:	1824      	addge	r4, r4, r0
   8247e:	1964      	addlt	r4, r4, r5
   82480:	940e      	str	r4, [sp, #56]	; 0x38
   82482:	f1bc 0f00 	cmp.w	ip, #0
   82486:	f040 82c1 	bne.w	82a0c <_svfprintf_r+0xb18>
   8248a:	2300      	movs	r3, #0
   8248c:	932c      	str	r3, [sp, #176]	; 0xb0
   8248e:	ae38      	add	r6, sp, #224	; 0xe0
   82490:	e556      	b.n	81f40 <_svfprintf_r+0x4c>
   82492:	f899 8000 	ldrb.w	r8, [r9]
   82496:	2a00      	cmp	r2, #0
   82498:	f47f ad88 	bne.w	81fac <_svfprintf_r+0xb8>
   8249c:	2220      	movs	r2, #32
   8249e:	e585      	b.n	81fac <_svfprintf_r+0xb8>
   824a0:	9d09      	ldr	r5, [sp, #36]	; 0x24
   824a2:	f045 0501 	orr.w	r5, r5, #1
   824a6:	9509      	str	r5, [sp, #36]	; 0x24
   824a8:	f899 8000 	ldrb.w	r8, [r9]
   824ac:	e57e      	b.n	81fac <_svfprintf_r+0xb8>
   824ae:	9d09      	ldr	r5, [sp, #36]	; 0x24
   824b0:	f045 0580 	orr.w	r5, r5, #128	; 0x80
   824b4:	9509      	str	r5, [sp, #36]	; 0x24
   824b6:	f899 8000 	ldrb.w	r8, [r9]
   824ba:	e577      	b.n	81fac <_svfprintf_r+0xb8>
   824bc:	2400      	movs	r4, #0
   824be:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   824c2:	940f      	str	r4, [sp, #60]	; 0x3c
   824c4:	4621      	mov	r1, r4
   824c6:	f819 8b01 	ldrb.w	r8, [r9], #1
   824ca:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   824ce:	eb03 0141 	add.w	r1, r3, r1, lsl #1
   824d2:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   824d6:	2b09      	cmp	r3, #9
   824d8:	d9f5      	bls.n	824c6 <_svfprintf_r+0x5d2>
   824da:	910f      	str	r1, [sp, #60]	; 0x3c
   824dc:	e568      	b.n	81fb0 <_svfprintf_r+0xbc>
   824de:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   824e2:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   824e6:	f04c 0c10 	orr.w	ip, ip, #16
   824ea:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   824ee:	9c09      	ldr	r4, [sp, #36]	; 0x24
   824f0:	06a5      	lsls	r5, r4, #26
   824f2:	f140 80b2 	bpl.w	8265a <_svfprintf_r+0x766>
   824f6:	9d10      	ldr	r5, [sp, #64]	; 0x40
   824f8:	1de9      	adds	r1, r5, #7
   824fa:	f021 0107 	bic.w	r1, r1, #7
   824fe:	e9d1 2300 	ldrd	r2, r3, [r1]
   82502:	3108      	adds	r1, #8
   82504:	9110      	str	r1, [sp, #64]	; 0x40
   82506:	4614      	mov	r4, r2
   82508:	461d      	mov	r5, r3
   8250a:	2a00      	cmp	r2, #0
   8250c:	f173 0c00 	sbcs.w	ip, r3, #0
   82510:	f2c0 8394 	blt.w	82c3c <_svfprintf_r+0xd48>
   82514:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   82518:	2301      	movs	r3, #1
   8251a:	e659      	b.n	821d0 <_svfprintf_r+0x2dc>
   8251c:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8251e:	4cb6      	ldr	r4, [pc, #728]	; (827f8 <_svfprintf_r+0x904>)
   82520:	06af      	lsls	r7, r5, #26
   82522:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   82526:	941a      	str	r4, [sp, #104]	; 0x68
   82528:	f53f ae2f 	bmi.w	8218a <_svfprintf_r+0x296>
   8252c:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8252e:	06ed      	lsls	r5, r5, #27
   82530:	f140 8443 	bpl.w	82dba <_svfprintf_r+0xec6>
   82534:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   82538:	2500      	movs	r5, #0
   8253a:	f8dc 4000 	ldr.w	r4, [ip]
   8253e:	f10c 0c04 	add.w	ip, ip, #4
   82542:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   82546:	e62b      	b.n	821a0 <_svfprintf_r+0x2ac>
   82548:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8254c:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   82550:	f01c 0f20 	tst.w	ip, #32
   82554:	f000 8440 	beq.w	82dd8 <_svfprintf_r+0xee4>
   82558:	9c10      	ldr	r4, [sp, #64]	; 0x40
   8255a:	6821      	ldr	r1, [r4, #0]
   8255c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   8255e:	17e5      	asrs	r5, r4, #31
   82560:	462b      	mov	r3, r5
   82562:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82564:	4622      	mov	r2, r4
   82566:	3504      	adds	r5, #4
   82568:	9510      	str	r5, [sp, #64]	; 0x40
   8256a:	e9c1 2300 	strd	r2, r3, [r1]
   8256e:	e4e7      	b.n	81f40 <_svfprintf_r+0x4c>
   82570:	9c10      	ldr	r4, [sp, #64]	; 0x40
   82572:	f04f 0a00 	mov.w	sl, #0
   82576:	6827      	ldr	r7, [r4, #0]
   82578:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   8257c:	1d25      	adds	r5, r4, #4
   8257e:	2f00      	cmp	r7, #0
   82580:	f000 85e9 	beq.w	83156 <_svfprintf_r+0x1262>
   82584:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82586:	4638      	mov	r0, r7
   82588:	2c00      	cmp	r4, #0
   8258a:	f2c0 859b 	blt.w	830c4 <_svfprintf_r+0x11d0>
   8258e:	4651      	mov	r1, sl
   82590:	4622      	mov	r2, r4
   82592:	f003 fde3 	bl	8615c <memchr>
   82596:	2800      	cmp	r0, #0
   82598:	f000 8613 	beq.w	831c2 <_svfprintf_r+0x12ce>
   8259c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   8259e:	1bc0      	subs	r0, r0, r7
   825a0:	42a0      	cmp	r0, r4
   825a2:	bfb8      	it	lt
   825a4:	4604      	movlt	r4, r0
   825a6:	9510      	str	r5, [sp, #64]	; 0x40
   825a8:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
   825ac:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
   825b0:	f8cd a050 	str.w	sl, [sp, #80]	; 0x50
   825b4:	950b      	str	r5, [sp, #44]	; 0x2c
   825b6:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   825ba:	e632      	b.n	82222 <_svfprintf_r+0x32e>
   825bc:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   825c0:	f04c 0c40 	orr.w	ip, ip, #64	; 0x40
   825c4:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   825c8:	f899 8000 	ldrb.w	r8, [r9]
   825cc:	e4ee      	b.n	81fac <_svfprintf_r+0xb8>
   825ce:	f899 8000 	ldrb.w	r8, [r9]
   825d2:	464b      	mov	r3, r9
   825d4:	f1b8 0f6c 	cmp.w	r8, #108	; 0x6c
   825d8:	f000 847f 	beq.w	82eda <_svfprintf_r+0xfe6>
   825dc:	9d09      	ldr	r5, [sp, #36]	; 0x24
   825de:	f045 0510 	orr.w	r5, r5, #16
   825e2:	9509      	str	r5, [sp, #36]	; 0x24
   825e4:	e4e2      	b.n	81fac <_svfprintf_r+0xb8>
   825e6:	9c10      	ldr	r4, [sp, #64]	; 0x40
   825e8:	9d10      	ldr	r5, [sp, #64]	; 0x40
   825ea:	6824      	ldr	r4, [r4, #0]
   825ec:	1d2b      	adds	r3, r5, #4
   825ee:	2c00      	cmp	r4, #0
   825f0:	940f      	str	r4, [sp, #60]	; 0x3c
   825f2:	f6ff ad7d 	blt.w	820f0 <_svfprintf_r+0x1fc>
   825f6:	9310      	str	r3, [sp, #64]	; 0x40
   825f8:	f899 8000 	ldrb.w	r8, [r9]
   825fc:	e4d6      	b.n	81fac <_svfprintf_r+0xb8>
   825fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
   82600:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82604:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82606:	487d      	ldr	r0, [pc, #500]	; (827fc <_svfprintf_r+0x908>)
   82608:	3504      	adds	r5, #4
   8260a:	681c      	ldr	r4, [r3, #0]
   8260c:	f04f 0878 	mov.w	r8, #120	; 0x78
   82610:	2330      	movs	r3, #48	; 0x30
   82612:	f04c 0c02 	orr.w	ip, ip, #2
   82616:	9510      	str	r5, [sp, #64]	; 0x40
   82618:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
   8261c:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   82620:	2500      	movs	r5, #0
   82622:	f88d 8091 	strb.w	r8, [sp, #145]	; 0x91
   82626:	901a      	str	r0, [sp, #104]	; 0x68
   82628:	2302      	movs	r3, #2
   8262a:	e5cd      	b.n	821c8 <_svfprintf_r+0x2d4>
   8262c:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8262e:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82630:	681a      	ldr	r2, [r3, #0]
   82632:	2401      	movs	r4, #1
   82634:	2300      	movs	r3, #0
   82636:	3504      	adds	r5, #4
   82638:	469a      	mov	sl, r3
   8263a:	940b      	str	r4, [sp, #44]	; 0x2c
   8263c:	f88d 20b8 	strb.w	r2, [sp, #184]	; 0xb8
   82640:	9510      	str	r5, [sp, #64]	; 0x40
   82642:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   82646:	930a      	str	r3, [sp, #40]	; 0x28
   82648:	9314      	str	r3, [sp, #80]	; 0x50
   8264a:	af2e      	add	r7, sp, #184	; 0xb8
   8264c:	e5ef      	b.n	8222e <_svfprintf_r+0x33a>
   8264e:	9c09      	ldr	r4, [sp, #36]	; 0x24
   82650:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   82654:	06a5      	lsls	r5, r4, #26
   82656:	f53f af4e 	bmi.w	824f6 <_svfprintf_r+0x602>
   8265a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8265e:	f01c 0f10 	tst.w	ip, #16
   82662:	f040 82df 	bne.w	82c24 <_svfprintf_r+0xd30>
   82666:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8266a:	f01c 0f40 	tst.w	ip, #64	; 0x40
   8266e:	f000 82d9 	beq.w	82c24 <_svfprintf_r+0xd30>
   82672:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   82676:	f9bc 4000 	ldrsh.w	r4, [ip]
   8267a:	f10c 0c04 	add.w	ip, ip, #4
   8267e:	17e5      	asrs	r5, r4, #31
   82680:	4622      	mov	r2, r4
   82682:	462b      	mov	r3, r5
   82684:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   82688:	e73f      	b.n	8250a <_svfprintf_r+0x616>
   8268a:	f899 8000 	ldrb.w	r8, [r9]
   8268e:	222b      	movs	r2, #43	; 0x2b
   82690:	e48c      	b.n	81fac <_svfprintf_r+0xb8>
   82692:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82694:	f045 0508 	orr.w	r5, r5, #8
   82698:	9509      	str	r5, [sp, #36]	; 0x24
   8269a:	f899 8000 	ldrb.w	r8, [r9]
   8269e:	e485      	b.n	81fac <_svfprintf_r+0xb8>
   826a0:	9d10      	ldr	r5, [sp, #64]	; 0x40
   826a2:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   826a6:	1deb      	adds	r3, r5, #7
   826a8:	f023 0307 	bic.w	r3, r3, #7
   826ac:	f103 0c08 	add.w	ip, r3, #8
   826b0:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   826b4:	e9d3 4500 	ldrd	r4, r5, [r3]
   826b8:	e9cd 4516 	strd	r4, r5, [sp, #88]	; 0x58
   826bc:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   826c0:	f7fe fe42 	bl	81348 <__fpclassifyd>
   826c4:	2801      	cmp	r0, #1
   826c6:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   826ca:	f040 835c 	bne.w	82d86 <_svfprintf_r+0xe92>
   826ce:	2200      	movs	r2, #0
   826d0:	2300      	movs	r3, #0
   826d2:	f7ff fa8b 	bl	81bec <__aeabi_dcmplt>
   826d6:	2800      	cmp	r0, #0
   826d8:	f040 8563 	bne.w	831a2 <_svfprintf_r+0x12ae>
   826dc:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   826e0:	2503      	movs	r5, #3
   826e2:	950b      	str	r5, [sp, #44]	; 0x2c
   826e4:	9d09      	ldr	r5, [sp, #36]	; 0x24
   826e6:	4f46      	ldr	r7, [pc, #280]	; (82800 <_svfprintf_r+0x90c>)
   826e8:	f025 0580 	bic.w	r5, r5, #128	; 0x80
   826ec:	4b45      	ldr	r3, [pc, #276]	; (82804 <_svfprintf_r+0x910>)
   826ee:	2400      	movs	r4, #0
   826f0:	9509      	str	r5, [sp, #36]	; 0x24
   826f2:	2500      	movs	r5, #0
   826f4:	940a      	str	r4, [sp, #40]	; 0x28
   826f6:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   826fa:	bfd8      	it	le
   826fc:	461f      	movle	r7, r3
   826fe:	2403      	movs	r4, #3
   82700:	9514      	str	r5, [sp, #80]	; 0x50
   82702:	e58e      	b.n	82222 <_svfprintf_r+0x32e>
   82704:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82708:	f04c 0c20 	orr.w	ip, ip, #32
   8270c:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   82710:	f899 8000 	ldrb.w	r8, [r9]
   82714:	e44a      	b.n	81fac <_svfprintf_r+0xb8>
   82716:	9c10      	ldr	r4, [sp, #64]	; 0x40
   82718:	1de3      	adds	r3, r4, #7
   8271a:	f023 0307 	bic.w	r3, r3, #7
   8271e:	f103 0508 	add.w	r5, r3, #8
   82722:	9510      	str	r5, [sp, #64]	; 0x40
   82724:	e9d3 4500 	ldrd	r4, r5, [r3]
   82728:	2300      	movs	r3, #0
   8272a:	e54d      	b.n	821c8 <_svfprintf_r+0x2d4>
   8272c:	9d10      	ldr	r5, [sp, #64]	; 0x40
   8272e:	1deb      	adds	r3, r5, #7
   82730:	f023 0307 	bic.w	r3, r3, #7
   82734:	f103 0c08 	add.w	ip, r3, #8
   82738:	e9d3 4500 	ldrd	r4, r5, [r3]
   8273c:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   82740:	2301      	movs	r3, #1
   82742:	e541      	b.n	821c8 <_svfprintf_r+0x2d4>
   82744:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   82748:	f1b8 0f00 	cmp.w	r8, #0
   8274c:	f43f ace3 	beq.w	82116 <_svfprintf_r+0x222>
   82750:	2300      	movs	r3, #0
   82752:	f04f 0c01 	mov.w	ip, #1
   82756:	469a      	mov	sl, r3
   82758:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   8275c:	f88d 80b8 	strb.w	r8, [sp, #184]	; 0xb8
   82760:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   82764:	930a      	str	r3, [sp, #40]	; 0x28
   82766:	9314      	str	r3, [sp, #80]	; 0x50
   82768:	4664      	mov	r4, ip
   8276a:	af2e      	add	r7, sp, #184	; 0xb8
   8276c:	e55f      	b.n	8222e <_svfprintf_r+0x33a>
   8276e:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82772:	e5b7      	b.n	822e4 <_svfprintf_r+0x3f0>
   82774:	2b01      	cmp	r3, #1
   82776:	f000 80ec 	beq.w	82952 <_svfprintf_r+0xa5e>
   8277a:	2b02      	cmp	r3, #2
   8277c:	f10d 03df 	add.w	r3, sp, #223	; 0xdf
   82780:	d118      	bne.n	827b4 <_svfprintf_r+0x8c0>
   82782:	f8dd c068 	ldr.w	ip, [sp, #104]	; 0x68
   82786:	4619      	mov	r1, r3
   82788:	f004 000f 	and.w	r0, r4, #15
   8278c:	0922      	lsrs	r2, r4, #4
   8278e:	f81c 0000 	ldrb.w	r0, [ip, r0]
   82792:	ea42 7205 	orr.w	r2, r2, r5, lsl #28
   82796:	092b      	lsrs	r3, r5, #4
   82798:	7008      	strb	r0, [r1, #0]
   8279a:	ea52 0003 	orrs.w	r0, r2, r3
   8279e:	460f      	mov	r7, r1
   827a0:	4614      	mov	r4, r2
   827a2:	461d      	mov	r5, r3
   827a4:	f101 31ff 	add.w	r1, r1, #4294967295
   827a8:	d1ee      	bne.n	82788 <_svfprintf_r+0x894>
   827aa:	9d08      	ldr	r5, [sp, #32]
   827ac:	e9cd 231e 	strd	r2, r3, [sp, #120]	; 0x78
   827b0:	1bec      	subs	r4, r5, r7
   827b2:	e52d      	b.n	82210 <_svfprintf_r+0x31c>
   827b4:	08e0      	lsrs	r0, r4, #3
   827b6:	ea40 7045 	orr.w	r0, r0, r5, lsl #29
   827ba:	f004 0207 	and.w	r2, r4, #7
   827be:	08e9      	lsrs	r1, r5, #3
   827c0:	3230      	adds	r2, #48	; 0x30
   827c2:	ea50 0c01 	orrs.w	ip, r0, r1
   827c6:	461f      	mov	r7, r3
   827c8:	701a      	strb	r2, [r3, #0]
   827ca:	4604      	mov	r4, r0
   827cc:	460d      	mov	r5, r1
   827ce:	f103 33ff 	add.w	r3, r3, #4294967295
   827d2:	d1ef      	bne.n	827b4 <_svfprintf_r+0x8c0>
   827d4:	9c09      	ldr	r4, [sp, #36]	; 0x24
   827d6:	e9cd 011c 	strd	r0, r1, [sp, #112]	; 0x70
   827da:	07e0      	lsls	r0, r4, #31
   827dc:	4639      	mov	r1, r7
   827de:	f140 80c1 	bpl.w	82964 <_svfprintf_r+0xa70>
   827e2:	2a30      	cmp	r2, #48	; 0x30
   827e4:	f000 80be 	beq.w	82964 <_svfprintf_r+0xa70>
   827e8:	9d08      	ldr	r5, [sp, #32]
   827ea:	461f      	mov	r7, r3
   827ec:	2330      	movs	r3, #48	; 0x30
   827ee:	1bec      	subs	r4, r5, r7
   827f0:	f801 3c01 	strb.w	r3, [r1, #-1]
   827f4:	e50c      	b.n	82210 <_svfprintf_r+0x31c>
   827f6:	bf00      	nop
   827f8:	00087968 	.word	0x00087968
   827fc:	0008797c 	.word	0x0008797c
   82800:	0008795c 	.word	0x0008795c
   82804:	00087958 	.word	0x00087958
   82808:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   8280c:	f340 80ad 	ble.w	8296a <_svfprintf_r+0xa76>
   82810:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   82814:	2200      	movs	r2, #0
   82816:	2300      	movs	r3, #0
   82818:	f8cd c01c 	str.w	ip, [sp, #28]
   8281c:	f7ff f9dc 	bl	81bd8 <__aeabi_dcmpeq>
   82820:	f8dd c01c 	ldr.w	ip, [sp, #28]
   82824:	2800      	cmp	r0, #0
   82826:	f000 8126 	beq.w	82a76 <_svfprintf_r+0xb82>
   8282a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8282c:	49aa      	ldr	r1, [pc, #680]	; (82ad8 <_svfprintf_r+0xbe4>)
   8282e:	3301      	adds	r3, #1
   82830:	f10c 0c01 	add.w	ip, ip, #1
   82834:	2201      	movs	r2, #1
   82836:	2b07      	cmp	r3, #7
   82838:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   8283c:	932c      	str	r3, [sp, #176]	; 0xb0
   8283e:	e886 0006 	stmia.w	r6, {r1, r2}
   82842:	f300 82ed 	bgt.w	82e20 <_svfprintf_r+0xf2c>
   82846:	3608      	adds	r6, #8
   82848:	9b25      	ldr	r3, [sp, #148]	; 0x94
   8284a:	9c11      	ldr	r4, [sp, #68]	; 0x44
   8284c:	42a3      	cmp	r3, r4
   8284e:	db03      	blt.n	82858 <_svfprintf_r+0x964>
   82850:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82852:	07ec      	lsls	r4, r5, #31
   82854:	f57f adc0 	bpl.w	823d8 <_svfprintf_r+0x4e4>
   82858:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8285a:	9c18      	ldr	r4, [sp, #96]	; 0x60
   8285c:	3301      	adds	r3, #1
   8285e:	9d15      	ldr	r5, [sp, #84]	; 0x54
   82860:	44a4      	add	ip, r4
   82862:	2b07      	cmp	r3, #7
   82864:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82868:	6035      	str	r5, [r6, #0]
   8286a:	6074      	str	r4, [r6, #4]
   8286c:	932c      	str	r3, [sp, #176]	; 0xb0
   8286e:	f300 833e 	bgt.w	82eee <_svfprintf_r+0xffa>
   82872:	3608      	adds	r6, #8
   82874:	9d11      	ldr	r5, [sp, #68]	; 0x44
   82876:	1e6c      	subs	r4, r5, #1
   82878:	2c00      	cmp	r4, #0
   8287a:	f77f adad 	ble.w	823d8 <_svfprintf_r+0x4e4>
   8287e:	2c10      	cmp	r4, #16
   82880:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82882:	4d96      	ldr	r5, [pc, #600]	; (82adc <_svfprintf_r+0xbe8>)
   82884:	f340 8197 	ble.w	82bb6 <_svfprintf_r+0xcc2>
   82888:	2710      	movs	r7, #16
   8288a:	4662      	mov	r2, ip
   8288c:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   82890:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   82894:	e004      	b.n	828a0 <_svfprintf_r+0x9ac>
   82896:	3608      	adds	r6, #8
   82898:	3c10      	subs	r4, #16
   8289a:	2c10      	cmp	r4, #16
   8289c:	f340 818a 	ble.w	82bb4 <_svfprintf_r+0xcc0>
   828a0:	3301      	adds	r3, #1
   828a2:	3210      	adds	r2, #16
   828a4:	2b07      	cmp	r3, #7
   828a6:	922d      	str	r2, [sp, #180]	; 0xb4
   828a8:	932c      	str	r3, [sp, #176]	; 0xb0
   828aa:	e886 00a0 	stmia.w	r6, {r5, r7}
   828ae:	ddf2      	ble.n	82896 <_svfprintf_r+0x9a2>
   828b0:	4640      	mov	r0, r8
   828b2:	4651      	mov	r1, sl
   828b4:	aa2b      	add	r2, sp, #172	; 0xac
   828b6:	f004 fae9 	bl	86e8c <__ssprint_r>
   828ba:	2800      	cmp	r0, #0
   828bc:	f47f ac32 	bne.w	82124 <_svfprintf_r+0x230>
   828c0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   828c2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   828c4:	ae38      	add	r6, sp, #224	; 0xe0
   828c6:	e7e7      	b.n	82898 <_svfprintf_r+0x9a4>
   828c8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   828ca:	980b      	ldr	r0, [sp, #44]	; 0x2c
   828cc:	ebc0 0a05 	rsb	sl, r0, r5
   828d0:	f1ba 0f00 	cmp.w	sl, #0
   828d4:	f77f ad2e 	ble.w	82334 <_svfprintf_r+0x440>
   828d8:	f1ba 0f10 	cmp.w	sl, #16
   828dc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   828de:	4d7f      	ldr	r5, [pc, #508]	; (82adc <_svfprintf_r+0xbe8>)
   828e0:	dd2b      	ble.n	8293a <_svfprintf_r+0xa46>
   828e2:	9412      	str	r4, [sp, #72]	; 0x48
   828e4:	4632      	mov	r2, r6
   828e6:	f04f 0b10 	mov.w	fp, #16
   828ea:	462e      	mov	r6, r5
   828ec:	4661      	mov	r1, ip
   828ee:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   828f0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   828f2:	e006      	b.n	82902 <_svfprintf_r+0xa0e>
   828f4:	f1aa 0a10 	sub.w	sl, sl, #16
   828f8:	f1ba 0f10 	cmp.w	sl, #16
   828fc:	f102 0208 	add.w	r2, r2, #8
   82900:	dd17      	ble.n	82932 <_svfprintf_r+0xa3e>
   82902:	3301      	adds	r3, #1
   82904:	3110      	adds	r1, #16
   82906:	2b07      	cmp	r3, #7
   82908:	912d      	str	r1, [sp, #180]	; 0xb4
   8290a:	932c      	str	r3, [sp, #176]	; 0xb0
   8290c:	e882 0840 	stmia.w	r2, {r6, fp}
   82910:	ddf0      	ble.n	828f4 <_svfprintf_r+0xa00>
   82912:	4620      	mov	r0, r4
   82914:	4629      	mov	r1, r5
   82916:	aa2b      	add	r2, sp, #172	; 0xac
   82918:	f004 fab8 	bl	86e8c <__ssprint_r>
   8291c:	2800      	cmp	r0, #0
   8291e:	f47f ac01 	bne.w	82124 <_svfprintf_r+0x230>
   82922:	f1aa 0a10 	sub.w	sl, sl, #16
   82926:	f1ba 0f10 	cmp.w	sl, #16
   8292a:	992d      	ldr	r1, [sp, #180]	; 0xb4
   8292c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8292e:	aa38      	add	r2, sp, #224	; 0xe0
   82930:	dce7      	bgt.n	82902 <_svfprintf_r+0xa0e>
   82932:	9c12      	ldr	r4, [sp, #72]	; 0x48
   82934:	4635      	mov	r5, r6
   82936:	468c      	mov	ip, r1
   82938:	4616      	mov	r6, r2
   8293a:	3301      	adds	r3, #1
   8293c:	44d4      	add	ip, sl
   8293e:	2b07      	cmp	r3, #7
   82940:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82944:	932c      	str	r3, [sp, #176]	; 0xb0
   82946:	e886 0420 	stmia.w	r6, {r5, sl}
   8294a:	f300 820f 	bgt.w	82d6c <_svfprintf_r+0xe78>
   8294e:	3608      	adds	r6, #8
   82950:	e4f0      	b.n	82334 <_svfprintf_r+0x440>
   82952:	2d00      	cmp	r5, #0
   82954:	bf08      	it	eq
   82956:	2c0a      	cmpeq	r4, #10
   82958:	f080 8138 	bcs.w	82bcc <_svfprintf_r+0xcd8>
   8295c:	3430      	adds	r4, #48	; 0x30
   8295e:	af48      	add	r7, sp, #288	; 0x120
   82960:	f807 4d41 	strb.w	r4, [r7, #-65]!
   82964:	9d08      	ldr	r5, [sp, #32]
   82966:	1bec      	subs	r4, r5, r7
   82968:	e452      	b.n	82210 <_svfprintf_r+0x31c>
   8296a:	9c11      	ldr	r4, [sp, #68]	; 0x44
   8296c:	2c01      	cmp	r4, #1
   8296e:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   82970:	f340 81d2 	ble.w	82d18 <_svfprintf_r+0xe24>
   82974:	3401      	adds	r4, #1
   82976:	f10c 0301 	add.w	r3, ip, #1
   8297a:	2201      	movs	r2, #1
   8297c:	2c07      	cmp	r4, #7
   8297e:	932d      	str	r3, [sp, #180]	; 0xb4
   82980:	6037      	str	r7, [r6, #0]
   82982:	942c      	str	r4, [sp, #176]	; 0xb0
   82984:	6072      	str	r2, [r6, #4]
   82986:	f300 81d8 	bgt.w	82d3a <_svfprintf_r+0xe46>
   8298a:	3608      	adds	r6, #8
   8298c:	9d15      	ldr	r5, [sp, #84]	; 0x54
   8298e:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
   82992:	3401      	adds	r4, #1
   82994:	6035      	str	r5, [r6, #0]
   82996:	9d18      	ldr	r5, [sp, #96]	; 0x60
   82998:	4498      	add	r8, r3
   8299a:	2c07      	cmp	r4, #7
   8299c:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   829a0:	942c      	str	r4, [sp, #176]	; 0xb0
   829a2:	6075      	str	r5, [r6, #4]
   829a4:	f300 81d5 	bgt.w	82d52 <_svfprintf_r+0xe5e>
   829a8:	3608      	adds	r6, #8
   829aa:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   829ae:	2200      	movs	r2, #0
   829b0:	2300      	movs	r3, #0
   829b2:	f7ff f911 	bl	81bd8 <__aeabi_dcmpeq>
   829b6:	9d11      	ldr	r5, [sp, #68]	; 0x44
   829b8:	2800      	cmp	r0, #0
   829ba:	f040 80b9 	bne.w	82b30 <_svfprintf_r+0xc3c>
   829be:	1e6b      	subs	r3, r5, #1
   829c0:	3401      	adds	r4, #1
   829c2:	3701      	adds	r7, #1
   829c4:	4498      	add	r8, r3
   829c6:	2c07      	cmp	r4, #7
   829c8:	942c      	str	r4, [sp, #176]	; 0xb0
   829ca:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   829ce:	6037      	str	r7, [r6, #0]
   829d0:	6073      	str	r3, [r6, #4]
   829d2:	f300 80e2 	bgt.w	82b9a <_svfprintf_r+0xca6>
   829d6:	3608      	adds	r6, #8
   829d8:	f8dd c064 	ldr.w	ip, [sp, #100]	; 0x64
   829dc:	3401      	adds	r4, #1
   829de:	9d19      	ldr	r5, [sp, #100]	; 0x64
   829e0:	44c4      	add	ip, r8
   829e2:	ab27      	add	r3, sp, #156	; 0x9c
   829e4:	2c07      	cmp	r4, #7
   829e6:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   829ea:	942c      	str	r4, [sp, #176]	; 0xb0
   829ec:	e886 0028 	stmia.w	r6, {r3, r5}
   829f0:	f77f acf1 	ble.w	823d6 <_svfprintf_r+0x4e2>
   829f4:	980d      	ldr	r0, [sp, #52]	; 0x34
   829f6:	990c      	ldr	r1, [sp, #48]	; 0x30
   829f8:	aa2b      	add	r2, sp, #172	; 0xac
   829fa:	f004 fa47 	bl	86e8c <__ssprint_r>
   829fe:	2800      	cmp	r0, #0
   82a00:	f47f ab90 	bne.w	82124 <_svfprintf_r+0x230>
   82a04:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82a08:	ae38      	add	r6, sp, #224	; 0xe0
   82a0a:	e4e5      	b.n	823d8 <_svfprintf_r+0x4e4>
   82a0c:	980d      	ldr	r0, [sp, #52]	; 0x34
   82a0e:	990c      	ldr	r1, [sp, #48]	; 0x30
   82a10:	aa2b      	add	r2, sp, #172	; 0xac
   82a12:	f004 fa3b 	bl	86e8c <__ssprint_r>
   82a16:	2800      	cmp	r0, #0
   82a18:	f43f ad37 	beq.w	8248a <_svfprintf_r+0x596>
   82a1c:	f7ff bb82 	b.w	82124 <_svfprintf_r+0x230>
   82a20:	980d      	ldr	r0, [sp, #52]	; 0x34
   82a22:	990c      	ldr	r1, [sp, #48]	; 0x30
   82a24:	aa2b      	add	r2, sp, #172	; 0xac
   82a26:	f004 fa31 	bl	86e8c <__ssprint_r>
   82a2a:	2800      	cmp	r0, #0
   82a2c:	f47f ab7a 	bne.w	82124 <_svfprintf_r+0x230>
   82a30:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82a34:	ae38      	add	r6, sp, #224	; 0xe0
   82a36:	e4bf      	b.n	823b8 <_svfprintf_r+0x4c4>
   82a38:	980d      	ldr	r0, [sp, #52]	; 0x34
   82a3a:	990c      	ldr	r1, [sp, #48]	; 0x30
   82a3c:	aa2b      	add	r2, sp, #172	; 0xac
   82a3e:	f004 fa25 	bl	86e8c <__ssprint_r>
   82a42:	2800      	cmp	r0, #0
   82a44:	f47f ab6e 	bne.w	82124 <_svfprintf_r+0x230>
   82a48:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82a4c:	ae38      	add	r6, sp, #224	; 0xe0
   82a4e:	e46d      	b.n	8232c <_svfprintf_r+0x438>
   82a50:	980d      	ldr	r0, [sp, #52]	; 0x34
   82a52:	990c      	ldr	r1, [sp, #48]	; 0x30
   82a54:	aa2b      	add	r2, sp, #172	; 0xac
   82a56:	f004 fa19 	bl	86e8c <__ssprint_r>
   82a5a:	2800      	cmp	r0, #0
   82a5c:	f47f ab62 	bne.w	82124 <_svfprintf_r+0x230>
   82a60:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82a64:	ae38      	add	r6, sp, #224	; 0xe0
   82a66:	e450      	b.n	8230a <_svfprintf_r+0x416>
   82a68:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82a6a:	af38      	add	r7, sp, #224	; 0xe0
   82a6c:	f7ff bbd0 	b.w	82210 <_svfprintf_r+0x31c>
   82a70:	2302      	movs	r3, #2
   82a72:	f7ff bba9 	b.w	821c8 <_svfprintf_r+0x2d4>
   82a76:	9b25      	ldr	r3, [sp, #148]	; 0x94
   82a78:	2b00      	cmp	r3, #0
   82a7a:	f340 81dd 	ble.w	82e38 <_svfprintf_r+0xf44>
   82a7e:	9c11      	ldr	r4, [sp, #68]	; 0x44
   82a80:	9d14      	ldr	r5, [sp, #80]	; 0x50
   82a82:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
   82a86:	42ac      	cmp	r4, r5
   82a88:	bfa8      	it	ge
   82a8a:	462c      	movge	r4, r5
   82a8c:	2c00      	cmp	r4, #0
   82a8e:	44ba      	add	sl, r7
   82a90:	dd0b      	ble.n	82aaa <_svfprintf_r+0xbb6>
   82a92:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82a94:	44a4      	add	ip, r4
   82a96:	3301      	adds	r3, #1
   82a98:	2b07      	cmp	r3, #7
   82a9a:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82a9e:	6037      	str	r7, [r6, #0]
   82aa0:	6074      	str	r4, [r6, #4]
   82aa2:	932c      	str	r3, [sp, #176]	; 0xb0
   82aa4:	f300 831e 	bgt.w	830e4 <_svfprintf_r+0x11f0>
   82aa8:	3608      	adds	r6, #8
   82aaa:	9d14      	ldr	r5, [sp, #80]	; 0x50
   82aac:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
   82ab0:	1b2c      	subs	r4, r5, r4
   82ab2:	2c00      	cmp	r4, #0
   82ab4:	f340 80d7 	ble.w	82c66 <_svfprintf_r+0xd72>
   82ab8:	2c10      	cmp	r4, #16
   82aba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82abc:	4d07      	ldr	r5, [pc, #28]	; (82adc <_svfprintf_r+0xbe8>)
   82abe:	f340 81a3 	ble.w	82e08 <_svfprintf_r+0xf14>
   82ac2:	970a      	str	r7, [sp, #40]	; 0x28
   82ac4:	f04f 0810 	mov.w	r8, #16
   82ac8:	462f      	mov	r7, r5
   82aca:	4662      	mov	r2, ip
   82acc:	4625      	mov	r5, r4
   82ace:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
   82ad2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82ad4:	e009      	b.n	82aea <_svfprintf_r+0xbf6>
   82ad6:	bf00      	nop
   82ad8:	00087998 	.word	0x00087998
   82adc:	00087948 	.word	0x00087948
   82ae0:	3608      	adds	r6, #8
   82ae2:	3d10      	subs	r5, #16
   82ae4:	2d10      	cmp	r5, #16
   82ae6:	f340 818b 	ble.w	82e00 <_svfprintf_r+0xf0c>
   82aea:	3301      	adds	r3, #1
   82aec:	3210      	adds	r2, #16
   82aee:	2b07      	cmp	r3, #7
   82af0:	922d      	str	r2, [sp, #180]	; 0xb4
   82af2:	932c      	str	r3, [sp, #176]	; 0xb0
   82af4:	e886 0180 	stmia.w	r6, {r7, r8}
   82af8:	ddf2      	ble.n	82ae0 <_svfprintf_r+0xbec>
   82afa:	4658      	mov	r0, fp
   82afc:	4621      	mov	r1, r4
   82afe:	aa2b      	add	r2, sp, #172	; 0xac
   82b00:	f004 f9c4 	bl	86e8c <__ssprint_r>
   82b04:	2800      	cmp	r0, #0
   82b06:	f47f ab0d 	bne.w	82124 <_svfprintf_r+0x230>
   82b0a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   82b0c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82b0e:	ae38      	add	r6, sp, #224	; 0xe0
   82b10:	e7e7      	b.n	82ae2 <_svfprintf_r+0xbee>
   82b12:	980d      	ldr	r0, [sp, #52]	; 0x34
   82b14:	990c      	ldr	r1, [sp, #48]	; 0x30
   82b16:	aa2b      	add	r2, sp, #172	; 0xac
   82b18:	f004 f9b8 	bl	86e8c <__ssprint_r>
   82b1c:	2800      	cmp	r0, #0
   82b1e:	f47f ab01 	bne.w	82124 <_svfprintf_r+0x230>
   82b22:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   82b26:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82b2a:	ae38      	add	r6, sp, #224	; 0xe0
   82b2c:	f7ff bbda 	b.w	822e4 <_svfprintf_r+0x3f0>
   82b30:	1e6f      	subs	r7, r5, #1
   82b32:	2f00      	cmp	r7, #0
   82b34:	f77f af50 	ble.w	829d8 <_svfprintf_r+0xae4>
   82b38:	2f10      	cmp	r7, #16
   82b3a:	4dae      	ldr	r5, [pc, #696]	; (82df4 <_svfprintf_r+0xf00>)
   82b3c:	dd23      	ble.n	82b86 <_svfprintf_r+0xc92>
   82b3e:	4643      	mov	r3, r8
   82b40:	f04f 0a10 	mov.w	sl, #16
   82b44:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   82b48:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   82b4c:	e004      	b.n	82b58 <_svfprintf_r+0xc64>
   82b4e:	3f10      	subs	r7, #16
   82b50:	2f10      	cmp	r7, #16
   82b52:	f106 0608 	add.w	r6, r6, #8
   82b56:	dd15      	ble.n	82b84 <_svfprintf_r+0xc90>
   82b58:	3401      	adds	r4, #1
   82b5a:	3310      	adds	r3, #16
   82b5c:	2c07      	cmp	r4, #7
   82b5e:	932d      	str	r3, [sp, #180]	; 0xb4
   82b60:	942c      	str	r4, [sp, #176]	; 0xb0
   82b62:	e886 0420 	stmia.w	r6, {r5, sl}
   82b66:	ddf2      	ble.n	82b4e <_svfprintf_r+0xc5a>
   82b68:	4640      	mov	r0, r8
   82b6a:	4659      	mov	r1, fp
   82b6c:	aa2b      	add	r2, sp, #172	; 0xac
   82b6e:	f004 f98d 	bl	86e8c <__ssprint_r>
   82b72:	2800      	cmp	r0, #0
   82b74:	f47f aad6 	bne.w	82124 <_svfprintf_r+0x230>
   82b78:	3f10      	subs	r7, #16
   82b7a:	2f10      	cmp	r7, #16
   82b7c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   82b7e:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   82b80:	ae38      	add	r6, sp, #224	; 0xe0
   82b82:	dce9      	bgt.n	82b58 <_svfprintf_r+0xc64>
   82b84:	4698      	mov	r8, r3
   82b86:	3401      	adds	r4, #1
   82b88:	44b8      	add	r8, r7
   82b8a:	2c07      	cmp	r4, #7
   82b8c:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   82b90:	942c      	str	r4, [sp, #176]	; 0xb0
   82b92:	e886 00a0 	stmia.w	r6, {r5, r7}
   82b96:	f77f af1e 	ble.w	829d6 <_svfprintf_r+0xae2>
   82b9a:	980d      	ldr	r0, [sp, #52]	; 0x34
   82b9c:	990c      	ldr	r1, [sp, #48]	; 0x30
   82b9e:	aa2b      	add	r2, sp, #172	; 0xac
   82ba0:	f004 f974 	bl	86e8c <__ssprint_r>
   82ba4:	2800      	cmp	r0, #0
   82ba6:	f47f aabd 	bne.w	82124 <_svfprintf_r+0x230>
   82baa:	f8dd 80b4 	ldr.w	r8, [sp, #180]	; 0xb4
   82bae:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   82bb0:	ae38      	add	r6, sp, #224	; 0xe0
   82bb2:	e711      	b.n	829d8 <_svfprintf_r+0xae4>
   82bb4:	4694      	mov	ip, r2
   82bb6:	3301      	adds	r3, #1
   82bb8:	44a4      	add	ip, r4
   82bba:	2b07      	cmp	r3, #7
   82bbc:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82bc0:	932c      	str	r3, [sp, #176]	; 0xb0
   82bc2:	6035      	str	r5, [r6, #0]
   82bc4:	6074      	str	r4, [r6, #4]
   82bc6:	f77f ac06 	ble.w	823d6 <_svfprintf_r+0x4e2>
   82bca:	e713      	b.n	829f4 <_svfprintf_r+0xb00>
   82bcc:	f10d 0bdf 	add.w	fp, sp, #223	; 0xdf
   82bd0:	4620      	mov	r0, r4
   82bd2:	4629      	mov	r1, r5
   82bd4:	220a      	movs	r2, #10
   82bd6:	2300      	movs	r3, #0
   82bd8:	f004 fb4e 	bl	87278 <__aeabi_uldivmod>
   82bdc:	3230      	adds	r2, #48	; 0x30
   82bde:	f88b 2000 	strb.w	r2, [fp]
   82be2:	4620      	mov	r0, r4
   82be4:	4629      	mov	r1, r5
   82be6:	220a      	movs	r2, #10
   82be8:	2300      	movs	r3, #0
   82bea:	f004 fb45 	bl	87278 <__aeabi_uldivmod>
   82bee:	4604      	mov	r4, r0
   82bf0:	460d      	mov	r5, r1
   82bf2:	ea54 0c05 	orrs.w	ip, r4, r5
   82bf6:	465f      	mov	r7, fp
   82bf8:	f10b 3bff 	add.w	fp, fp, #4294967295
   82bfc:	d1e8      	bne.n	82bd0 <_svfprintf_r+0xcdc>
   82bfe:	9d08      	ldr	r5, [sp, #32]
   82c00:	1bec      	subs	r4, r5, r7
   82c02:	f7ff bb05 	b.w	82210 <_svfprintf_r+0x31c>
   82c06:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82c08:	2301      	movs	r3, #1
   82c0a:	682c      	ldr	r4, [r5, #0]
   82c0c:	3504      	adds	r5, #4
   82c0e:	9510      	str	r5, [sp, #64]	; 0x40
   82c10:	2500      	movs	r5, #0
   82c12:	f7ff bad9 	b.w	821c8 <_svfprintf_r+0x2d4>
   82c16:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82c18:	682c      	ldr	r4, [r5, #0]
   82c1a:	3504      	adds	r5, #4
   82c1c:	9510      	str	r5, [sp, #64]	; 0x40
   82c1e:	2500      	movs	r5, #0
   82c20:	f7ff bad2 	b.w	821c8 <_svfprintf_r+0x2d4>
   82c24:	9d10      	ldr	r5, [sp, #64]	; 0x40
   82c26:	682c      	ldr	r4, [r5, #0]
   82c28:	3504      	adds	r5, #4
   82c2a:	9510      	str	r5, [sp, #64]	; 0x40
   82c2c:	17e5      	asrs	r5, r4, #31
   82c2e:	4622      	mov	r2, r4
   82c30:	462b      	mov	r3, r5
   82c32:	2a00      	cmp	r2, #0
   82c34:	f173 0c00 	sbcs.w	ip, r3, #0
   82c38:	f6bf ac6c 	bge.w	82514 <_svfprintf_r+0x620>
   82c3c:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   82c40:	4264      	negs	r4, r4
   82c42:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   82c46:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   82c4a:	2301      	movs	r3, #1
   82c4c:	f7ff bac0 	b.w	821d0 <_svfprintf_r+0x2dc>
   82c50:	980d      	ldr	r0, [sp, #52]	; 0x34
   82c52:	990c      	ldr	r1, [sp, #48]	; 0x30
   82c54:	aa2b      	add	r2, sp, #172	; 0xac
   82c56:	f004 f919 	bl	86e8c <__ssprint_r>
   82c5a:	2800      	cmp	r0, #0
   82c5c:	f47f aa62 	bne.w	82124 <_svfprintf_r+0x230>
   82c60:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82c64:	ae38      	add	r6, sp, #224	; 0xe0
   82c66:	9d14      	ldr	r5, [sp, #80]	; 0x50
   82c68:	9c25      	ldr	r4, [sp, #148]	; 0x94
   82c6a:	442f      	add	r7, r5
   82c6c:	9d11      	ldr	r5, [sp, #68]	; 0x44
   82c6e:	42ac      	cmp	r4, r5
   82c70:	db42      	blt.n	82cf8 <_svfprintf_r+0xe04>
   82c72:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82c74:	07e9      	lsls	r1, r5, #31
   82c76:	d43f      	bmi.n	82cf8 <_svfprintf_r+0xe04>
   82c78:	9811      	ldr	r0, [sp, #68]	; 0x44
   82c7a:	ebc7 050a 	rsb	r5, r7, sl
   82c7e:	1b04      	subs	r4, r0, r4
   82c80:	42ac      	cmp	r4, r5
   82c82:	bfb8      	it	lt
   82c84:	4625      	movlt	r5, r4
   82c86:	2d00      	cmp	r5, #0
   82c88:	dd0b      	ble.n	82ca2 <_svfprintf_r+0xdae>
   82c8a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82c8c:	44ac      	add	ip, r5
   82c8e:	3301      	adds	r3, #1
   82c90:	2b07      	cmp	r3, #7
   82c92:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82c96:	6037      	str	r7, [r6, #0]
   82c98:	6075      	str	r5, [r6, #4]
   82c9a:	932c      	str	r3, [sp, #176]	; 0xb0
   82c9c:	f300 824c 	bgt.w	83138 <_svfprintf_r+0x1244>
   82ca0:	3608      	adds	r6, #8
   82ca2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
   82ca6:	1b64      	subs	r4, r4, r5
   82ca8:	2c00      	cmp	r4, #0
   82caa:	f77f ab95 	ble.w	823d8 <_svfprintf_r+0x4e4>
   82cae:	2c10      	cmp	r4, #16
   82cb0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82cb2:	4d50      	ldr	r5, [pc, #320]	; (82df4 <_svfprintf_r+0xf00>)
   82cb4:	f77f af7f 	ble.w	82bb6 <_svfprintf_r+0xcc2>
   82cb8:	2710      	movs	r7, #16
   82cba:	4662      	mov	r2, ip
   82cbc:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   82cc0:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   82cc4:	e004      	b.n	82cd0 <_svfprintf_r+0xddc>
   82cc6:	3608      	adds	r6, #8
   82cc8:	3c10      	subs	r4, #16
   82cca:	2c10      	cmp	r4, #16
   82ccc:	f77f af72 	ble.w	82bb4 <_svfprintf_r+0xcc0>
   82cd0:	3301      	adds	r3, #1
   82cd2:	3210      	adds	r2, #16
   82cd4:	2b07      	cmp	r3, #7
   82cd6:	922d      	str	r2, [sp, #180]	; 0xb4
   82cd8:	932c      	str	r3, [sp, #176]	; 0xb0
   82cda:	e886 00a0 	stmia.w	r6, {r5, r7}
   82cde:	ddf2      	ble.n	82cc6 <_svfprintf_r+0xdd2>
   82ce0:	4640      	mov	r0, r8
   82ce2:	4651      	mov	r1, sl
   82ce4:	aa2b      	add	r2, sp, #172	; 0xac
   82ce6:	f004 f8d1 	bl	86e8c <__ssprint_r>
   82cea:	2800      	cmp	r0, #0
   82cec:	f47f aa1a 	bne.w	82124 <_svfprintf_r+0x230>
   82cf0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   82cf2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82cf4:	ae38      	add	r6, sp, #224	; 0xe0
   82cf6:	e7e7      	b.n	82cc8 <_svfprintf_r+0xdd4>
   82cf8:	9d18      	ldr	r5, [sp, #96]	; 0x60
   82cfa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82cfc:	44ac      	add	ip, r5
   82cfe:	9d15      	ldr	r5, [sp, #84]	; 0x54
   82d00:	3301      	adds	r3, #1
   82d02:	6035      	str	r5, [r6, #0]
   82d04:	9d18      	ldr	r5, [sp, #96]	; 0x60
   82d06:	2b07      	cmp	r3, #7
   82d08:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82d0c:	6075      	str	r5, [r6, #4]
   82d0e:	932c      	str	r3, [sp, #176]	; 0xb0
   82d10:	f300 81f4 	bgt.w	830fc <_svfprintf_r+0x1208>
   82d14:	3608      	adds	r6, #8
   82d16:	e7af      	b.n	82c78 <_svfprintf_r+0xd84>
   82d18:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82d1a:	07ea      	lsls	r2, r5, #31
   82d1c:	f53f ae2a 	bmi.w	82974 <_svfprintf_r+0xa80>
   82d20:	3401      	adds	r4, #1
   82d22:	f10c 0801 	add.w	r8, ip, #1
   82d26:	2301      	movs	r3, #1
   82d28:	2c07      	cmp	r4, #7
   82d2a:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   82d2e:	942c      	str	r4, [sp, #176]	; 0xb0
   82d30:	6037      	str	r7, [r6, #0]
   82d32:	6073      	str	r3, [r6, #4]
   82d34:	f77f ae4f 	ble.w	829d6 <_svfprintf_r+0xae2>
   82d38:	e72f      	b.n	82b9a <_svfprintf_r+0xca6>
   82d3a:	980d      	ldr	r0, [sp, #52]	; 0x34
   82d3c:	990c      	ldr	r1, [sp, #48]	; 0x30
   82d3e:	aa2b      	add	r2, sp, #172	; 0xac
   82d40:	f004 f8a4 	bl	86e8c <__ssprint_r>
   82d44:	2800      	cmp	r0, #0
   82d46:	f47f a9ed 	bne.w	82124 <_svfprintf_r+0x230>
   82d4a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   82d4c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   82d4e:	ae38      	add	r6, sp, #224	; 0xe0
   82d50:	e61c      	b.n	8298c <_svfprintf_r+0xa98>
   82d52:	980d      	ldr	r0, [sp, #52]	; 0x34
   82d54:	990c      	ldr	r1, [sp, #48]	; 0x30
   82d56:	aa2b      	add	r2, sp, #172	; 0xac
   82d58:	f004 f898 	bl	86e8c <__ssprint_r>
   82d5c:	2800      	cmp	r0, #0
   82d5e:	f47f a9e1 	bne.w	82124 <_svfprintf_r+0x230>
   82d62:	f8dd 80b4 	ldr.w	r8, [sp, #180]	; 0xb4
   82d66:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   82d68:	ae38      	add	r6, sp, #224	; 0xe0
   82d6a:	e61e      	b.n	829aa <_svfprintf_r+0xab6>
   82d6c:	980d      	ldr	r0, [sp, #52]	; 0x34
   82d6e:	990c      	ldr	r1, [sp, #48]	; 0x30
   82d70:	aa2b      	add	r2, sp, #172	; 0xac
   82d72:	f004 f88b 	bl	86e8c <__ssprint_r>
   82d76:	2800      	cmp	r0, #0
   82d78:	f47f a9d4 	bne.w	82124 <_svfprintf_r+0x230>
   82d7c:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82d80:	ae38      	add	r6, sp, #224	; 0xe0
   82d82:	f7ff bad7 	b.w	82334 <_svfprintf_r+0x440>
   82d86:	f7fe fadf 	bl	81348 <__fpclassifyd>
   82d8a:	2800      	cmp	r0, #0
   82d8c:	f040 80bb 	bne.w	82f06 <_svfprintf_r+0x1012>
   82d90:	9c09      	ldr	r4, [sp, #36]	; 0x24
   82d92:	4f19      	ldr	r7, [pc, #100]	; (82df8 <_svfprintf_r+0xf04>)
   82d94:	4b19      	ldr	r3, [pc, #100]	; (82dfc <_svfprintf_r+0xf08>)
   82d96:	f04f 0c03 	mov.w	ip, #3
   82d9a:	f024 0480 	bic.w	r4, r4, #128	; 0x80
   82d9e:	9409      	str	r4, [sp, #36]	; 0x24
   82da0:	900a      	str	r0, [sp, #40]	; 0x28
   82da2:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   82da6:	9014      	str	r0, [sp, #80]	; 0x50
   82da8:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   82dac:	bfd8      	it	le
   82dae:	461f      	movle	r7, r3
   82db0:	4664      	mov	r4, ip
   82db2:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   82db6:	f7ff ba34 	b.w	82222 <_svfprintf_r+0x32e>
   82dba:	9c09      	ldr	r4, [sp, #36]	; 0x24
   82dbc:	0664      	lsls	r4, r4, #25
   82dbe:	f140 8150 	bpl.w	83062 <_svfprintf_r+0x116e>
   82dc2:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   82dc6:	2500      	movs	r5, #0
   82dc8:	f8bc 4000 	ldrh.w	r4, [ip]
   82dcc:	f10c 0c04 	add.w	ip, ip, #4
   82dd0:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   82dd4:	f7ff b9e4 	b.w	821a0 <_svfprintf_r+0x2ac>
   82dd8:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82ddc:	f01c 0f10 	tst.w	ip, #16
   82de0:	f000 8146 	beq.w	83070 <_svfprintf_r+0x117c>
   82de4:	9c10      	ldr	r4, [sp, #64]	; 0x40
   82de6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   82de8:	6823      	ldr	r3, [r4, #0]
   82dea:	3404      	adds	r4, #4
   82dec:	9410      	str	r4, [sp, #64]	; 0x40
   82dee:	601d      	str	r5, [r3, #0]
   82df0:	f7ff b8a6 	b.w	81f40 <_svfprintf_r+0x4c>
   82df4:	00087948 	.word	0x00087948
   82df8:	00087964 	.word	0x00087964
   82dfc:	00087960 	.word	0x00087960
   82e00:	462c      	mov	r4, r5
   82e02:	463d      	mov	r5, r7
   82e04:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   82e06:	4694      	mov	ip, r2
   82e08:	3301      	adds	r3, #1
   82e0a:	44a4      	add	ip, r4
   82e0c:	2b07      	cmp	r3, #7
   82e0e:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82e12:	932c      	str	r3, [sp, #176]	; 0xb0
   82e14:	6035      	str	r5, [r6, #0]
   82e16:	6074      	str	r4, [r6, #4]
   82e18:	f73f af1a 	bgt.w	82c50 <_svfprintf_r+0xd5c>
   82e1c:	3608      	adds	r6, #8
   82e1e:	e722      	b.n	82c66 <_svfprintf_r+0xd72>
   82e20:	980d      	ldr	r0, [sp, #52]	; 0x34
   82e22:	990c      	ldr	r1, [sp, #48]	; 0x30
   82e24:	aa2b      	add	r2, sp, #172	; 0xac
   82e26:	f004 f831 	bl	86e8c <__ssprint_r>
   82e2a:	2800      	cmp	r0, #0
   82e2c:	f47f a97a 	bne.w	82124 <_svfprintf_r+0x230>
   82e30:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82e34:	ae38      	add	r6, sp, #224	; 0xe0
   82e36:	e507      	b.n	82848 <_svfprintf_r+0x954>
   82e38:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   82e3a:	49b7      	ldr	r1, [pc, #732]	; (83118 <_svfprintf_r+0x1224>)
   82e3c:	3201      	adds	r2, #1
   82e3e:	f10c 0c01 	add.w	ip, ip, #1
   82e42:	2001      	movs	r0, #1
   82e44:	2a07      	cmp	r2, #7
   82e46:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   82e4a:	922c      	str	r2, [sp, #176]	; 0xb0
   82e4c:	6031      	str	r1, [r6, #0]
   82e4e:	6070      	str	r0, [r6, #4]
   82e50:	f300 80f7 	bgt.w	83042 <_svfprintf_r+0x114e>
   82e54:	3608      	adds	r6, #8
   82e56:	461c      	mov	r4, r3
   82e58:	b92c      	cbnz	r4, 82e66 <_svfprintf_r+0xf72>
   82e5a:	9d11      	ldr	r5, [sp, #68]	; 0x44
   82e5c:	b91d      	cbnz	r5, 82e66 <_svfprintf_r+0xf72>
   82e5e:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82e60:	07e8      	lsls	r0, r5, #31
   82e62:	f57f aab9 	bpl.w	823d8 <_svfprintf_r+0x4e4>
   82e66:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82e68:	9d15      	ldr	r5, [sp, #84]	; 0x54
   82e6a:	9918      	ldr	r1, [sp, #96]	; 0x60
   82e6c:	3301      	adds	r3, #1
   82e6e:	6035      	str	r5, [r6, #0]
   82e70:	9d18      	ldr	r5, [sp, #96]	; 0x60
   82e72:	4461      	add	r1, ip
   82e74:	2b07      	cmp	r3, #7
   82e76:	912d      	str	r1, [sp, #180]	; 0xb4
   82e78:	6075      	str	r5, [r6, #4]
   82e7a:	932c      	str	r3, [sp, #176]	; 0xb0
   82e7c:	f300 81de 	bgt.w	8323c <_svfprintf_r+0x1348>
   82e80:	f106 0208 	add.w	r2, r6, #8
   82e84:	4264      	negs	r4, r4
   82e86:	2c00      	cmp	r4, #0
   82e88:	f340 810b 	ble.w	830a2 <_svfprintf_r+0x11ae>
   82e8c:	2c10      	cmp	r4, #16
   82e8e:	4da3      	ldr	r5, [pc, #652]	; (8311c <_svfprintf_r+0x1228>)
   82e90:	f340 8148 	ble.w	83124 <_svfprintf_r+0x1230>
   82e94:	46a3      	mov	fp, r4
   82e96:	2610      	movs	r6, #16
   82e98:	460c      	mov	r4, r1
   82e9a:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   82e9e:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   82ea2:	e006      	b.n	82eb2 <_svfprintf_r+0xfbe>
   82ea4:	3208      	adds	r2, #8
   82ea6:	f1ab 0b10 	sub.w	fp, fp, #16
   82eaa:	f1bb 0f10 	cmp.w	fp, #16
   82eae:	f340 8137 	ble.w	83120 <_svfprintf_r+0x122c>
   82eb2:	3301      	adds	r3, #1
   82eb4:	3410      	adds	r4, #16
   82eb6:	2b07      	cmp	r3, #7
   82eb8:	942d      	str	r4, [sp, #180]	; 0xb4
   82eba:	932c      	str	r3, [sp, #176]	; 0xb0
   82ebc:	e882 0060 	stmia.w	r2, {r5, r6}
   82ec0:	ddf0      	ble.n	82ea4 <_svfprintf_r+0xfb0>
   82ec2:	4640      	mov	r0, r8
   82ec4:	4651      	mov	r1, sl
   82ec6:	aa2b      	add	r2, sp, #172	; 0xac
   82ec8:	f003 ffe0 	bl	86e8c <__ssprint_r>
   82ecc:	2800      	cmp	r0, #0
   82ece:	f47f a929 	bne.w	82124 <_svfprintf_r+0x230>
   82ed2:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
   82ed4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82ed6:	aa38      	add	r2, sp, #224	; 0xe0
   82ed8:	e7e5      	b.n	82ea6 <_svfprintf_r+0xfb2>
   82eda:	9c09      	ldr	r4, [sp, #36]	; 0x24
   82edc:	f109 0901 	add.w	r9, r9, #1
   82ee0:	f044 0420 	orr.w	r4, r4, #32
   82ee4:	9409      	str	r4, [sp, #36]	; 0x24
   82ee6:	f893 8001 	ldrb.w	r8, [r3, #1]
   82eea:	f7ff b85f 	b.w	81fac <_svfprintf_r+0xb8>
   82eee:	980d      	ldr	r0, [sp, #52]	; 0x34
   82ef0:	990c      	ldr	r1, [sp, #48]	; 0x30
   82ef2:	aa2b      	add	r2, sp, #172	; 0xac
   82ef4:	f003 ffca 	bl	86e8c <__ssprint_r>
   82ef8:	2800      	cmp	r0, #0
   82efa:	f47f a913 	bne.w	82124 <_svfprintf_r+0x230>
   82efe:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82f02:	ae38      	add	r6, sp, #224	; 0xe0
   82f04:	e4b6      	b.n	82874 <_svfprintf_r+0x980>
   82f06:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82f08:	f028 0a20 	bic.w	sl, r8, #32
   82f0c:	3501      	adds	r5, #1
   82f0e:	f000 80a5 	beq.w	8305c <_svfprintf_r+0x1168>
   82f12:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
   82f16:	d104      	bne.n	82f22 <_svfprintf_r+0x102e>
   82f18:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82f1a:	2d00      	cmp	r5, #0
   82f1c:	bf08      	it	eq
   82f1e:	2501      	moveq	r5, #1
   82f20:	950a      	str	r5, [sp, #40]	; 0x28
   82f22:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82f26:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   82f2a:	f44c 7c80 	orr.w	ip, ip, #256	; 0x100
   82f2e:	2b00      	cmp	r3, #0
   82f30:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
   82f34:	f2c0 819c 	blt.w	83270 <_svfprintf_r+0x137c>
   82f38:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	; 0x58
   82f3c:	e9cd 4520 	strd	r4, r5, [sp, #128]	; 0x80
   82f40:	f04f 0b00 	mov.w	fp, #0
   82f44:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   82f48:	f000 819b 	beq.w	83282 <_svfprintf_r+0x138e>
   82f4c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
   82f50:	f000 81a9 	beq.w	832a6 <_svfprintf_r+0x13b2>
   82f54:	f1ba 0f45 	cmp.w	sl, #69	; 0x45
   82f58:	bf0a      	itet	eq
   82f5a:	9c0a      	ldreq	r4, [sp, #40]	; 0x28
   82f5c:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   82f5e:	1c65      	addeq	r5, r4, #1
   82f60:	2002      	movs	r0, #2
   82f62:	a925      	add	r1, sp, #148	; 0x94
   82f64:	aa26      	add	r2, sp, #152	; 0x98
   82f66:	ab29      	add	r3, sp, #164	; 0xa4
   82f68:	e88d 0021 	stmia.w	sp, {r0, r5}
   82f6c:	9203      	str	r2, [sp, #12]
   82f6e:	9304      	str	r3, [sp, #16]
   82f70:	9102      	str	r1, [sp, #8]
   82f72:	980d      	ldr	r0, [sp, #52]	; 0x34
   82f74:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
   82f78:	f001 fa32 	bl	843e0 <_dtoa_r>
   82f7c:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
   82f80:	4607      	mov	r7, r0
   82f82:	d002      	beq.n	82f8a <_svfprintf_r+0x1096>
   82f84:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   82f88:	d105      	bne.n	82f96 <_svfprintf_r+0x10a2>
   82f8a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82f8e:	f01c 0f01 	tst.w	ip, #1
   82f92:	f000 819c 	beq.w	832ce <_svfprintf_r+0x13da>
   82f96:	f1ba 0f46 	cmp.w	sl, #70	; 0x46
   82f9a:	eb07 0405 	add.w	r4, r7, r5
   82f9e:	f000 811c 	beq.w	831da <_svfprintf_r+0x12e6>
   82fa2:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
   82fa6:	2200      	movs	r2, #0
   82fa8:	2300      	movs	r3, #0
   82faa:	f7fe fe15 	bl	81bd8 <__aeabi_dcmpeq>
   82fae:	2800      	cmp	r0, #0
   82fb0:	f040 8105 	bne.w	831be <_svfprintf_r+0x12ca>
   82fb4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   82fb6:	429c      	cmp	r4, r3
   82fb8:	d906      	bls.n	82fc8 <_svfprintf_r+0x10d4>
   82fba:	2130      	movs	r1, #48	; 0x30
   82fbc:	1c5a      	adds	r2, r3, #1
   82fbe:	9229      	str	r2, [sp, #164]	; 0xa4
   82fc0:	7019      	strb	r1, [r3, #0]
   82fc2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   82fc4:	429c      	cmp	r4, r3
   82fc6:	d8f9      	bhi.n	82fbc <_svfprintf_r+0x10c8>
   82fc8:	1bdb      	subs	r3, r3, r7
   82fca:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
   82fce:	9311      	str	r3, [sp, #68]	; 0x44
   82fd0:	f000 80ed 	beq.w	831ae <_svfprintf_r+0x12ba>
   82fd4:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   82fd8:	f340 81f2 	ble.w	833c0 <_svfprintf_r+0x14cc>
   82fdc:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   82fe0:	f000 8168 	beq.w	832b4 <_svfprintf_r+0x13c0>
   82fe4:	9c25      	ldr	r4, [sp, #148]	; 0x94
   82fe6:	9414      	str	r4, [sp, #80]	; 0x50
   82fe8:	9c11      	ldr	r4, [sp, #68]	; 0x44
   82fea:	9d14      	ldr	r5, [sp, #80]	; 0x50
   82fec:	42ac      	cmp	r4, r5
   82fee:	f300 8132 	bgt.w	83256 <_svfprintf_r+0x1362>
   82ff2:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82ff6:	f01c 0f01 	tst.w	ip, #1
   82ffa:	f040 81ad 	bne.w	83358 <_svfprintf_r+0x1464>
   82ffe:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
   83002:	462c      	mov	r4, r5
   83004:	f04f 0867 	mov.w	r8, #103	; 0x67
   83008:	f1bb 0f00 	cmp.w	fp, #0
   8300c:	f040 80b2 	bne.w	83174 <_svfprintf_r+0x1280>
   83010:	9d12      	ldr	r5, [sp, #72]	; 0x48
   83012:	930b      	str	r3, [sp, #44]	; 0x2c
   83014:	9509      	str	r5, [sp, #36]	; 0x24
   83016:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
   8301a:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   8301e:	f7ff b900 	b.w	82222 <_svfprintf_r+0x32e>
   83022:	980d      	ldr	r0, [sp, #52]	; 0x34
   83024:	2140      	movs	r1, #64	; 0x40
   83026:	f002 fdfd 	bl	85c24 <_malloc_r>
   8302a:	6020      	str	r0, [r4, #0]
   8302c:	6120      	str	r0, [r4, #16]
   8302e:	2800      	cmp	r0, #0
   83030:	f000 81bf 	beq.w	833b2 <_svfprintf_r+0x14be>
   83034:	f8dd c030 	ldr.w	ip, [sp, #48]	; 0x30
   83038:	2340      	movs	r3, #64	; 0x40
   8303a:	f8cc 3014 	str.w	r3, [ip, #20]
   8303e:	f7fe bf6f 	b.w	81f20 <_svfprintf_r+0x2c>
   83042:	980d      	ldr	r0, [sp, #52]	; 0x34
   83044:	990c      	ldr	r1, [sp, #48]	; 0x30
   83046:	aa2b      	add	r2, sp, #172	; 0xac
   83048:	f003 ff20 	bl	86e8c <__ssprint_r>
   8304c:	2800      	cmp	r0, #0
   8304e:	f47f a869 	bne.w	82124 <_svfprintf_r+0x230>
   83052:	9c25      	ldr	r4, [sp, #148]	; 0x94
   83054:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   83058:	ae38      	add	r6, sp, #224	; 0xe0
   8305a:	e6fd      	b.n	82e58 <_svfprintf_r+0xf64>
   8305c:	2406      	movs	r4, #6
   8305e:	940a      	str	r4, [sp, #40]	; 0x28
   83060:	e75f      	b.n	82f22 <_svfprintf_r+0x102e>
   83062:	9d10      	ldr	r5, [sp, #64]	; 0x40
   83064:	682c      	ldr	r4, [r5, #0]
   83066:	3504      	adds	r5, #4
   83068:	9510      	str	r5, [sp, #64]	; 0x40
   8306a:	2500      	movs	r5, #0
   8306c:	f7ff b898 	b.w	821a0 <_svfprintf_r+0x2ac>
   83070:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   83074:	f01c 0f40 	tst.w	ip, #64	; 0x40
   83078:	f000 8087 	beq.w	8318a <_svfprintf_r+0x1296>
   8307c:	9c10      	ldr	r4, [sp, #64]	; 0x40
   8307e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   83080:	6823      	ldr	r3, [r4, #0]
   83082:	3404      	adds	r4, #4
   83084:	9410      	str	r4, [sp, #64]	; 0x40
   83086:	801d      	strh	r5, [r3, #0]
   83088:	f7fe bf5a 	b.w	81f40 <_svfprintf_r+0x4c>
   8308c:	980d      	ldr	r0, [sp, #52]	; 0x34
   8308e:	990c      	ldr	r1, [sp, #48]	; 0x30
   83090:	aa2b      	add	r2, sp, #172	; 0xac
   83092:	f003 fefb 	bl	86e8c <__ssprint_r>
   83096:	2800      	cmp	r0, #0
   83098:	f47f a844 	bne.w	82124 <_svfprintf_r+0x230>
   8309c:	992d      	ldr	r1, [sp, #180]	; 0xb4
   8309e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   830a0:	aa38      	add	r2, sp, #224	; 0xe0
   830a2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
   830a6:	3301      	adds	r3, #1
   830a8:	9c11      	ldr	r4, [sp, #68]	; 0x44
   830aa:	448c      	add	ip, r1
   830ac:	2b07      	cmp	r3, #7
   830ae:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   830b2:	932c      	str	r3, [sp, #176]	; 0xb0
   830b4:	6017      	str	r7, [r2, #0]
   830b6:	6054      	str	r4, [r2, #4]
   830b8:	f73f ac9c 	bgt.w	829f4 <_svfprintf_r+0xb00>
   830bc:	f102 0608 	add.w	r6, r2, #8
   830c0:	f7ff b98a 	b.w	823d8 <_svfprintf_r+0x4e4>
   830c4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
   830c8:	f003 feb0 	bl	86e2c <strlen>
   830cc:	9510      	str	r5, [sp, #64]	; 0x40
   830ce:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   830d0:	ea20 7ce0 	bic.w	ip, r0, r0, asr #31
   830d4:	4604      	mov	r4, r0
   830d6:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   830da:	9514      	str	r5, [sp, #80]	; 0x50
   830dc:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   830e0:	f7ff b89f 	b.w	82222 <_svfprintf_r+0x32e>
   830e4:	980d      	ldr	r0, [sp, #52]	; 0x34
   830e6:	990c      	ldr	r1, [sp, #48]	; 0x30
   830e8:	aa2b      	add	r2, sp, #172	; 0xac
   830ea:	f003 fecf 	bl	86e8c <__ssprint_r>
   830ee:	2800      	cmp	r0, #0
   830f0:	f47f a818 	bne.w	82124 <_svfprintf_r+0x230>
   830f4:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   830f8:	ae38      	add	r6, sp, #224	; 0xe0
   830fa:	e4d6      	b.n	82aaa <_svfprintf_r+0xbb6>
   830fc:	980d      	ldr	r0, [sp, #52]	; 0x34
   830fe:	990c      	ldr	r1, [sp, #48]	; 0x30
   83100:	aa2b      	add	r2, sp, #172	; 0xac
   83102:	f003 fec3 	bl	86e8c <__ssprint_r>
   83106:	2800      	cmp	r0, #0
   83108:	f47f a80c 	bne.w	82124 <_svfprintf_r+0x230>
   8310c:	9c25      	ldr	r4, [sp, #148]	; 0x94
   8310e:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   83112:	ae38      	add	r6, sp, #224	; 0xe0
   83114:	e5b0      	b.n	82c78 <_svfprintf_r+0xd84>
   83116:	bf00      	nop
   83118:	00087998 	.word	0x00087998
   8311c:	00087948 	.word	0x00087948
   83120:	4621      	mov	r1, r4
   83122:	465c      	mov	r4, fp
   83124:	3301      	adds	r3, #1
   83126:	4421      	add	r1, r4
   83128:	2b07      	cmp	r3, #7
   8312a:	912d      	str	r1, [sp, #180]	; 0xb4
   8312c:	932c      	str	r3, [sp, #176]	; 0xb0
   8312e:	6015      	str	r5, [r2, #0]
   83130:	6054      	str	r4, [r2, #4]
   83132:	dcab      	bgt.n	8308c <_svfprintf_r+0x1198>
   83134:	3208      	adds	r2, #8
   83136:	e7b4      	b.n	830a2 <_svfprintf_r+0x11ae>
   83138:	980d      	ldr	r0, [sp, #52]	; 0x34
   8313a:	990c      	ldr	r1, [sp, #48]	; 0x30
   8313c:	aa2b      	add	r2, sp, #172	; 0xac
   8313e:	f003 fea5 	bl	86e8c <__ssprint_r>
   83142:	2800      	cmp	r0, #0
   83144:	f47e afee 	bne.w	82124 <_svfprintf_r+0x230>
   83148:	9c25      	ldr	r4, [sp, #148]	; 0x94
   8314a:	9911      	ldr	r1, [sp, #68]	; 0x44
   8314c:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   83150:	1b0c      	subs	r4, r1, r4
   83152:	ae38      	add	r6, sp, #224	; 0xe0
   83154:	e5a5      	b.n	82ca2 <_svfprintf_r+0xdae>
   83156:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   83158:	46ba      	mov	sl, r7
   8315a:	2c06      	cmp	r4, #6
   8315c:	bf28      	it	cs
   8315e:	2406      	movcs	r4, #6
   83160:	ea24 7ce4 	bic.w	ip, r4, r4, asr #31
   83164:	970a      	str	r7, [sp, #40]	; 0x28
   83166:	9714      	str	r7, [sp, #80]	; 0x50
   83168:	9510      	str	r5, [sp, #64]	; 0x40
   8316a:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   8316e:	4f97      	ldr	r7, [pc, #604]	; (833cc <_svfprintf_r+0x14d8>)
   83170:	f7ff b857 	b.w	82222 <_svfprintf_r+0x32e>
   83174:	9d12      	ldr	r5, [sp, #72]	; 0x48
   83176:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   8317a:	9509      	str	r5, [sp, #36]	; 0x24
   8317c:	2500      	movs	r5, #0
   8317e:	930b      	str	r3, [sp, #44]	; 0x2c
   83180:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   83184:	950a      	str	r5, [sp, #40]	; 0x28
   83186:	f7ff b84f 	b.w	82228 <_svfprintf_r+0x334>
   8318a:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   8318e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   83190:	f8dc 3000 	ldr.w	r3, [ip]
   83194:	f10c 0c04 	add.w	ip, ip, #4
   83198:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   8319c:	601c      	str	r4, [r3, #0]
   8319e:	f7fe becf 	b.w	81f40 <_svfprintf_r+0x4c>
   831a2:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   831a6:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   831aa:	f7ff ba99 	b.w	826e0 <_svfprintf_r+0x7ec>
   831ae:	9b25      	ldr	r3, [sp, #148]	; 0x94
   831b0:	1cdc      	adds	r4, r3, #3
   831b2:	db19      	blt.n	831e8 <_svfprintf_r+0x12f4>
   831b4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   831b6:	429c      	cmp	r4, r3
   831b8:	db16      	blt.n	831e8 <_svfprintf_r+0x12f4>
   831ba:	9314      	str	r3, [sp, #80]	; 0x50
   831bc:	e714      	b.n	82fe8 <_svfprintf_r+0x10f4>
   831be:	4623      	mov	r3, r4
   831c0:	e702      	b.n	82fc8 <_svfprintf_r+0x10d4>
   831c2:	ea24 7ce4 	bic.w	ip, r4, r4, asr #31
   831c6:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   831ca:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   831cc:	9510      	str	r5, [sp, #64]	; 0x40
   831ce:	900a      	str	r0, [sp, #40]	; 0x28
   831d0:	9014      	str	r0, [sp, #80]	; 0x50
   831d2:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   831d6:	f7ff b824 	b.w	82222 <_svfprintf_r+0x32e>
   831da:	783b      	ldrb	r3, [r7, #0]
   831dc:	2b30      	cmp	r3, #48	; 0x30
   831de:	f000 80ad 	beq.w	8333c <_svfprintf_r+0x1448>
   831e2:	9d25      	ldr	r5, [sp, #148]	; 0x94
   831e4:	442c      	add	r4, r5
   831e6:	e6dc      	b.n	82fa2 <_svfprintf_r+0x10ae>
   831e8:	f1a8 0802 	sub.w	r8, r8, #2
   831ec:	1e59      	subs	r1, r3, #1
   831ee:	2900      	cmp	r1, #0
   831f0:	9125      	str	r1, [sp, #148]	; 0x94
   831f2:	bfba      	itte	lt
   831f4:	4249      	neglt	r1, r1
   831f6:	232d      	movlt	r3, #45	; 0x2d
   831f8:	232b      	movge	r3, #43	; 0x2b
   831fa:	2909      	cmp	r1, #9
   831fc:	f88d 809c 	strb.w	r8, [sp, #156]	; 0x9c
   83200:	f88d 309d 	strb.w	r3, [sp, #157]	; 0x9d
   83204:	dc65      	bgt.n	832d2 <_svfprintf_r+0x13de>
   83206:	2330      	movs	r3, #48	; 0x30
   83208:	3130      	adds	r1, #48	; 0x30
   8320a:	f88d 309e 	strb.w	r3, [sp, #158]	; 0x9e
   8320e:	f88d 109f 	strb.w	r1, [sp, #159]	; 0x9f
   83212:	ab28      	add	r3, sp, #160	; 0xa0
   83214:	9d11      	ldr	r5, [sp, #68]	; 0x44
   83216:	aa27      	add	r2, sp, #156	; 0x9c
   83218:	9c11      	ldr	r4, [sp, #68]	; 0x44
   8321a:	1a9a      	subs	r2, r3, r2
   8321c:	2d01      	cmp	r5, #1
   8321e:	9219      	str	r2, [sp, #100]	; 0x64
   83220:	4414      	add	r4, r2
   83222:	f340 80b7 	ble.w	83394 <_svfprintf_r+0x14a0>
   83226:	3401      	adds	r4, #1
   83228:	2500      	movs	r5, #0
   8322a:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   8322e:	9514      	str	r5, [sp, #80]	; 0x50
   83230:	e6ea      	b.n	83008 <_svfprintf_r+0x1114>
   83232:	2400      	movs	r4, #0
   83234:	4681      	mov	r9, r0
   83236:	940a      	str	r4, [sp, #40]	; 0x28
   83238:	f7fe beba 	b.w	81fb0 <_svfprintf_r+0xbc>
   8323c:	980d      	ldr	r0, [sp, #52]	; 0x34
   8323e:	990c      	ldr	r1, [sp, #48]	; 0x30
   83240:	aa2b      	add	r2, sp, #172	; 0xac
   83242:	f003 fe23 	bl	86e8c <__ssprint_r>
   83246:	2800      	cmp	r0, #0
   83248:	f47e af6c 	bne.w	82124 <_svfprintf_r+0x230>
   8324c:	9c25      	ldr	r4, [sp, #148]	; 0x94
   8324e:	992d      	ldr	r1, [sp, #180]	; 0xb4
   83250:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   83252:	aa38      	add	r2, sp, #224	; 0xe0
   83254:	e616      	b.n	82e84 <_svfprintf_r+0xf90>
   83256:	9c14      	ldr	r4, [sp, #80]	; 0x50
   83258:	9d11      	ldr	r5, [sp, #68]	; 0x44
   8325a:	2c00      	cmp	r4, #0
   8325c:	bfd4      	ite	le
   8325e:	f1c4 0402 	rsble	r4, r4, #2
   83262:	2401      	movgt	r4, #1
   83264:	442c      	add	r4, r5
   83266:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   8326a:	f04f 0867 	mov.w	r8, #103	; 0x67
   8326e:	e6cb      	b.n	83008 <_svfprintf_r+0x1114>
   83270:	9917      	ldr	r1, [sp, #92]	; 0x5c
   83272:	9816      	ldr	r0, [sp, #88]	; 0x58
   83274:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
   83278:	9020      	str	r0, [sp, #128]	; 0x80
   8327a:	9121      	str	r1, [sp, #132]	; 0x84
   8327c:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
   83280:	e660      	b.n	82f44 <_svfprintf_r+0x1050>
   83282:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   83284:	2003      	movs	r0, #3
   83286:	a925      	add	r1, sp, #148	; 0x94
   83288:	aa26      	add	r2, sp, #152	; 0x98
   8328a:	ab29      	add	r3, sp, #164	; 0xa4
   8328c:	9501      	str	r5, [sp, #4]
   8328e:	9000      	str	r0, [sp, #0]
   83290:	9203      	str	r2, [sp, #12]
   83292:	9304      	str	r3, [sp, #16]
   83294:	9102      	str	r1, [sp, #8]
   83296:	980d      	ldr	r0, [sp, #52]	; 0x34
   83298:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
   8329c:	f001 f8a0 	bl	843e0 <_dtoa_r>
   832a0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   832a2:	4607      	mov	r7, r0
   832a4:	e677      	b.n	82f96 <_svfprintf_r+0x10a2>
   832a6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   832a8:	2003      	movs	r0, #3
   832aa:	a925      	add	r1, sp, #148	; 0x94
   832ac:	aa26      	add	r2, sp, #152	; 0x98
   832ae:	ab29      	add	r3, sp, #164	; 0xa4
   832b0:	9401      	str	r4, [sp, #4]
   832b2:	e7ec      	b.n	8328e <_svfprintf_r+0x139a>
   832b4:	9d25      	ldr	r5, [sp, #148]	; 0x94
   832b6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   832b8:	2d00      	cmp	r5, #0
   832ba:	9514      	str	r5, [sp, #80]	; 0x50
   832bc:	dd63      	ble.n	83386 <_svfprintf_r+0x1492>
   832be:	bbb4      	cbnz	r4, 8332e <_svfprintf_r+0x143a>
   832c0:	9d09      	ldr	r5, [sp, #36]	; 0x24
   832c2:	07e8      	lsls	r0, r5, #31
   832c4:	d433      	bmi.n	8332e <_svfprintf_r+0x143a>
   832c6:	9c14      	ldr	r4, [sp, #80]	; 0x50
   832c8:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   832cc:	e69c      	b.n	83008 <_svfprintf_r+0x1114>
   832ce:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   832d0:	e67a      	b.n	82fc8 <_svfprintf_r+0x10d4>
   832d2:	f10d 02aa 	add.w	r2, sp, #170	; 0xaa
   832d6:	4d3e      	ldr	r5, [pc, #248]	; (833d0 <_svfprintf_r+0x14dc>)
   832d8:	17cb      	asrs	r3, r1, #31
   832da:	fb85 5001 	smull	r5, r0, r5, r1
   832de:	ebc3 00a0 	rsb	r0, r3, r0, asr #2
   832e2:	eb00 0380 	add.w	r3, r0, r0, lsl #2
   832e6:	eba1 0143 	sub.w	r1, r1, r3, lsl #1
   832ea:	2809      	cmp	r0, #9
   832ec:	4613      	mov	r3, r2
   832ee:	f101 0230 	add.w	r2, r1, #48	; 0x30
   832f2:	701a      	strb	r2, [r3, #0]
   832f4:	4601      	mov	r1, r0
   832f6:	f103 32ff 	add.w	r2, r3, #4294967295
   832fa:	dcec      	bgt.n	832d6 <_svfprintf_r+0x13e2>
   832fc:	f100 0130 	add.w	r1, r0, #48	; 0x30
   83300:	f10d 04ab 	add.w	r4, sp, #171	; 0xab
   83304:	b2c9      	uxtb	r1, r1
   83306:	4294      	cmp	r4, r2
   83308:	f803 1c01 	strb.w	r1, [r3, #-1]
   8330c:	d95a      	bls.n	833c4 <_svfprintf_r+0x14d0>
   8330e:	f10d 009d 	add.w	r0, sp, #157	; 0x9d
   83312:	461a      	mov	r2, r3
   83314:	e001      	b.n	8331a <_svfprintf_r+0x1426>
   83316:	f812 1b01 	ldrb.w	r1, [r2], #1
   8331a:	42a2      	cmp	r2, r4
   8331c:	f800 1f01 	strb.w	r1, [r0, #1]!
   83320:	d1f9      	bne.n	83316 <_svfprintf_r+0x1422>
   83322:	f50d 7c90 	add.w	ip, sp, #288	; 0x120
   83326:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
   8332a:	3bf6      	subs	r3, #246	; 0xf6
   8332c:	e772      	b.n	83214 <_svfprintf_r+0x1320>
   8332e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   83330:	1c6c      	adds	r4, r5, #1
   83332:	9d14      	ldr	r5, [sp, #80]	; 0x50
   83334:	442c      	add	r4, r5
   83336:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   8333a:	e665      	b.n	83008 <_svfprintf_r+0x1114>
   8333c:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
   83340:	2200      	movs	r2, #0
   83342:	2300      	movs	r3, #0
   83344:	f7fe fc48 	bl	81bd8 <__aeabi_dcmpeq>
   83348:	2800      	cmp	r0, #0
   8334a:	f47f af4a 	bne.w	831e2 <_svfprintf_r+0x12ee>
   8334e:	f1c5 0501 	rsb	r5, r5, #1
   83352:	9525      	str	r5, [sp, #148]	; 0x94
   83354:	442c      	add	r4, r5
   83356:	e624      	b.n	82fa2 <_svfprintf_r+0x10ae>
   83358:	9d14      	ldr	r5, [sp, #80]	; 0x50
   8335a:	f04f 0867 	mov.w	r8, #103	; 0x67
   8335e:	1c6c      	adds	r4, r5, #1
   83360:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   83364:	e650      	b.n	83008 <_svfprintf_r+0x1114>
   83366:	9d10      	ldr	r5, [sp, #64]	; 0x40
   83368:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   8336c:	682d      	ldr	r5, [r5, #0]
   8336e:	f10c 0304 	add.w	r3, ip, #4
   83372:	2d00      	cmp	r5, #0
   83374:	f899 8001 	ldrb.w	r8, [r9, #1]
   83378:	950a      	str	r5, [sp, #40]	; 0x28
   8337a:	9310      	str	r3, [sp, #64]	; 0x40
   8337c:	4681      	mov	r9, r0
   8337e:	f6be ae15 	bge.w	81fac <_svfprintf_r+0xb8>
   83382:	f7fe be10 	b.w	81fa6 <_svfprintf_r+0xb2>
   83386:	b97c      	cbnz	r4, 833a8 <_svfprintf_r+0x14b4>
   83388:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8338a:	07e9      	lsls	r1, r5, #31
   8338c:	d40c      	bmi.n	833a8 <_svfprintf_r+0x14b4>
   8338e:	2301      	movs	r3, #1
   83390:	461c      	mov	r4, r3
   83392:	e639      	b.n	83008 <_svfprintf_r+0x1114>
   83394:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   83398:	f01c 0301 	ands.w	r3, ip, #1
   8339c:	f47f af43 	bne.w	83226 <_svfprintf_r+0x1332>
   833a0:	9314      	str	r3, [sp, #80]	; 0x50
   833a2:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   833a6:	e62f      	b.n	83008 <_svfprintf_r+0x1114>
   833a8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   833aa:	1cac      	adds	r4, r5, #2
   833ac:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   833b0:	e62a      	b.n	83008 <_svfprintf_r+0x1114>
   833b2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   833b4:	230c      	movs	r3, #12
   833b6:	602b      	str	r3, [r5, #0]
   833b8:	f04f 30ff 	mov.w	r0, #4294967295
   833bc:	f7fe beba 	b.w	82134 <_svfprintf_r+0x240>
   833c0:	9b25      	ldr	r3, [sp, #148]	; 0x94
   833c2:	e713      	b.n	831ec <_svfprintf_r+0x12f8>
   833c4:	f10d 039e 	add.w	r3, sp, #158	; 0x9e
   833c8:	e724      	b.n	83214 <_svfprintf_r+0x1320>
   833ca:	bf00      	nop
   833cc:	00087990 	.word	0x00087990
   833d0:	66666667 	.word	0x66666667

000833d4 <__sprint_r.part.0>:
   833d4:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   833d6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   833da:	049c      	lsls	r4, r3, #18
   833dc:	460e      	mov	r6, r1
   833de:	4680      	mov	r8, r0
   833e0:	4691      	mov	r9, r2
   833e2:	d52a      	bpl.n	8343a <__sprint_r.part.0+0x66>
   833e4:	6893      	ldr	r3, [r2, #8]
   833e6:	6812      	ldr	r2, [r2, #0]
   833e8:	f102 0a08 	add.w	sl, r2, #8
   833ec:	b31b      	cbz	r3, 83436 <__sprint_r.part.0+0x62>
   833ee:	e91a 00a0 	ldmdb	sl, {r5, r7}
   833f2:	08bf      	lsrs	r7, r7, #2
   833f4:	d017      	beq.n	83426 <__sprint_r.part.0+0x52>
   833f6:	3d04      	subs	r5, #4
   833f8:	2400      	movs	r4, #0
   833fa:	e001      	b.n	83400 <__sprint_r.part.0+0x2c>
   833fc:	42a7      	cmp	r7, r4
   833fe:	d010      	beq.n	83422 <__sprint_r.part.0+0x4e>
   83400:	4640      	mov	r0, r8
   83402:	f855 1f04 	ldr.w	r1, [r5, #4]!
   83406:	4632      	mov	r2, r6
   83408:	f002 f85c 	bl	854c4 <_fputwc_r>
   8340c:	1c43      	adds	r3, r0, #1
   8340e:	f104 0401 	add.w	r4, r4, #1
   83412:	d1f3      	bne.n	833fc <__sprint_r.part.0+0x28>
   83414:	2300      	movs	r3, #0
   83416:	f8c9 3008 	str.w	r3, [r9, #8]
   8341a:	f8c9 3004 	str.w	r3, [r9, #4]
   8341e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   83422:	f8d9 3008 	ldr.w	r3, [r9, #8]
   83426:	eba3 0387 	sub.w	r3, r3, r7, lsl #2
   8342a:	f8c9 3008 	str.w	r3, [r9, #8]
   8342e:	f10a 0a08 	add.w	sl, sl, #8
   83432:	2b00      	cmp	r3, #0
   83434:	d1db      	bne.n	833ee <__sprint_r.part.0+0x1a>
   83436:	2000      	movs	r0, #0
   83438:	e7ec      	b.n	83414 <__sprint_r.part.0+0x40>
   8343a:	f002 f9bd 	bl	857b8 <__sfvwrite_r>
   8343e:	2300      	movs	r3, #0
   83440:	f8c9 3008 	str.w	r3, [r9, #8]
   83444:	f8c9 3004 	str.w	r3, [r9, #4]
   83448:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0008344c <_vfiprintf_r>:
   8344c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83450:	b0b1      	sub	sp, #196	; 0xc4
   83452:	461c      	mov	r4, r3
   83454:	9102      	str	r1, [sp, #8]
   83456:	4690      	mov	r8, r2
   83458:	9308      	str	r3, [sp, #32]
   8345a:	9006      	str	r0, [sp, #24]
   8345c:	b118      	cbz	r0, 83466 <_vfiprintf_r+0x1a>
   8345e:	6b83      	ldr	r3, [r0, #56]	; 0x38
   83460:	2b00      	cmp	r3, #0
   83462:	f000 80e8 	beq.w	83636 <_vfiprintf_r+0x1ea>
   83466:	9d02      	ldr	r5, [sp, #8]
   83468:	89ab      	ldrh	r3, [r5, #12]
   8346a:	b29a      	uxth	r2, r3
   8346c:	0490      	lsls	r0, r2, #18
   8346e:	d407      	bmi.n	83480 <_vfiprintf_r+0x34>
   83470:	6e6a      	ldr	r2, [r5, #100]	; 0x64
   83472:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   83476:	f422 5100 	bic.w	r1, r2, #8192	; 0x2000
   8347a:	81ab      	strh	r3, [r5, #12]
   8347c:	b29a      	uxth	r2, r3
   8347e:	6669      	str	r1, [r5, #100]	; 0x64
   83480:	0711      	lsls	r1, r2, #28
   83482:	f140 80b7 	bpl.w	835f4 <_vfiprintf_r+0x1a8>
   83486:	f8dd b008 	ldr.w	fp, [sp, #8]
   8348a:	f8db 3010 	ldr.w	r3, [fp, #16]
   8348e:	2b00      	cmp	r3, #0
   83490:	f000 80b0 	beq.w	835f4 <_vfiprintf_r+0x1a8>
   83494:	f002 021a 	and.w	r2, r2, #26
   83498:	2a0a      	cmp	r2, #10
   8349a:	f000 80b7 	beq.w	8360c <_vfiprintf_r+0x1c0>
   8349e:	2300      	movs	r3, #0
   834a0:	f10d 0980 	add.w	r9, sp, #128	; 0x80
   834a4:	930a      	str	r3, [sp, #40]	; 0x28
   834a6:	9315      	str	r3, [sp, #84]	; 0x54
   834a8:	9314      	str	r3, [sp, #80]	; 0x50
   834aa:	9309      	str	r3, [sp, #36]	; 0x24
   834ac:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
   834b0:	464e      	mov	r6, r9
   834b2:	f898 3000 	ldrb.w	r3, [r8]
   834b6:	2b00      	cmp	r3, #0
   834b8:	f000 84c8 	beq.w	83e4c <_vfiprintf_r+0xa00>
   834bc:	2b25      	cmp	r3, #37	; 0x25
   834be:	f000 84c5 	beq.w	83e4c <_vfiprintf_r+0xa00>
   834c2:	f108 0201 	add.w	r2, r8, #1
   834c6:	e001      	b.n	834cc <_vfiprintf_r+0x80>
   834c8:	2b25      	cmp	r3, #37	; 0x25
   834ca:	d004      	beq.n	834d6 <_vfiprintf_r+0x8a>
   834cc:	7813      	ldrb	r3, [r2, #0]
   834ce:	4614      	mov	r4, r2
   834d0:	3201      	adds	r2, #1
   834d2:	2b00      	cmp	r3, #0
   834d4:	d1f8      	bne.n	834c8 <_vfiprintf_r+0x7c>
   834d6:	ebc8 0504 	rsb	r5, r8, r4
   834da:	b195      	cbz	r5, 83502 <_vfiprintf_r+0xb6>
   834dc:	9b14      	ldr	r3, [sp, #80]	; 0x50
   834de:	9a15      	ldr	r2, [sp, #84]	; 0x54
   834e0:	3301      	adds	r3, #1
   834e2:	442a      	add	r2, r5
   834e4:	2b07      	cmp	r3, #7
   834e6:	f8c6 8000 	str.w	r8, [r6]
   834ea:	6075      	str	r5, [r6, #4]
   834ec:	9215      	str	r2, [sp, #84]	; 0x54
   834ee:	9314      	str	r3, [sp, #80]	; 0x50
   834f0:	dd7b      	ble.n	835ea <_vfiprintf_r+0x19e>
   834f2:	2a00      	cmp	r2, #0
   834f4:	f040 84d5 	bne.w	83ea2 <_vfiprintf_r+0xa56>
   834f8:	9809      	ldr	r0, [sp, #36]	; 0x24
   834fa:	9214      	str	r2, [sp, #80]	; 0x50
   834fc:	4428      	add	r0, r5
   834fe:	464e      	mov	r6, r9
   83500:	9009      	str	r0, [sp, #36]	; 0x24
   83502:	7823      	ldrb	r3, [r4, #0]
   83504:	2b00      	cmp	r3, #0
   83506:	f000 83ed 	beq.w	83ce4 <_vfiprintf_r+0x898>
   8350a:	2100      	movs	r1, #0
   8350c:	f04f 0200 	mov.w	r2, #0
   83510:	f04f 3cff 	mov.w	ip, #4294967295
   83514:	7863      	ldrb	r3, [r4, #1]
   83516:	f88d 2047 	strb.w	r2, [sp, #71]	; 0x47
   8351a:	9104      	str	r1, [sp, #16]
   8351c:	468a      	mov	sl, r1
   8351e:	f104 0801 	add.w	r8, r4, #1
   83522:	4608      	mov	r0, r1
   83524:	4665      	mov	r5, ip
   83526:	f108 0801 	add.w	r8, r8, #1
   8352a:	f1a3 0220 	sub.w	r2, r3, #32
   8352e:	2a58      	cmp	r2, #88	; 0x58
   83530:	f200 82d9 	bhi.w	83ae6 <_vfiprintf_r+0x69a>
   83534:	e8df f012 	tbh	[pc, r2, lsl #1]
   83538:	02d702cb 	.word	0x02d702cb
   8353c:	02d202d7 	.word	0x02d202d7
   83540:	02d702d7 	.word	0x02d702d7
   83544:	02d702d7 	.word	0x02d702d7
   83548:	02d702d7 	.word	0x02d702d7
   8354c:	028f0282 	.word	0x028f0282
   83550:	008402d7 	.word	0x008402d7
   83554:	02d70293 	.word	0x02d70293
   83558:	0196012b 	.word	0x0196012b
   8355c:	01960196 	.word	0x01960196
   83560:	01960196 	.word	0x01960196
   83564:	01960196 	.word	0x01960196
   83568:	01960196 	.word	0x01960196
   8356c:	02d702d7 	.word	0x02d702d7
   83570:	02d702d7 	.word	0x02d702d7
   83574:	02d702d7 	.word	0x02d702d7
   83578:	02d702d7 	.word	0x02d702d7
   8357c:	02d702d7 	.word	0x02d702d7
   83580:	02d70130 	.word	0x02d70130
   83584:	02d702d7 	.word	0x02d702d7
   83588:	02d702d7 	.word	0x02d702d7
   8358c:	02d702d7 	.word	0x02d702d7
   83590:	02d702d7 	.word	0x02d702d7
   83594:	017b02d7 	.word	0x017b02d7
   83598:	02d702d7 	.word	0x02d702d7
   8359c:	02d702d7 	.word	0x02d702d7
   835a0:	01a402d7 	.word	0x01a402d7
   835a4:	02d702d7 	.word	0x02d702d7
   835a8:	02d701bf 	.word	0x02d701bf
   835ac:	02d702d7 	.word	0x02d702d7
   835b0:	02d702d7 	.word	0x02d702d7
   835b4:	02d702d7 	.word	0x02d702d7
   835b8:	02d702d7 	.word	0x02d702d7
   835bc:	01e402d7 	.word	0x01e402d7
   835c0:	02d701fa 	.word	0x02d701fa
   835c4:	02d702d7 	.word	0x02d702d7
   835c8:	01fa0216 	.word	0x01fa0216
   835cc:	02d702d7 	.word	0x02d702d7
   835d0:	02d7021b 	.word	0x02d7021b
   835d4:	00890228 	.word	0x00890228
   835d8:	027d0266 	.word	0x027d0266
   835dc:	023a02d7 	.word	0x023a02d7
   835e0:	011902d7 	.word	0x011902d7
   835e4:	02d702d7 	.word	0x02d702d7
   835e8:	02af      	.short	0x02af
   835ea:	3608      	adds	r6, #8
   835ec:	9809      	ldr	r0, [sp, #36]	; 0x24
   835ee:	4428      	add	r0, r5
   835f0:	9009      	str	r0, [sp, #36]	; 0x24
   835f2:	e786      	b.n	83502 <_vfiprintf_r+0xb6>
   835f4:	9806      	ldr	r0, [sp, #24]
   835f6:	9902      	ldr	r1, [sp, #8]
   835f8:	f000 fde4 	bl	841c4 <__swsetup_r>
   835fc:	b9b0      	cbnz	r0, 8362c <_vfiprintf_r+0x1e0>
   835fe:	9d02      	ldr	r5, [sp, #8]
   83600:	89aa      	ldrh	r2, [r5, #12]
   83602:	f002 021a 	and.w	r2, r2, #26
   83606:	2a0a      	cmp	r2, #10
   83608:	f47f af49 	bne.w	8349e <_vfiprintf_r+0x52>
   8360c:	f8dd b008 	ldr.w	fp, [sp, #8]
   83610:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
   83614:	2b00      	cmp	r3, #0
   83616:	f6ff af42 	blt.w	8349e <_vfiprintf_r+0x52>
   8361a:	9806      	ldr	r0, [sp, #24]
   8361c:	4659      	mov	r1, fp
   8361e:	4642      	mov	r2, r8
   83620:	4623      	mov	r3, r4
   83622:	f000 fd3d 	bl	840a0 <__sbprintf>
   83626:	b031      	add	sp, #196	; 0xc4
   83628:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8362c:	f04f 30ff 	mov.w	r0, #4294967295
   83630:	b031      	add	sp, #196	; 0xc4
   83632:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83636:	f001 feaf 	bl	85398 <__sinit>
   8363a:	e714      	b.n	83466 <_vfiprintf_r+0x1a>
   8363c:	4240      	negs	r0, r0
   8363e:	9308      	str	r3, [sp, #32]
   83640:	f04a 0a04 	orr.w	sl, sl, #4
   83644:	f898 3000 	ldrb.w	r3, [r8]
   83648:	e76d      	b.n	83526 <_vfiprintf_r+0xda>
   8364a:	f01a 0320 	ands.w	r3, sl, #32
   8364e:	9004      	str	r0, [sp, #16]
   83650:	46ac      	mov	ip, r5
   83652:	f000 80f4 	beq.w	8383e <_vfiprintf_r+0x3f2>
   83656:	f8dd b020 	ldr.w	fp, [sp, #32]
   8365a:	f10b 0307 	add.w	r3, fp, #7
   8365e:	f023 0307 	bic.w	r3, r3, #7
   83662:	f103 0408 	add.w	r4, r3, #8
   83666:	9408      	str	r4, [sp, #32]
   83668:	e9d3 4500 	ldrd	r4, r5, [r3]
   8366c:	2300      	movs	r3, #0
   8366e:	f04f 0000 	mov.w	r0, #0
   83672:	2100      	movs	r1, #0
   83674:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
   83678:	f8cd c014 	str.w	ip, [sp, #20]
   8367c:	9107      	str	r1, [sp, #28]
   8367e:	f1bc 0f00 	cmp.w	ip, #0
   83682:	bfa8      	it	ge
   83684:	f02a 0a80 	bicge.w	sl, sl, #128	; 0x80
   83688:	ea54 0205 	orrs.w	r2, r4, r5
   8368c:	f040 80ad 	bne.w	837ea <_vfiprintf_r+0x39e>
   83690:	f1bc 0f00 	cmp.w	ip, #0
   83694:	f040 80a9 	bne.w	837ea <_vfiprintf_r+0x39e>
   83698:	2b00      	cmp	r3, #0
   8369a:	f040 83c0 	bne.w	83e1e <_vfiprintf_r+0x9d2>
   8369e:	f01a 0f01 	tst.w	sl, #1
   836a2:	f000 83bc 	beq.w	83e1e <_vfiprintf_r+0x9d2>
   836a6:	2330      	movs	r3, #48	; 0x30
   836a8:	af30      	add	r7, sp, #192	; 0xc0
   836aa:	f807 3d41 	strb.w	r3, [r7, #-65]!
   836ae:	ebc7 0409 	rsb	r4, r7, r9
   836b2:	9405      	str	r4, [sp, #20]
   836b4:	f8dd b014 	ldr.w	fp, [sp, #20]
   836b8:	9c07      	ldr	r4, [sp, #28]
   836ba:	45e3      	cmp	fp, ip
   836bc:	bfb8      	it	lt
   836be:	46e3      	movlt	fp, ip
   836c0:	f8cd b00c 	str.w	fp, [sp, #12]
   836c4:	b11c      	cbz	r4, 836ce <_vfiprintf_r+0x282>
   836c6:	f10b 0b01 	add.w	fp, fp, #1
   836ca:	f8cd b00c 	str.w	fp, [sp, #12]
   836ce:	f01a 0502 	ands.w	r5, sl, #2
   836d2:	9507      	str	r5, [sp, #28]
   836d4:	d005      	beq.n	836e2 <_vfiprintf_r+0x296>
   836d6:	f8dd b00c 	ldr.w	fp, [sp, #12]
   836da:	f10b 0b02 	add.w	fp, fp, #2
   836de:	f8cd b00c 	str.w	fp, [sp, #12]
   836e2:	f01a 0384 	ands.w	r3, sl, #132	; 0x84
   836e6:	930b      	str	r3, [sp, #44]	; 0x2c
   836e8:	f040 821b 	bne.w	83b22 <_vfiprintf_r+0x6d6>
   836ec:	9d04      	ldr	r5, [sp, #16]
   836ee:	f8dd b00c 	ldr.w	fp, [sp, #12]
   836f2:	ebcb 0405 	rsb	r4, fp, r5
   836f6:	2c00      	cmp	r4, #0
   836f8:	f340 8213 	ble.w	83b22 <_vfiprintf_r+0x6d6>
   836fc:	2c10      	cmp	r4, #16
   836fe:	f340 8489 	ble.w	84014 <_vfiprintf_r+0xbc8>
   83702:	4dbe      	ldr	r5, [pc, #760]	; (839fc <_vfiprintf_r+0x5b0>)
   83704:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83706:	462b      	mov	r3, r5
   83708:	9814      	ldr	r0, [sp, #80]	; 0x50
   8370a:	4625      	mov	r5, r4
   8370c:	f04f 0b10 	mov.w	fp, #16
   83710:	4664      	mov	r4, ip
   83712:	46b4      	mov	ip, r6
   83714:	461e      	mov	r6, r3
   83716:	e006      	b.n	83726 <_vfiprintf_r+0x2da>
   83718:	1c83      	adds	r3, r0, #2
   8371a:	f10c 0c08 	add.w	ip, ip, #8
   8371e:	4608      	mov	r0, r1
   83720:	3d10      	subs	r5, #16
   83722:	2d10      	cmp	r5, #16
   83724:	dd11      	ble.n	8374a <_vfiprintf_r+0x2fe>
   83726:	1c41      	adds	r1, r0, #1
   83728:	3210      	adds	r2, #16
   8372a:	2907      	cmp	r1, #7
   8372c:	9215      	str	r2, [sp, #84]	; 0x54
   8372e:	e88c 0840 	stmia.w	ip, {r6, fp}
   83732:	9114      	str	r1, [sp, #80]	; 0x50
   83734:	ddf0      	ble.n	83718 <_vfiprintf_r+0x2cc>
   83736:	2a00      	cmp	r2, #0
   83738:	f040 81e6 	bne.w	83b08 <_vfiprintf_r+0x6bc>
   8373c:	3d10      	subs	r5, #16
   8373e:	2d10      	cmp	r5, #16
   83740:	f04f 0301 	mov.w	r3, #1
   83744:	4610      	mov	r0, r2
   83746:	46cc      	mov	ip, r9
   83748:	dced      	bgt.n	83726 <_vfiprintf_r+0x2da>
   8374a:	4631      	mov	r1, r6
   8374c:	4666      	mov	r6, ip
   8374e:	46a4      	mov	ip, r4
   83750:	462c      	mov	r4, r5
   83752:	460d      	mov	r5, r1
   83754:	4422      	add	r2, r4
   83756:	2b07      	cmp	r3, #7
   83758:	9215      	str	r2, [sp, #84]	; 0x54
   8375a:	6035      	str	r5, [r6, #0]
   8375c:	6074      	str	r4, [r6, #4]
   8375e:	9314      	str	r3, [sp, #80]	; 0x50
   83760:	f300 836d 	bgt.w	83e3e <_vfiprintf_r+0x9f2>
   83764:	3608      	adds	r6, #8
   83766:	1c59      	adds	r1, r3, #1
   83768:	e1de      	b.n	83b28 <_vfiprintf_r+0x6dc>
   8376a:	f01a 0f20 	tst.w	sl, #32
   8376e:	9004      	str	r0, [sp, #16]
   83770:	46ac      	mov	ip, r5
   83772:	f000 808d 	beq.w	83890 <_vfiprintf_r+0x444>
   83776:	9d08      	ldr	r5, [sp, #32]
   83778:	1deb      	adds	r3, r5, #7
   8377a:	f023 0307 	bic.w	r3, r3, #7
   8377e:	f103 0b08 	add.w	fp, r3, #8
   83782:	e9d3 4500 	ldrd	r4, r5, [r3]
   83786:	f8cd b020 	str.w	fp, [sp, #32]
   8378a:	2301      	movs	r3, #1
   8378c:	e76f      	b.n	8366e <_vfiprintf_r+0x222>
   8378e:	f04a 0a80 	orr.w	sl, sl, #128	; 0x80
   83792:	f898 3000 	ldrb.w	r3, [r8]
   83796:	e6c6      	b.n	83526 <_vfiprintf_r+0xda>
   83798:	f04a 0a10 	orr.w	sl, sl, #16
   8379c:	f01a 0f20 	tst.w	sl, #32
   837a0:	9004      	str	r0, [sp, #16]
   837a2:	46ac      	mov	ip, r5
   837a4:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   837a8:	f000 80c8 	beq.w	8393c <_vfiprintf_r+0x4f0>
   837ac:	9c08      	ldr	r4, [sp, #32]
   837ae:	1de1      	adds	r1, r4, #7
   837b0:	f021 0107 	bic.w	r1, r1, #7
   837b4:	e9d1 2300 	ldrd	r2, r3, [r1]
   837b8:	3108      	adds	r1, #8
   837ba:	9108      	str	r1, [sp, #32]
   837bc:	4614      	mov	r4, r2
   837be:	461d      	mov	r5, r3
   837c0:	2a00      	cmp	r2, #0
   837c2:	f173 0b00 	sbcs.w	fp, r3, #0
   837c6:	f2c0 83ce 	blt.w	83f66 <_vfiprintf_r+0xb1a>
   837ca:	f1bc 0f00 	cmp.w	ip, #0
   837ce:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
   837d2:	bfa8      	it	ge
   837d4:	f02a 0a80 	bicge.w	sl, sl, #128	; 0x80
   837d8:	ea54 0205 	orrs.w	r2, r4, r5
   837dc:	9007      	str	r0, [sp, #28]
   837de:	f8cd c014 	str.w	ip, [sp, #20]
   837e2:	f04f 0301 	mov.w	r3, #1
   837e6:	f43f af53 	beq.w	83690 <_vfiprintf_r+0x244>
   837ea:	2b01      	cmp	r3, #1
   837ec:	f000 8319 	beq.w	83e22 <_vfiprintf_r+0x9d6>
   837f0:	2b02      	cmp	r3, #2
   837f2:	f10d 037f 	add.w	r3, sp, #127	; 0x7f
   837f6:	f040 824c 	bne.w	83c92 <_vfiprintf_r+0x846>
   837fa:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
   837fe:	4619      	mov	r1, r3
   83800:	f004 000f 	and.w	r0, r4, #15
   83804:	0922      	lsrs	r2, r4, #4
   83806:	f81b 0000 	ldrb.w	r0, [fp, r0]
   8380a:	ea42 7205 	orr.w	r2, r2, r5, lsl #28
   8380e:	092b      	lsrs	r3, r5, #4
   83810:	7008      	strb	r0, [r1, #0]
   83812:	ea52 0003 	orrs.w	r0, r2, r3
   83816:	460f      	mov	r7, r1
   83818:	4614      	mov	r4, r2
   8381a:	461d      	mov	r5, r3
   8381c:	f101 31ff 	add.w	r1, r1, #4294967295
   83820:	d1ee      	bne.n	83800 <_vfiprintf_r+0x3b4>
   83822:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
   83826:	ebc7 0309 	rsb	r3, r7, r9
   8382a:	9305      	str	r3, [sp, #20]
   8382c:	e742      	b.n	836b4 <_vfiprintf_r+0x268>
   8382e:	f04a 0a10 	orr.w	sl, sl, #16
   83832:	f01a 0320 	ands.w	r3, sl, #32
   83836:	9004      	str	r0, [sp, #16]
   83838:	46ac      	mov	ip, r5
   8383a:	f47f af0c 	bne.w	83656 <_vfiprintf_r+0x20a>
   8383e:	f01a 0210 	ands.w	r2, sl, #16
   83842:	f040 8311 	bne.w	83e68 <_vfiprintf_r+0xa1c>
   83846:	f01a 0340 	ands.w	r3, sl, #64	; 0x40
   8384a:	f000 830d 	beq.w	83e68 <_vfiprintf_r+0xa1c>
   8384e:	f8dd b020 	ldr.w	fp, [sp, #32]
   83852:	4613      	mov	r3, r2
   83854:	f8bb 4000 	ldrh.w	r4, [fp]
   83858:	f10b 0b04 	add.w	fp, fp, #4
   8385c:	2500      	movs	r5, #0
   8385e:	f8cd b020 	str.w	fp, [sp, #32]
   83862:	e704      	b.n	8366e <_vfiprintf_r+0x222>
   83864:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   83868:	2000      	movs	r0, #0
   8386a:	f818 3b01 	ldrb.w	r3, [r8], #1
   8386e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   83872:	eb02 0040 	add.w	r0, r2, r0, lsl #1
   83876:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   8387a:	2a09      	cmp	r2, #9
   8387c:	d9f5      	bls.n	8386a <_vfiprintf_r+0x41e>
   8387e:	e654      	b.n	8352a <_vfiprintf_r+0xde>
   83880:	f04a 0a10 	orr.w	sl, sl, #16
   83884:	f01a 0f20 	tst.w	sl, #32
   83888:	9004      	str	r0, [sp, #16]
   8388a:	46ac      	mov	ip, r5
   8388c:	f47f af73 	bne.w	83776 <_vfiprintf_r+0x32a>
   83890:	f01a 0f10 	tst.w	sl, #16
   83894:	f040 82ef 	bne.w	83e76 <_vfiprintf_r+0xa2a>
   83898:	f01a 0f40 	tst.w	sl, #64	; 0x40
   8389c:	f000 82eb 	beq.w	83e76 <_vfiprintf_r+0xa2a>
   838a0:	f8dd b020 	ldr.w	fp, [sp, #32]
   838a4:	2500      	movs	r5, #0
   838a6:	f8bb 4000 	ldrh.w	r4, [fp]
   838aa:	f10b 0b04 	add.w	fp, fp, #4
   838ae:	2301      	movs	r3, #1
   838b0:	f8cd b020 	str.w	fp, [sp, #32]
   838b4:	e6db      	b.n	8366e <_vfiprintf_r+0x222>
   838b6:	46ac      	mov	ip, r5
   838b8:	4d51      	ldr	r5, [pc, #324]	; (83a00 <_vfiprintf_r+0x5b4>)
   838ba:	f01a 0f20 	tst.w	sl, #32
   838be:	9004      	str	r0, [sp, #16]
   838c0:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   838c4:	950a      	str	r5, [sp, #40]	; 0x28
   838c6:	f000 80f0 	beq.w	83aaa <_vfiprintf_r+0x65e>
   838ca:	9d08      	ldr	r5, [sp, #32]
   838cc:	1dea      	adds	r2, r5, #7
   838ce:	f022 0207 	bic.w	r2, r2, #7
   838d2:	f102 0b08 	add.w	fp, r2, #8
   838d6:	f8cd b020 	str.w	fp, [sp, #32]
   838da:	e9d2 4500 	ldrd	r4, r5, [r2]
   838de:	f01a 0f01 	tst.w	sl, #1
   838e2:	f000 82aa 	beq.w	83e3a <_vfiprintf_r+0x9ee>
   838e6:	ea54 0b05 	orrs.w	fp, r4, r5
   838ea:	f000 82a6 	beq.w	83e3a <_vfiprintf_r+0x9ee>
   838ee:	2230      	movs	r2, #48	; 0x30
   838f0:	f88d 3049 	strb.w	r3, [sp, #73]	; 0x49
   838f4:	f04a 0a02 	orr.w	sl, sl, #2
   838f8:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   838fc:	2302      	movs	r3, #2
   838fe:	e6b6      	b.n	8366e <_vfiprintf_r+0x222>
   83900:	9b08      	ldr	r3, [sp, #32]
   83902:	f8dd b020 	ldr.w	fp, [sp, #32]
   83906:	681b      	ldr	r3, [r3, #0]
   83908:	2401      	movs	r4, #1
   8390a:	f04f 0500 	mov.w	r5, #0
   8390e:	f10b 0b04 	add.w	fp, fp, #4
   83912:	9004      	str	r0, [sp, #16]
   83914:	9403      	str	r4, [sp, #12]
   83916:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
   8391a:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
   8391e:	f8cd b020 	str.w	fp, [sp, #32]
   83922:	9405      	str	r4, [sp, #20]
   83924:	af16      	add	r7, sp, #88	; 0x58
   83926:	f04f 0c00 	mov.w	ip, #0
   8392a:	e6d0      	b.n	836ce <_vfiprintf_r+0x282>
   8392c:	f01a 0f20 	tst.w	sl, #32
   83930:	9004      	str	r0, [sp, #16]
   83932:	46ac      	mov	ip, r5
   83934:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   83938:	f47f af38 	bne.w	837ac <_vfiprintf_r+0x360>
   8393c:	f01a 0f10 	tst.w	sl, #16
   83940:	f040 82a7 	bne.w	83e92 <_vfiprintf_r+0xa46>
   83944:	f01a 0f40 	tst.w	sl, #64	; 0x40
   83948:	f000 82a3 	beq.w	83e92 <_vfiprintf_r+0xa46>
   8394c:	f8dd b020 	ldr.w	fp, [sp, #32]
   83950:	f9bb 4000 	ldrsh.w	r4, [fp]
   83954:	f10b 0b04 	add.w	fp, fp, #4
   83958:	17e5      	asrs	r5, r4, #31
   8395a:	4622      	mov	r2, r4
   8395c:	462b      	mov	r3, r5
   8395e:	f8cd b020 	str.w	fp, [sp, #32]
   83962:	e72d      	b.n	837c0 <_vfiprintf_r+0x374>
   83964:	f04a 0a40 	orr.w	sl, sl, #64	; 0x40
   83968:	f898 3000 	ldrb.w	r3, [r8]
   8396c:	e5db      	b.n	83526 <_vfiprintf_r+0xda>
   8396e:	f898 3000 	ldrb.w	r3, [r8]
   83972:	4642      	mov	r2, r8
   83974:	2b6c      	cmp	r3, #108	; 0x6c
   83976:	bf03      	ittte	eq
   83978:	f108 0801 	addeq.w	r8, r8, #1
   8397c:	f04a 0a20 	orreq.w	sl, sl, #32
   83980:	7853      	ldrbeq	r3, [r2, #1]
   83982:	f04a 0a10 	orrne.w	sl, sl, #16
   83986:	e5ce      	b.n	83526 <_vfiprintf_r+0xda>
   83988:	f01a 0f20 	tst.w	sl, #32
   8398c:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   83990:	f000 82f7 	beq.w	83f82 <_vfiprintf_r+0xb36>
   83994:	9c08      	ldr	r4, [sp, #32]
   83996:	6821      	ldr	r1, [r4, #0]
   83998:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8399a:	17e5      	asrs	r5, r4, #31
   8399c:	462b      	mov	r3, r5
   8399e:	9d08      	ldr	r5, [sp, #32]
   839a0:	4622      	mov	r2, r4
   839a2:	3504      	adds	r5, #4
   839a4:	9508      	str	r5, [sp, #32]
   839a6:	e9c1 2300 	strd	r2, r3, [r1]
   839aa:	e582      	b.n	834b2 <_vfiprintf_r+0x66>
   839ac:	9c08      	ldr	r4, [sp, #32]
   839ae:	46ac      	mov	ip, r5
   839b0:	6827      	ldr	r7, [r4, #0]
   839b2:	f04f 0500 	mov.w	r5, #0
   839b6:	9004      	str	r0, [sp, #16]
   839b8:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
   839bc:	3404      	adds	r4, #4
   839be:	2f00      	cmp	r7, #0
   839c0:	f000 8332 	beq.w	84028 <_vfiprintf_r+0xbdc>
   839c4:	f1bc 0f00 	cmp.w	ip, #0
   839c8:	4638      	mov	r0, r7
   839ca:	f2c0 8307 	blt.w	83fdc <_vfiprintf_r+0xb90>
   839ce:	4662      	mov	r2, ip
   839d0:	2100      	movs	r1, #0
   839d2:	f8cd c004 	str.w	ip, [sp, #4]
   839d6:	f002 fbc1 	bl	8615c <memchr>
   839da:	f8dd c004 	ldr.w	ip, [sp, #4]
   839de:	2800      	cmp	r0, #0
   839e0:	f000 833a 	beq.w	84058 <_vfiprintf_r+0xc0c>
   839e4:	1bc0      	subs	r0, r0, r7
   839e6:	f89d 5047 	ldrb.w	r5, [sp, #71]	; 0x47
   839ea:	4560      	cmp	r0, ip
   839ec:	bfa8      	it	ge
   839ee:	4660      	movge	r0, ip
   839f0:	9005      	str	r0, [sp, #20]
   839f2:	9408      	str	r4, [sp, #32]
   839f4:	9507      	str	r5, [sp, #28]
   839f6:	f04f 0c00 	mov.w	ip, #0
   839fa:	e65b      	b.n	836b4 <_vfiprintf_r+0x268>
   839fc:	000879bc 	.word	0x000879bc
   83a00:	00087968 	.word	0x00087968
   83a04:	9b08      	ldr	r3, [sp, #32]
   83a06:	f8dd b020 	ldr.w	fp, [sp, #32]
   83a0a:	9004      	str	r0, [sp, #16]
   83a0c:	48b2      	ldr	r0, [pc, #712]	; (83cd8 <_vfiprintf_r+0x88c>)
   83a0e:	681c      	ldr	r4, [r3, #0]
   83a10:	2230      	movs	r2, #48	; 0x30
   83a12:	2378      	movs	r3, #120	; 0x78
   83a14:	f10b 0b04 	add.w	fp, fp, #4
   83a18:	46ac      	mov	ip, r5
   83a1a:	f88d 3049 	strb.w	r3, [sp, #73]	; 0x49
   83a1e:	f04a 0a02 	orr.w	sl, sl, #2
   83a22:	f8cd b020 	str.w	fp, [sp, #32]
   83a26:	2500      	movs	r5, #0
   83a28:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   83a2c:	900a      	str	r0, [sp, #40]	; 0x28
   83a2e:	2302      	movs	r3, #2
   83a30:	e61d      	b.n	8366e <_vfiprintf_r+0x222>
   83a32:	f04a 0a20 	orr.w	sl, sl, #32
   83a36:	f898 3000 	ldrb.w	r3, [r8]
   83a3a:	e574      	b.n	83526 <_vfiprintf_r+0xda>
   83a3c:	f8dd b020 	ldr.w	fp, [sp, #32]
   83a40:	f8db 0000 	ldr.w	r0, [fp]
   83a44:	f10b 0304 	add.w	r3, fp, #4
   83a48:	2800      	cmp	r0, #0
   83a4a:	f6ff adf7 	blt.w	8363c <_vfiprintf_r+0x1f0>
   83a4e:	9308      	str	r3, [sp, #32]
   83a50:	f898 3000 	ldrb.w	r3, [r8]
   83a54:	e567      	b.n	83526 <_vfiprintf_r+0xda>
   83a56:	f898 3000 	ldrb.w	r3, [r8]
   83a5a:	212b      	movs	r1, #43	; 0x2b
   83a5c:	e563      	b.n	83526 <_vfiprintf_r+0xda>
   83a5e:	f898 3000 	ldrb.w	r3, [r8]
   83a62:	f108 0401 	add.w	r4, r8, #1
   83a66:	2b2a      	cmp	r3, #42	; 0x2a
   83a68:	f000 8305 	beq.w	84076 <_vfiprintf_r+0xc2a>
   83a6c:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   83a70:	2a09      	cmp	r2, #9
   83a72:	bf98      	it	ls
   83a74:	2500      	movls	r5, #0
   83a76:	f200 82fa 	bhi.w	8406e <_vfiprintf_r+0xc22>
   83a7a:	f814 3b01 	ldrb.w	r3, [r4], #1
   83a7e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   83a82:	eb02 0545 	add.w	r5, r2, r5, lsl #1
   83a86:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   83a8a:	2a09      	cmp	r2, #9
   83a8c:	d9f5      	bls.n	83a7a <_vfiprintf_r+0x62e>
   83a8e:	ea45 75e5 	orr.w	r5, r5, r5, asr #31
   83a92:	46a0      	mov	r8, r4
   83a94:	e549      	b.n	8352a <_vfiprintf_r+0xde>
   83a96:	4c90      	ldr	r4, [pc, #576]	; (83cd8 <_vfiprintf_r+0x88c>)
   83a98:	f01a 0f20 	tst.w	sl, #32
   83a9c:	9004      	str	r0, [sp, #16]
   83a9e:	46ac      	mov	ip, r5
   83aa0:	940a      	str	r4, [sp, #40]	; 0x28
   83aa2:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   83aa6:	f47f af10 	bne.w	838ca <_vfiprintf_r+0x47e>
   83aaa:	f01a 0f10 	tst.w	sl, #16
   83aae:	f040 81ea 	bne.w	83e86 <_vfiprintf_r+0xa3a>
   83ab2:	f01a 0f40 	tst.w	sl, #64	; 0x40
   83ab6:	f000 81e6 	beq.w	83e86 <_vfiprintf_r+0xa3a>
   83aba:	f8dd b020 	ldr.w	fp, [sp, #32]
   83abe:	2500      	movs	r5, #0
   83ac0:	f8bb 4000 	ldrh.w	r4, [fp]
   83ac4:	f10b 0b04 	add.w	fp, fp, #4
   83ac8:	f8cd b020 	str.w	fp, [sp, #32]
   83acc:	e707      	b.n	838de <_vfiprintf_r+0x492>
   83ace:	f898 3000 	ldrb.w	r3, [r8]
   83ad2:	2900      	cmp	r1, #0
   83ad4:	f47f ad27 	bne.w	83526 <_vfiprintf_r+0xda>
   83ad8:	2120      	movs	r1, #32
   83ada:	e524      	b.n	83526 <_vfiprintf_r+0xda>
   83adc:	f04a 0a01 	orr.w	sl, sl, #1
   83ae0:	f898 3000 	ldrb.w	r3, [r8]
   83ae4:	e51f      	b.n	83526 <_vfiprintf_r+0xda>
   83ae6:	9004      	str	r0, [sp, #16]
   83ae8:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   83aec:	2b00      	cmp	r3, #0
   83aee:	f000 80f9 	beq.w	83ce4 <_vfiprintf_r+0x898>
   83af2:	2501      	movs	r5, #1
   83af4:	f04f 0b00 	mov.w	fp, #0
   83af8:	9503      	str	r5, [sp, #12]
   83afa:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
   83afe:	f88d b047 	strb.w	fp, [sp, #71]	; 0x47
   83b02:	9505      	str	r5, [sp, #20]
   83b04:	af16      	add	r7, sp, #88	; 0x58
   83b06:	e70e      	b.n	83926 <_vfiprintf_r+0x4da>
   83b08:	9806      	ldr	r0, [sp, #24]
   83b0a:	9902      	ldr	r1, [sp, #8]
   83b0c:	aa13      	add	r2, sp, #76	; 0x4c
   83b0e:	f7ff fc61 	bl	833d4 <__sprint_r.part.0>
   83b12:	2800      	cmp	r0, #0
   83b14:	f040 80ed 	bne.w	83cf2 <_vfiprintf_r+0x8a6>
   83b18:	9814      	ldr	r0, [sp, #80]	; 0x50
   83b1a:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83b1c:	1c43      	adds	r3, r0, #1
   83b1e:	46cc      	mov	ip, r9
   83b20:	e5fe      	b.n	83720 <_vfiprintf_r+0x2d4>
   83b22:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83b24:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83b26:	1c59      	adds	r1, r3, #1
   83b28:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
   83b2c:	b168      	cbz	r0, 83b4a <_vfiprintf_r+0x6fe>
   83b2e:	3201      	adds	r2, #1
   83b30:	f10d 0047 	add.w	r0, sp, #71	; 0x47
   83b34:	2301      	movs	r3, #1
   83b36:	2907      	cmp	r1, #7
   83b38:	9215      	str	r2, [sp, #84]	; 0x54
   83b3a:	9114      	str	r1, [sp, #80]	; 0x50
   83b3c:	e886 0009 	stmia.w	r6, {r0, r3}
   83b40:	f300 8160 	bgt.w	83e04 <_vfiprintf_r+0x9b8>
   83b44:	460b      	mov	r3, r1
   83b46:	3608      	adds	r6, #8
   83b48:	3101      	adds	r1, #1
   83b4a:	9c07      	ldr	r4, [sp, #28]
   83b4c:	b164      	cbz	r4, 83b68 <_vfiprintf_r+0x71c>
   83b4e:	3202      	adds	r2, #2
   83b50:	a812      	add	r0, sp, #72	; 0x48
   83b52:	2302      	movs	r3, #2
   83b54:	2907      	cmp	r1, #7
   83b56:	9215      	str	r2, [sp, #84]	; 0x54
   83b58:	9114      	str	r1, [sp, #80]	; 0x50
   83b5a:	e886 0009 	stmia.w	r6, {r0, r3}
   83b5e:	f300 8157 	bgt.w	83e10 <_vfiprintf_r+0x9c4>
   83b62:	460b      	mov	r3, r1
   83b64:	3608      	adds	r6, #8
   83b66:	3101      	adds	r1, #1
   83b68:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   83b6a:	2d80      	cmp	r5, #128	; 0x80
   83b6c:	f000 8101 	beq.w	83d72 <_vfiprintf_r+0x926>
   83b70:	9d05      	ldr	r5, [sp, #20]
   83b72:	ebc5 040c 	rsb	r4, r5, ip
   83b76:	2c00      	cmp	r4, #0
   83b78:	dd2f      	ble.n	83bda <_vfiprintf_r+0x78e>
   83b7a:	2c10      	cmp	r4, #16
   83b7c:	4d57      	ldr	r5, [pc, #348]	; (83cdc <_vfiprintf_r+0x890>)
   83b7e:	dd22      	ble.n	83bc6 <_vfiprintf_r+0x77a>
   83b80:	4630      	mov	r0, r6
   83b82:	f04f 0b10 	mov.w	fp, #16
   83b86:	462e      	mov	r6, r5
   83b88:	4625      	mov	r5, r4
   83b8a:	9c06      	ldr	r4, [sp, #24]
   83b8c:	e006      	b.n	83b9c <_vfiprintf_r+0x750>
   83b8e:	f103 0c02 	add.w	ip, r3, #2
   83b92:	3008      	adds	r0, #8
   83b94:	460b      	mov	r3, r1
   83b96:	3d10      	subs	r5, #16
   83b98:	2d10      	cmp	r5, #16
   83b9a:	dd10      	ble.n	83bbe <_vfiprintf_r+0x772>
   83b9c:	1c59      	adds	r1, r3, #1
   83b9e:	3210      	adds	r2, #16
   83ba0:	2907      	cmp	r1, #7
   83ba2:	9215      	str	r2, [sp, #84]	; 0x54
   83ba4:	e880 0840 	stmia.w	r0, {r6, fp}
   83ba8:	9114      	str	r1, [sp, #80]	; 0x50
   83baa:	ddf0      	ble.n	83b8e <_vfiprintf_r+0x742>
   83bac:	2a00      	cmp	r2, #0
   83bae:	d163      	bne.n	83c78 <_vfiprintf_r+0x82c>
   83bb0:	3d10      	subs	r5, #16
   83bb2:	2d10      	cmp	r5, #16
   83bb4:	f04f 0c01 	mov.w	ip, #1
   83bb8:	4613      	mov	r3, r2
   83bba:	4648      	mov	r0, r9
   83bbc:	dcee      	bgt.n	83b9c <_vfiprintf_r+0x750>
   83bbe:	462c      	mov	r4, r5
   83bc0:	4661      	mov	r1, ip
   83bc2:	4635      	mov	r5, r6
   83bc4:	4606      	mov	r6, r0
   83bc6:	4422      	add	r2, r4
   83bc8:	2907      	cmp	r1, #7
   83bca:	9215      	str	r2, [sp, #84]	; 0x54
   83bcc:	6035      	str	r5, [r6, #0]
   83bce:	6074      	str	r4, [r6, #4]
   83bd0:	9114      	str	r1, [sp, #80]	; 0x50
   83bd2:	f300 80c1 	bgt.w	83d58 <_vfiprintf_r+0x90c>
   83bd6:	3608      	adds	r6, #8
   83bd8:	3101      	adds	r1, #1
   83bda:	9d05      	ldr	r5, [sp, #20]
   83bdc:	2907      	cmp	r1, #7
   83bde:	442a      	add	r2, r5
   83be0:	9215      	str	r2, [sp, #84]	; 0x54
   83be2:	6037      	str	r7, [r6, #0]
   83be4:	6075      	str	r5, [r6, #4]
   83be6:	9114      	str	r1, [sp, #80]	; 0x50
   83be8:	f340 80c1 	ble.w	83d6e <_vfiprintf_r+0x922>
   83bec:	2a00      	cmp	r2, #0
   83bee:	f040 8130 	bne.w	83e52 <_vfiprintf_r+0xa06>
   83bf2:	9214      	str	r2, [sp, #80]	; 0x50
   83bf4:	464e      	mov	r6, r9
   83bf6:	f01a 0f04 	tst.w	sl, #4
   83bfa:	f000 808b 	beq.w	83d14 <_vfiprintf_r+0x8c8>
   83bfe:	9d04      	ldr	r5, [sp, #16]
   83c00:	f8dd b00c 	ldr.w	fp, [sp, #12]
   83c04:	ebcb 0405 	rsb	r4, fp, r5
   83c08:	2c00      	cmp	r4, #0
   83c0a:	f340 8083 	ble.w	83d14 <_vfiprintf_r+0x8c8>
   83c0e:	2c10      	cmp	r4, #16
   83c10:	f340 821e 	ble.w	84050 <_vfiprintf_r+0xc04>
   83c14:	9914      	ldr	r1, [sp, #80]	; 0x50
   83c16:	4d32      	ldr	r5, [pc, #200]	; (83ce0 <_vfiprintf_r+0x894>)
   83c18:	2710      	movs	r7, #16
   83c1a:	f8dd a018 	ldr.w	sl, [sp, #24]
   83c1e:	f8dd b008 	ldr.w	fp, [sp, #8]
   83c22:	e005      	b.n	83c30 <_vfiprintf_r+0x7e4>
   83c24:	1c88      	adds	r0, r1, #2
   83c26:	3608      	adds	r6, #8
   83c28:	4619      	mov	r1, r3
   83c2a:	3c10      	subs	r4, #16
   83c2c:	2c10      	cmp	r4, #16
   83c2e:	dd10      	ble.n	83c52 <_vfiprintf_r+0x806>
   83c30:	1c4b      	adds	r3, r1, #1
   83c32:	3210      	adds	r2, #16
   83c34:	2b07      	cmp	r3, #7
   83c36:	9215      	str	r2, [sp, #84]	; 0x54
   83c38:	e886 00a0 	stmia.w	r6, {r5, r7}
   83c3c:	9314      	str	r3, [sp, #80]	; 0x50
   83c3e:	ddf1      	ble.n	83c24 <_vfiprintf_r+0x7d8>
   83c40:	2a00      	cmp	r2, #0
   83c42:	d17d      	bne.n	83d40 <_vfiprintf_r+0x8f4>
   83c44:	3c10      	subs	r4, #16
   83c46:	2c10      	cmp	r4, #16
   83c48:	f04f 0001 	mov.w	r0, #1
   83c4c:	4611      	mov	r1, r2
   83c4e:	464e      	mov	r6, r9
   83c50:	dcee      	bgt.n	83c30 <_vfiprintf_r+0x7e4>
   83c52:	4422      	add	r2, r4
   83c54:	2807      	cmp	r0, #7
   83c56:	9215      	str	r2, [sp, #84]	; 0x54
   83c58:	6035      	str	r5, [r6, #0]
   83c5a:	6074      	str	r4, [r6, #4]
   83c5c:	9014      	str	r0, [sp, #80]	; 0x50
   83c5e:	dd59      	ble.n	83d14 <_vfiprintf_r+0x8c8>
   83c60:	2a00      	cmp	r2, #0
   83c62:	d14f      	bne.n	83d04 <_vfiprintf_r+0x8b8>
   83c64:	9c09      	ldr	r4, [sp, #36]	; 0x24
   83c66:	f8dd b00c 	ldr.w	fp, [sp, #12]
   83c6a:	9d04      	ldr	r5, [sp, #16]
   83c6c:	45ab      	cmp	fp, r5
   83c6e:	bfac      	ite	ge
   83c70:	445c      	addge	r4, fp
   83c72:	1964      	addlt	r4, r4, r5
   83c74:	9409      	str	r4, [sp, #36]	; 0x24
   83c76:	e05e      	b.n	83d36 <_vfiprintf_r+0x8ea>
   83c78:	4620      	mov	r0, r4
   83c7a:	9902      	ldr	r1, [sp, #8]
   83c7c:	aa13      	add	r2, sp, #76	; 0x4c
   83c7e:	f7ff fba9 	bl	833d4 <__sprint_r.part.0>
   83c82:	2800      	cmp	r0, #0
   83c84:	d135      	bne.n	83cf2 <_vfiprintf_r+0x8a6>
   83c86:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83c88:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83c8a:	f103 0c01 	add.w	ip, r3, #1
   83c8e:	4648      	mov	r0, r9
   83c90:	e781      	b.n	83b96 <_vfiprintf_r+0x74a>
   83c92:	08e0      	lsrs	r0, r4, #3
   83c94:	ea40 7045 	orr.w	r0, r0, r5, lsl #29
   83c98:	f004 0207 	and.w	r2, r4, #7
   83c9c:	08e9      	lsrs	r1, r5, #3
   83c9e:	3230      	adds	r2, #48	; 0x30
   83ca0:	ea50 0b01 	orrs.w	fp, r0, r1
   83ca4:	461f      	mov	r7, r3
   83ca6:	701a      	strb	r2, [r3, #0]
   83ca8:	4604      	mov	r4, r0
   83caa:	460d      	mov	r5, r1
   83cac:	f103 33ff 	add.w	r3, r3, #4294967295
   83cb0:	d1ef      	bne.n	83c92 <_vfiprintf_r+0x846>
   83cb2:	f01a 0f01 	tst.w	sl, #1
   83cb6:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   83cba:	4639      	mov	r1, r7
   83cbc:	f000 80b9 	beq.w	83e32 <_vfiprintf_r+0x9e6>
   83cc0:	2a30      	cmp	r2, #48	; 0x30
   83cc2:	f43f acf4 	beq.w	836ae <_vfiprintf_r+0x262>
   83cc6:	461f      	mov	r7, r3
   83cc8:	ebc7 0509 	rsb	r5, r7, r9
   83ccc:	2330      	movs	r3, #48	; 0x30
   83cce:	9505      	str	r5, [sp, #20]
   83cd0:	f801 3c01 	strb.w	r3, [r1, #-1]
   83cd4:	e4ee      	b.n	836b4 <_vfiprintf_r+0x268>
   83cd6:	bf00      	nop
   83cd8:	0008797c 	.word	0x0008797c
   83cdc:	000879ac 	.word	0x000879ac
   83ce0:	000879bc 	.word	0x000879bc
   83ce4:	9b15      	ldr	r3, [sp, #84]	; 0x54
   83ce6:	b123      	cbz	r3, 83cf2 <_vfiprintf_r+0x8a6>
   83ce8:	9806      	ldr	r0, [sp, #24]
   83cea:	9902      	ldr	r1, [sp, #8]
   83cec:	aa13      	add	r2, sp, #76	; 0x4c
   83cee:	f7ff fb71 	bl	833d4 <__sprint_r.part.0>
   83cf2:	9c02      	ldr	r4, [sp, #8]
   83cf4:	89a3      	ldrh	r3, [r4, #12]
   83cf6:	065b      	lsls	r3, r3, #25
   83cf8:	f53f ac98 	bmi.w	8362c <_vfiprintf_r+0x1e0>
   83cfc:	9809      	ldr	r0, [sp, #36]	; 0x24
   83cfe:	b031      	add	sp, #196	; 0xc4
   83d00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83d04:	9806      	ldr	r0, [sp, #24]
   83d06:	9902      	ldr	r1, [sp, #8]
   83d08:	aa13      	add	r2, sp, #76	; 0x4c
   83d0a:	f7ff fb63 	bl	833d4 <__sprint_r.part.0>
   83d0e:	2800      	cmp	r0, #0
   83d10:	d1ef      	bne.n	83cf2 <_vfiprintf_r+0x8a6>
   83d12:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83d14:	9c09      	ldr	r4, [sp, #36]	; 0x24
   83d16:	f8dd b00c 	ldr.w	fp, [sp, #12]
   83d1a:	9d04      	ldr	r5, [sp, #16]
   83d1c:	45ab      	cmp	fp, r5
   83d1e:	bfac      	ite	ge
   83d20:	445c      	addge	r4, fp
   83d22:	1964      	addlt	r4, r4, r5
   83d24:	9409      	str	r4, [sp, #36]	; 0x24
   83d26:	b132      	cbz	r2, 83d36 <_vfiprintf_r+0x8ea>
   83d28:	9806      	ldr	r0, [sp, #24]
   83d2a:	9902      	ldr	r1, [sp, #8]
   83d2c:	aa13      	add	r2, sp, #76	; 0x4c
   83d2e:	f7ff fb51 	bl	833d4 <__sprint_r.part.0>
   83d32:	2800      	cmp	r0, #0
   83d34:	d1dd      	bne.n	83cf2 <_vfiprintf_r+0x8a6>
   83d36:	2000      	movs	r0, #0
   83d38:	9014      	str	r0, [sp, #80]	; 0x50
   83d3a:	464e      	mov	r6, r9
   83d3c:	f7ff bbb9 	b.w	834b2 <_vfiprintf_r+0x66>
   83d40:	4650      	mov	r0, sl
   83d42:	4659      	mov	r1, fp
   83d44:	aa13      	add	r2, sp, #76	; 0x4c
   83d46:	f7ff fb45 	bl	833d4 <__sprint_r.part.0>
   83d4a:	2800      	cmp	r0, #0
   83d4c:	d1d1      	bne.n	83cf2 <_vfiprintf_r+0x8a6>
   83d4e:	9914      	ldr	r1, [sp, #80]	; 0x50
   83d50:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83d52:	1c48      	adds	r0, r1, #1
   83d54:	464e      	mov	r6, r9
   83d56:	e768      	b.n	83c2a <_vfiprintf_r+0x7de>
   83d58:	2a00      	cmp	r2, #0
   83d5a:	f040 80f7 	bne.w	83f4c <_vfiprintf_r+0xb00>
   83d5e:	9c05      	ldr	r4, [sp, #20]
   83d60:	2301      	movs	r3, #1
   83d62:	9720      	str	r7, [sp, #128]	; 0x80
   83d64:	9421      	str	r4, [sp, #132]	; 0x84
   83d66:	9415      	str	r4, [sp, #84]	; 0x54
   83d68:	4622      	mov	r2, r4
   83d6a:	9314      	str	r3, [sp, #80]	; 0x50
   83d6c:	464e      	mov	r6, r9
   83d6e:	3608      	adds	r6, #8
   83d70:	e741      	b.n	83bf6 <_vfiprintf_r+0x7aa>
   83d72:	9d04      	ldr	r5, [sp, #16]
   83d74:	f8dd b00c 	ldr.w	fp, [sp, #12]
   83d78:	ebcb 0405 	rsb	r4, fp, r5
   83d7c:	2c00      	cmp	r4, #0
   83d7e:	f77f aef7 	ble.w	83b70 <_vfiprintf_r+0x724>
   83d82:	2c10      	cmp	r4, #16
   83d84:	4da6      	ldr	r5, [pc, #664]	; (84020 <_vfiprintf_r+0xbd4>)
   83d86:	f340 8170 	ble.w	8406a <_vfiprintf_r+0xc1e>
   83d8a:	4629      	mov	r1, r5
   83d8c:	f04f 0b10 	mov.w	fp, #16
   83d90:	4625      	mov	r5, r4
   83d92:	4664      	mov	r4, ip
   83d94:	46b4      	mov	ip, r6
   83d96:	460e      	mov	r6, r1
   83d98:	e006      	b.n	83da8 <_vfiprintf_r+0x95c>
   83d9a:	1c98      	adds	r0, r3, #2
   83d9c:	f10c 0c08 	add.w	ip, ip, #8
   83da0:	460b      	mov	r3, r1
   83da2:	3d10      	subs	r5, #16
   83da4:	2d10      	cmp	r5, #16
   83da6:	dd0f      	ble.n	83dc8 <_vfiprintf_r+0x97c>
   83da8:	1c59      	adds	r1, r3, #1
   83daa:	3210      	adds	r2, #16
   83dac:	2907      	cmp	r1, #7
   83dae:	9215      	str	r2, [sp, #84]	; 0x54
   83db0:	e88c 0840 	stmia.w	ip, {r6, fp}
   83db4:	9114      	str	r1, [sp, #80]	; 0x50
   83db6:	ddf0      	ble.n	83d9a <_vfiprintf_r+0x94e>
   83db8:	b9ba      	cbnz	r2, 83dea <_vfiprintf_r+0x99e>
   83dba:	3d10      	subs	r5, #16
   83dbc:	2d10      	cmp	r5, #16
   83dbe:	f04f 0001 	mov.w	r0, #1
   83dc2:	4613      	mov	r3, r2
   83dc4:	46cc      	mov	ip, r9
   83dc6:	dcef      	bgt.n	83da8 <_vfiprintf_r+0x95c>
   83dc8:	4633      	mov	r3, r6
   83dca:	4666      	mov	r6, ip
   83dcc:	46a4      	mov	ip, r4
   83dce:	462c      	mov	r4, r5
   83dd0:	461d      	mov	r5, r3
   83dd2:	4422      	add	r2, r4
   83dd4:	2807      	cmp	r0, #7
   83dd6:	9215      	str	r2, [sp, #84]	; 0x54
   83dd8:	6035      	str	r5, [r6, #0]
   83dda:	6074      	str	r4, [r6, #4]
   83ddc:	9014      	str	r0, [sp, #80]	; 0x50
   83dde:	f300 80af 	bgt.w	83f40 <_vfiprintf_r+0xaf4>
   83de2:	3608      	adds	r6, #8
   83de4:	1c41      	adds	r1, r0, #1
   83de6:	4603      	mov	r3, r0
   83de8:	e6c2      	b.n	83b70 <_vfiprintf_r+0x724>
   83dea:	9806      	ldr	r0, [sp, #24]
   83dec:	9902      	ldr	r1, [sp, #8]
   83dee:	aa13      	add	r2, sp, #76	; 0x4c
   83df0:	f7ff faf0 	bl	833d4 <__sprint_r.part.0>
   83df4:	2800      	cmp	r0, #0
   83df6:	f47f af7c 	bne.w	83cf2 <_vfiprintf_r+0x8a6>
   83dfa:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83dfc:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83dfe:	1c58      	adds	r0, r3, #1
   83e00:	46cc      	mov	ip, r9
   83e02:	e7ce      	b.n	83da2 <_vfiprintf_r+0x956>
   83e04:	2a00      	cmp	r2, #0
   83e06:	d179      	bne.n	83efc <_vfiprintf_r+0xab0>
   83e08:	4619      	mov	r1, r3
   83e0a:	464e      	mov	r6, r9
   83e0c:	4613      	mov	r3, r2
   83e0e:	e69c      	b.n	83b4a <_vfiprintf_r+0x6fe>
   83e10:	2a00      	cmp	r2, #0
   83e12:	f040 8084 	bne.w	83f1e <_vfiprintf_r+0xad2>
   83e16:	2101      	movs	r1, #1
   83e18:	4613      	mov	r3, r2
   83e1a:	464e      	mov	r6, r9
   83e1c:	e6a4      	b.n	83b68 <_vfiprintf_r+0x71c>
   83e1e:	464f      	mov	r7, r9
   83e20:	e448      	b.n	836b4 <_vfiprintf_r+0x268>
   83e22:	2d00      	cmp	r5, #0
   83e24:	bf08      	it	eq
   83e26:	2c0a      	cmpeq	r4, #10
   83e28:	d246      	bcs.n	83eb8 <_vfiprintf_r+0xa6c>
   83e2a:	3430      	adds	r4, #48	; 0x30
   83e2c:	af30      	add	r7, sp, #192	; 0xc0
   83e2e:	f807 4d41 	strb.w	r4, [r7, #-65]!
   83e32:	ebc7 0309 	rsb	r3, r7, r9
   83e36:	9305      	str	r3, [sp, #20]
   83e38:	e43c      	b.n	836b4 <_vfiprintf_r+0x268>
   83e3a:	2302      	movs	r3, #2
   83e3c:	e417      	b.n	8366e <_vfiprintf_r+0x222>
   83e3e:	2a00      	cmp	r2, #0
   83e40:	f040 80af 	bne.w	83fa2 <_vfiprintf_r+0xb56>
   83e44:	4613      	mov	r3, r2
   83e46:	2101      	movs	r1, #1
   83e48:	464e      	mov	r6, r9
   83e4a:	e66d      	b.n	83b28 <_vfiprintf_r+0x6dc>
   83e4c:	4644      	mov	r4, r8
   83e4e:	f7ff bb58 	b.w	83502 <_vfiprintf_r+0xb6>
   83e52:	9806      	ldr	r0, [sp, #24]
   83e54:	9902      	ldr	r1, [sp, #8]
   83e56:	aa13      	add	r2, sp, #76	; 0x4c
   83e58:	f7ff fabc 	bl	833d4 <__sprint_r.part.0>
   83e5c:	2800      	cmp	r0, #0
   83e5e:	f47f af48 	bne.w	83cf2 <_vfiprintf_r+0x8a6>
   83e62:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83e64:	464e      	mov	r6, r9
   83e66:	e6c6      	b.n	83bf6 <_vfiprintf_r+0x7aa>
   83e68:	9d08      	ldr	r5, [sp, #32]
   83e6a:	682c      	ldr	r4, [r5, #0]
   83e6c:	3504      	adds	r5, #4
   83e6e:	9508      	str	r5, [sp, #32]
   83e70:	2500      	movs	r5, #0
   83e72:	f7ff bbfc 	b.w	8366e <_vfiprintf_r+0x222>
   83e76:	9d08      	ldr	r5, [sp, #32]
   83e78:	2301      	movs	r3, #1
   83e7a:	682c      	ldr	r4, [r5, #0]
   83e7c:	3504      	adds	r5, #4
   83e7e:	9508      	str	r5, [sp, #32]
   83e80:	2500      	movs	r5, #0
   83e82:	f7ff bbf4 	b.w	8366e <_vfiprintf_r+0x222>
   83e86:	9d08      	ldr	r5, [sp, #32]
   83e88:	682c      	ldr	r4, [r5, #0]
   83e8a:	3504      	adds	r5, #4
   83e8c:	9508      	str	r5, [sp, #32]
   83e8e:	2500      	movs	r5, #0
   83e90:	e525      	b.n	838de <_vfiprintf_r+0x492>
   83e92:	9d08      	ldr	r5, [sp, #32]
   83e94:	682c      	ldr	r4, [r5, #0]
   83e96:	3504      	adds	r5, #4
   83e98:	9508      	str	r5, [sp, #32]
   83e9a:	17e5      	asrs	r5, r4, #31
   83e9c:	4622      	mov	r2, r4
   83e9e:	462b      	mov	r3, r5
   83ea0:	e48e      	b.n	837c0 <_vfiprintf_r+0x374>
   83ea2:	9806      	ldr	r0, [sp, #24]
   83ea4:	9902      	ldr	r1, [sp, #8]
   83ea6:	aa13      	add	r2, sp, #76	; 0x4c
   83ea8:	f7ff fa94 	bl	833d4 <__sprint_r.part.0>
   83eac:	2800      	cmp	r0, #0
   83eae:	f47f af20 	bne.w	83cf2 <_vfiprintf_r+0x8a6>
   83eb2:	464e      	mov	r6, r9
   83eb4:	f7ff bb9a 	b.w	835ec <_vfiprintf_r+0x1a0>
   83eb8:	f10d 0b7f 	add.w	fp, sp, #127	; 0x7f
   83ebc:	9603      	str	r6, [sp, #12]
   83ebe:	465e      	mov	r6, fp
   83ec0:	46e3      	mov	fp, ip
   83ec2:	4620      	mov	r0, r4
   83ec4:	4629      	mov	r1, r5
   83ec6:	220a      	movs	r2, #10
   83ec8:	2300      	movs	r3, #0
   83eca:	f003 f9d5 	bl	87278 <__aeabi_uldivmod>
   83ece:	3230      	adds	r2, #48	; 0x30
   83ed0:	7032      	strb	r2, [r6, #0]
   83ed2:	4620      	mov	r0, r4
   83ed4:	4629      	mov	r1, r5
   83ed6:	220a      	movs	r2, #10
   83ed8:	2300      	movs	r3, #0
   83eda:	f003 f9cd 	bl	87278 <__aeabi_uldivmod>
   83ede:	4604      	mov	r4, r0
   83ee0:	460d      	mov	r5, r1
   83ee2:	ea54 0005 	orrs.w	r0, r4, r5
   83ee6:	4637      	mov	r7, r6
   83ee8:	f106 36ff 	add.w	r6, r6, #4294967295
   83eec:	d1e9      	bne.n	83ec2 <_vfiprintf_r+0xa76>
   83eee:	ebc7 0309 	rsb	r3, r7, r9
   83ef2:	46dc      	mov	ip, fp
   83ef4:	9e03      	ldr	r6, [sp, #12]
   83ef6:	9305      	str	r3, [sp, #20]
   83ef8:	f7ff bbdc 	b.w	836b4 <_vfiprintf_r+0x268>
   83efc:	9806      	ldr	r0, [sp, #24]
   83efe:	9902      	ldr	r1, [sp, #8]
   83f00:	aa13      	add	r2, sp, #76	; 0x4c
   83f02:	f8cd c004 	str.w	ip, [sp, #4]
   83f06:	f7ff fa65 	bl	833d4 <__sprint_r.part.0>
   83f0a:	f8dd c004 	ldr.w	ip, [sp, #4]
   83f0e:	2800      	cmp	r0, #0
   83f10:	f47f aeef 	bne.w	83cf2 <_vfiprintf_r+0x8a6>
   83f14:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83f16:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83f18:	1c59      	adds	r1, r3, #1
   83f1a:	464e      	mov	r6, r9
   83f1c:	e615      	b.n	83b4a <_vfiprintf_r+0x6fe>
   83f1e:	9806      	ldr	r0, [sp, #24]
   83f20:	9902      	ldr	r1, [sp, #8]
   83f22:	aa13      	add	r2, sp, #76	; 0x4c
   83f24:	f8cd c004 	str.w	ip, [sp, #4]
   83f28:	f7ff fa54 	bl	833d4 <__sprint_r.part.0>
   83f2c:	f8dd c004 	ldr.w	ip, [sp, #4]
   83f30:	2800      	cmp	r0, #0
   83f32:	f47f aede 	bne.w	83cf2 <_vfiprintf_r+0x8a6>
   83f36:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83f38:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83f3a:	1c59      	adds	r1, r3, #1
   83f3c:	464e      	mov	r6, r9
   83f3e:	e613      	b.n	83b68 <_vfiprintf_r+0x71c>
   83f40:	2a00      	cmp	r2, #0
   83f42:	d156      	bne.n	83ff2 <_vfiprintf_r+0xba6>
   83f44:	2101      	movs	r1, #1
   83f46:	4613      	mov	r3, r2
   83f48:	464e      	mov	r6, r9
   83f4a:	e611      	b.n	83b70 <_vfiprintf_r+0x724>
   83f4c:	9806      	ldr	r0, [sp, #24]
   83f4e:	9902      	ldr	r1, [sp, #8]
   83f50:	aa13      	add	r2, sp, #76	; 0x4c
   83f52:	f7ff fa3f 	bl	833d4 <__sprint_r.part.0>
   83f56:	2800      	cmp	r0, #0
   83f58:	f47f aecb 	bne.w	83cf2 <_vfiprintf_r+0x8a6>
   83f5c:	9914      	ldr	r1, [sp, #80]	; 0x50
   83f5e:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83f60:	3101      	adds	r1, #1
   83f62:	464e      	mov	r6, r9
   83f64:	e639      	b.n	83bda <_vfiprintf_r+0x78e>
   83f66:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
   83f6a:	4264      	negs	r4, r4
   83f6c:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   83f70:	f88d b047 	strb.w	fp, [sp, #71]	; 0x47
   83f74:	f8cd b01c 	str.w	fp, [sp, #28]
   83f78:	f8cd c014 	str.w	ip, [sp, #20]
   83f7c:	2301      	movs	r3, #1
   83f7e:	f7ff bb7e 	b.w	8367e <_vfiprintf_r+0x232>
   83f82:	f01a 0f10 	tst.w	sl, #16
   83f86:	d11d      	bne.n	83fc4 <_vfiprintf_r+0xb78>
   83f88:	f01a 0f40 	tst.w	sl, #64	; 0x40
   83f8c:	d058      	beq.n	84040 <_vfiprintf_r+0xbf4>
   83f8e:	9d08      	ldr	r5, [sp, #32]
   83f90:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   83f94:	682b      	ldr	r3, [r5, #0]
   83f96:	3504      	adds	r5, #4
   83f98:	9508      	str	r5, [sp, #32]
   83f9a:	f8a3 b000 	strh.w	fp, [r3]
   83f9e:	f7ff ba88 	b.w	834b2 <_vfiprintf_r+0x66>
   83fa2:	9806      	ldr	r0, [sp, #24]
   83fa4:	9902      	ldr	r1, [sp, #8]
   83fa6:	aa13      	add	r2, sp, #76	; 0x4c
   83fa8:	f8cd c004 	str.w	ip, [sp, #4]
   83fac:	f7ff fa12 	bl	833d4 <__sprint_r.part.0>
   83fb0:	f8dd c004 	ldr.w	ip, [sp, #4]
   83fb4:	2800      	cmp	r0, #0
   83fb6:	f47f ae9c 	bne.w	83cf2 <_vfiprintf_r+0x8a6>
   83fba:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83fbc:	9a15      	ldr	r2, [sp, #84]	; 0x54
   83fbe:	1c59      	adds	r1, r3, #1
   83fc0:	464e      	mov	r6, r9
   83fc2:	e5b1      	b.n	83b28 <_vfiprintf_r+0x6dc>
   83fc4:	f8dd b020 	ldr.w	fp, [sp, #32]
   83fc8:	9c09      	ldr	r4, [sp, #36]	; 0x24
   83fca:	f8db 3000 	ldr.w	r3, [fp]
   83fce:	f10b 0b04 	add.w	fp, fp, #4
   83fd2:	f8cd b020 	str.w	fp, [sp, #32]
   83fd6:	601c      	str	r4, [r3, #0]
   83fd8:	f7ff ba6b 	b.w	834b2 <_vfiprintf_r+0x66>
   83fdc:	9408      	str	r4, [sp, #32]
   83fde:	f002 ff25 	bl	86e2c <strlen>
   83fe2:	f89d 4047 	ldrb.w	r4, [sp, #71]	; 0x47
   83fe6:	9005      	str	r0, [sp, #20]
   83fe8:	9407      	str	r4, [sp, #28]
   83fea:	f04f 0c00 	mov.w	ip, #0
   83fee:	f7ff bb61 	b.w	836b4 <_vfiprintf_r+0x268>
   83ff2:	9806      	ldr	r0, [sp, #24]
   83ff4:	9902      	ldr	r1, [sp, #8]
   83ff6:	aa13      	add	r2, sp, #76	; 0x4c
   83ff8:	f8cd c004 	str.w	ip, [sp, #4]
   83ffc:	f7ff f9ea 	bl	833d4 <__sprint_r.part.0>
   84000:	f8dd c004 	ldr.w	ip, [sp, #4]
   84004:	2800      	cmp	r0, #0
   84006:	f47f ae74 	bne.w	83cf2 <_vfiprintf_r+0x8a6>
   8400a:	9b14      	ldr	r3, [sp, #80]	; 0x50
   8400c:	9a15      	ldr	r2, [sp, #84]	; 0x54
   8400e:	1c59      	adds	r1, r3, #1
   84010:	464e      	mov	r6, r9
   84012:	e5ad      	b.n	83b70 <_vfiprintf_r+0x724>
   84014:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84016:	9a15      	ldr	r2, [sp, #84]	; 0x54
   84018:	3301      	adds	r3, #1
   8401a:	4d02      	ldr	r5, [pc, #8]	; (84024 <_vfiprintf_r+0xbd8>)
   8401c:	f7ff bb9a 	b.w	83754 <_vfiprintf_r+0x308>
   84020:	000879ac 	.word	0x000879ac
   84024:	000879bc 	.word	0x000879bc
   84028:	f1bc 0f06 	cmp.w	ip, #6
   8402c:	bf34      	ite	cc
   8402e:	4663      	movcc	r3, ip
   84030:	2306      	movcs	r3, #6
   84032:	9408      	str	r4, [sp, #32]
   84034:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
   84038:	9305      	str	r3, [sp, #20]
   8403a:	9403      	str	r4, [sp, #12]
   8403c:	4f16      	ldr	r7, [pc, #88]	; (84098 <_vfiprintf_r+0xc4c>)
   8403e:	e472      	b.n	83926 <_vfiprintf_r+0x4da>
   84040:	9c08      	ldr	r4, [sp, #32]
   84042:	9d09      	ldr	r5, [sp, #36]	; 0x24
   84044:	6823      	ldr	r3, [r4, #0]
   84046:	3404      	adds	r4, #4
   84048:	9408      	str	r4, [sp, #32]
   8404a:	601d      	str	r5, [r3, #0]
   8404c:	f7ff ba31 	b.w	834b2 <_vfiprintf_r+0x66>
   84050:	9814      	ldr	r0, [sp, #80]	; 0x50
   84052:	4d12      	ldr	r5, [pc, #72]	; (8409c <_vfiprintf_r+0xc50>)
   84054:	3001      	adds	r0, #1
   84056:	e5fc      	b.n	83c52 <_vfiprintf_r+0x806>
   84058:	f89d 5047 	ldrb.w	r5, [sp, #71]	; 0x47
   8405c:	f8cd c014 	str.w	ip, [sp, #20]
   84060:	9507      	str	r5, [sp, #28]
   84062:	9408      	str	r4, [sp, #32]
   84064:	4684      	mov	ip, r0
   84066:	f7ff bb25 	b.w	836b4 <_vfiprintf_r+0x268>
   8406a:	4608      	mov	r0, r1
   8406c:	e6b1      	b.n	83dd2 <_vfiprintf_r+0x986>
   8406e:	46a0      	mov	r8, r4
   84070:	2500      	movs	r5, #0
   84072:	f7ff ba5a 	b.w	8352a <_vfiprintf_r+0xde>
   84076:	f8dd b020 	ldr.w	fp, [sp, #32]
   8407a:	f898 3001 	ldrb.w	r3, [r8, #1]
   8407e:	f8db 5000 	ldr.w	r5, [fp]
   84082:	f10b 0204 	add.w	r2, fp, #4
   84086:	2d00      	cmp	r5, #0
   84088:	9208      	str	r2, [sp, #32]
   8408a:	46a0      	mov	r8, r4
   8408c:	f6bf aa4b 	bge.w	83526 <_vfiprintf_r+0xda>
   84090:	f04f 35ff 	mov.w	r5, #4294967295
   84094:	f7ff ba47 	b.w	83526 <_vfiprintf_r+0xda>
   84098:	00087990 	.word	0x00087990
   8409c:	000879bc 	.word	0x000879bc

000840a0 <__sbprintf>:
   840a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   840a4:	6e4f      	ldr	r7, [r1, #100]	; 0x64
   840a6:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
   840aa:	4688      	mov	r8, r1
   840ac:	9719      	str	r7, [sp, #100]	; 0x64
   840ae:	f8d8 701c 	ldr.w	r7, [r8, #28]
   840b2:	f8b1 a00c 	ldrh.w	sl, [r1, #12]
   840b6:	f8b1 900e 	ldrh.w	r9, [r1, #14]
   840ba:	9707      	str	r7, [sp, #28]
   840bc:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
   840c0:	ac1a      	add	r4, sp, #104	; 0x68
   840c2:	f44f 6580 	mov.w	r5, #1024	; 0x400
   840c6:	f02a 0a02 	bic.w	sl, sl, #2
   840ca:	2600      	movs	r6, #0
   840cc:	4669      	mov	r1, sp
   840ce:	9400      	str	r4, [sp, #0]
   840d0:	9404      	str	r4, [sp, #16]
   840d2:	9502      	str	r5, [sp, #8]
   840d4:	9505      	str	r5, [sp, #20]
   840d6:	f8ad a00c 	strh.w	sl, [sp, #12]
   840da:	f8ad 900e 	strh.w	r9, [sp, #14]
   840de:	9709      	str	r7, [sp, #36]	; 0x24
   840e0:	9606      	str	r6, [sp, #24]
   840e2:	4605      	mov	r5, r0
   840e4:	f7ff f9b2 	bl	8344c <_vfiprintf_r>
   840e8:	1e04      	subs	r4, r0, #0
   840ea:	db07      	blt.n	840fc <__sbprintf+0x5c>
   840ec:	4628      	mov	r0, r5
   840ee:	4669      	mov	r1, sp
   840f0:	f001 f936 	bl	85360 <_fflush_r>
   840f4:	42b0      	cmp	r0, r6
   840f6:	bf18      	it	ne
   840f8:	f04f 34ff 	movne.w	r4, #4294967295
   840fc:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   84100:	065b      	lsls	r3, r3, #25
   84102:	d505      	bpl.n	84110 <__sbprintf+0x70>
   84104:	f8b8 300c 	ldrh.w	r3, [r8, #12]
   84108:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8410c:	f8a8 300c 	strh.w	r3, [r8, #12]
   84110:	4620      	mov	r0, r4
   84112:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
   84116:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8411a:	bf00      	nop

0008411c <__swbuf_r>:
   8411c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8411e:	460d      	mov	r5, r1
   84120:	4614      	mov	r4, r2
   84122:	4607      	mov	r7, r0
   84124:	b110      	cbz	r0, 8412c <__swbuf_r+0x10>
   84126:	6b83      	ldr	r3, [r0, #56]	; 0x38
   84128:	2b00      	cmp	r3, #0
   8412a:	d048      	beq.n	841be <__swbuf_r+0xa2>
   8412c:	89a2      	ldrh	r2, [r4, #12]
   8412e:	69a0      	ldr	r0, [r4, #24]
   84130:	b293      	uxth	r3, r2
   84132:	60a0      	str	r0, [r4, #8]
   84134:	0718      	lsls	r0, r3, #28
   84136:	d538      	bpl.n	841aa <__swbuf_r+0x8e>
   84138:	6926      	ldr	r6, [r4, #16]
   8413a:	2e00      	cmp	r6, #0
   8413c:	d035      	beq.n	841aa <__swbuf_r+0x8e>
   8413e:	0499      	lsls	r1, r3, #18
   84140:	b2ed      	uxtb	r5, r5
   84142:	d515      	bpl.n	84170 <__swbuf_r+0x54>
   84144:	6823      	ldr	r3, [r4, #0]
   84146:	6962      	ldr	r2, [r4, #20]
   84148:	1b9e      	subs	r6, r3, r6
   8414a:	4296      	cmp	r6, r2
   8414c:	da1c      	bge.n	84188 <__swbuf_r+0x6c>
   8414e:	3601      	adds	r6, #1
   84150:	68a2      	ldr	r2, [r4, #8]
   84152:	1c59      	adds	r1, r3, #1
   84154:	3a01      	subs	r2, #1
   84156:	60a2      	str	r2, [r4, #8]
   84158:	6021      	str	r1, [r4, #0]
   8415a:	701d      	strb	r5, [r3, #0]
   8415c:	6963      	ldr	r3, [r4, #20]
   8415e:	42b3      	cmp	r3, r6
   84160:	d01a      	beq.n	84198 <__swbuf_r+0x7c>
   84162:	89a3      	ldrh	r3, [r4, #12]
   84164:	07db      	lsls	r3, r3, #31
   84166:	d501      	bpl.n	8416c <__swbuf_r+0x50>
   84168:	2d0a      	cmp	r5, #10
   8416a:	d015      	beq.n	84198 <__swbuf_r+0x7c>
   8416c:	4628      	mov	r0, r5
   8416e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84170:	6e63      	ldr	r3, [r4, #100]	; 0x64
   84172:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   84176:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   8417a:	6663      	str	r3, [r4, #100]	; 0x64
   8417c:	6823      	ldr	r3, [r4, #0]
   8417e:	81a2      	strh	r2, [r4, #12]
   84180:	6962      	ldr	r2, [r4, #20]
   84182:	1b9e      	subs	r6, r3, r6
   84184:	4296      	cmp	r6, r2
   84186:	dbe2      	blt.n	8414e <__swbuf_r+0x32>
   84188:	4638      	mov	r0, r7
   8418a:	4621      	mov	r1, r4
   8418c:	f001 f8e8 	bl	85360 <_fflush_r>
   84190:	b940      	cbnz	r0, 841a4 <__swbuf_r+0x88>
   84192:	6823      	ldr	r3, [r4, #0]
   84194:	2601      	movs	r6, #1
   84196:	e7db      	b.n	84150 <__swbuf_r+0x34>
   84198:	4638      	mov	r0, r7
   8419a:	4621      	mov	r1, r4
   8419c:	f001 f8e0 	bl	85360 <_fflush_r>
   841a0:	2800      	cmp	r0, #0
   841a2:	d0e3      	beq.n	8416c <__swbuf_r+0x50>
   841a4:	f04f 30ff 	mov.w	r0, #4294967295
   841a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   841aa:	4638      	mov	r0, r7
   841ac:	4621      	mov	r1, r4
   841ae:	f000 f809 	bl	841c4 <__swsetup_r>
   841b2:	2800      	cmp	r0, #0
   841b4:	d1f6      	bne.n	841a4 <__swbuf_r+0x88>
   841b6:	89a2      	ldrh	r2, [r4, #12]
   841b8:	6926      	ldr	r6, [r4, #16]
   841ba:	b293      	uxth	r3, r2
   841bc:	e7bf      	b.n	8413e <__swbuf_r+0x22>
   841be:	f001 f8eb 	bl	85398 <__sinit>
   841c2:	e7b3      	b.n	8412c <__swbuf_r+0x10>

000841c4 <__swsetup_r>:
   841c4:	4b2f      	ldr	r3, [pc, #188]	; (84284 <__swsetup_r+0xc0>)
   841c6:	b570      	push	{r4, r5, r6, lr}
   841c8:	4606      	mov	r6, r0
   841ca:	6818      	ldr	r0, [r3, #0]
   841cc:	460c      	mov	r4, r1
   841ce:	b110      	cbz	r0, 841d6 <__swsetup_r+0x12>
   841d0:	6b82      	ldr	r2, [r0, #56]	; 0x38
   841d2:	2a00      	cmp	r2, #0
   841d4:	d036      	beq.n	84244 <__swsetup_r+0x80>
   841d6:	89a5      	ldrh	r5, [r4, #12]
   841d8:	b2ab      	uxth	r3, r5
   841da:	0719      	lsls	r1, r3, #28
   841dc:	d50c      	bpl.n	841f8 <__swsetup_r+0x34>
   841de:	6922      	ldr	r2, [r4, #16]
   841e0:	b1aa      	cbz	r2, 8420e <__swsetup_r+0x4a>
   841e2:	f013 0101 	ands.w	r1, r3, #1
   841e6:	d01e      	beq.n	84226 <__swsetup_r+0x62>
   841e8:	6963      	ldr	r3, [r4, #20]
   841ea:	2100      	movs	r1, #0
   841ec:	425b      	negs	r3, r3
   841ee:	61a3      	str	r3, [r4, #24]
   841f0:	60a1      	str	r1, [r4, #8]
   841f2:	b1f2      	cbz	r2, 84232 <__swsetup_r+0x6e>
   841f4:	2000      	movs	r0, #0
   841f6:	bd70      	pop	{r4, r5, r6, pc}
   841f8:	06da      	lsls	r2, r3, #27
   841fa:	d53a      	bpl.n	84272 <__swsetup_r+0xae>
   841fc:	075b      	lsls	r3, r3, #29
   841fe:	d424      	bmi.n	8424a <__swsetup_r+0x86>
   84200:	6922      	ldr	r2, [r4, #16]
   84202:	f045 0308 	orr.w	r3, r5, #8
   84206:	81a3      	strh	r3, [r4, #12]
   84208:	b29b      	uxth	r3, r3
   8420a:	2a00      	cmp	r2, #0
   8420c:	d1e9      	bne.n	841e2 <__swsetup_r+0x1e>
   8420e:	f403 7120 	and.w	r1, r3, #640	; 0x280
   84212:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   84216:	d0e4      	beq.n	841e2 <__swsetup_r+0x1e>
   84218:	4630      	mov	r0, r6
   8421a:	4621      	mov	r1, r4
   8421c:	f001 fc8a 	bl	85b34 <__smakebuf_r>
   84220:	89a3      	ldrh	r3, [r4, #12]
   84222:	6922      	ldr	r2, [r4, #16]
   84224:	e7dd      	b.n	841e2 <__swsetup_r+0x1e>
   84226:	0798      	lsls	r0, r3, #30
   84228:	bf58      	it	pl
   8422a:	6961      	ldrpl	r1, [r4, #20]
   8422c:	60a1      	str	r1, [r4, #8]
   8422e:	2a00      	cmp	r2, #0
   84230:	d1e0      	bne.n	841f4 <__swsetup_r+0x30>
   84232:	89a3      	ldrh	r3, [r4, #12]
   84234:	061a      	lsls	r2, r3, #24
   84236:	d5dd      	bpl.n	841f4 <__swsetup_r+0x30>
   84238:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8423c:	81a3      	strh	r3, [r4, #12]
   8423e:	f04f 30ff 	mov.w	r0, #4294967295
   84242:	bd70      	pop	{r4, r5, r6, pc}
   84244:	f001 f8a8 	bl	85398 <__sinit>
   84248:	e7c5      	b.n	841d6 <__swsetup_r+0x12>
   8424a:	6b21      	ldr	r1, [r4, #48]	; 0x30
   8424c:	b149      	cbz	r1, 84262 <__swsetup_r+0x9e>
   8424e:	f104 0340 	add.w	r3, r4, #64	; 0x40
   84252:	4299      	cmp	r1, r3
   84254:	d003      	beq.n	8425e <__swsetup_r+0x9a>
   84256:	4630      	mov	r0, r6
   84258:	f001 f9e2 	bl	85620 <_free_r>
   8425c:	89a5      	ldrh	r5, [r4, #12]
   8425e:	2300      	movs	r3, #0
   84260:	6323      	str	r3, [r4, #48]	; 0x30
   84262:	6922      	ldr	r2, [r4, #16]
   84264:	f025 0524 	bic.w	r5, r5, #36	; 0x24
   84268:	2100      	movs	r1, #0
   8426a:	b2ad      	uxth	r5, r5
   8426c:	6022      	str	r2, [r4, #0]
   8426e:	6061      	str	r1, [r4, #4]
   84270:	e7c7      	b.n	84202 <__swsetup_r+0x3e>
   84272:	f045 0540 	orr.w	r5, r5, #64	; 0x40
   84276:	2309      	movs	r3, #9
   84278:	6033      	str	r3, [r6, #0]
   8427a:	f04f 30ff 	mov.w	r0, #4294967295
   8427e:	81a5      	strh	r5, [r4, #12]
   84280:	bd70      	pop	{r4, r5, r6, pc}
   84282:	bf00      	nop
   84284:	20070560 	.word	0x20070560

00084288 <register_fini>:
   84288:	4b02      	ldr	r3, [pc, #8]	; (84294 <register_fini+0xc>)
   8428a:	b113      	cbz	r3, 84292 <register_fini+0xa>
   8428c:	4802      	ldr	r0, [pc, #8]	; (84298 <register_fini+0x10>)
   8428e:	f000 b805 	b.w	8429c <atexit>
   84292:	4770      	bx	lr
   84294:	00000000 	.word	0x00000000
   84298:	00085495 	.word	0x00085495

0008429c <atexit>:
   8429c:	4601      	mov	r1, r0
   8429e:	2000      	movs	r0, #0
   842a0:	4602      	mov	r2, r0
   842a2:	4603      	mov	r3, r0
   842a4:	f002 bebc 	b.w	87020 <__register_exitproc>

000842a8 <quorem>:
   842a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   842ac:	6903      	ldr	r3, [r0, #16]
   842ae:	690d      	ldr	r5, [r1, #16]
   842b0:	b083      	sub	sp, #12
   842b2:	429d      	cmp	r5, r3
   842b4:	4683      	mov	fp, r0
   842b6:	f300 808c 	bgt.w	843d2 <quorem+0x12a>
   842ba:	3d01      	subs	r5, #1
   842bc:	f101 0414 	add.w	r4, r1, #20
   842c0:	f100 0a14 	add.w	sl, r0, #20
   842c4:	f854 2025 	ldr.w	r2, [r4, r5, lsl #2]
   842c8:	f85a 3025 	ldr.w	r3, [sl, r5, lsl #2]
   842cc:	3201      	adds	r2, #1
   842ce:	fbb3 f8f2 	udiv	r8, r3, r2
   842d2:	00aa      	lsls	r2, r5, #2
   842d4:	4691      	mov	r9, r2
   842d6:	9200      	str	r2, [sp, #0]
   842d8:	4452      	add	r2, sl
   842da:	44a1      	add	r9, r4
   842dc:	9201      	str	r2, [sp, #4]
   842de:	f1b8 0f00 	cmp.w	r8, #0
   842e2:	d03e      	beq.n	84362 <quorem+0xba>
   842e4:	2600      	movs	r6, #0
   842e6:	4630      	mov	r0, r6
   842e8:	4622      	mov	r2, r4
   842ea:	4653      	mov	r3, sl
   842ec:	468c      	mov	ip, r1
   842ee:	f852 7b04 	ldr.w	r7, [r2], #4
   842f2:	6819      	ldr	r1, [r3, #0]
   842f4:	fa1f fe87 	uxth.w	lr, r7
   842f8:	0c3f      	lsrs	r7, r7, #16
   842fa:	fb0e 6e08 	mla	lr, lr, r8, r6
   842fe:	fb07 f608 	mul.w	r6, r7, r8
   84302:	eb06 461e 	add.w	r6, r6, lr, lsr #16
   84306:	fa1f fe8e 	uxth.w	lr, lr
   8430a:	ebce 0e00 	rsb	lr, lr, r0
   8430e:	b28f      	uxth	r7, r1
   84310:	b2b0      	uxth	r0, r6
   84312:	4477      	add	r7, lr
   84314:	ebc0 4011 	rsb	r0, r0, r1, lsr #16
   84318:	eb00 4027 	add.w	r0, r0, r7, asr #16
   8431c:	b2bf      	uxth	r7, r7
   8431e:	ea47 4700 	orr.w	r7, r7, r0, lsl #16
   84322:	4591      	cmp	r9, r2
   84324:	f843 7b04 	str.w	r7, [r3], #4
   84328:	ea4f 4020 	mov.w	r0, r0, asr #16
   8432c:	ea4f 4616 	mov.w	r6, r6, lsr #16
   84330:	d2dd      	bcs.n	842ee <quorem+0x46>
   84332:	9a00      	ldr	r2, [sp, #0]
   84334:	4661      	mov	r1, ip
   84336:	f85a 3002 	ldr.w	r3, [sl, r2]
   8433a:	b993      	cbnz	r3, 84362 <quorem+0xba>
   8433c:	9a01      	ldr	r2, [sp, #4]
   8433e:	1f13      	subs	r3, r2, #4
   84340:	459a      	cmp	sl, r3
   84342:	d20c      	bcs.n	8435e <quorem+0xb6>
   84344:	f852 3c04 	ldr.w	r3, [r2, #-4]
   84348:	b94b      	cbnz	r3, 8435e <quorem+0xb6>
   8434a:	f1a2 0308 	sub.w	r3, r2, #8
   8434e:	e002      	b.n	84356 <quorem+0xae>
   84350:	681a      	ldr	r2, [r3, #0]
   84352:	3b04      	subs	r3, #4
   84354:	b91a      	cbnz	r2, 8435e <quorem+0xb6>
   84356:	459a      	cmp	sl, r3
   84358:	f105 35ff 	add.w	r5, r5, #4294967295
   8435c:	d3f8      	bcc.n	84350 <quorem+0xa8>
   8435e:	f8cb 5010 	str.w	r5, [fp, #16]
   84362:	4658      	mov	r0, fp
   84364:	f002 fa40 	bl	867e8 <__mcmp>
   84368:	2800      	cmp	r0, #0
   8436a:	db2e      	blt.n	843ca <quorem+0x122>
   8436c:	f108 0801 	add.w	r8, r8, #1
   84370:	4653      	mov	r3, sl
   84372:	2200      	movs	r2, #0
   84374:	f854 6b04 	ldr.w	r6, [r4], #4
   84378:	6818      	ldr	r0, [r3, #0]
   8437a:	b2b1      	uxth	r1, r6
   8437c:	1a51      	subs	r1, r2, r1
   8437e:	b287      	uxth	r7, r0
   84380:	0c36      	lsrs	r6, r6, #16
   84382:	4439      	add	r1, r7
   84384:	ebc6 4010 	rsb	r0, r6, r0, lsr #16
   84388:	eb00 4221 	add.w	r2, r0, r1, asr #16
   8438c:	b289      	uxth	r1, r1
   8438e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
   84392:	45a1      	cmp	r9, r4
   84394:	f843 1b04 	str.w	r1, [r3], #4
   84398:	ea4f 4222 	mov.w	r2, r2, asr #16
   8439c:	d2ea      	bcs.n	84374 <quorem+0xcc>
   8439e:	f85a 2025 	ldr.w	r2, [sl, r5, lsl #2]
   843a2:	eb0a 0385 	add.w	r3, sl, r5, lsl #2
   843a6:	b982      	cbnz	r2, 843ca <quorem+0x122>
   843a8:	1f1a      	subs	r2, r3, #4
   843aa:	4592      	cmp	sl, r2
   843ac:	d20b      	bcs.n	843c6 <quorem+0x11e>
   843ae:	f853 2c04 	ldr.w	r2, [r3, #-4]
   843b2:	b942      	cbnz	r2, 843c6 <quorem+0x11e>
   843b4:	3b08      	subs	r3, #8
   843b6:	e002      	b.n	843be <quorem+0x116>
   843b8:	681a      	ldr	r2, [r3, #0]
   843ba:	3b04      	subs	r3, #4
   843bc:	b91a      	cbnz	r2, 843c6 <quorem+0x11e>
   843be:	459a      	cmp	sl, r3
   843c0:	f105 35ff 	add.w	r5, r5, #4294967295
   843c4:	d3f8      	bcc.n	843b8 <quorem+0x110>
   843c6:	f8cb 5010 	str.w	r5, [fp, #16]
   843ca:	4640      	mov	r0, r8
   843cc:	b003      	add	sp, #12
   843ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   843d2:	2000      	movs	r0, #0
   843d4:	b003      	add	sp, #12
   843d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   843da:	bf00      	nop
   843dc:	0000      	movs	r0, r0
	...

000843e0 <_dtoa_r>:
   843e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   843e4:	6c01      	ldr	r1, [r0, #64]	; 0x40
   843e6:	b09b      	sub	sp, #108	; 0x6c
   843e8:	4604      	mov	r4, r0
   843ea:	4692      	mov	sl, r2
   843ec:	469b      	mov	fp, r3
   843ee:	9d27      	ldr	r5, [sp, #156]	; 0x9c
   843f0:	b141      	cbz	r1, 84404 <_dtoa_r+0x24>
   843f2:	6c43      	ldr	r3, [r0, #68]	; 0x44
   843f4:	2201      	movs	r2, #1
   843f6:	409a      	lsls	r2, r3
   843f8:	604b      	str	r3, [r1, #4]
   843fa:	608a      	str	r2, [r1, #8]
   843fc:	f001 fffe 	bl	863fc <_Bfree>
   84400:	2300      	movs	r3, #0
   84402:	6423      	str	r3, [r4, #64]	; 0x40
   84404:	f1bb 0f00 	cmp.w	fp, #0
   84408:	46d9      	mov	r9, fp
   8440a:	db33      	blt.n	84474 <_dtoa_r+0x94>
   8440c:	2300      	movs	r3, #0
   8440e:	602b      	str	r3, [r5, #0]
   84410:	4ba5      	ldr	r3, [pc, #660]	; (846a8 <_dtoa_r+0x2c8>)
   84412:	461a      	mov	r2, r3
   84414:	ea09 0303 	and.w	r3, r9, r3
   84418:	4293      	cmp	r3, r2
   8441a:	d014      	beq.n	84446 <_dtoa_r+0x66>
   8441c:	4650      	mov	r0, sl
   8441e:	4659      	mov	r1, fp
   84420:	2200      	movs	r2, #0
   84422:	2300      	movs	r3, #0
   84424:	f7fd fbd8 	bl	81bd8 <__aeabi_dcmpeq>
   84428:	4680      	mov	r8, r0
   8442a:	b348      	cbz	r0, 84480 <_dtoa_r+0xa0>
   8442c:	9e26      	ldr	r6, [sp, #152]	; 0x98
   8442e:	9d28      	ldr	r5, [sp, #160]	; 0xa0
   84430:	2301      	movs	r3, #1
   84432:	6033      	str	r3, [r6, #0]
   84434:	2d00      	cmp	r5, #0
   84436:	f000 80ca 	beq.w	845ce <_dtoa_r+0x1ee>
   8443a:	489c      	ldr	r0, [pc, #624]	; (846ac <_dtoa_r+0x2cc>)
   8443c:	6028      	str	r0, [r5, #0]
   8443e:	3801      	subs	r0, #1
   84440:	b01b      	add	sp, #108	; 0x6c
   84442:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84446:	9d26      	ldr	r5, [sp, #152]	; 0x98
   84448:	f242 730f 	movw	r3, #9999	; 0x270f
   8444c:	602b      	str	r3, [r5, #0]
   8444e:	f1ba 0f00 	cmp.w	sl, #0
   84452:	f000 80a5 	beq.w	845a0 <_dtoa_r+0x1c0>
   84456:	4896      	ldr	r0, [pc, #600]	; (846b0 <_dtoa_r+0x2d0>)
   84458:	9e28      	ldr	r6, [sp, #160]	; 0xa0
   8445a:	2e00      	cmp	r6, #0
   8445c:	d0f0      	beq.n	84440 <_dtoa_r+0x60>
   8445e:	78c3      	ldrb	r3, [r0, #3]
   84460:	2b00      	cmp	r3, #0
   84462:	f000 80b6 	beq.w	845d2 <_dtoa_r+0x1f2>
   84466:	f100 0308 	add.w	r3, r0, #8
   8446a:	9d28      	ldr	r5, [sp, #160]	; 0xa0
   8446c:	602b      	str	r3, [r5, #0]
   8446e:	b01b      	add	sp, #108	; 0x6c
   84470:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84474:	2301      	movs	r3, #1
   84476:	f02b 4900 	bic.w	r9, fp, #2147483648	; 0x80000000
   8447a:	602b      	str	r3, [r5, #0]
   8447c:	46cb      	mov	fp, r9
   8447e:	e7c7      	b.n	84410 <_dtoa_r+0x30>
   84480:	aa19      	add	r2, sp, #100	; 0x64
   84482:	ab18      	add	r3, sp, #96	; 0x60
   84484:	e88d 000c 	stmia.w	sp, {r2, r3}
   84488:	4620      	mov	r0, r4
   8448a:	4652      	mov	r2, sl
   8448c:	465b      	mov	r3, fp
   8448e:	f002 fa3b 	bl	86908 <__d2b>
   84492:	ea5f 5519 	movs.w	r5, r9, lsr #20
   84496:	900a      	str	r0, [sp, #40]	; 0x28
   84498:	f040 808b 	bne.w	845b2 <_dtoa_r+0x1d2>
   8449c:	9f18      	ldr	r7, [sp, #96]	; 0x60
   8449e:	9d19      	ldr	r5, [sp, #100]	; 0x64
   844a0:	f46f 6382 	mvn.w	r3, #1040	; 0x410
   844a4:	443d      	add	r5, r7
   844a6:	429d      	cmp	r5, r3
   844a8:	f2c0 8295 	blt.w	849d6 <_dtoa_r+0x5f6>
   844ac:	331f      	adds	r3, #31
   844ae:	f205 4212 	addw	r2, r5, #1042	; 0x412
   844b2:	1b5b      	subs	r3, r3, r5
   844b4:	fa09 f303 	lsl.w	r3, r9, r3
   844b8:	fa2a f202 	lsr.w	r2, sl, r2
   844bc:	ea43 0002 	orr.w	r0, r3, r2
   844c0:	f7fd f8ac 	bl	8161c <__aeabi_ui2d>
   844c4:	2601      	movs	r6, #1
   844c6:	3d01      	subs	r5, #1
   844c8:	46b8      	mov	r8, r7
   844ca:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   844ce:	9616      	str	r6, [sp, #88]	; 0x58
   844d0:	2200      	movs	r2, #0
   844d2:	4b78      	ldr	r3, [pc, #480]	; (846b4 <_dtoa_r+0x2d4>)
   844d4:	f7fc ff64 	bl	813a0 <__aeabi_dsub>
   844d8:	a36d      	add	r3, pc, #436	; (adr r3, 84690 <_dtoa_r+0x2b0>)
   844da:	e9d3 2300 	ldrd	r2, r3, [r3]
   844de:	f7fd f913 	bl	81708 <__aeabi_dmul>
   844e2:	a36d      	add	r3, pc, #436	; (adr r3, 84698 <_dtoa_r+0x2b8>)
   844e4:	e9d3 2300 	ldrd	r2, r3, [r3]
   844e8:	f7fc ff5c 	bl	813a4 <__adddf3>
   844ec:	4606      	mov	r6, r0
   844ee:	4628      	mov	r0, r5
   844f0:	460f      	mov	r7, r1
   844f2:	f7fd f8a3 	bl	8163c <__aeabi_i2d>
   844f6:	a36a      	add	r3, pc, #424	; (adr r3, 846a0 <_dtoa_r+0x2c0>)
   844f8:	e9d3 2300 	ldrd	r2, r3, [r3]
   844fc:	f7fd f904 	bl	81708 <__aeabi_dmul>
   84500:	4602      	mov	r2, r0
   84502:	460b      	mov	r3, r1
   84504:	4630      	mov	r0, r6
   84506:	4639      	mov	r1, r7
   84508:	f7fc ff4c 	bl	813a4 <__adddf3>
   8450c:	4606      	mov	r6, r0
   8450e:	460f      	mov	r7, r1
   84510:	f7fd fb94 	bl	81c3c <__aeabi_d2iz>
   84514:	4639      	mov	r1, r7
   84516:	9007      	str	r0, [sp, #28]
   84518:	2200      	movs	r2, #0
   8451a:	4630      	mov	r0, r6
   8451c:	2300      	movs	r3, #0
   8451e:	f7fd fb65 	bl	81bec <__aeabi_dcmplt>
   84522:	2800      	cmp	r0, #0
   84524:	f040 8229 	bne.w	8497a <_dtoa_r+0x59a>
   84528:	9e07      	ldr	r6, [sp, #28]
   8452a:	2e16      	cmp	r6, #22
   8452c:	f200 8222 	bhi.w	84974 <_dtoa_r+0x594>
   84530:	4961      	ldr	r1, [pc, #388]	; (846b8 <_dtoa_r+0x2d8>)
   84532:	4652      	mov	r2, sl
   84534:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
   84538:	465b      	mov	r3, fp
   8453a:	e9d1 0100 	ldrd	r0, r1, [r1]
   8453e:	f7fd fb73 	bl	81c28 <__aeabi_dcmpgt>
   84542:	2800      	cmp	r0, #0
   84544:	f000 824c 	beq.w	849e0 <_dtoa_r+0x600>
   84548:	3e01      	subs	r6, #1
   8454a:	9607      	str	r6, [sp, #28]
   8454c:	2600      	movs	r6, #0
   8454e:	960e      	str	r6, [sp, #56]	; 0x38
   84550:	ebc5 0508 	rsb	r5, r5, r8
   84554:	3d01      	subs	r5, #1
   84556:	9506      	str	r5, [sp, #24]
   84558:	f100 8226 	bmi.w	849a8 <_dtoa_r+0x5c8>
   8455c:	2500      	movs	r5, #0
   8455e:	9508      	str	r5, [sp, #32]
   84560:	9e07      	ldr	r6, [sp, #28]
   84562:	2e00      	cmp	r6, #0
   84564:	f2c0 8217 	blt.w	84996 <_dtoa_r+0x5b6>
   84568:	9d06      	ldr	r5, [sp, #24]
   8456a:	960d      	str	r6, [sp, #52]	; 0x34
   8456c:	4435      	add	r5, r6
   8456e:	2600      	movs	r6, #0
   84570:	9506      	str	r5, [sp, #24]
   84572:	960c      	str	r6, [sp, #48]	; 0x30
   84574:	9d24      	ldr	r5, [sp, #144]	; 0x90
   84576:	2d09      	cmp	r5, #9
   84578:	d82d      	bhi.n	845d6 <_dtoa_r+0x1f6>
   8457a:	2d05      	cmp	r5, #5
   8457c:	bfc4      	itt	gt
   8457e:	3d04      	subgt	r5, #4
   84580:	9524      	strgt	r5, [sp, #144]	; 0x90
   84582:	9e24      	ldr	r6, [sp, #144]	; 0x90
   84584:	bfc8      	it	gt
   84586:	2500      	movgt	r5, #0
   84588:	f1a6 0302 	sub.w	r3, r6, #2
   8458c:	bfd8      	it	le
   8458e:	2501      	movle	r5, #1
   84590:	2b03      	cmp	r3, #3
   84592:	d822      	bhi.n	845da <_dtoa_r+0x1fa>
   84594:	e8df f013 	tbh	[pc, r3, lsl #1]
   84598:	029e03b7 	.word	0x029e03b7
   8459c:	049a03c0 	.word	0x049a03c0
   845a0:	4a46      	ldr	r2, [pc, #280]	; (846bc <_dtoa_r+0x2dc>)
   845a2:	4b43      	ldr	r3, [pc, #268]	; (846b0 <_dtoa_r+0x2d0>)
   845a4:	f3c9 0013 	ubfx	r0, r9, #0, #20
   845a8:	2800      	cmp	r0, #0
   845aa:	bf0c      	ite	eq
   845ac:	4610      	moveq	r0, r2
   845ae:	4618      	movne	r0, r3
   845b0:	e752      	b.n	84458 <_dtoa_r+0x78>
   845b2:	f3cb 0313 	ubfx	r3, fp, #0, #20
   845b6:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   845ba:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
   845be:	4650      	mov	r0, sl
   845c0:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   845c4:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   845c8:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
   845cc:	e780      	b.n	844d0 <_dtoa_r+0xf0>
   845ce:	483c      	ldr	r0, [pc, #240]	; (846c0 <_dtoa_r+0x2e0>)
   845d0:	e736      	b.n	84440 <_dtoa_r+0x60>
   845d2:	1cc3      	adds	r3, r0, #3
   845d4:	e749      	b.n	8446a <_dtoa_r+0x8a>
   845d6:	2500      	movs	r5, #0
   845d8:	9524      	str	r5, [sp, #144]	; 0x90
   845da:	2500      	movs	r5, #0
   845dc:	6465      	str	r5, [r4, #68]	; 0x44
   845de:	4629      	mov	r1, r5
   845e0:	4620      	mov	r0, r4
   845e2:	f001 fee5 	bl	863b0 <_Balloc>
   845e6:	f04f 39ff 	mov.w	r9, #4294967295
   845ea:	2601      	movs	r6, #1
   845ec:	9009      	str	r0, [sp, #36]	; 0x24
   845ee:	9525      	str	r5, [sp, #148]	; 0x94
   845f0:	6420      	str	r0, [r4, #64]	; 0x40
   845f2:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
   845f6:	960b      	str	r6, [sp, #44]	; 0x2c
   845f8:	9b19      	ldr	r3, [sp, #100]	; 0x64
   845fa:	2b00      	cmp	r3, #0
   845fc:	f2c0 80d2 	blt.w	847a4 <_dtoa_r+0x3c4>
   84600:	9e07      	ldr	r6, [sp, #28]
   84602:	2e0e      	cmp	r6, #14
   84604:	f300 80ce 	bgt.w	847a4 <_dtoa_r+0x3c4>
   84608:	4b2b      	ldr	r3, [pc, #172]	; (846b8 <_dtoa_r+0x2d8>)
   8460a:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
   8460e:	e9d3 0100 	ldrd	r0, r1, [r3]
   84612:	e9cd 0104 	strd	r0, r1, [sp, #16]
   84616:	9925      	ldr	r1, [sp, #148]	; 0x94
   84618:	2900      	cmp	r1, #0
   8461a:	f2c0 8380 	blt.w	84d1e <_dtoa_r+0x93e>
   8461e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   84622:	4659      	mov	r1, fp
   84624:	4650      	mov	r0, sl
   84626:	f7fd f999 	bl	8195c <__aeabi_ddiv>
   8462a:	f7fd fb07 	bl	81c3c <__aeabi_d2iz>
   8462e:	4605      	mov	r5, r0
   84630:	f7fd f804 	bl	8163c <__aeabi_i2d>
   84634:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   84638:	f7fd f866 	bl	81708 <__aeabi_dmul>
   8463c:	4602      	mov	r2, r0
   8463e:	460b      	mov	r3, r1
   84640:	4650      	mov	r0, sl
   84642:	4659      	mov	r1, fp
   84644:	f7fc feac 	bl	813a0 <__aeabi_dsub>
   84648:	9a09      	ldr	r2, [sp, #36]	; 0x24
   8464a:	f105 0330 	add.w	r3, r5, #48	; 0x30
   8464e:	f1b9 0f01 	cmp.w	r9, #1
   84652:	4606      	mov	r6, r0
   84654:	460f      	mov	r7, r1
   84656:	7013      	strb	r3, [r2, #0]
   84658:	f102 0b01 	add.w	fp, r2, #1
   8465c:	d064      	beq.n	84728 <_dtoa_r+0x348>
   8465e:	2200      	movs	r2, #0
   84660:	4b18      	ldr	r3, [pc, #96]	; (846c4 <_dtoa_r+0x2e4>)
   84662:	f7fd f851 	bl	81708 <__aeabi_dmul>
   84666:	2200      	movs	r2, #0
   84668:	2300      	movs	r3, #0
   8466a:	4606      	mov	r6, r0
   8466c:	460f      	mov	r7, r1
   8466e:	f7fd fab3 	bl	81bd8 <__aeabi_dcmpeq>
   84672:	2800      	cmp	r0, #0
   84674:	f040 8081 	bne.w	8477a <_dtoa_r+0x39a>
   84678:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   8467c:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8467e:	44c8      	add	r8, r9
   84680:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
   84684:	f105 0902 	add.w	r9, r5, #2
   84688:	9403      	str	r4, [sp, #12]
   8468a:	e028      	b.n	846de <_dtoa_r+0x2fe>
   8468c:	f3af 8000 	nop.w
   84690:	636f4361 	.word	0x636f4361
   84694:	3fd287a7 	.word	0x3fd287a7
   84698:	8b60c8b3 	.word	0x8b60c8b3
   8469c:	3fc68a28 	.word	0x3fc68a28
   846a0:	509f79fb 	.word	0x509f79fb
   846a4:	3fd34413 	.word	0x3fd34413
   846a8:	7ff00000 	.word	0x7ff00000
   846ac:	00087999 	.word	0x00087999
   846b0:	000879d8 	.word	0x000879d8
   846b4:	3ff80000 	.word	0x3ff80000
   846b8:	000879e8 	.word	0x000879e8
   846bc:	000879cc 	.word	0x000879cc
   846c0:	00087998 	.word	0x00087998
   846c4:	40240000 	.word	0x40240000
   846c8:	f7fd f81e 	bl	81708 <__aeabi_dmul>
   846cc:	2200      	movs	r2, #0
   846ce:	2300      	movs	r3, #0
   846d0:	4606      	mov	r6, r0
   846d2:	460f      	mov	r7, r1
   846d4:	f7fd fa80 	bl	81bd8 <__aeabi_dcmpeq>
   846d8:	2800      	cmp	r0, #0
   846da:	f040 83c1 	bne.w	84e60 <_dtoa_r+0xa80>
   846de:	4652      	mov	r2, sl
   846e0:	465b      	mov	r3, fp
   846e2:	4630      	mov	r0, r6
   846e4:	4639      	mov	r1, r7
   846e6:	f7fd f939 	bl	8195c <__aeabi_ddiv>
   846ea:	f7fd faa7 	bl	81c3c <__aeabi_d2iz>
   846ee:	4605      	mov	r5, r0
   846f0:	f7fc ffa4 	bl	8163c <__aeabi_i2d>
   846f4:	4652      	mov	r2, sl
   846f6:	465b      	mov	r3, fp
   846f8:	f7fd f806 	bl	81708 <__aeabi_dmul>
   846fc:	4602      	mov	r2, r0
   846fe:	460b      	mov	r3, r1
   84700:	4630      	mov	r0, r6
   84702:	4639      	mov	r1, r7
   84704:	f7fc fe4c 	bl	813a0 <__aeabi_dsub>
   84708:	f105 0e30 	add.w	lr, r5, #48	; 0x30
   8470c:	45c1      	cmp	r9, r8
   8470e:	f809 ec01 	strb.w	lr, [r9, #-1]
   84712:	464c      	mov	r4, r9
   84714:	4606      	mov	r6, r0
   84716:	460f      	mov	r7, r1
   84718:	f04f 0200 	mov.w	r2, #0
   8471c:	4ba7      	ldr	r3, [pc, #668]	; (849bc <_dtoa_r+0x5dc>)
   8471e:	f109 0901 	add.w	r9, r9, #1
   84722:	d1d1      	bne.n	846c8 <_dtoa_r+0x2e8>
   84724:	46a3      	mov	fp, r4
   84726:	9c03      	ldr	r4, [sp, #12]
   84728:	4632      	mov	r2, r6
   8472a:	463b      	mov	r3, r7
   8472c:	4630      	mov	r0, r6
   8472e:	4639      	mov	r1, r7
   84730:	f7fc fe38 	bl	813a4 <__adddf3>
   84734:	4606      	mov	r6, r0
   84736:	460f      	mov	r7, r1
   84738:	4632      	mov	r2, r6
   8473a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   8473e:	463b      	mov	r3, r7
   84740:	f7fd fa54 	bl	81bec <__aeabi_dcmplt>
   84744:	b940      	cbnz	r0, 84758 <_dtoa_r+0x378>
   84746:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   8474a:	4632      	mov	r2, r6
   8474c:	463b      	mov	r3, r7
   8474e:	f7fd fa43 	bl	81bd8 <__aeabi_dcmpeq>
   84752:	b190      	cbz	r0, 8477a <_dtoa_r+0x39a>
   84754:	07eb      	lsls	r3, r5, #31
   84756:	d510      	bpl.n	8477a <_dtoa_r+0x39a>
   84758:	f81b 5c01 	ldrb.w	r5, [fp, #-1]
   8475c:	9a09      	ldr	r2, [sp, #36]	; 0x24
   8475e:	e005      	b.n	8476c <_dtoa_r+0x38c>
   84760:	429a      	cmp	r2, r3
   84762:	f000 8429 	beq.w	84fb8 <_dtoa_r+0xbd8>
   84766:	f813 5c01 	ldrb.w	r5, [r3, #-1]
   8476a:	469b      	mov	fp, r3
   8476c:	2d39      	cmp	r5, #57	; 0x39
   8476e:	f10b 33ff 	add.w	r3, fp, #4294967295
   84772:	d0f5      	beq.n	84760 <_dtoa_r+0x380>
   84774:	1c6a      	adds	r2, r5, #1
   84776:	b2d2      	uxtb	r2, r2
   84778:	701a      	strb	r2, [r3, #0]
   8477a:	4620      	mov	r0, r4
   8477c:	990a      	ldr	r1, [sp, #40]	; 0x28
   8477e:	f001 fe3d 	bl	863fc <_Bfree>
   84782:	9e07      	ldr	r6, [sp, #28]
   84784:	9d26      	ldr	r5, [sp, #152]	; 0x98
   84786:	1c73      	adds	r3, r6, #1
   84788:	9e28      	ldr	r6, [sp, #160]	; 0xa0
   8478a:	2200      	movs	r2, #0
   8478c:	f88b 2000 	strb.w	r2, [fp]
   84790:	602b      	str	r3, [r5, #0]
   84792:	2e00      	cmp	r6, #0
   84794:	f000 8325 	beq.w	84de2 <_dtoa_r+0xa02>
   84798:	9809      	ldr	r0, [sp, #36]	; 0x24
   8479a:	f8c6 b000 	str.w	fp, [r6]
   8479e:	b01b      	add	sp, #108	; 0x6c
   847a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   847a4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   847a6:	2d00      	cmp	r5, #0
   847a8:	f000 8103 	beq.w	849b2 <_dtoa_r+0x5d2>
   847ac:	9e24      	ldr	r6, [sp, #144]	; 0x90
   847ae:	2e01      	cmp	r6, #1
   847b0:	f340 82dc 	ble.w	84d6c <_dtoa_r+0x98c>
   847b4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   847b6:	f109 37ff 	add.w	r7, r9, #4294967295
   847ba:	42be      	cmp	r6, r7
   847bc:	f2c0 8389 	blt.w	84ed2 <_dtoa_r+0xaf2>
   847c0:	1bf7      	subs	r7, r6, r7
   847c2:	f1b9 0f00 	cmp.w	r9, #0
   847c6:	f2c0 8487 	blt.w	850d8 <_dtoa_r+0xcf8>
   847ca:	9d08      	ldr	r5, [sp, #32]
   847cc:	464b      	mov	r3, r9
   847ce:	9e08      	ldr	r6, [sp, #32]
   847d0:	4620      	mov	r0, r4
   847d2:	441e      	add	r6, r3
   847d4:	9608      	str	r6, [sp, #32]
   847d6:	9e06      	ldr	r6, [sp, #24]
   847d8:	2101      	movs	r1, #1
   847da:	441e      	add	r6, r3
   847dc:	9606      	str	r6, [sp, #24]
   847de:	f001 feaf 	bl	86540 <__i2b>
   847e2:	4606      	mov	r6, r0
   847e4:	b165      	cbz	r5, 84800 <_dtoa_r+0x420>
   847e6:	9806      	ldr	r0, [sp, #24]
   847e8:	2800      	cmp	r0, #0
   847ea:	dd09      	ble.n	84800 <_dtoa_r+0x420>
   847ec:	4603      	mov	r3, r0
   847ee:	9908      	ldr	r1, [sp, #32]
   847f0:	42ab      	cmp	r3, r5
   847f2:	bfa8      	it	ge
   847f4:	462b      	movge	r3, r5
   847f6:	1ac9      	subs	r1, r1, r3
   847f8:	1ac0      	subs	r0, r0, r3
   847fa:	9108      	str	r1, [sp, #32]
   847fc:	1aed      	subs	r5, r5, r3
   847fe:	9006      	str	r0, [sp, #24]
   84800:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   84802:	2a00      	cmp	r2, #0
   84804:	dd1d      	ble.n	84842 <_dtoa_r+0x462>
   84806:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84808:	2b00      	cmp	r3, #0
   8480a:	f000 8358 	beq.w	84ebe <_dtoa_r+0xade>
   8480e:	2f00      	cmp	r7, #0
   84810:	dd11      	ble.n	84836 <_dtoa_r+0x456>
   84812:	4631      	mov	r1, r6
   84814:	463a      	mov	r2, r7
   84816:	4620      	mov	r0, r4
   84818:	f001 ff3a 	bl	86690 <__pow5mult>
   8481c:	4606      	mov	r6, r0
   8481e:	4631      	mov	r1, r6
   84820:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84822:	4620      	mov	r0, r4
   84824:	f001 fe96 	bl	86554 <__multiply>
   84828:	990a      	ldr	r1, [sp, #40]	; 0x28
   8482a:	4680      	mov	r8, r0
   8482c:	4620      	mov	r0, r4
   8482e:	f001 fde5 	bl	863fc <_Bfree>
   84832:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
   84836:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
   8483a:	ebbe 0207 	subs.w	r2, lr, r7
   8483e:	f040 828f 	bne.w	84d60 <_dtoa_r+0x980>
   84842:	4620      	mov	r0, r4
   84844:	2101      	movs	r1, #1
   84846:	f001 fe7b 	bl	86540 <__i2b>
   8484a:	4680      	mov	r8, r0
   8484c:	980d      	ldr	r0, [sp, #52]	; 0x34
   8484e:	2800      	cmp	r0, #0
   84850:	dd05      	ble.n	8485e <_dtoa_r+0x47e>
   84852:	4641      	mov	r1, r8
   84854:	4620      	mov	r0, r4
   84856:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   84858:	f001 ff1a 	bl	86690 <__pow5mult>
   8485c:	4680      	mov	r8, r0
   8485e:	9924      	ldr	r1, [sp, #144]	; 0x90
   84860:	2901      	cmp	r1, #1
   84862:	f340 82c1 	ble.w	84de8 <_dtoa_r+0xa08>
   84866:	2700      	movs	r7, #0
   84868:	980d      	ldr	r0, [sp, #52]	; 0x34
   8486a:	2800      	cmp	r0, #0
   8486c:	f040 82af 	bne.w	84dce <_dtoa_r+0x9ee>
   84870:	2001      	movs	r0, #1
   84872:	9b06      	ldr	r3, [sp, #24]
   84874:	4403      	add	r3, r0
   84876:	f013 031f 	ands.w	r3, r3, #31
   8487a:	f000 80a1 	beq.w	849c0 <_dtoa_r+0x5e0>
   8487e:	f1c3 0220 	rsb	r2, r3, #32
   84882:	2a04      	cmp	r2, #4
   84884:	f340 84b7 	ble.w	851f6 <_dtoa_r+0xe16>
   84888:	9908      	ldr	r1, [sp, #32]
   8488a:	9a06      	ldr	r2, [sp, #24]
   8488c:	f1c3 031c 	rsb	r3, r3, #28
   84890:	4419      	add	r1, r3
   84892:	441a      	add	r2, r3
   84894:	9108      	str	r1, [sp, #32]
   84896:	441d      	add	r5, r3
   84898:	9206      	str	r2, [sp, #24]
   8489a:	9908      	ldr	r1, [sp, #32]
   8489c:	2900      	cmp	r1, #0
   8489e:	dd05      	ble.n	848ac <_dtoa_r+0x4cc>
   848a0:	990a      	ldr	r1, [sp, #40]	; 0x28
   848a2:	9a08      	ldr	r2, [sp, #32]
   848a4:	4620      	mov	r0, r4
   848a6:	f001 ff41 	bl	8672c <__lshift>
   848aa:	900a      	str	r0, [sp, #40]	; 0x28
   848ac:	9a06      	ldr	r2, [sp, #24]
   848ae:	2a00      	cmp	r2, #0
   848b0:	dd04      	ble.n	848bc <_dtoa_r+0x4dc>
   848b2:	4641      	mov	r1, r8
   848b4:	4620      	mov	r0, r4
   848b6:	f001 ff39 	bl	8672c <__lshift>
   848ba:	4680      	mov	r8, r0
   848bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   848be:	2b00      	cmp	r3, #0
   848c0:	f040 826a 	bne.w	84d98 <_dtoa_r+0x9b8>
   848c4:	f1b9 0f00 	cmp.w	r9, #0
   848c8:	f340 82a6 	ble.w	84e18 <_dtoa_r+0xa38>
   848cc:	980b      	ldr	r0, [sp, #44]	; 0x2c
   848ce:	2800      	cmp	r0, #0
   848d0:	f040 8088 	bne.w	849e4 <_dtoa_r+0x604>
   848d4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   848d6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   848d8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   848dc:	e006      	b.n	848ec <_dtoa_r+0x50c>
   848de:	4639      	mov	r1, r7
   848e0:	4620      	mov	r0, r4
   848e2:	220a      	movs	r2, #10
   848e4:	2300      	movs	r3, #0
   848e6:	f001 fd93 	bl	86410 <__multadd>
   848ea:	4607      	mov	r7, r0
   848ec:	4638      	mov	r0, r7
   848ee:	4641      	mov	r1, r8
   848f0:	f7ff fcda 	bl	842a8 <quorem>
   848f4:	3030      	adds	r0, #48	; 0x30
   848f6:	f80b 0005 	strb.w	r0, [fp, r5]
   848fa:	3501      	adds	r5, #1
   848fc:	45a9      	cmp	r9, r5
   848fe:	dcee      	bgt.n	848de <_dtoa_r+0x4fe>
   84900:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   84904:	4682      	mov	sl, r0
   84906:	970a      	str	r7, [sp, #40]	; 0x28
   84908:	f1b9 0f01 	cmp.w	r9, #1
   8490c:	bfac      	ite	ge
   8490e:	44cb      	addge	fp, r9
   84910:	f10b 0b01 	addlt.w	fp, fp, #1
   84914:	2500      	movs	r5, #0
   84916:	990a      	ldr	r1, [sp, #40]	; 0x28
   84918:	2201      	movs	r2, #1
   8491a:	4620      	mov	r0, r4
   8491c:	f001 ff06 	bl	8672c <__lshift>
   84920:	4641      	mov	r1, r8
   84922:	900a      	str	r0, [sp, #40]	; 0x28
   84924:	f001 ff60 	bl	867e8 <__mcmp>
   84928:	2800      	cmp	r0, #0
   8492a:	f340 8309 	ble.w	84f40 <_dtoa_r+0xb60>
   8492e:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
   84932:	9909      	ldr	r1, [sp, #36]	; 0x24
   84934:	e005      	b.n	84942 <_dtoa_r+0x562>
   84936:	4299      	cmp	r1, r3
   84938:	f000 828b 	beq.w	84e52 <_dtoa_r+0xa72>
   8493c:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   84940:	469b      	mov	fp, r3
   84942:	2a39      	cmp	r2, #57	; 0x39
   84944:	f10b 33ff 	add.w	r3, fp, #4294967295
   84948:	d0f5      	beq.n	84936 <_dtoa_r+0x556>
   8494a:	3201      	adds	r2, #1
   8494c:	701a      	strb	r2, [r3, #0]
   8494e:	4641      	mov	r1, r8
   84950:	4620      	mov	r0, r4
   84952:	f001 fd53 	bl	863fc <_Bfree>
   84956:	2e00      	cmp	r6, #0
   84958:	f43f af0f 	beq.w	8477a <_dtoa_r+0x39a>
   8495c:	b12d      	cbz	r5, 8496a <_dtoa_r+0x58a>
   8495e:	42b5      	cmp	r5, r6
   84960:	d003      	beq.n	8496a <_dtoa_r+0x58a>
   84962:	4629      	mov	r1, r5
   84964:	4620      	mov	r0, r4
   84966:	f001 fd49 	bl	863fc <_Bfree>
   8496a:	4631      	mov	r1, r6
   8496c:	4620      	mov	r0, r4
   8496e:	f001 fd45 	bl	863fc <_Bfree>
   84972:	e702      	b.n	8477a <_dtoa_r+0x39a>
   84974:	2601      	movs	r6, #1
   84976:	960e      	str	r6, [sp, #56]	; 0x38
   84978:	e5ea      	b.n	84550 <_dtoa_r+0x170>
   8497a:	9807      	ldr	r0, [sp, #28]
   8497c:	f7fc fe5e 	bl	8163c <__aeabi_i2d>
   84980:	4632      	mov	r2, r6
   84982:	463b      	mov	r3, r7
   84984:	f7fd f928 	bl	81bd8 <__aeabi_dcmpeq>
   84988:	2800      	cmp	r0, #0
   8498a:	f47f adcd 	bne.w	84528 <_dtoa_r+0x148>
   8498e:	9e07      	ldr	r6, [sp, #28]
   84990:	3e01      	subs	r6, #1
   84992:	9607      	str	r6, [sp, #28]
   84994:	e5c8      	b.n	84528 <_dtoa_r+0x148>
   84996:	9e07      	ldr	r6, [sp, #28]
   84998:	9d08      	ldr	r5, [sp, #32]
   8499a:	1bad      	subs	r5, r5, r6
   8499c:	9508      	str	r5, [sp, #32]
   8499e:	4275      	negs	r5, r6
   849a0:	2600      	movs	r6, #0
   849a2:	950c      	str	r5, [sp, #48]	; 0x30
   849a4:	960d      	str	r6, [sp, #52]	; 0x34
   849a6:	e5e5      	b.n	84574 <_dtoa_r+0x194>
   849a8:	426d      	negs	r5, r5
   849aa:	2600      	movs	r6, #0
   849ac:	9508      	str	r5, [sp, #32]
   849ae:	9606      	str	r6, [sp, #24]
   849b0:	e5d6      	b.n	84560 <_dtoa_r+0x180>
   849b2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   849b4:	9d08      	ldr	r5, [sp, #32]
   849b6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
   849b8:	e714      	b.n	847e4 <_dtoa_r+0x404>
   849ba:	bf00      	nop
   849bc:	40240000 	.word	0x40240000
   849c0:	231c      	movs	r3, #28
   849c2:	f8dd e020 	ldr.w	lr, [sp, #32]
   849c6:	9806      	ldr	r0, [sp, #24]
   849c8:	449e      	add	lr, r3
   849ca:	4418      	add	r0, r3
   849cc:	f8cd e020 	str.w	lr, [sp, #32]
   849d0:	441d      	add	r5, r3
   849d2:	9006      	str	r0, [sp, #24]
   849d4:	e761      	b.n	8489a <_dtoa_r+0x4ba>
   849d6:	48a7      	ldr	r0, [pc, #668]	; (84c74 <_dtoa_r+0x894>)
   849d8:	1b40      	subs	r0, r0, r5
   849da:	fa0a f000 	lsl.w	r0, sl, r0
   849de:	e56f      	b.n	844c0 <_dtoa_r+0xe0>
   849e0:	900e      	str	r0, [sp, #56]	; 0x38
   849e2:	e5b5      	b.n	84550 <_dtoa_r+0x170>
   849e4:	2d00      	cmp	r5, #0
   849e6:	dd05      	ble.n	849f4 <_dtoa_r+0x614>
   849e8:	4631      	mov	r1, r6
   849ea:	462a      	mov	r2, r5
   849ec:	4620      	mov	r0, r4
   849ee:	f001 fe9d 	bl	8672c <__lshift>
   849f2:	4606      	mov	r6, r0
   849f4:	2f00      	cmp	r7, #0
   849f6:	f040 82e9 	bne.w	84fcc <_dtoa_r+0xbec>
   849fa:	4637      	mov	r7, r6
   849fc:	9d09      	ldr	r5, [sp, #36]	; 0x24
   849fe:	9809      	ldr	r0, [sp, #36]	; 0x24
   84a00:	444d      	add	r5, r9
   84a02:	9508      	str	r5, [sp, #32]
   84a04:	f00a 0501 	and.w	r5, sl, #1
   84a08:	950b      	str	r5, [sp, #44]	; 0x2c
   84a0a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   84a0e:	1c45      	adds	r5, r0, #1
   84a10:	e00a      	b.n	84a28 <_dtoa_r+0x648>
   84a12:	f001 fcfd 	bl	86410 <__multadd>
   84a16:	4639      	mov	r1, r7
   84a18:	4606      	mov	r6, r0
   84a1a:	220a      	movs	r2, #10
   84a1c:	4620      	mov	r0, r4
   84a1e:	2300      	movs	r3, #0
   84a20:	f001 fcf6 	bl	86410 <__multadd>
   84a24:	4607      	mov	r7, r0
   84a26:	3501      	adds	r5, #1
   84a28:	4641      	mov	r1, r8
   84a2a:	4648      	mov	r0, r9
   84a2c:	f7ff fc3c 	bl	842a8 <quorem>
   84a30:	4631      	mov	r1, r6
   84a32:	4683      	mov	fp, r0
   84a34:	4648      	mov	r0, r9
   84a36:	f001 fed7 	bl	867e8 <__mcmp>
   84a3a:	4641      	mov	r1, r8
   84a3c:	9003      	str	r0, [sp, #12]
   84a3e:	463a      	mov	r2, r7
   84a40:	4620      	mov	r0, r4
   84a42:	f001 fef5 	bl	86830 <__mdiff>
   84a46:	68c2      	ldr	r2, [r0, #12]
   84a48:	1e69      	subs	r1, r5, #1
   84a4a:	4603      	mov	r3, r0
   84a4c:	f10b 0a30 	add.w	sl, fp, #48	; 0x30
   84a50:	9106      	str	r1, [sp, #24]
   84a52:	2a00      	cmp	r2, #0
   84a54:	f040 8193 	bne.w	84d7e <_dtoa_r+0x99e>
   84a58:	4619      	mov	r1, r3
   84a5a:	4648      	mov	r0, r9
   84a5c:	9302      	str	r3, [sp, #8]
   84a5e:	f001 fec3 	bl	867e8 <__mcmp>
   84a62:	9b02      	ldr	r3, [sp, #8]
   84a64:	4602      	mov	r2, r0
   84a66:	4619      	mov	r1, r3
   84a68:	4620      	mov	r0, r4
   84a6a:	9202      	str	r2, [sp, #8]
   84a6c:	f001 fcc6 	bl	863fc <_Bfree>
   84a70:	9a02      	ldr	r2, [sp, #8]
   84a72:	b92a      	cbnz	r2, 84a80 <_dtoa_r+0x6a0>
   84a74:	9b24      	ldr	r3, [sp, #144]	; 0x90
   84a76:	b91b      	cbnz	r3, 84a80 <_dtoa_r+0x6a0>
   84a78:	980b      	ldr	r0, [sp, #44]	; 0x2c
   84a7a:	2800      	cmp	r0, #0
   84a7c:	f000 8393 	beq.w	851a6 <_dtoa_r+0xdc6>
   84a80:	9b03      	ldr	r3, [sp, #12]
   84a82:	2b00      	cmp	r3, #0
   84a84:	f2c0 8234 	blt.w	84ef0 <_dtoa_r+0xb10>
   84a88:	d105      	bne.n	84a96 <_dtoa_r+0x6b6>
   84a8a:	9824      	ldr	r0, [sp, #144]	; 0x90
   84a8c:	b918      	cbnz	r0, 84a96 <_dtoa_r+0x6b6>
   84a8e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84a90:	2900      	cmp	r1, #0
   84a92:	f000 822d 	beq.w	84ef0 <_dtoa_r+0xb10>
   84a96:	2a00      	cmp	r2, #0
   84a98:	f300 82ac 	bgt.w	84ff4 <_dtoa_r+0xc14>
   84a9c:	f8dd e020 	ldr.w	lr, [sp, #32]
   84aa0:	f805 ac01 	strb.w	sl, [r5, #-1]
   84aa4:	4575      	cmp	r5, lr
   84aa6:	46ab      	mov	fp, r5
   84aa8:	f000 82b4 	beq.w	85014 <_dtoa_r+0xc34>
   84aac:	4649      	mov	r1, r9
   84aae:	220a      	movs	r2, #10
   84ab0:	2300      	movs	r3, #0
   84ab2:	4620      	mov	r0, r4
   84ab4:	f001 fcac 	bl	86410 <__multadd>
   84ab8:	42be      	cmp	r6, r7
   84aba:	4681      	mov	r9, r0
   84abc:	4631      	mov	r1, r6
   84abe:	4620      	mov	r0, r4
   84ac0:	f04f 020a 	mov.w	r2, #10
   84ac4:	f04f 0300 	mov.w	r3, #0
   84ac8:	d1a3      	bne.n	84a12 <_dtoa_r+0x632>
   84aca:	f001 fca1 	bl	86410 <__multadd>
   84ace:	4606      	mov	r6, r0
   84ad0:	4607      	mov	r7, r0
   84ad2:	e7a8      	b.n	84a26 <_dtoa_r+0x646>
   84ad4:	2600      	movs	r6, #0
   84ad6:	960b      	str	r6, [sp, #44]	; 0x2c
   84ad8:	9e07      	ldr	r6, [sp, #28]
   84ada:	f8dd e094 	ldr.w	lr, [sp, #148]	; 0x94
   84ade:	44b6      	add	lr, r6
   84ae0:	f10e 0901 	add.w	r9, lr, #1
   84ae4:	f1b9 0f00 	cmp.w	r9, #0
   84ae8:	f8cd e03c 	str.w	lr, [sp, #60]	; 0x3c
   84aec:	464e      	mov	r6, r9
   84aee:	f340 8150 	ble.w	84d92 <_dtoa_r+0x9b2>
   84af2:	2100      	movs	r1, #0
   84af4:	2e17      	cmp	r6, #23
   84af6:	6461      	str	r1, [r4, #68]	; 0x44
   84af8:	d90a      	bls.n	84b10 <_dtoa_r+0x730>
   84afa:	2201      	movs	r2, #1
   84afc:	2304      	movs	r3, #4
   84afe:	005b      	lsls	r3, r3, #1
   84b00:	f103 0014 	add.w	r0, r3, #20
   84b04:	42b0      	cmp	r0, r6
   84b06:	4611      	mov	r1, r2
   84b08:	f102 0201 	add.w	r2, r2, #1
   84b0c:	d9f7      	bls.n	84afe <_dtoa_r+0x71e>
   84b0e:	6461      	str	r1, [r4, #68]	; 0x44
   84b10:	4620      	mov	r0, r4
   84b12:	f001 fc4d 	bl	863b0 <_Balloc>
   84b16:	2e0e      	cmp	r6, #14
   84b18:	9009      	str	r0, [sp, #36]	; 0x24
   84b1a:	6420      	str	r0, [r4, #64]	; 0x40
   84b1c:	f63f ad6c 	bhi.w	845f8 <_dtoa_r+0x218>
   84b20:	2d00      	cmp	r5, #0
   84b22:	f43f ad69 	beq.w	845f8 <_dtoa_r+0x218>
   84b26:	9d07      	ldr	r5, [sp, #28]
   84b28:	e9cd ab12 	strd	sl, fp, [sp, #72]	; 0x48
   84b2c:	2d00      	cmp	r5, #0
   84b2e:	f340 821c 	ble.w	84f6a <_dtoa_r+0xb8a>
   84b32:	4b51      	ldr	r3, [pc, #324]	; (84c78 <_dtoa_r+0x898>)
   84b34:	f005 020f 	and.w	r2, r5, #15
   84b38:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   84b3c:	112d      	asrs	r5, r5, #4
   84b3e:	e9d3 6700 	ldrd	r6, r7, [r3]
   84b42:	06eb      	lsls	r3, r5, #27
   84b44:	f140 81cd 	bpl.w	84ee2 <_dtoa_r+0xb02>
   84b48:	4b4c      	ldr	r3, [pc, #304]	; (84c7c <_dtoa_r+0x89c>)
   84b4a:	4650      	mov	r0, sl
   84b4c:	4659      	mov	r1, fp
   84b4e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   84b52:	f7fc ff03 	bl	8195c <__aeabi_ddiv>
   84b56:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   84b5a:	f005 050f 	and.w	r5, r5, #15
   84b5e:	f04f 0803 	mov.w	r8, #3
   84b62:	b18d      	cbz	r5, 84b88 <_dtoa_r+0x7a8>
   84b64:	f8df a114 	ldr.w	sl, [pc, #276]	; 84c7c <_dtoa_r+0x89c>
   84b68:	4630      	mov	r0, r6
   84b6a:	4639      	mov	r1, r7
   84b6c:	07ee      	lsls	r6, r5, #31
   84b6e:	d505      	bpl.n	84b7c <_dtoa_r+0x79c>
   84b70:	e9da 2300 	ldrd	r2, r3, [sl]
   84b74:	f108 0801 	add.w	r8, r8, #1
   84b78:	f7fc fdc6 	bl	81708 <__aeabi_dmul>
   84b7c:	106d      	asrs	r5, r5, #1
   84b7e:	f10a 0a08 	add.w	sl, sl, #8
   84b82:	d1f3      	bne.n	84b6c <_dtoa_r+0x78c>
   84b84:	4606      	mov	r6, r0
   84b86:	460f      	mov	r7, r1
   84b88:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   84b8c:	4632      	mov	r2, r6
   84b8e:	463b      	mov	r3, r7
   84b90:	f7fc fee4 	bl	8195c <__aeabi_ddiv>
   84b94:	4682      	mov	sl, r0
   84b96:	468b      	mov	fp, r1
   84b98:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   84b9a:	b145      	cbz	r5, 84bae <_dtoa_r+0x7ce>
   84b9c:	4650      	mov	r0, sl
   84b9e:	4659      	mov	r1, fp
   84ba0:	2200      	movs	r2, #0
   84ba2:	4b37      	ldr	r3, [pc, #220]	; (84c80 <_dtoa_r+0x8a0>)
   84ba4:	f7fd f822 	bl	81bec <__aeabi_dcmplt>
   84ba8:	2800      	cmp	r0, #0
   84baa:	f040 82aa 	bne.w	85102 <_dtoa_r+0xd22>
   84bae:	4640      	mov	r0, r8
   84bb0:	f7fc fd44 	bl	8163c <__aeabi_i2d>
   84bb4:	4652      	mov	r2, sl
   84bb6:	465b      	mov	r3, fp
   84bb8:	f7fc fda6 	bl	81708 <__aeabi_dmul>
   84bbc:	2200      	movs	r2, #0
   84bbe:	4b31      	ldr	r3, [pc, #196]	; (84c84 <_dtoa_r+0x8a4>)
   84bc0:	f7fc fbf0 	bl	813a4 <__adddf3>
   84bc4:	4606      	mov	r6, r0
   84bc6:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   84bca:	f1b9 0f00 	cmp.w	r9, #0
   84bce:	f000 815a 	beq.w	84e86 <_dtoa_r+0xaa6>
   84bd2:	9d07      	ldr	r5, [sp, #28]
   84bd4:	46c8      	mov	r8, r9
   84bd6:	9517      	str	r5, [sp, #92]	; 0x5c
   84bd8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   84bda:	2d00      	cmp	r5, #0
   84bdc:	f000 8223 	beq.w	85026 <_dtoa_r+0xc46>
   84be0:	4b25      	ldr	r3, [pc, #148]	; (84c78 <_dtoa_r+0x898>)
   84be2:	2000      	movs	r0, #0
   84be4:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
   84be8:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   84bec:	4926      	ldr	r1, [pc, #152]	; (84c88 <_dtoa_r+0x8a8>)
   84bee:	f7fc feb5 	bl	8195c <__aeabi_ddiv>
   84bf2:	4632      	mov	r2, r6
   84bf4:	463b      	mov	r3, r7
   84bf6:	f7fc fbd3 	bl	813a0 <__aeabi_dsub>
   84bfa:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   84bfe:	4659      	mov	r1, fp
   84c00:	4650      	mov	r0, sl
   84c02:	f7fd f81b 	bl	81c3c <__aeabi_d2iz>
   84c06:	4605      	mov	r5, r0
   84c08:	f7fc fd18 	bl	8163c <__aeabi_i2d>
   84c0c:	4602      	mov	r2, r0
   84c0e:	460b      	mov	r3, r1
   84c10:	4650      	mov	r0, sl
   84c12:	4659      	mov	r1, fp
   84c14:	f7fc fbc4 	bl	813a0 <__aeabi_dsub>
   84c18:	3530      	adds	r5, #48	; 0x30
   84c1a:	9e09      	ldr	r6, [sp, #36]	; 0x24
   84c1c:	e9cd 0104 	strd	r0, r1, [sp, #16]
   84c20:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   84c24:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   84c28:	b2ed      	uxtb	r5, r5
   84c2a:	7035      	strb	r5, [r6, #0]
   84c2c:	f106 0b01 	add.w	fp, r6, #1
   84c30:	f7fc fffa 	bl	81c28 <__aeabi_dcmpgt>
   84c34:	2800      	cmp	r0, #0
   84c36:	f040 82ab 	bne.w	85190 <_dtoa_r+0xdb0>
   84c3a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   84c3e:	2000      	movs	r0, #0
   84c40:	490f      	ldr	r1, [pc, #60]	; (84c80 <_dtoa_r+0x8a0>)
   84c42:	f7fc fbad 	bl	813a0 <__aeabi_dsub>
   84c46:	4602      	mov	r2, r0
   84c48:	460b      	mov	r3, r1
   84c4a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   84c4e:	f7fc ffeb 	bl	81c28 <__aeabi_dcmpgt>
   84c52:	2800      	cmp	r0, #0
   84c54:	f040 82a2 	bne.w	8519c <_dtoa_r+0xdbc>
   84c58:	f1b8 0f01 	cmp.w	r8, #1
   84c5c:	f340 8181 	ble.w	84f62 <_dtoa_r+0xb82>
   84c60:	44b0      	add	r8, r6
   84c62:	f8cd 9050 	str.w	r9, [sp, #80]	; 0x50
   84c66:	46a2      	mov	sl, r4
   84c68:	46c1      	mov	r9, r8
   84c6a:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   84c6e:	e9dd 4510 	ldrd	r4, r5, [sp, #64]	; 0x40
   84c72:	e019      	b.n	84ca8 <_dtoa_r+0x8c8>
   84c74:	fffffbee 	.word	0xfffffbee
   84c78:	000879e8 	.word	0x000879e8
   84c7c:	00087ab0 	.word	0x00087ab0
   84c80:	3ff00000 	.word	0x3ff00000
   84c84:	401c0000 	.word	0x401c0000
   84c88:	3fe00000 	.word	0x3fe00000
   84c8c:	2000      	movs	r0, #0
   84c8e:	49a8      	ldr	r1, [pc, #672]	; (84f30 <_dtoa_r+0xb50>)
   84c90:	f7fc fb86 	bl	813a0 <__aeabi_dsub>
   84c94:	4622      	mov	r2, r4
   84c96:	462b      	mov	r3, r5
   84c98:	f7fc ffa8 	bl	81bec <__aeabi_dcmplt>
   84c9c:	2800      	cmp	r0, #0
   84c9e:	f040 827b 	bne.w	85198 <_dtoa_r+0xdb8>
   84ca2:	45cb      	cmp	fp, r9
   84ca4:	f000 815a 	beq.w	84f5c <_dtoa_r+0xb7c>
   84ca8:	4620      	mov	r0, r4
   84caa:	4629      	mov	r1, r5
   84cac:	2200      	movs	r2, #0
   84cae:	4ba1      	ldr	r3, [pc, #644]	; (84f34 <_dtoa_r+0xb54>)
   84cb0:	f7fc fd2a 	bl	81708 <__aeabi_dmul>
   84cb4:	2200      	movs	r2, #0
   84cb6:	4b9f      	ldr	r3, [pc, #636]	; (84f34 <_dtoa_r+0xb54>)
   84cb8:	4604      	mov	r4, r0
   84cba:	460d      	mov	r5, r1
   84cbc:	4630      	mov	r0, r6
   84cbe:	4639      	mov	r1, r7
   84cc0:	f7fc fd22 	bl	81708 <__aeabi_dmul>
   84cc4:	460f      	mov	r7, r1
   84cc6:	4606      	mov	r6, r0
   84cc8:	f7fc ffb8 	bl	81c3c <__aeabi_d2iz>
   84ccc:	4680      	mov	r8, r0
   84cce:	f7fc fcb5 	bl	8163c <__aeabi_i2d>
   84cd2:	4602      	mov	r2, r0
   84cd4:	460b      	mov	r3, r1
   84cd6:	4630      	mov	r0, r6
   84cd8:	4639      	mov	r1, r7
   84cda:	f7fc fb61 	bl	813a0 <__aeabi_dsub>
   84cde:	f108 0830 	add.w	r8, r8, #48	; 0x30
   84ce2:	fa5f f888 	uxtb.w	r8, r8
   84ce6:	4622      	mov	r2, r4
   84ce8:	462b      	mov	r3, r5
   84cea:	f80b 8b01 	strb.w	r8, [fp], #1
   84cee:	4606      	mov	r6, r0
   84cf0:	460f      	mov	r7, r1
   84cf2:	f7fc ff7b 	bl	81bec <__aeabi_dcmplt>
   84cf6:	4632      	mov	r2, r6
   84cf8:	463b      	mov	r3, r7
   84cfa:	2800      	cmp	r0, #0
   84cfc:	d0c6      	beq.n	84c8c <_dtoa_r+0x8ac>
   84cfe:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   84d00:	4654      	mov	r4, sl
   84d02:	9607      	str	r6, [sp, #28]
   84d04:	e539      	b.n	8477a <_dtoa_r+0x39a>
   84d06:	2600      	movs	r6, #0
   84d08:	960b      	str	r6, [sp, #44]	; 0x2c
   84d0a:	9825      	ldr	r0, [sp, #148]	; 0x94
   84d0c:	2800      	cmp	r0, #0
   84d0e:	dd3c      	ble.n	84d8a <_dtoa_r+0x9aa>
   84d10:	4606      	mov	r6, r0
   84d12:	900f      	str	r0, [sp, #60]	; 0x3c
   84d14:	4681      	mov	r9, r0
   84d16:	e6ec      	b.n	84af2 <_dtoa_r+0x712>
   84d18:	2601      	movs	r6, #1
   84d1a:	960b      	str	r6, [sp, #44]	; 0x2c
   84d1c:	e7f5      	b.n	84d0a <_dtoa_r+0x92a>
   84d1e:	f1b9 0f00 	cmp.w	r9, #0
   84d22:	f73f ac7c 	bgt.w	8461e <_dtoa_r+0x23e>
   84d26:	f040 80c6 	bne.w	84eb6 <_dtoa_r+0xad6>
   84d2a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   84d2e:	2200      	movs	r2, #0
   84d30:	4b81      	ldr	r3, [pc, #516]	; (84f38 <_dtoa_r+0xb58>)
   84d32:	f7fc fce9 	bl	81708 <__aeabi_dmul>
   84d36:	4652      	mov	r2, sl
   84d38:	465b      	mov	r3, fp
   84d3a:	f7fc ff6b 	bl	81c14 <__aeabi_dcmpge>
   84d3e:	46c8      	mov	r8, r9
   84d40:	464e      	mov	r6, r9
   84d42:	2800      	cmp	r0, #0
   84d44:	d07c      	beq.n	84e40 <_dtoa_r+0xa60>
   84d46:	9d25      	ldr	r5, [sp, #148]	; 0x94
   84d48:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   84d4c:	43ed      	mvns	r5, r5
   84d4e:	9507      	str	r5, [sp, #28]
   84d50:	4641      	mov	r1, r8
   84d52:	4620      	mov	r0, r4
   84d54:	f001 fb52 	bl	863fc <_Bfree>
   84d58:	2e00      	cmp	r6, #0
   84d5a:	f47f ae06 	bne.w	8496a <_dtoa_r+0x58a>
   84d5e:	e50c      	b.n	8477a <_dtoa_r+0x39a>
   84d60:	990a      	ldr	r1, [sp, #40]	; 0x28
   84d62:	4620      	mov	r0, r4
   84d64:	f001 fc94 	bl	86690 <__pow5mult>
   84d68:	900a      	str	r0, [sp, #40]	; 0x28
   84d6a:	e56a      	b.n	84842 <_dtoa_r+0x462>
   84d6c:	9d16      	ldr	r5, [sp, #88]	; 0x58
   84d6e:	2d00      	cmp	r5, #0
   84d70:	f000 81b8 	beq.w	850e4 <_dtoa_r+0xd04>
   84d74:	f203 4333 	addw	r3, r3, #1075	; 0x433
   84d78:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   84d7a:	9d08      	ldr	r5, [sp, #32]
   84d7c:	e527      	b.n	847ce <_dtoa_r+0x3ee>
   84d7e:	4601      	mov	r1, r0
   84d80:	4620      	mov	r0, r4
   84d82:	f001 fb3b 	bl	863fc <_Bfree>
   84d86:	2201      	movs	r2, #1
   84d88:	e67a      	b.n	84a80 <_dtoa_r+0x6a0>
   84d8a:	2601      	movs	r6, #1
   84d8c:	9625      	str	r6, [sp, #148]	; 0x94
   84d8e:	960f      	str	r6, [sp, #60]	; 0x3c
   84d90:	46b1      	mov	r9, r6
   84d92:	2100      	movs	r1, #0
   84d94:	6461      	str	r1, [r4, #68]	; 0x44
   84d96:	e6bb      	b.n	84b10 <_dtoa_r+0x730>
   84d98:	980a      	ldr	r0, [sp, #40]	; 0x28
   84d9a:	4641      	mov	r1, r8
   84d9c:	f001 fd24 	bl	867e8 <__mcmp>
   84da0:	2800      	cmp	r0, #0
   84da2:	f6bf ad8f 	bge.w	848c4 <_dtoa_r+0x4e4>
   84da6:	f8dd e01c 	ldr.w	lr, [sp, #28]
   84daa:	990a      	ldr	r1, [sp, #40]	; 0x28
   84dac:	f10e 3eff 	add.w	lr, lr, #4294967295
   84db0:	4620      	mov	r0, r4
   84db2:	220a      	movs	r2, #10
   84db4:	2300      	movs	r3, #0
   84db6:	f8cd e01c 	str.w	lr, [sp, #28]
   84dba:	f001 fb29 	bl	86410 <__multadd>
   84dbe:	900a      	str	r0, [sp, #40]	; 0x28
   84dc0:	980b      	ldr	r0, [sp, #44]	; 0x2c
   84dc2:	2800      	cmp	r0, #0
   84dc4:	f040 8209 	bne.w	851da <_dtoa_r+0xdfa>
   84dc8:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
   84dcc:	e57a      	b.n	848c4 <_dtoa_r+0x4e4>
   84dce:	f8d8 3010 	ldr.w	r3, [r8, #16]
   84dd2:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   84dd6:	6918      	ldr	r0, [r3, #16]
   84dd8:	f001 fb64 	bl	864a4 <__hi0bits>
   84ddc:	f1c0 0020 	rsb	r0, r0, #32
   84de0:	e547      	b.n	84872 <_dtoa_r+0x492>
   84de2:	9809      	ldr	r0, [sp, #36]	; 0x24
   84de4:	f7ff bb2c 	b.w	84440 <_dtoa_r+0x60>
   84de8:	f1ba 0f00 	cmp.w	sl, #0
   84dec:	f47f ad3b 	bne.w	84866 <_dtoa_r+0x486>
   84df0:	f3cb 0313 	ubfx	r3, fp, #0, #20
   84df4:	2b00      	cmp	r3, #0
   84df6:	f040 817c 	bne.w	850f2 <_dtoa_r+0xd12>
   84dfa:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   84dfe:	0d3f      	lsrs	r7, r7, #20
   84e00:	053f      	lsls	r7, r7, #20
   84e02:	2f00      	cmp	r7, #0
   84e04:	f43f ad30 	beq.w	84868 <_dtoa_r+0x488>
   84e08:	9a08      	ldr	r2, [sp, #32]
   84e0a:	9b06      	ldr	r3, [sp, #24]
   84e0c:	3201      	adds	r2, #1
   84e0e:	3301      	adds	r3, #1
   84e10:	9208      	str	r2, [sp, #32]
   84e12:	9306      	str	r3, [sp, #24]
   84e14:	2701      	movs	r7, #1
   84e16:	e527      	b.n	84868 <_dtoa_r+0x488>
   84e18:	9924      	ldr	r1, [sp, #144]	; 0x90
   84e1a:	2902      	cmp	r1, #2
   84e1c:	f77f ad56 	ble.w	848cc <_dtoa_r+0x4ec>
   84e20:	f1b9 0f00 	cmp.w	r9, #0
   84e24:	d18f      	bne.n	84d46 <_dtoa_r+0x966>
   84e26:	4641      	mov	r1, r8
   84e28:	464b      	mov	r3, r9
   84e2a:	2205      	movs	r2, #5
   84e2c:	4620      	mov	r0, r4
   84e2e:	f001 faef 	bl	86410 <__multadd>
   84e32:	4680      	mov	r8, r0
   84e34:	4641      	mov	r1, r8
   84e36:	980a      	ldr	r0, [sp, #40]	; 0x28
   84e38:	f001 fcd6 	bl	867e8 <__mcmp>
   84e3c:	2800      	cmp	r0, #0
   84e3e:	dd82      	ble.n	84d46 <_dtoa_r+0x966>
   84e40:	9d07      	ldr	r5, [sp, #28]
   84e42:	2331      	movs	r3, #49	; 0x31
   84e44:	3501      	adds	r5, #1
   84e46:	9507      	str	r5, [sp, #28]
   84e48:	9d09      	ldr	r5, [sp, #36]	; 0x24
   84e4a:	702b      	strb	r3, [r5, #0]
   84e4c:	f105 0b01 	add.w	fp, r5, #1
   84e50:	e77e      	b.n	84d50 <_dtoa_r+0x970>
   84e52:	9807      	ldr	r0, [sp, #28]
   84e54:	9909      	ldr	r1, [sp, #36]	; 0x24
   84e56:	2331      	movs	r3, #49	; 0x31
   84e58:	3001      	adds	r0, #1
   84e5a:	9007      	str	r0, [sp, #28]
   84e5c:	700b      	strb	r3, [r1, #0]
   84e5e:	e576      	b.n	8494e <_dtoa_r+0x56e>
   84e60:	46a3      	mov	fp, r4
   84e62:	9c03      	ldr	r4, [sp, #12]
   84e64:	e489      	b.n	8477a <_dtoa_r+0x39a>
   84e66:	4640      	mov	r0, r8
   84e68:	f7fc fbe8 	bl	8163c <__aeabi_i2d>
   84e6c:	4602      	mov	r2, r0
   84e6e:	460b      	mov	r3, r1
   84e70:	4650      	mov	r0, sl
   84e72:	4659      	mov	r1, fp
   84e74:	f7fc fc48 	bl	81708 <__aeabi_dmul>
   84e78:	2200      	movs	r2, #0
   84e7a:	4b30      	ldr	r3, [pc, #192]	; (84f3c <_dtoa_r+0xb5c>)
   84e7c:	f7fc fa92 	bl	813a4 <__adddf3>
   84e80:	4606      	mov	r6, r0
   84e82:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   84e86:	4650      	mov	r0, sl
   84e88:	4659      	mov	r1, fp
   84e8a:	2200      	movs	r2, #0
   84e8c:	4b2a      	ldr	r3, [pc, #168]	; (84f38 <_dtoa_r+0xb58>)
   84e8e:	f7fc fa87 	bl	813a0 <__aeabi_dsub>
   84e92:	4632      	mov	r2, r6
   84e94:	463b      	mov	r3, r7
   84e96:	4682      	mov	sl, r0
   84e98:	468b      	mov	fp, r1
   84e9a:	f7fc fec5 	bl	81c28 <__aeabi_dcmpgt>
   84e9e:	2800      	cmp	r0, #0
   84ea0:	f040 80bd 	bne.w	8501e <_dtoa_r+0xc3e>
   84ea4:	4632      	mov	r2, r6
   84ea6:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
   84eaa:	4650      	mov	r0, sl
   84eac:	4659      	mov	r1, fp
   84eae:	f7fc fe9d 	bl	81bec <__aeabi_dcmplt>
   84eb2:	2800      	cmp	r0, #0
   84eb4:	d055      	beq.n	84f62 <_dtoa_r+0xb82>
   84eb6:	f04f 0800 	mov.w	r8, #0
   84eba:	4646      	mov	r6, r8
   84ebc:	e743      	b.n	84d46 <_dtoa_r+0x966>
   84ebe:	990a      	ldr	r1, [sp, #40]	; 0x28
   84ec0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   84ec2:	4620      	mov	r0, r4
   84ec4:	f001 fbe4 	bl	86690 <__pow5mult>
   84ec8:	900a      	str	r0, [sp, #40]	; 0x28
   84eca:	e4ba      	b.n	84842 <_dtoa_r+0x462>
   84ecc:	2601      	movs	r6, #1
   84ece:	960b      	str	r6, [sp, #44]	; 0x2c
   84ed0:	e602      	b.n	84ad8 <_dtoa_r+0x6f8>
   84ed2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   84ed4:	9e0d      	ldr	r6, [sp, #52]	; 0x34
   84ed6:	1b7b      	subs	r3, r7, r5
   84ed8:	441e      	add	r6, r3
   84eda:	970c      	str	r7, [sp, #48]	; 0x30
   84edc:	960d      	str	r6, [sp, #52]	; 0x34
   84ede:	2700      	movs	r7, #0
   84ee0:	e46f      	b.n	847c2 <_dtoa_r+0x3e2>
   84ee2:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   84ee6:	f04f 0802 	mov.w	r8, #2
   84eea:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   84eee:	e638      	b.n	84b62 <_dtoa_r+0x782>
   84ef0:	2a00      	cmp	r2, #0
   84ef2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   84ef6:	46d9      	mov	r9, fp
   84ef8:	dd11      	ble.n	84f1e <_dtoa_r+0xb3e>
   84efa:	990a      	ldr	r1, [sp, #40]	; 0x28
   84efc:	2201      	movs	r2, #1
   84efe:	4620      	mov	r0, r4
   84f00:	f001 fc14 	bl	8672c <__lshift>
   84f04:	4641      	mov	r1, r8
   84f06:	900a      	str	r0, [sp, #40]	; 0x28
   84f08:	f001 fc6e 	bl	867e8 <__mcmp>
   84f0c:	2800      	cmp	r0, #0
   84f0e:	f340 815d 	ble.w	851cc <_dtoa_r+0xdec>
   84f12:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   84f16:	f000 811b 	beq.w	85150 <_dtoa_r+0xd70>
   84f1a:	f109 0a31 	add.w	sl, r9, #49	; 0x31
   84f1e:	9b06      	ldr	r3, [sp, #24]
   84f20:	4635      	mov	r5, r6
   84f22:	f883 a000 	strb.w	sl, [r3]
   84f26:	f103 0b01 	add.w	fp, r3, #1
   84f2a:	463e      	mov	r6, r7
   84f2c:	e50f      	b.n	8494e <_dtoa_r+0x56e>
   84f2e:	bf00      	nop
   84f30:	3ff00000 	.word	0x3ff00000
   84f34:	40240000 	.word	0x40240000
   84f38:	40140000 	.word	0x40140000
   84f3c:	401c0000 	.word	0x401c0000
   84f40:	d103      	bne.n	84f4a <_dtoa_r+0xb6a>
   84f42:	f01a 0f01 	tst.w	sl, #1
   84f46:	f47f acf2 	bne.w	8492e <_dtoa_r+0x54e>
   84f4a:	465b      	mov	r3, fp
   84f4c:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   84f50:	469b      	mov	fp, r3
   84f52:	2a30      	cmp	r2, #48	; 0x30
   84f54:	f103 33ff 	add.w	r3, r3, #4294967295
   84f58:	d0f8      	beq.n	84f4c <_dtoa_r+0xb6c>
   84f5a:	e4f8      	b.n	8494e <_dtoa_r+0x56e>
   84f5c:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
   84f60:	4654      	mov	r4, sl
   84f62:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
   84f66:	f7ff bb47 	b.w	845f8 <_dtoa_r+0x218>
   84f6a:	9e07      	ldr	r6, [sp, #28]
   84f6c:	4275      	negs	r5, r6
   84f6e:	2d00      	cmp	r5, #0
   84f70:	f000 80c2 	beq.w	850f8 <_dtoa_r+0xd18>
   84f74:	4ba3      	ldr	r3, [pc, #652]	; (85204 <_dtoa_r+0xe24>)
   84f76:	f005 020f 	and.w	r2, r5, #15
   84f7a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   84f7e:	e9d3 2300 	ldrd	r2, r3, [r3]
   84f82:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   84f86:	f7fc fbbf 	bl	81708 <__aeabi_dmul>
   84f8a:	112d      	asrs	r5, r5, #4
   84f8c:	4682      	mov	sl, r0
   84f8e:	468b      	mov	fp, r1
   84f90:	f000 812e 	beq.w	851f0 <_dtoa_r+0xe10>
   84f94:	4e9c      	ldr	r6, [pc, #624]	; (85208 <_dtoa_r+0xe28>)
   84f96:	f04f 0802 	mov.w	r8, #2
   84f9a:	07ea      	lsls	r2, r5, #31
   84f9c:	d505      	bpl.n	84faa <_dtoa_r+0xbca>
   84f9e:	e9d6 2300 	ldrd	r2, r3, [r6]
   84fa2:	f108 0801 	add.w	r8, r8, #1
   84fa6:	f7fc fbaf 	bl	81708 <__aeabi_dmul>
   84faa:	106d      	asrs	r5, r5, #1
   84fac:	f106 0608 	add.w	r6, r6, #8
   84fb0:	d1f3      	bne.n	84f9a <_dtoa_r+0xbba>
   84fb2:	4682      	mov	sl, r0
   84fb4:	468b      	mov	fp, r1
   84fb6:	e5ef      	b.n	84b98 <_dtoa_r+0x7b8>
   84fb8:	9e07      	ldr	r6, [sp, #28]
   84fba:	9d09      	ldr	r5, [sp, #36]	; 0x24
   84fbc:	2230      	movs	r2, #48	; 0x30
   84fbe:	702a      	strb	r2, [r5, #0]
   84fc0:	3601      	adds	r6, #1
   84fc2:	2231      	movs	r2, #49	; 0x31
   84fc4:	9607      	str	r6, [sp, #28]
   84fc6:	701a      	strb	r2, [r3, #0]
   84fc8:	f7ff bbd7 	b.w	8477a <_dtoa_r+0x39a>
   84fcc:	6871      	ldr	r1, [r6, #4]
   84fce:	4620      	mov	r0, r4
   84fd0:	f001 f9ee 	bl	863b0 <_Balloc>
   84fd4:	6933      	ldr	r3, [r6, #16]
   84fd6:	4605      	mov	r5, r0
   84fd8:	1c9a      	adds	r2, r3, #2
   84fda:	0092      	lsls	r2, r2, #2
   84fdc:	f106 010c 	add.w	r1, r6, #12
   84fe0:	300c      	adds	r0, #12
   84fe2:	f001 f905 	bl	861f0 <memcpy>
   84fe6:	4620      	mov	r0, r4
   84fe8:	4629      	mov	r1, r5
   84fea:	2201      	movs	r2, #1
   84fec:	f001 fb9e 	bl	8672c <__lshift>
   84ff0:	4607      	mov	r7, r0
   84ff2:	e503      	b.n	849fc <_dtoa_r+0x61c>
   84ff4:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   84ff8:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   84ffc:	f000 80a8 	beq.w	85150 <_dtoa_r+0xd70>
   85000:	9d06      	ldr	r5, [sp, #24]
   85002:	f10a 0301 	add.w	r3, sl, #1
   85006:	702b      	strb	r3, [r5, #0]
   85008:	4635      	mov	r5, r6
   8500a:	9e06      	ldr	r6, [sp, #24]
   8500c:	f106 0b01 	add.w	fp, r6, #1
   85010:	463e      	mov	r6, r7
   85012:	e49c      	b.n	8494e <_dtoa_r+0x56e>
   85014:	4635      	mov	r5, r6
   85016:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   8501a:	463e      	mov	r6, r7
   8501c:	e47b      	b.n	84916 <_dtoa_r+0x536>
   8501e:	f04f 0800 	mov.w	r8, #0
   85022:	4646      	mov	r6, r8
   85024:	e70c      	b.n	84e40 <_dtoa_r+0xa60>
   85026:	4977      	ldr	r1, [pc, #476]	; (85204 <_dtoa_r+0xe24>)
   85028:	f108 35ff 	add.w	r5, r8, #4294967295
   8502c:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   85030:	4632      	mov	r2, r6
   85032:	463b      	mov	r3, r7
   85034:	e9d1 0100 	ldrd	r0, r1, [r1]
   85038:	9510      	str	r5, [sp, #64]	; 0x40
   8503a:	f7fc fb65 	bl	81708 <__aeabi_dmul>
   8503e:	e9cd 0114 	strd	r0, r1, [sp, #80]	; 0x50
   85042:	4659      	mov	r1, fp
   85044:	4650      	mov	r0, sl
   85046:	f7fc fdf9 	bl	81c3c <__aeabi_d2iz>
   8504a:	4605      	mov	r5, r0
   8504c:	f7fc faf6 	bl	8163c <__aeabi_i2d>
   85050:	4602      	mov	r2, r0
   85052:	460b      	mov	r3, r1
   85054:	4650      	mov	r0, sl
   85056:	4659      	mov	r1, fp
   85058:	f7fc f9a2 	bl	813a0 <__aeabi_dsub>
   8505c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
   85060:	3530      	adds	r5, #48	; 0x30
   85062:	f1b8 0f01 	cmp.w	r8, #1
   85066:	4606      	mov	r6, r0
   85068:	460f      	mov	r7, r1
   8506a:	f88e 5000 	strb.w	r5, [lr]
   8506e:	f10e 0b01 	add.w	fp, lr, #1
   85072:	d01e      	beq.n	850b2 <_dtoa_r+0xcd2>
   85074:	9d09      	ldr	r5, [sp, #36]	; 0x24
   85076:	1e6b      	subs	r3, r5, #1
   85078:	eb03 0a08 	add.w	sl, r3, r8
   8507c:	2200      	movs	r2, #0
   8507e:	4b63      	ldr	r3, [pc, #396]	; (8520c <_dtoa_r+0xe2c>)
   85080:	f7fc fb42 	bl	81708 <__aeabi_dmul>
   85084:	460f      	mov	r7, r1
   85086:	4606      	mov	r6, r0
   85088:	f7fc fdd8 	bl	81c3c <__aeabi_d2iz>
   8508c:	4680      	mov	r8, r0
   8508e:	f7fc fad5 	bl	8163c <__aeabi_i2d>
   85092:	f108 0830 	add.w	r8, r8, #48	; 0x30
   85096:	4602      	mov	r2, r0
   85098:	460b      	mov	r3, r1
   8509a:	4630      	mov	r0, r6
   8509c:	4639      	mov	r1, r7
   8509e:	f7fc f97f 	bl	813a0 <__aeabi_dsub>
   850a2:	f805 8f01 	strb.w	r8, [r5, #1]!
   850a6:	4555      	cmp	r5, sl
   850a8:	d1e8      	bne.n	8507c <_dtoa_r+0xc9c>
   850aa:	9d10      	ldr	r5, [sp, #64]	; 0x40
   850ac:	4606      	mov	r6, r0
   850ae:	460f      	mov	r7, r1
   850b0:	44ab      	add	fp, r5
   850b2:	2200      	movs	r2, #0
   850b4:	4b56      	ldr	r3, [pc, #344]	; (85210 <_dtoa_r+0xe30>)
   850b6:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   850ba:	f7fc f973 	bl	813a4 <__adddf3>
   850be:	4632      	mov	r2, r6
   850c0:	463b      	mov	r3, r7
   850c2:	f7fc fd93 	bl	81bec <__aeabi_dcmplt>
   850c6:	2800      	cmp	r0, #0
   850c8:	d04d      	beq.n	85166 <_dtoa_r+0xd86>
   850ca:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   850cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
   850ce:	9607      	str	r6, [sp, #28]
   850d0:	f81b 5c01 	ldrb.w	r5, [fp, #-1]
   850d4:	f7ff bb4a 	b.w	8476c <_dtoa_r+0x38c>
   850d8:	9e08      	ldr	r6, [sp, #32]
   850da:	2300      	movs	r3, #0
   850dc:	ebc9 0506 	rsb	r5, r9, r6
   850e0:	f7ff bb75 	b.w	847ce <_dtoa_r+0x3ee>
   850e4:	9b18      	ldr	r3, [sp, #96]	; 0x60
   850e6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   850e8:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   850ec:	9d08      	ldr	r5, [sp, #32]
   850ee:	f7ff bb6e 	b.w	847ce <_dtoa_r+0x3ee>
   850f2:	4657      	mov	r7, sl
   850f4:	f7ff bbb8 	b.w	84868 <_dtoa_r+0x488>
   850f8:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
   850fc:	f04f 0802 	mov.w	r8, #2
   85100:	e54a      	b.n	84b98 <_dtoa_r+0x7b8>
   85102:	f1b9 0f00 	cmp.w	r9, #0
   85106:	f43f aeae 	beq.w	84e66 <_dtoa_r+0xa86>
   8510a:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
   8510c:	2e00      	cmp	r6, #0
   8510e:	f77f af28 	ble.w	84f62 <_dtoa_r+0xb82>
   85112:	2200      	movs	r2, #0
   85114:	4b3d      	ldr	r3, [pc, #244]	; (8520c <_dtoa_r+0xe2c>)
   85116:	4650      	mov	r0, sl
   85118:	4659      	mov	r1, fp
   8511a:	f7fc faf5 	bl	81708 <__aeabi_dmul>
   8511e:	4682      	mov	sl, r0
   85120:	f108 0001 	add.w	r0, r8, #1
   85124:	468b      	mov	fp, r1
   85126:	f7fc fa89 	bl	8163c <__aeabi_i2d>
   8512a:	4602      	mov	r2, r0
   8512c:	460b      	mov	r3, r1
   8512e:	4650      	mov	r0, sl
   85130:	4659      	mov	r1, fp
   85132:	f7fc fae9 	bl	81708 <__aeabi_dmul>
   85136:	2200      	movs	r2, #0
   85138:	4b36      	ldr	r3, [pc, #216]	; (85214 <_dtoa_r+0xe34>)
   8513a:	f7fc f933 	bl	813a4 <__adddf3>
   8513e:	9d07      	ldr	r5, [sp, #28]
   85140:	4606      	mov	r6, r0
   85142:	3d01      	subs	r5, #1
   85144:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   85148:	9517      	str	r5, [sp, #92]	; 0x5c
   8514a:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
   8514e:	e543      	b.n	84bd8 <_dtoa_r+0x7f8>
   85150:	4635      	mov	r5, r6
   85152:	9b06      	ldr	r3, [sp, #24]
   85154:	9e06      	ldr	r6, [sp, #24]
   85156:	2239      	movs	r2, #57	; 0x39
   85158:	7032      	strb	r2, [r6, #0]
   8515a:	f103 0b01 	add.w	fp, r3, #1
   8515e:	463e      	mov	r6, r7
   85160:	9909      	ldr	r1, [sp, #36]	; 0x24
   85162:	f7ff bbee 	b.w	84942 <_dtoa_r+0x562>
   85166:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
   8516a:	2000      	movs	r0, #0
   8516c:	4928      	ldr	r1, [pc, #160]	; (85210 <_dtoa_r+0xe30>)
   8516e:	f7fc f917 	bl	813a0 <__aeabi_dsub>
   85172:	4632      	mov	r2, r6
   85174:	463b      	mov	r3, r7
   85176:	f7fc fd57 	bl	81c28 <__aeabi_dcmpgt>
   8517a:	2800      	cmp	r0, #0
   8517c:	f43f aef1 	beq.w	84f62 <_dtoa_r+0xb82>
   85180:	465b      	mov	r3, fp
   85182:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   85186:	469b      	mov	fp, r3
   85188:	2a30      	cmp	r2, #48	; 0x30
   8518a:	f103 33ff 	add.w	r3, r3, #4294967295
   8518e:	d0f8      	beq.n	85182 <_dtoa_r+0xda2>
   85190:	9d17      	ldr	r5, [sp, #92]	; 0x5c
   85192:	9507      	str	r5, [sp, #28]
   85194:	f7ff baf1 	b.w	8477a <_dtoa_r+0x39a>
   85198:	4645      	mov	r5, r8
   8519a:	4654      	mov	r4, sl
   8519c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   8519e:	9a09      	ldr	r2, [sp, #36]	; 0x24
   851a0:	9607      	str	r6, [sp, #28]
   851a2:	f7ff bae3 	b.w	8476c <_dtoa_r+0x38c>
   851a6:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   851aa:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   851ae:	d0cf      	beq.n	85150 <_dtoa_r+0xd70>
   851b0:	9b03      	ldr	r3, [sp, #12]
   851b2:	4635      	mov	r5, r6
   851b4:	2b00      	cmp	r3, #0
   851b6:	9e06      	ldr	r6, [sp, #24]
   851b8:	bfc8      	it	gt
   851ba:	f10b 0a31 	addgt.w	sl, fp, #49	; 0x31
   851be:	f886 a000 	strb.w	sl, [r6]
   851c2:	f106 0b01 	add.w	fp, r6, #1
   851c6:	463e      	mov	r6, r7
   851c8:	f7ff bbc1 	b.w	8494e <_dtoa_r+0x56e>
   851cc:	f47f aea7 	bne.w	84f1e <_dtoa_r+0xb3e>
   851d0:	f01a 0f01 	tst.w	sl, #1
   851d4:	f43f aea3 	beq.w	84f1e <_dtoa_r+0xb3e>
   851d8:	e69b      	b.n	84f12 <_dtoa_r+0xb32>
   851da:	4631      	mov	r1, r6
   851dc:	4620      	mov	r0, r4
   851de:	220a      	movs	r2, #10
   851e0:	2300      	movs	r3, #0
   851e2:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
   851e6:	f001 f913 	bl	86410 <__multadd>
   851ea:	4606      	mov	r6, r0
   851ec:	f7ff bb6a 	b.w	848c4 <_dtoa_r+0x4e4>
   851f0:	f04f 0802 	mov.w	r8, #2
   851f4:	e4d0      	b.n	84b98 <_dtoa_r+0x7b8>
   851f6:	f43f ab50 	beq.w	8489a <_dtoa_r+0x4ba>
   851fa:	f1c3 033c 	rsb	r3, r3, #60	; 0x3c
   851fe:	f7ff bbe0 	b.w	849c2 <_dtoa_r+0x5e2>
   85202:	bf00      	nop
   85204:	000879e8 	.word	0x000879e8
   85208:	00087ab0 	.word	0x00087ab0
   8520c:	40240000 	.word	0x40240000
   85210:	3fe00000 	.word	0x3fe00000
   85214:	401c0000 	.word	0x401c0000

00085218 <__sflush_r>:
   85218:	898b      	ldrh	r3, [r1, #12]
   8521a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8521e:	b29a      	uxth	r2, r3
   85220:	460d      	mov	r5, r1
   85222:	0711      	lsls	r1, r2, #28
   85224:	4680      	mov	r8, r0
   85226:	d43c      	bmi.n	852a2 <__sflush_r+0x8a>
   85228:	686a      	ldr	r2, [r5, #4]
   8522a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   8522e:	2a00      	cmp	r2, #0
   85230:	81ab      	strh	r3, [r5, #12]
   85232:	dd59      	ble.n	852e8 <__sflush_r+0xd0>
   85234:	6aac      	ldr	r4, [r5, #40]	; 0x28
   85236:	2c00      	cmp	r4, #0
   85238:	d04b      	beq.n	852d2 <__sflush_r+0xba>
   8523a:	b29b      	uxth	r3, r3
   8523c:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
   85240:	2100      	movs	r1, #0
   85242:	b292      	uxth	r2, r2
   85244:	f8d8 6000 	ldr.w	r6, [r8]
   85248:	f8c8 1000 	str.w	r1, [r8]
   8524c:	2a00      	cmp	r2, #0
   8524e:	d04f      	beq.n	852f0 <__sflush_r+0xd8>
   85250:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   85252:	075f      	lsls	r7, r3, #29
   85254:	d505      	bpl.n	85262 <__sflush_r+0x4a>
   85256:	6869      	ldr	r1, [r5, #4]
   85258:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   8525a:	1a52      	subs	r2, r2, r1
   8525c:	b10b      	cbz	r3, 85262 <__sflush_r+0x4a>
   8525e:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   85260:	1ad2      	subs	r2, r2, r3
   85262:	4640      	mov	r0, r8
   85264:	69e9      	ldr	r1, [r5, #28]
   85266:	2300      	movs	r3, #0
   85268:	47a0      	blx	r4
   8526a:	1c44      	adds	r4, r0, #1
   8526c:	d04a      	beq.n	85304 <__sflush_r+0xec>
   8526e:	89ab      	ldrh	r3, [r5, #12]
   85270:	692a      	ldr	r2, [r5, #16]
   85272:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   85276:	b29b      	uxth	r3, r3
   85278:	2100      	movs	r1, #0
   8527a:	602a      	str	r2, [r5, #0]
   8527c:	04da      	lsls	r2, r3, #19
   8527e:	81ab      	strh	r3, [r5, #12]
   85280:	6069      	str	r1, [r5, #4]
   85282:	d44c      	bmi.n	8531e <__sflush_r+0x106>
   85284:	6b29      	ldr	r1, [r5, #48]	; 0x30
   85286:	f8c8 6000 	str.w	r6, [r8]
   8528a:	b311      	cbz	r1, 852d2 <__sflush_r+0xba>
   8528c:	f105 0340 	add.w	r3, r5, #64	; 0x40
   85290:	4299      	cmp	r1, r3
   85292:	d002      	beq.n	8529a <__sflush_r+0x82>
   85294:	4640      	mov	r0, r8
   85296:	f000 f9c3 	bl	85620 <_free_r>
   8529a:	2000      	movs	r0, #0
   8529c:	6328      	str	r0, [r5, #48]	; 0x30
   8529e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   852a2:	692e      	ldr	r6, [r5, #16]
   852a4:	b1ae      	cbz	r6, 852d2 <__sflush_r+0xba>
   852a6:	0791      	lsls	r1, r2, #30
   852a8:	682c      	ldr	r4, [r5, #0]
   852aa:	bf0c      	ite	eq
   852ac:	696b      	ldreq	r3, [r5, #20]
   852ae:	2300      	movne	r3, #0
   852b0:	602e      	str	r6, [r5, #0]
   852b2:	1ba4      	subs	r4, r4, r6
   852b4:	60ab      	str	r3, [r5, #8]
   852b6:	e00a      	b.n	852ce <__sflush_r+0xb6>
   852b8:	4632      	mov	r2, r6
   852ba:	4623      	mov	r3, r4
   852bc:	6a6f      	ldr	r7, [r5, #36]	; 0x24
   852be:	4640      	mov	r0, r8
   852c0:	69e9      	ldr	r1, [r5, #28]
   852c2:	47b8      	blx	r7
   852c4:	2800      	cmp	r0, #0
   852c6:	ebc0 0404 	rsb	r4, r0, r4
   852ca:	4406      	add	r6, r0
   852cc:	dd04      	ble.n	852d8 <__sflush_r+0xc0>
   852ce:	2c00      	cmp	r4, #0
   852d0:	dcf2      	bgt.n	852b8 <__sflush_r+0xa0>
   852d2:	2000      	movs	r0, #0
   852d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   852d8:	89ab      	ldrh	r3, [r5, #12]
   852da:	f04f 30ff 	mov.w	r0, #4294967295
   852de:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   852e2:	81ab      	strh	r3, [r5, #12]
   852e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   852e8:	6bea      	ldr	r2, [r5, #60]	; 0x3c
   852ea:	2a00      	cmp	r2, #0
   852ec:	dca2      	bgt.n	85234 <__sflush_r+0x1c>
   852ee:	e7f0      	b.n	852d2 <__sflush_r+0xba>
   852f0:	2301      	movs	r3, #1
   852f2:	4640      	mov	r0, r8
   852f4:	69e9      	ldr	r1, [r5, #28]
   852f6:	47a0      	blx	r4
   852f8:	1c43      	adds	r3, r0, #1
   852fa:	4602      	mov	r2, r0
   852fc:	d01e      	beq.n	8533c <__sflush_r+0x124>
   852fe:	89ab      	ldrh	r3, [r5, #12]
   85300:	6aac      	ldr	r4, [r5, #40]	; 0x28
   85302:	e7a6      	b.n	85252 <__sflush_r+0x3a>
   85304:	f8d8 3000 	ldr.w	r3, [r8]
   85308:	b95b      	cbnz	r3, 85322 <__sflush_r+0x10a>
   8530a:	89aa      	ldrh	r2, [r5, #12]
   8530c:	6929      	ldr	r1, [r5, #16]
   8530e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   85312:	b292      	uxth	r2, r2
   85314:	606b      	str	r3, [r5, #4]
   85316:	04d3      	lsls	r3, r2, #19
   85318:	81aa      	strh	r2, [r5, #12]
   8531a:	6029      	str	r1, [r5, #0]
   8531c:	d5b2      	bpl.n	85284 <__sflush_r+0x6c>
   8531e:	6528      	str	r0, [r5, #80]	; 0x50
   85320:	e7b0      	b.n	85284 <__sflush_r+0x6c>
   85322:	2b1d      	cmp	r3, #29
   85324:	d001      	beq.n	8532a <__sflush_r+0x112>
   85326:	2b16      	cmp	r3, #22
   85328:	d113      	bne.n	85352 <__sflush_r+0x13a>
   8532a:	89a9      	ldrh	r1, [r5, #12]
   8532c:	692b      	ldr	r3, [r5, #16]
   8532e:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
   85332:	2200      	movs	r2, #0
   85334:	81a9      	strh	r1, [r5, #12]
   85336:	602b      	str	r3, [r5, #0]
   85338:	606a      	str	r2, [r5, #4]
   8533a:	e7a3      	b.n	85284 <__sflush_r+0x6c>
   8533c:	f8d8 3000 	ldr.w	r3, [r8]
   85340:	2b00      	cmp	r3, #0
   85342:	d0dc      	beq.n	852fe <__sflush_r+0xe6>
   85344:	2b1d      	cmp	r3, #29
   85346:	d001      	beq.n	8534c <__sflush_r+0x134>
   85348:	2b16      	cmp	r3, #22
   8534a:	d1c5      	bne.n	852d8 <__sflush_r+0xc0>
   8534c:	f8c8 6000 	str.w	r6, [r8]
   85350:	e7bf      	b.n	852d2 <__sflush_r+0xba>
   85352:	89ab      	ldrh	r3, [r5, #12]
   85354:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   85358:	81ab      	strh	r3, [r5, #12]
   8535a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8535e:	bf00      	nop

00085360 <_fflush_r>:
   85360:	b510      	push	{r4, lr}
   85362:	4604      	mov	r4, r0
   85364:	b082      	sub	sp, #8
   85366:	b108      	cbz	r0, 8536c <_fflush_r+0xc>
   85368:	6b83      	ldr	r3, [r0, #56]	; 0x38
   8536a:	b153      	cbz	r3, 85382 <_fflush_r+0x22>
   8536c:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
   85370:	b908      	cbnz	r0, 85376 <_fflush_r+0x16>
   85372:	b002      	add	sp, #8
   85374:	bd10      	pop	{r4, pc}
   85376:	4620      	mov	r0, r4
   85378:	b002      	add	sp, #8
   8537a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   8537e:	f7ff bf4b 	b.w	85218 <__sflush_r>
   85382:	9101      	str	r1, [sp, #4]
   85384:	f000 f808 	bl	85398 <__sinit>
   85388:	9901      	ldr	r1, [sp, #4]
   8538a:	e7ef      	b.n	8536c <_fflush_r+0xc>

0008538c <_cleanup_r>:
   8538c:	4901      	ldr	r1, [pc, #4]	; (85394 <_cleanup_r+0x8>)
   8538e:	f000 bb9f 	b.w	85ad0 <_fwalk>
   85392:	bf00      	nop
   85394:	000871cd 	.word	0x000871cd

00085398 <__sinit>:
   85398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8539c:	6b84      	ldr	r4, [r0, #56]	; 0x38
   8539e:	b083      	sub	sp, #12
   853a0:	4607      	mov	r7, r0
   853a2:	2c00      	cmp	r4, #0
   853a4:	d165      	bne.n	85472 <__sinit+0xda>
   853a6:	687d      	ldr	r5, [r7, #4]
   853a8:	4833      	ldr	r0, [pc, #204]	; (85478 <__sinit+0xe0>)
   853aa:	2304      	movs	r3, #4
   853ac:	2103      	movs	r1, #3
   853ae:	f507 723b 	add.w	r2, r7, #748	; 0x2ec
   853b2:	63f8      	str	r0, [r7, #60]	; 0x3c
   853b4:	f8c7 12e4 	str.w	r1, [r7, #740]	; 0x2e4
   853b8:	f8c7 22e8 	str.w	r2, [r7, #744]	; 0x2e8
   853bc:	f8c7 42e0 	str.w	r4, [r7, #736]	; 0x2e0
   853c0:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   853c4:	81ab      	strh	r3, [r5, #12]
   853c6:	602c      	str	r4, [r5, #0]
   853c8:	606c      	str	r4, [r5, #4]
   853ca:	60ac      	str	r4, [r5, #8]
   853cc:	666c      	str	r4, [r5, #100]	; 0x64
   853ce:	81ec      	strh	r4, [r5, #14]
   853d0:	612c      	str	r4, [r5, #16]
   853d2:	616c      	str	r4, [r5, #20]
   853d4:	61ac      	str	r4, [r5, #24]
   853d6:	4621      	mov	r1, r4
   853d8:	2208      	movs	r2, #8
   853da:	f7fc fc93 	bl	81d04 <memset>
   853de:	f8df b09c 	ldr.w	fp, [pc, #156]	; 8547c <__sinit+0xe4>
   853e2:	68be      	ldr	r6, [r7, #8]
   853e4:	f8df a098 	ldr.w	sl, [pc, #152]	; 85480 <__sinit+0xe8>
   853e8:	f8df 9098 	ldr.w	r9, [pc, #152]	; 85484 <__sinit+0xec>
   853ec:	f8df 8098 	ldr.w	r8, [pc, #152]	; 85488 <__sinit+0xf0>
   853f0:	2301      	movs	r3, #1
   853f2:	2209      	movs	r2, #9
   853f4:	61ed      	str	r5, [r5, #28]
   853f6:	f8c5 b020 	str.w	fp, [r5, #32]
   853fa:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
   853fe:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
   85402:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
   85406:	4621      	mov	r1, r4
   85408:	81f3      	strh	r3, [r6, #14]
   8540a:	81b2      	strh	r2, [r6, #12]
   8540c:	6034      	str	r4, [r6, #0]
   8540e:	6074      	str	r4, [r6, #4]
   85410:	60b4      	str	r4, [r6, #8]
   85412:	6674      	str	r4, [r6, #100]	; 0x64
   85414:	6134      	str	r4, [r6, #16]
   85416:	6174      	str	r4, [r6, #20]
   85418:	61b4      	str	r4, [r6, #24]
   8541a:	2208      	movs	r2, #8
   8541c:	f106 005c 	add.w	r0, r6, #92	; 0x5c
   85420:	9301      	str	r3, [sp, #4]
   85422:	f7fc fc6f 	bl	81d04 <memset>
   85426:	68fd      	ldr	r5, [r7, #12]
   85428:	2012      	movs	r0, #18
   8542a:	2202      	movs	r2, #2
   8542c:	61f6      	str	r6, [r6, #28]
   8542e:	f8c6 b020 	str.w	fp, [r6, #32]
   85432:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
   85436:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
   8543a:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
   8543e:	4621      	mov	r1, r4
   85440:	81a8      	strh	r0, [r5, #12]
   85442:	81ea      	strh	r2, [r5, #14]
   85444:	602c      	str	r4, [r5, #0]
   85446:	606c      	str	r4, [r5, #4]
   85448:	60ac      	str	r4, [r5, #8]
   8544a:	666c      	str	r4, [r5, #100]	; 0x64
   8544c:	612c      	str	r4, [r5, #16]
   8544e:	616c      	str	r4, [r5, #20]
   85450:	61ac      	str	r4, [r5, #24]
   85452:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   85456:	2208      	movs	r2, #8
   85458:	f7fc fc54 	bl	81d04 <memset>
   8545c:	9b01      	ldr	r3, [sp, #4]
   8545e:	61ed      	str	r5, [r5, #28]
   85460:	f8c5 b020 	str.w	fp, [r5, #32]
   85464:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
   85468:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
   8546c:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
   85470:	63bb      	str	r3, [r7, #56]	; 0x38
   85472:	b003      	add	sp, #12
   85474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85478:	0008538d 	.word	0x0008538d
   8547c:	00086da9 	.word	0x00086da9
   85480:	00086dcd 	.word	0x00086dcd
   85484:	00086e05 	.word	0x00086e05
   85488:	00086e25 	.word	0x00086e25

0008548c <__sfp_lock_acquire>:
   8548c:	4770      	bx	lr
   8548e:	bf00      	nop

00085490 <__sfp_lock_release>:
   85490:	4770      	bx	lr
   85492:	bf00      	nop

00085494 <__libc_fini_array>:
   85494:	b538      	push	{r3, r4, r5, lr}
   85496:	4d09      	ldr	r5, [pc, #36]	; (854bc <__libc_fini_array+0x28>)
   85498:	4c09      	ldr	r4, [pc, #36]	; (854c0 <__libc_fini_array+0x2c>)
   8549a:	1b64      	subs	r4, r4, r5
   8549c:	10a4      	asrs	r4, r4, #2
   8549e:	bf18      	it	ne
   854a0:	eb05 0584 	addne.w	r5, r5, r4, lsl #2
   854a4:	d005      	beq.n	854b2 <__libc_fini_array+0x1e>
   854a6:	3c01      	subs	r4, #1
   854a8:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   854ac:	4798      	blx	r3
   854ae:	2c00      	cmp	r4, #0
   854b0:	d1f9      	bne.n	854a6 <__libc_fini_array+0x12>
   854b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   854b6:	f002 bb1f 	b.w	87af8 <_fini>
   854ba:	bf00      	nop
   854bc:	00087b04 	.word	0x00087b04
   854c0:	00087b08 	.word	0x00087b08

000854c4 <_fputwc_r>:
   854c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   854c8:	8993      	ldrh	r3, [r2, #12]
   854ca:	460f      	mov	r7, r1
   854cc:	0499      	lsls	r1, r3, #18
   854ce:	b082      	sub	sp, #8
   854d0:	4614      	mov	r4, r2
   854d2:	4680      	mov	r8, r0
   854d4:	d406      	bmi.n	854e4 <_fputwc_r+0x20>
   854d6:	6e52      	ldr	r2, [r2, #100]	; 0x64
   854d8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   854dc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   854e0:	81a3      	strh	r3, [r4, #12]
   854e2:	6662      	str	r2, [r4, #100]	; 0x64
   854e4:	f000 fb1c 	bl	85b20 <__locale_mb_cur_max>
   854e8:	2801      	cmp	r0, #1
   854ea:	d03e      	beq.n	8556a <_fputwc_r+0xa6>
   854ec:	463a      	mov	r2, r7
   854ee:	4640      	mov	r0, r8
   854f0:	a901      	add	r1, sp, #4
   854f2:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   854f6:	f001 fd49 	bl	86f8c <_wcrtomb_r>
   854fa:	1c42      	adds	r2, r0, #1
   854fc:	4606      	mov	r6, r0
   854fe:	d02d      	beq.n	8555c <_fputwc_r+0x98>
   85500:	2800      	cmp	r0, #0
   85502:	d03a      	beq.n	8557a <_fputwc_r+0xb6>
   85504:	f89d 1004 	ldrb.w	r1, [sp, #4]
   85508:	2500      	movs	r5, #0
   8550a:	e009      	b.n	85520 <_fputwc_r+0x5c>
   8550c:	6823      	ldr	r3, [r4, #0]
   8550e:	7019      	strb	r1, [r3, #0]
   85510:	6823      	ldr	r3, [r4, #0]
   85512:	3301      	adds	r3, #1
   85514:	6023      	str	r3, [r4, #0]
   85516:	3501      	adds	r5, #1
   85518:	42b5      	cmp	r5, r6
   8551a:	d22e      	bcs.n	8557a <_fputwc_r+0xb6>
   8551c:	ab01      	add	r3, sp, #4
   8551e:	5ce9      	ldrb	r1, [r5, r3]
   85520:	68a3      	ldr	r3, [r4, #8]
   85522:	3b01      	subs	r3, #1
   85524:	2b00      	cmp	r3, #0
   85526:	60a3      	str	r3, [r4, #8]
   85528:	daf0      	bge.n	8550c <_fputwc_r+0x48>
   8552a:	69a2      	ldr	r2, [r4, #24]
   8552c:	4293      	cmp	r3, r2
   8552e:	db06      	blt.n	8553e <_fputwc_r+0x7a>
   85530:	6823      	ldr	r3, [r4, #0]
   85532:	7019      	strb	r1, [r3, #0]
   85534:	6823      	ldr	r3, [r4, #0]
   85536:	7819      	ldrb	r1, [r3, #0]
   85538:	3301      	adds	r3, #1
   8553a:	290a      	cmp	r1, #10
   8553c:	d1ea      	bne.n	85514 <_fputwc_r+0x50>
   8553e:	4640      	mov	r0, r8
   85540:	4622      	mov	r2, r4
   85542:	f7fe fdeb 	bl	8411c <__swbuf_r>
   85546:	f1b0 33ff 	subs.w	r3, r0, #4294967295
   8554a:	4258      	negs	r0, r3
   8554c:	4158      	adcs	r0, r3
   8554e:	2800      	cmp	r0, #0
   85550:	d0e1      	beq.n	85516 <_fputwc_r+0x52>
   85552:	f04f 30ff 	mov.w	r0, #4294967295
   85556:	b002      	add	sp, #8
   85558:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8555c:	89a3      	ldrh	r3, [r4, #12]
   8555e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   85562:	81a3      	strh	r3, [r4, #12]
   85564:	b002      	add	sp, #8
   85566:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8556a:	1e7b      	subs	r3, r7, #1
   8556c:	2bfe      	cmp	r3, #254	; 0xfe
   8556e:	d8bd      	bhi.n	854ec <_fputwc_r+0x28>
   85570:	b2f9      	uxtb	r1, r7
   85572:	4606      	mov	r6, r0
   85574:	f88d 1004 	strb.w	r1, [sp, #4]
   85578:	e7c6      	b.n	85508 <_fputwc_r+0x44>
   8557a:	4638      	mov	r0, r7
   8557c:	b002      	add	sp, #8
   8557e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   85582:	bf00      	nop

00085584 <_malloc_trim_r>:
   85584:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   85586:	4d23      	ldr	r5, [pc, #140]	; (85614 <_malloc_trim_r+0x90>)
   85588:	460f      	mov	r7, r1
   8558a:	4604      	mov	r4, r0
   8558c:	f000 ff0c 	bl	863a8 <__malloc_lock>
   85590:	68ab      	ldr	r3, [r5, #8]
   85592:	685e      	ldr	r6, [r3, #4]
   85594:	f026 0603 	bic.w	r6, r6, #3
   85598:	1bf1      	subs	r1, r6, r7
   8559a:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
   8559e:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   855a2:	f021 010f 	bic.w	r1, r1, #15
   855a6:	f5a1 5780 	sub.w	r7, r1, #4096	; 0x1000
   855aa:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
   855ae:	db07      	blt.n	855c0 <_malloc_trim_r+0x3c>
   855b0:	4620      	mov	r0, r4
   855b2:	2100      	movs	r1, #0
   855b4:	f001 fbe6 	bl	86d84 <_sbrk_r>
   855b8:	68ab      	ldr	r3, [r5, #8]
   855ba:	4433      	add	r3, r6
   855bc:	4298      	cmp	r0, r3
   855be:	d004      	beq.n	855ca <_malloc_trim_r+0x46>
   855c0:	4620      	mov	r0, r4
   855c2:	f000 fef3 	bl	863ac <__malloc_unlock>
   855c6:	2000      	movs	r0, #0
   855c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   855ca:	4620      	mov	r0, r4
   855cc:	4279      	negs	r1, r7
   855ce:	f001 fbd9 	bl	86d84 <_sbrk_r>
   855d2:	3001      	adds	r0, #1
   855d4:	d00d      	beq.n	855f2 <_malloc_trim_r+0x6e>
   855d6:	4b10      	ldr	r3, [pc, #64]	; (85618 <_malloc_trim_r+0x94>)
   855d8:	68aa      	ldr	r2, [r5, #8]
   855da:	6819      	ldr	r1, [r3, #0]
   855dc:	1bf6      	subs	r6, r6, r7
   855de:	f046 0601 	orr.w	r6, r6, #1
   855e2:	4620      	mov	r0, r4
   855e4:	1bc9      	subs	r1, r1, r7
   855e6:	6056      	str	r6, [r2, #4]
   855e8:	6019      	str	r1, [r3, #0]
   855ea:	f000 fedf 	bl	863ac <__malloc_unlock>
   855ee:	2001      	movs	r0, #1
   855f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   855f2:	4620      	mov	r0, r4
   855f4:	2100      	movs	r1, #0
   855f6:	f001 fbc5 	bl	86d84 <_sbrk_r>
   855fa:	68ab      	ldr	r3, [r5, #8]
   855fc:	1ac2      	subs	r2, r0, r3
   855fe:	2a0f      	cmp	r2, #15
   85600:	ddde      	ble.n	855c0 <_malloc_trim_r+0x3c>
   85602:	4d06      	ldr	r5, [pc, #24]	; (8561c <_malloc_trim_r+0x98>)
   85604:	4904      	ldr	r1, [pc, #16]	; (85618 <_malloc_trim_r+0x94>)
   85606:	682d      	ldr	r5, [r5, #0]
   85608:	f042 0201 	orr.w	r2, r2, #1
   8560c:	1b40      	subs	r0, r0, r5
   8560e:	605a      	str	r2, [r3, #4]
   85610:	6008      	str	r0, [r1, #0]
   85612:	e7d5      	b.n	855c0 <_malloc_trim_r+0x3c>
   85614:	200705c0 	.word	0x200705c0
   85618:	20070b20 	.word	0x20070b20
   8561c:	200709cc 	.word	0x200709cc

00085620 <_free_r>:
   85620:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   85624:	460d      	mov	r5, r1
   85626:	4606      	mov	r6, r0
   85628:	2900      	cmp	r1, #0
   8562a:	d055      	beq.n	856d8 <_free_r+0xb8>
   8562c:	f000 febc 	bl	863a8 <__malloc_lock>
   85630:	f855 1c04 	ldr.w	r1, [r5, #-4]
   85634:	f8df c170 	ldr.w	ip, [pc, #368]	; 857a8 <_free_r+0x188>
   85638:	f1a5 0408 	sub.w	r4, r5, #8
   8563c:	f021 0301 	bic.w	r3, r1, #1
   85640:	18e2      	adds	r2, r4, r3
   85642:	f8dc 0008 	ldr.w	r0, [ip, #8]
   85646:	6857      	ldr	r7, [r2, #4]
   85648:	4290      	cmp	r0, r2
   8564a:	f027 0703 	bic.w	r7, r7, #3
   8564e:	d068      	beq.n	85722 <_free_r+0x102>
   85650:	f011 0101 	ands.w	r1, r1, #1
   85654:	6057      	str	r7, [r2, #4]
   85656:	d032      	beq.n	856be <_free_r+0x9e>
   85658:	2100      	movs	r1, #0
   8565a:	19d0      	adds	r0, r2, r7
   8565c:	6840      	ldr	r0, [r0, #4]
   8565e:	07c0      	lsls	r0, r0, #31
   85660:	d406      	bmi.n	85670 <_free_r+0x50>
   85662:	443b      	add	r3, r7
   85664:	6890      	ldr	r0, [r2, #8]
   85666:	2900      	cmp	r1, #0
   85668:	d04d      	beq.n	85706 <_free_r+0xe6>
   8566a:	68d2      	ldr	r2, [r2, #12]
   8566c:	60c2      	str	r2, [r0, #12]
   8566e:	6090      	str	r0, [r2, #8]
   85670:	f043 0201 	orr.w	r2, r3, #1
   85674:	6062      	str	r2, [r4, #4]
   85676:	50e3      	str	r3, [r4, r3]
   85678:	b9e1      	cbnz	r1, 856b4 <_free_r+0x94>
   8567a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   8567e:	d32d      	bcc.n	856dc <_free_r+0xbc>
   85680:	0a5a      	lsrs	r2, r3, #9
   85682:	2a04      	cmp	r2, #4
   85684:	d869      	bhi.n	8575a <_free_r+0x13a>
   85686:	0998      	lsrs	r0, r3, #6
   85688:	3038      	adds	r0, #56	; 0x38
   8568a:	0041      	lsls	r1, r0, #1
   8568c:	eb0c 0c81 	add.w	ip, ip, r1, lsl #2
   85690:	f8dc 2008 	ldr.w	r2, [ip, #8]
   85694:	4944      	ldr	r1, [pc, #272]	; (857a8 <_free_r+0x188>)
   85696:	4562      	cmp	r2, ip
   85698:	d065      	beq.n	85766 <_free_r+0x146>
   8569a:	6851      	ldr	r1, [r2, #4]
   8569c:	f021 0103 	bic.w	r1, r1, #3
   856a0:	428b      	cmp	r3, r1
   856a2:	d202      	bcs.n	856aa <_free_r+0x8a>
   856a4:	6892      	ldr	r2, [r2, #8]
   856a6:	4594      	cmp	ip, r2
   856a8:	d1f7      	bne.n	8569a <_free_r+0x7a>
   856aa:	68d3      	ldr	r3, [r2, #12]
   856ac:	60e3      	str	r3, [r4, #12]
   856ae:	60a2      	str	r2, [r4, #8]
   856b0:	609c      	str	r4, [r3, #8]
   856b2:	60d4      	str	r4, [r2, #12]
   856b4:	4630      	mov	r0, r6
   856b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   856ba:	f000 be77 	b.w	863ac <__malloc_unlock>
   856be:	f855 5c08 	ldr.w	r5, [r5, #-8]
   856c2:	f10c 0808 	add.w	r8, ip, #8
   856c6:	1b64      	subs	r4, r4, r5
   856c8:	68a0      	ldr	r0, [r4, #8]
   856ca:	442b      	add	r3, r5
   856cc:	4540      	cmp	r0, r8
   856ce:	d042      	beq.n	85756 <_free_r+0x136>
   856d0:	68e5      	ldr	r5, [r4, #12]
   856d2:	60c5      	str	r5, [r0, #12]
   856d4:	60a8      	str	r0, [r5, #8]
   856d6:	e7c0      	b.n	8565a <_free_r+0x3a>
   856d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   856dc:	08db      	lsrs	r3, r3, #3
   856de:	109a      	asrs	r2, r3, #2
   856e0:	2001      	movs	r0, #1
   856e2:	4090      	lsls	r0, r2
   856e4:	f8dc 1004 	ldr.w	r1, [ip, #4]
   856e8:	eb0c 03c3 	add.w	r3, ip, r3, lsl #3
   856ec:	689a      	ldr	r2, [r3, #8]
   856ee:	4301      	orrs	r1, r0
   856f0:	60a2      	str	r2, [r4, #8]
   856f2:	60e3      	str	r3, [r4, #12]
   856f4:	f8cc 1004 	str.w	r1, [ip, #4]
   856f8:	4630      	mov	r0, r6
   856fa:	609c      	str	r4, [r3, #8]
   856fc:	60d4      	str	r4, [r2, #12]
   856fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   85702:	f000 be53 	b.w	863ac <__malloc_unlock>
   85706:	4d29      	ldr	r5, [pc, #164]	; (857ac <_free_r+0x18c>)
   85708:	42a8      	cmp	r0, r5
   8570a:	d1ae      	bne.n	8566a <_free_r+0x4a>
   8570c:	f043 0201 	orr.w	r2, r3, #1
   85710:	f8cc 4014 	str.w	r4, [ip, #20]
   85714:	f8cc 4010 	str.w	r4, [ip, #16]
   85718:	60e0      	str	r0, [r4, #12]
   8571a:	60a0      	str	r0, [r4, #8]
   8571c:	6062      	str	r2, [r4, #4]
   8571e:	50e3      	str	r3, [r4, r3]
   85720:	e7c8      	b.n	856b4 <_free_r+0x94>
   85722:	441f      	add	r7, r3
   85724:	07cb      	lsls	r3, r1, #31
   85726:	d407      	bmi.n	85738 <_free_r+0x118>
   85728:	f855 1c08 	ldr.w	r1, [r5, #-8]
   8572c:	1a64      	subs	r4, r4, r1
   8572e:	68e3      	ldr	r3, [r4, #12]
   85730:	68a2      	ldr	r2, [r4, #8]
   85732:	440f      	add	r7, r1
   85734:	60d3      	str	r3, [r2, #12]
   85736:	609a      	str	r2, [r3, #8]
   85738:	4b1d      	ldr	r3, [pc, #116]	; (857b0 <_free_r+0x190>)
   8573a:	f047 0201 	orr.w	r2, r7, #1
   8573e:	681b      	ldr	r3, [r3, #0]
   85740:	6062      	str	r2, [r4, #4]
   85742:	429f      	cmp	r7, r3
   85744:	f8cc 4008 	str.w	r4, [ip, #8]
   85748:	d3b4      	bcc.n	856b4 <_free_r+0x94>
   8574a:	4b1a      	ldr	r3, [pc, #104]	; (857b4 <_free_r+0x194>)
   8574c:	4630      	mov	r0, r6
   8574e:	6819      	ldr	r1, [r3, #0]
   85750:	f7ff ff18 	bl	85584 <_malloc_trim_r>
   85754:	e7ae      	b.n	856b4 <_free_r+0x94>
   85756:	2101      	movs	r1, #1
   85758:	e77f      	b.n	8565a <_free_r+0x3a>
   8575a:	2a14      	cmp	r2, #20
   8575c:	d80b      	bhi.n	85776 <_free_r+0x156>
   8575e:	f102 005b 	add.w	r0, r2, #91	; 0x5b
   85762:	0041      	lsls	r1, r0, #1
   85764:	e792      	b.n	8568c <_free_r+0x6c>
   85766:	1080      	asrs	r0, r0, #2
   85768:	2501      	movs	r5, #1
   8576a:	4085      	lsls	r5, r0
   8576c:	6848      	ldr	r0, [r1, #4]
   8576e:	4613      	mov	r3, r2
   85770:	4328      	orrs	r0, r5
   85772:	6048      	str	r0, [r1, #4]
   85774:	e79a      	b.n	856ac <_free_r+0x8c>
   85776:	2a54      	cmp	r2, #84	; 0x54
   85778:	d803      	bhi.n	85782 <_free_r+0x162>
   8577a:	0b18      	lsrs	r0, r3, #12
   8577c:	306e      	adds	r0, #110	; 0x6e
   8577e:	0041      	lsls	r1, r0, #1
   85780:	e784      	b.n	8568c <_free_r+0x6c>
   85782:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   85786:	d803      	bhi.n	85790 <_free_r+0x170>
   85788:	0bd8      	lsrs	r0, r3, #15
   8578a:	3077      	adds	r0, #119	; 0x77
   8578c:	0041      	lsls	r1, r0, #1
   8578e:	e77d      	b.n	8568c <_free_r+0x6c>
   85790:	f240 5154 	movw	r1, #1364	; 0x554
   85794:	428a      	cmp	r2, r1
   85796:	d803      	bhi.n	857a0 <_free_r+0x180>
   85798:	0c98      	lsrs	r0, r3, #18
   8579a:	307c      	adds	r0, #124	; 0x7c
   8579c:	0041      	lsls	r1, r0, #1
   8579e:	e775      	b.n	8568c <_free_r+0x6c>
   857a0:	21fc      	movs	r1, #252	; 0xfc
   857a2:	207e      	movs	r0, #126	; 0x7e
   857a4:	e772      	b.n	8568c <_free_r+0x6c>
   857a6:	bf00      	nop
   857a8:	200705c0 	.word	0x200705c0
   857ac:	200705c8 	.word	0x200705c8
   857b0:	200709c8 	.word	0x200709c8
   857b4:	20070b1c 	.word	0x20070b1c

000857b8 <__sfvwrite_r>:
   857b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   857bc:	6893      	ldr	r3, [r2, #8]
   857be:	b083      	sub	sp, #12
   857c0:	4616      	mov	r6, r2
   857c2:	4681      	mov	r9, r0
   857c4:	460c      	mov	r4, r1
   857c6:	b32b      	cbz	r3, 85814 <__sfvwrite_r+0x5c>
   857c8:	898b      	ldrh	r3, [r1, #12]
   857ca:	0719      	lsls	r1, r3, #28
   857cc:	d526      	bpl.n	8581c <__sfvwrite_r+0x64>
   857ce:	6922      	ldr	r2, [r4, #16]
   857d0:	b322      	cbz	r2, 8581c <__sfvwrite_r+0x64>
   857d2:	f003 0202 	and.w	r2, r3, #2
   857d6:	b292      	uxth	r2, r2
   857d8:	6835      	ldr	r5, [r6, #0]
   857da:	2a00      	cmp	r2, #0
   857dc:	d02c      	beq.n	85838 <__sfvwrite_r+0x80>
   857de:	f04f 0a00 	mov.w	sl, #0
   857e2:	f8df b2e8 	ldr.w	fp, [pc, #744]	; 85acc <__sfvwrite_r+0x314>
   857e6:	46d0      	mov	r8, sl
   857e8:	45d8      	cmp	r8, fp
   857ea:	bf34      	ite	cc
   857ec:	4643      	movcc	r3, r8
   857ee:	465b      	movcs	r3, fp
   857f0:	4652      	mov	r2, sl
   857f2:	4648      	mov	r0, r9
   857f4:	f1b8 0f00 	cmp.w	r8, #0
   857f8:	d04f      	beq.n	8589a <__sfvwrite_r+0xe2>
   857fa:	69e1      	ldr	r1, [r4, #28]
   857fc:	6a67      	ldr	r7, [r4, #36]	; 0x24
   857fe:	47b8      	blx	r7
   85800:	2800      	cmp	r0, #0
   85802:	dd56      	ble.n	858b2 <__sfvwrite_r+0xfa>
   85804:	68b3      	ldr	r3, [r6, #8]
   85806:	4482      	add	sl, r0
   85808:	1a1b      	subs	r3, r3, r0
   8580a:	ebc0 0808 	rsb	r8, r0, r8
   8580e:	60b3      	str	r3, [r6, #8]
   85810:	2b00      	cmp	r3, #0
   85812:	d1e9      	bne.n	857e8 <__sfvwrite_r+0x30>
   85814:	2000      	movs	r0, #0
   85816:	b003      	add	sp, #12
   85818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8581c:	4648      	mov	r0, r9
   8581e:	4621      	mov	r1, r4
   85820:	f7fe fcd0 	bl	841c4 <__swsetup_r>
   85824:	2800      	cmp	r0, #0
   85826:	f040 8148 	bne.w	85aba <__sfvwrite_r+0x302>
   8582a:	89a3      	ldrh	r3, [r4, #12]
   8582c:	6835      	ldr	r5, [r6, #0]
   8582e:	f003 0202 	and.w	r2, r3, #2
   85832:	b292      	uxth	r2, r2
   85834:	2a00      	cmp	r2, #0
   85836:	d1d2      	bne.n	857de <__sfvwrite_r+0x26>
   85838:	f013 0a01 	ands.w	sl, r3, #1
   8583c:	d142      	bne.n	858c4 <__sfvwrite_r+0x10c>
   8583e:	46d0      	mov	r8, sl
   85840:	f1b8 0f00 	cmp.w	r8, #0
   85844:	d023      	beq.n	8588e <__sfvwrite_r+0xd6>
   85846:	059a      	lsls	r2, r3, #22
   85848:	68a7      	ldr	r7, [r4, #8]
   8584a:	d576      	bpl.n	8593a <__sfvwrite_r+0x182>
   8584c:	45b8      	cmp	r8, r7
   8584e:	f0c0 80a4 	bcc.w	8599a <__sfvwrite_r+0x1e2>
   85852:	f413 6f90 	tst.w	r3, #1152	; 0x480
   85856:	f040 80b2 	bne.w	859be <__sfvwrite_r+0x206>
   8585a:	6820      	ldr	r0, [r4, #0]
   8585c:	46bb      	mov	fp, r7
   8585e:	4651      	mov	r1, sl
   85860:	465a      	mov	r2, fp
   85862:	f000 fd3b 	bl	862dc <memmove>
   85866:	68a2      	ldr	r2, [r4, #8]
   85868:	6821      	ldr	r1, [r4, #0]
   8586a:	1bd2      	subs	r2, r2, r7
   8586c:	eb01 030b 	add.w	r3, r1, fp
   85870:	60a2      	str	r2, [r4, #8]
   85872:	6023      	str	r3, [r4, #0]
   85874:	4642      	mov	r2, r8
   85876:	68b3      	ldr	r3, [r6, #8]
   85878:	4492      	add	sl, r2
   8587a:	1a9b      	subs	r3, r3, r2
   8587c:	ebc2 0808 	rsb	r8, r2, r8
   85880:	60b3      	str	r3, [r6, #8]
   85882:	2b00      	cmp	r3, #0
   85884:	d0c6      	beq.n	85814 <__sfvwrite_r+0x5c>
   85886:	89a3      	ldrh	r3, [r4, #12]
   85888:	f1b8 0f00 	cmp.w	r8, #0
   8588c:	d1db      	bne.n	85846 <__sfvwrite_r+0x8e>
   8588e:	f8d5 a000 	ldr.w	sl, [r5]
   85892:	f8d5 8004 	ldr.w	r8, [r5, #4]
   85896:	3508      	adds	r5, #8
   85898:	e7d2      	b.n	85840 <__sfvwrite_r+0x88>
   8589a:	f8d5 a000 	ldr.w	sl, [r5]
   8589e:	f8d5 8004 	ldr.w	r8, [r5, #4]
   858a2:	3508      	adds	r5, #8
   858a4:	e7a0      	b.n	857e8 <__sfvwrite_r+0x30>
   858a6:	4648      	mov	r0, r9
   858a8:	4621      	mov	r1, r4
   858aa:	f7ff fd59 	bl	85360 <_fflush_r>
   858ae:	2800      	cmp	r0, #0
   858b0:	d059      	beq.n	85966 <__sfvwrite_r+0x1ae>
   858b2:	89a3      	ldrh	r3, [r4, #12]
   858b4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   858b8:	f04f 30ff 	mov.w	r0, #4294967295
   858bc:	81a3      	strh	r3, [r4, #12]
   858be:	b003      	add	sp, #12
   858c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   858c4:	4692      	mov	sl, r2
   858c6:	9201      	str	r2, [sp, #4]
   858c8:	4693      	mov	fp, r2
   858ca:	4690      	mov	r8, r2
   858cc:	f1b8 0f00 	cmp.w	r8, #0
   858d0:	d02b      	beq.n	8592a <__sfvwrite_r+0x172>
   858d2:	9f01      	ldr	r7, [sp, #4]
   858d4:	2f00      	cmp	r7, #0
   858d6:	d064      	beq.n	859a2 <__sfvwrite_r+0x1ea>
   858d8:	6820      	ldr	r0, [r4, #0]
   858da:	6921      	ldr	r1, [r4, #16]
   858dc:	45c2      	cmp	sl, r8
   858de:	bf34      	ite	cc
   858e0:	4653      	movcc	r3, sl
   858e2:	4643      	movcs	r3, r8
   858e4:	4288      	cmp	r0, r1
   858e6:	461f      	mov	r7, r3
   858e8:	f8d4 c008 	ldr.w	ip, [r4, #8]
   858ec:	6962      	ldr	r2, [r4, #20]
   858ee:	d903      	bls.n	858f8 <__sfvwrite_r+0x140>
   858f0:	4494      	add	ip, r2
   858f2:	4563      	cmp	r3, ip
   858f4:	f300 80ae 	bgt.w	85a54 <__sfvwrite_r+0x29c>
   858f8:	4293      	cmp	r3, r2
   858fa:	db36      	blt.n	8596a <__sfvwrite_r+0x1b2>
   858fc:	4613      	mov	r3, r2
   858fe:	6a67      	ldr	r7, [r4, #36]	; 0x24
   85900:	4648      	mov	r0, r9
   85902:	69e1      	ldr	r1, [r4, #28]
   85904:	465a      	mov	r2, fp
   85906:	47b8      	blx	r7
   85908:	1e07      	subs	r7, r0, #0
   8590a:	ddd2      	ble.n	858b2 <__sfvwrite_r+0xfa>
   8590c:	ebba 0a07 	subs.w	sl, sl, r7
   85910:	d03a      	beq.n	85988 <__sfvwrite_r+0x1d0>
   85912:	68b3      	ldr	r3, [r6, #8]
   85914:	44bb      	add	fp, r7
   85916:	1bdb      	subs	r3, r3, r7
   85918:	ebc7 0808 	rsb	r8, r7, r8
   8591c:	60b3      	str	r3, [r6, #8]
   8591e:	2b00      	cmp	r3, #0
   85920:	f43f af78 	beq.w	85814 <__sfvwrite_r+0x5c>
   85924:	f1b8 0f00 	cmp.w	r8, #0
   85928:	d1d3      	bne.n	858d2 <__sfvwrite_r+0x11a>
   8592a:	2700      	movs	r7, #0
   8592c:	f8d5 b000 	ldr.w	fp, [r5]
   85930:	f8d5 8004 	ldr.w	r8, [r5, #4]
   85934:	9701      	str	r7, [sp, #4]
   85936:	3508      	adds	r5, #8
   85938:	e7c8      	b.n	858cc <__sfvwrite_r+0x114>
   8593a:	6820      	ldr	r0, [r4, #0]
   8593c:	6923      	ldr	r3, [r4, #16]
   8593e:	4298      	cmp	r0, r3
   85940:	d802      	bhi.n	85948 <__sfvwrite_r+0x190>
   85942:	6963      	ldr	r3, [r4, #20]
   85944:	4598      	cmp	r8, r3
   85946:	d272      	bcs.n	85a2e <__sfvwrite_r+0x276>
   85948:	45b8      	cmp	r8, r7
   8594a:	bf38      	it	cc
   8594c:	4647      	movcc	r7, r8
   8594e:	463a      	mov	r2, r7
   85950:	4651      	mov	r1, sl
   85952:	f000 fcc3 	bl	862dc <memmove>
   85956:	68a3      	ldr	r3, [r4, #8]
   85958:	6822      	ldr	r2, [r4, #0]
   8595a:	1bdb      	subs	r3, r3, r7
   8595c:	443a      	add	r2, r7
   8595e:	60a3      	str	r3, [r4, #8]
   85960:	6022      	str	r2, [r4, #0]
   85962:	2b00      	cmp	r3, #0
   85964:	d09f      	beq.n	858a6 <__sfvwrite_r+0xee>
   85966:	463a      	mov	r2, r7
   85968:	e785      	b.n	85876 <__sfvwrite_r+0xbe>
   8596a:	461a      	mov	r2, r3
   8596c:	4659      	mov	r1, fp
   8596e:	9300      	str	r3, [sp, #0]
   85970:	f000 fcb4 	bl	862dc <memmove>
   85974:	9b00      	ldr	r3, [sp, #0]
   85976:	68a1      	ldr	r1, [r4, #8]
   85978:	6822      	ldr	r2, [r4, #0]
   8597a:	1ac9      	subs	r1, r1, r3
   8597c:	ebba 0a07 	subs.w	sl, sl, r7
   85980:	4413      	add	r3, r2
   85982:	60a1      	str	r1, [r4, #8]
   85984:	6023      	str	r3, [r4, #0]
   85986:	d1c4      	bne.n	85912 <__sfvwrite_r+0x15a>
   85988:	4648      	mov	r0, r9
   8598a:	4621      	mov	r1, r4
   8598c:	f7ff fce8 	bl	85360 <_fflush_r>
   85990:	2800      	cmp	r0, #0
   85992:	d18e      	bne.n	858b2 <__sfvwrite_r+0xfa>
   85994:	f8cd a004 	str.w	sl, [sp, #4]
   85998:	e7bb      	b.n	85912 <__sfvwrite_r+0x15a>
   8599a:	6820      	ldr	r0, [r4, #0]
   8599c:	4647      	mov	r7, r8
   8599e:	46c3      	mov	fp, r8
   859a0:	e75d      	b.n	8585e <__sfvwrite_r+0xa6>
   859a2:	4658      	mov	r0, fp
   859a4:	210a      	movs	r1, #10
   859a6:	4642      	mov	r2, r8
   859a8:	f000 fbd8 	bl	8615c <memchr>
   859ac:	2800      	cmp	r0, #0
   859ae:	d07f      	beq.n	85ab0 <__sfvwrite_r+0x2f8>
   859b0:	f100 0a01 	add.w	sl, r0, #1
   859b4:	2701      	movs	r7, #1
   859b6:	ebcb 0a0a 	rsb	sl, fp, sl
   859ba:	9701      	str	r7, [sp, #4]
   859bc:	e78c      	b.n	858d8 <__sfvwrite_r+0x120>
   859be:	6822      	ldr	r2, [r4, #0]
   859c0:	6921      	ldr	r1, [r4, #16]
   859c2:	6967      	ldr	r7, [r4, #20]
   859c4:	ebc1 0c02 	rsb	ip, r1, r2
   859c8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
   859cc:	f10c 0201 	add.w	r2, ip, #1
   859d0:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
   859d4:	4442      	add	r2, r8
   859d6:	107f      	asrs	r7, r7, #1
   859d8:	4297      	cmp	r7, r2
   859da:	bf34      	ite	cc
   859dc:	4617      	movcc	r7, r2
   859de:	463a      	movcs	r2, r7
   859e0:	055b      	lsls	r3, r3, #21
   859e2:	d54f      	bpl.n	85a84 <__sfvwrite_r+0x2cc>
   859e4:	4611      	mov	r1, r2
   859e6:	4648      	mov	r0, r9
   859e8:	f8cd c000 	str.w	ip, [sp]
   859ec:	f000 f91a 	bl	85c24 <_malloc_r>
   859f0:	f8dd c000 	ldr.w	ip, [sp]
   859f4:	4683      	mov	fp, r0
   859f6:	2800      	cmp	r0, #0
   859f8:	d062      	beq.n	85ac0 <__sfvwrite_r+0x308>
   859fa:	4662      	mov	r2, ip
   859fc:	6921      	ldr	r1, [r4, #16]
   859fe:	f8cd c000 	str.w	ip, [sp]
   85a02:	f000 fbf5 	bl	861f0 <memcpy>
   85a06:	89a2      	ldrh	r2, [r4, #12]
   85a08:	f8dd c000 	ldr.w	ip, [sp]
   85a0c:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   85a10:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   85a14:	81a2      	strh	r2, [r4, #12]
   85a16:	eb0b 000c 	add.w	r0, fp, ip
   85a1a:	ebcc 0207 	rsb	r2, ip, r7
   85a1e:	f8c4 b010 	str.w	fp, [r4, #16]
   85a22:	6167      	str	r7, [r4, #20]
   85a24:	6020      	str	r0, [r4, #0]
   85a26:	60a2      	str	r2, [r4, #8]
   85a28:	4647      	mov	r7, r8
   85a2a:	46c3      	mov	fp, r8
   85a2c:	e717      	b.n	8585e <__sfvwrite_r+0xa6>
   85a2e:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
   85a32:	4590      	cmp	r8, r2
   85a34:	bf38      	it	cc
   85a36:	4642      	movcc	r2, r8
   85a38:	fb92 f2f3 	sdiv	r2, r2, r3
   85a3c:	fb02 f303 	mul.w	r3, r2, r3
   85a40:	6a67      	ldr	r7, [r4, #36]	; 0x24
   85a42:	4648      	mov	r0, r9
   85a44:	69e1      	ldr	r1, [r4, #28]
   85a46:	4652      	mov	r2, sl
   85a48:	47b8      	blx	r7
   85a4a:	2800      	cmp	r0, #0
   85a4c:	f77f af31 	ble.w	858b2 <__sfvwrite_r+0xfa>
   85a50:	4602      	mov	r2, r0
   85a52:	e710      	b.n	85876 <__sfvwrite_r+0xbe>
   85a54:	4662      	mov	r2, ip
   85a56:	4659      	mov	r1, fp
   85a58:	f8cd c000 	str.w	ip, [sp]
   85a5c:	f000 fc3e 	bl	862dc <memmove>
   85a60:	f8dd c000 	ldr.w	ip, [sp]
   85a64:	6823      	ldr	r3, [r4, #0]
   85a66:	4648      	mov	r0, r9
   85a68:	4463      	add	r3, ip
   85a6a:	6023      	str	r3, [r4, #0]
   85a6c:	4621      	mov	r1, r4
   85a6e:	f8cd c000 	str.w	ip, [sp]
   85a72:	f7ff fc75 	bl	85360 <_fflush_r>
   85a76:	f8dd c000 	ldr.w	ip, [sp]
   85a7a:	2800      	cmp	r0, #0
   85a7c:	f47f af19 	bne.w	858b2 <__sfvwrite_r+0xfa>
   85a80:	4667      	mov	r7, ip
   85a82:	e743      	b.n	8590c <__sfvwrite_r+0x154>
   85a84:	4648      	mov	r0, r9
   85a86:	f8cd c000 	str.w	ip, [sp]
   85a8a:	f000 ff9b 	bl	869c4 <_realloc_r>
   85a8e:	f8dd c000 	ldr.w	ip, [sp]
   85a92:	4683      	mov	fp, r0
   85a94:	2800      	cmp	r0, #0
   85a96:	d1be      	bne.n	85a16 <__sfvwrite_r+0x25e>
   85a98:	4648      	mov	r0, r9
   85a9a:	6921      	ldr	r1, [r4, #16]
   85a9c:	f7ff fdc0 	bl	85620 <_free_r>
   85aa0:	89a3      	ldrh	r3, [r4, #12]
   85aa2:	220c      	movs	r2, #12
   85aa4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   85aa8:	b29b      	uxth	r3, r3
   85aaa:	f8c9 2000 	str.w	r2, [r9]
   85aae:	e701      	b.n	858b4 <__sfvwrite_r+0xfc>
   85ab0:	2701      	movs	r7, #1
   85ab2:	f108 0a01 	add.w	sl, r8, #1
   85ab6:	9701      	str	r7, [sp, #4]
   85ab8:	e70e      	b.n	858d8 <__sfvwrite_r+0x120>
   85aba:	f04f 30ff 	mov.w	r0, #4294967295
   85abe:	e6aa      	b.n	85816 <__sfvwrite_r+0x5e>
   85ac0:	230c      	movs	r3, #12
   85ac2:	f8c9 3000 	str.w	r3, [r9]
   85ac6:	89a3      	ldrh	r3, [r4, #12]
   85ac8:	e6f4      	b.n	858b4 <__sfvwrite_r+0xfc>
   85aca:	bf00      	nop
   85acc:	7ffffc00 	.word	0x7ffffc00

00085ad0 <_fwalk>:
   85ad0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   85ad4:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
   85ad8:	4688      	mov	r8, r1
   85ada:	d019      	beq.n	85b10 <_fwalk+0x40>
   85adc:	2600      	movs	r6, #0
   85ade:	687d      	ldr	r5, [r7, #4]
   85ae0:	68bc      	ldr	r4, [r7, #8]
   85ae2:	3d01      	subs	r5, #1
   85ae4:	d40e      	bmi.n	85b04 <_fwalk+0x34>
   85ae6:	89a3      	ldrh	r3, [r4, #12]
   85ae8:	3d01      	subs	r5, #1
   85aea:	2b01      	cmp	r3, #1
   85aec:	d906      	bls.n	85afc <_fwalk+0x2c>
   85aee:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   85af2:	4620      	mov	r0, r4
   85af4:	3301      	adds	r3, #1
   85af6:	d001      	beq.n	85afc <_fwalk+0x2c>
   85af8:	47c0      	blx	r8
   85afa:	4306      	orrs	r6, r0
   85afc:	1c6b      	adds	r3, r5, #1
   85afe:	f104 0468 	add.w	r4, r4, #104	; 0x68
   85b02:	d1f0      	bne.n	85ae6 <_fwalk+0x16>
   85b04:	683f      	ldr	r7, [r7, #0]
   85b06:	2f00      	cmp	r7, #0
   85b08:	d1e9      	bne.n	85ade <_fwalk+0xe>
   85b0a:	4630      	mov	r0, r6
   85b0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   85b10:	463e      	mov	r6, r7
   85b12:	4630      	mov	r0, r6
   85b14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00085b18 <__locale_charset>:
   85b18:	4800      	ldr	r0, [pc, #0]	; (85b1c <__locale_charset+0x4>)
   85b1a:	4770      	bx	lr
   85b1c:	2007059c 	.word	0x2007059c

00085b20 <__locale_mb_cur_max>:
   85b20:	4b01      	ldr	r3, [pc, #4]	; (85b28 <__locale_mb_cur_max+0x8>)
   85b22:	6818      	ldr	r0, [r3, #0]
   85b24:	4770      	bx	lr
   85b26:	bf00      	nop
   85b28:	200705bc 	.word	0x200705bc

00085b2c <_localeconv_r>:
   85b2c:	4800      	ldr	r0, [pc, #0]	; (85b30 <_localeconv_r+0x4>)
   85b2e:	4770      	bx	lr
   85b30:	20070564 	.word	0x20070564

00085b34 <__smakebuf_r>:
   85b34:	b5f0      	push	{r4, r5, r6, r7, lr}
   85b36:	898b      	ldrh	r3, [r1, #12]
   85b38:	b091      	sub	sp, #68	; 0x44
   85b3a:	b29a      	uxth	r2, r3
   85b3c:	0796      	lsls	r6, r2, #30
   85b3e:	460c      	mov	r4, r1
   85b40:	4605      	mov	r5, r0
   85b42:	d437      	bmi.n	85bb4 <__smakebuf_r+0x80>
   85b44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   85b48:	2900      	cmp	r1, #0
   85b4a:	db17      	blt.n	85b7c <__smakebuf_r+0x48>
   85b4c:	aa01      	add	r2, sp, #4
   85b4e:	f001 fb45 	bl	871dc <_fstat_r>
   85b52:	2800      	cmp	r0, #0
   85b54:	db10      	blt.n	85b78 <__smakebuf_r+0x44>
   85b56:	9b02      	ldr	r3, [sp, #8]
   85b58:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
   85b5c:	f5b3 5100 	subs.w	r1, r3, #8192	; 0x2000
   85b60:	424f      	negs	r7, r1
   85b62:	414f      	adcs	r7, r1
   85b64:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   85b68:	d02c      	beq.n	85bc4 <__smakebuf_r+0x90>
   85b6a:	89a3      	ldrh	r3, [r4, #12]
   85b6c:	f44f 6680 	mov.w	r6, #1024	; 0x400
   85b70:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   85b74:	81a3      	strh	r3, [r4, #12]
   85b76:	e00b      	b.n	85b90 <__smakebuf_r+0x5c>
   85b78:	89a3      	ldrh	r3, [r4, #12]
   85b7a:	b29a      	uxth	r2, r3
   85b7c:	f012 0f80 	tst.w	r2, #128	; 0x80
   85b80:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   85b84:	81a3      	strh	r3, [r4, #12]
   85b86:	bf14      	ite	ne
   85b88:	2640      	movne	r6, #64	; 0x40
   85b8a:	f44f 6680 	moveq.w	r6, #1024	; 0x400
   85b8e:	2700      	movs	r7, #0
   85b90:	4628      	mov	r0, r5
   85b92:	4631      	mov	r1, r6
   85b94:	f000 f846 	bl	85c24 <_malloc_r>
   85b98:	89a3      	ldrh	r3, [r4, #12]
   85b9a:	2800      	cmp	r0, #0
   85b9c:	d029      	beq.n	85bf2 <__smakebuf_r+0xbe>
   85b9e:	4a1b      	ldr	r2, [pc, #108]	; (85c0c <__smakebuf_r+0xd8>)
   85ba0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   85ba4:	63ea      	str	r2, [r5, #60]	; 0x3c
   85ba6:	81a3      	strh	r3, [r4, #12]
   85ba8:	6020      	str	r0, [r4, #0]
   85baa:	6120      	str	r0, [r4, #16]
   85bac:	6166      	str	r6, [r4, #20]
   85bae:	b9a7      	cbnz	r7, 85bda <__smakebuf_r+0xa6>
   85bb0:	b011      	add	sp, #68	; 0x44
   85bb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85bb4:	f101 0343 	add.w	r3, r1, #67	; 0x43
   85bb8:	2201      	movs	r2, #1
   85bba:	600b      	str	r3, [r1, #0]
   85bbc:	610b      	str	r3, [r1, #16]
   85bbe:	614a      	str	r2, [r1, #20]
   85bc0:	b011      	add	sp, #68	; 0x44
   85bc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85bc4:	4a12      	ldr	r2, [pc, #72]	; (85c10 <__smakebuf_r+0xdc>)
   85bc6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   85bc8:	4293      	cmp	r3, r2
   85bca:	d1ce      	bne.n	85b6a <__smakebuf_r+0x36>
   85bcc:	89a3      	ldrh	r3, [r4, #12]
   85bce:	f44f 6680 	mov.w	r6, #1024	; 0x400
   85bd2:	4333      	orrs	r3, r6
   85bd4:	81a3      	strh	r3, [r4, #12]
   85bd6:	64e6      	str	r6, [r4, #76]	; 0x4c
   85bd8:	e7da      	b.n	85b90 <__smakebuf_r+0x5c>
   85bda:	4628      	mov	r0, r5
   85bdc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   85be0:	f001 fb10 	bl	87204 <_isatty_r>
   85be4:	2800      	cmp	r0, #0
   85be6:	d0e3      	beq.n	85bb0 <__smakebuf_r+0x7c>
   85be8:	89a3      	ldrh	r3, [r4, #12]
   85bea:	f043 0301 	orr.w	r3, r3, #1
   85bee:	81a3      	strh	r3, [r4, #12]
   85bf0:	e7de      	b.n	85bb0 <__smakebuf_r+0x7c>
   85bf2:	059a      	lsls	r2, r3, #22
   85bf4:	d4dc      	bmi.n	85bb0 <__smakebuf_r+0x7c>
   85bf6:	f104 0243 	add.w	r2, r4, #67	; 0x43
   85bfa:	f043 0302 	orr.w	r3, r3, #2
   85bfe:	2101      	movs	r1, #1
   85c00:	81a3      	strh	r3, [r4, #12]
   85c02:	6022      	str	r2, [r4, #0]
   85c04:	6122      	str	r2, [r4, #16]
   85c06:	6161      	str	r1, [r4, #20]
   85c08:	e7d2      	b.n	85bb0 <__smakebuf_r+0x7c>
   85c0a:	bf00      	nop
   85c0c:	0008538d 	.word	0x0008538d
   85c10:	00086e05 	.word	0x00086e05

00085c14 <malloc>:
   85c14:	4b02      	ldr	r3, [pc, #8]	; (85c20 <malloc+0xc>)
   85c16:	4601      	mov	r1, r0
   85c18:	6818      	ldr	r0, [r3, #0]
   85c1a:	f000 b803 	b.w	85c24 <_malloc_r>
   85c1e:	bf00      	nop
   85c20:	20070560 	.word	0x20070560

00085c24 <_malloc_r>:
   85c24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85c28:	f101 050b 	add.w	r5, r1, #11
   85c2c:	2d16      	cmp	r5, #22
   85c2e:	b083      	sub	sp, #12
   85c30:	4606      	mov	r6, r0
   85c32:	d927      	bls.n	85c84 <_malloc_r+0x60>
   85c34:	f035 0507 	bics.w	r5, r5, #7
   85c38:	d427      	bmi.n	85c8a <_malloc_r+0x66>
   85c3a:	42a9      	cmp	r1, r5
   85c3c:	d825      	bhi.n	85c8a <_malloc_r+0x66>
   85c3e:	4630      	mov	r0, r6
   85c40:	f000 fbb2 	bl	863a8 <__malloc_lock>
   85c44:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
   85c48:	d226      	bcs.n	85c98 <_malloc_r+0x74>
   85c4a:	4fc1      	ldr	r7, [pc, #772]	; (85f50 <_malloc_r+0x32c>)
   85c4c:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
   85c50:	eb07 03cc 	add.w	r3, r7, ip, lsl #3
   85c54:	68dc      	ldr	r4, [r3, #12]
   85c56:	429c      	cmp	r4, r3
   85c58:	f000 81d2 	beq.w	86000 <_malloc_r+0x3dc>
   85c5c:	6863      	ldr	r3, [r4, #4]
   85c5e:	68e2      	ldr	r2, [r4, #12]
   85c60:	f023 0303 	bic.w	r3, r3, #3
   85c64:	4423      	add	r3, r4
   85c66:	6858      	ldr	r0, [r3, #4]
   85c68:	68a1      	ldr	r1, [r4, #8]
   85c6a:	f040 0501 	orr.w	r5, r0, #1
   85c6e:	60ca      	str	r2, [r1, #12]
   85c70:	4630      	mov	r0, r6
   85c72:	6091      	str	r1, [r2, #8]
   85c74:	605d      	str	r5, [r3, #4]
   85c76:	f000 fb99 	bl	863ac <__malloc_unlock>
   85c7a:	3408      	adds	r4, #8
   85c7c:	4620      	mov	r0, r4
   85c7e:	b003      	add	sp, #12
   85c80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85c84:	2510      	movs	r5, #16
   85c86:	42a9      	cmp	r1, r5
   85c88:	d9d9      	bls.n	85c3e <_malloc_r+0x1a>
   85c8a:	2400      	movs	r4, #0
   85c8c:	230c      	movs	r3, #12
   85c8e:	4620      	mov	r0, r4
   85c90:	6033      	str	r3, [r6, #0]
   85c92:	b003      	add	sp, #12
   85c94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85c98:	ea5f 2c55 	movs.w	ip, r5, lsr #9
   85c9c:	f000 8089 	beq.w	85db2 <_malloc_r+0x18e>
   85ca0:	f1bc 0f04 	cmp.w	ip, #4
   85ca4:	f200 8160 	bhi.w	85f68 <_malloc_r+0x344>
   85ca8:	ea4f 1c95 	mov.w	ip, r5, lsr #6
   85cac:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
   85cb0:	ea4f 014c 	mov.w	r1, ip, lsl #1
   85cb4:	4fa6      	ldr	r7, [pc, #664]	; (85f50 <_malloc_r+0x32c>)
   85cb6:	eb07 0181 	add.w	r1, r7, r1, lsl #2
   85cba:	68cc      	ldr	r4, [r1, #12]
   85cbc:	42a1      	cmp	r1, r4
   85cbe:	d105      	bne.n	85ccc <_malloc_r+0xa8>
   85cc0:	e00c      	b.n	85cdc <_malloc_r+0xb8>
   85cc2:	2b00      	cmp	r3, #0
   85cc4:	da79      	bge.n	85dba <_malloc_r+0x196>
   85cc6:	68e4      	ldr	r4, [r4, #12]
   85cc8:	42a1      	cmp	r1, r4
   85cca:	d007      	beq.n	85cdc <_malloc_r+0xb8>
   85ccc:	6862      	ldr	r2, [r4, #4]
   85cce:	f022 0203 	bic.w	r2, r2, #3
   85cd2:	1b53      	subs	r3, r2, r5
   85cd4:	2b0f      	cmp	r3, #15
   85cd6:	ddf4      	ble.n	85cc2 <_malloc_r+0x9e>
   85cd8:	f10c 3cff 	add.w	ip, ip, #4294967295
   85cdc:	f10c 0c01 	add.w	ip, ip, #1
   85ce0:	4b9b      	ldr	r3, [pc, #620]	; (85f50 <_malloc_r+0x32c>)
   85ce2:	693c      	ldr	r4, [r7, #16]
   85ce4:	f103 0e08 	add.w	lr, r3, #8
   85ce8:	4574      	cmp	r4, lr
   85cea:	f000 817e 	beq.w	85fea <_malloc_r+0x3c6>
   85cee:	6861      	ldr	r1, [r4, #4]
   85cf0:	f021 0103 	bic.w	r1, r1, #3
   85cf4:	1b4a      	subs	r2, r1, r5
   85cf6:	2a0f      	cmp	r2, #15
   85cf8:	f300 8164 	bgt.w	85fc4 <_malloc_r+0x3a0>
   85cfc:	2a00      	cmp	r2, #0
   85cfe:	f8c3 e014 	str.w	lr, [r3, #20]
   85d02:	f8c3 e010 	str.w	lr, [r3, #16]
   85d06:	da69      	bge.n	85ddc <_malloc_r+0x1b8>
   85d08:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   85d0c:	f080 813a 	bcs.w	85f84 <_malloc_r+0x360>
   85d10:	08c9      	lsrs	r1, r1, #3
   85d12:	108a      	asrs	r2, r1, #2
   85d14:	f04f 0801 	mov.w	r8, #1
   85d18:	fa08 f802 	lsl.w	r8, r8, r2
   85d1c:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   85d20:	685a      	ldr	r2, [r3, #4]
   85d22:	6888      	ldr	r0, [r1, #8]
   85d24:	ea48 0202 	orr.w	r2, r8, r2
   85d28:	60a0      	str	r0, [r4, #8]
   85d2a:	60e1      	str	r1, [r4, #12]
   85d2c:	605a      	str	r2, [r3, #4]
   85d2e:	608c      	str	r4, [r1, #8]
   85d30:	60c4      	str	r4, [r0, #12]
   85d32:	ea4f 03ac 	mov.w	r3, ip, asr #2
   85d36:	2001      	movs	r0, #1
   85d38:	4098      	lsls	r0, r3
   85d3a:	4290      	cmp	r0, r2
   85d3c:	d85b      	bhi.n	85df6 <_malloc_r+0x1d2>
   85d3e:	4202      	tst	r2, r0
   85d40:	d106      	bne.n	85d50 <_malloc_r+0x12c>
   85d42:	f02c 0c03 	bic.w	ip, ip, #3
   85d46:	0040      	lsls	r0, r0, #1
   85d48:	4202      	tst	r2, r0
   85d4a:	f10c 0c04 	add.w	ip, ip, #4
   85d4e:	d0fa      	beq.n	85d46 <_malloc_r+0x122>
   85d50:	eb07 08cc 	add.w	r8, r7, ip, lsl #3
   85d54:	4644      	mov	r4, r8
   85d56:	46e1      	mov	r9, ip
   85d58:	68e3      	ldr	r3, [r4, #12]
   85d5a:	429c      	cmp	r4, r3
   85d5c:	d107      	bne.n	85d6e <_malloc_r+0x14a>
   85d5e:	e146      	b.n	85fee <_malloc_r+0x3ca>
   85d60:	2a00      	cmp	r2, #0
   85d62:	f280 8157 	bge.w	86014 <_malloc_r+0x3f0>
   85d66:	68db      	ldr	r3, [r3, #12]
   85d68:	429c      	cmp	r4, r3
   85d6a:	f000 8140 	beq.w	85fee <_malloc_r+0x3ca>
   85d6e:	6859      	ldr	r1, [r3, #4]
   85d70:	f021 0103 	bic.w	r1, r1, #3
   85d74:	1b4a      	subs	r2, r1, r5
   85d76:	2a0f      	cmp	r2, #15
   85d78:	ddf2      	ble.n	85d60 <_malloc_r+0x13c>
   85d7a:	461c      	mov	r4, r3
   85d7c:	f854 cf08 	ldr.w	ip, [r4, #8]!
   85d80:	68d9      	ldr	r1, [r3, #12]
   85d82:	f045 0901 	orr.w	r9, r5, #1
   85d86:	f042 0801 	orr.w	r8, r2, #1
   85d8a:	441d      	add	r5, r3
   85d8c:	f8c3 9004 	str.w	r9, [r3, #4]
   85d90:	4630      	mov	r0, r6
   85d92:	f8cc 100c 	str.w	r1, [ip, #12]
   85d96:	f8c1 c008 	str.w	ip, [r1, #8]
   85d9a:	617d      	str	r5, [r7, #20]
   85d9c:	613d      	str	r5, [r7, #16]
   85d9e:	f8c5 e00c 	str.w	lr, [r5, #12]
   85da2:	f8c5 e008 	str.w	lr, [r5, #8]
   85da6:	f8c5 8004 	str.w	r8, [r5, #4]
   85daa:	50aa      	str	r2, [r5, r2]
   85dac:	f000 fafe 	bl	863ac <__malloc_unlock>
   85db0:	e764      	b.n	85c7c <_malloc_r+0x58>
   85db2:	217e      	movs	r1, #126	; 0x7e
   85db4:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
   85db8:	e77c      	b.n	85cb4 <_malloc_r+0x90>
   85dba:	4422      	add	r2, r4
   85dbc:	6850      	ldr	r0, [r2, #4]
   85dbe:	68e3      	ldr	r3, [r4, #12]
   85dc0:	68a1      	ldr	r1, [r4, #8]
   85dc2:	f040 0501 	orr.w	r5, r0, #1
   85dc6:	60cb      	str	r3, [r1, #12]
   85dc8:	4630      	mov	r0, r6
   85dca:	6099      	str	r1, [r3, #8]
   85dcc:	6055      	str	r5, [r2, #4]
   85dce:	f000 faed 	bl	863ac <__malloc_unlock>
   85dd2:	3408      	adds	r4, #8
   85dd4:	4620      	mov	r0, r4
   85dd6:	b003      	add	sp, #12
   85dd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85ddc:	4421      	add	r1, r4
   85dde:	684b      	ldr	r3, [r1, #4]
   85de0:	4630      	mov	r0, r6
   85de2:	f043 0301 	orr.w	r3, r3, #1
   85de6:	604b      	str	r3, [r1, #4]
   85de8:	f000 fae0 	bl	863ac <__malloc_unlock>
   85dec:	3408      	adds	r4, #8
   85dee:	4620      	mov	r0, r4
   85df0:	b003      	add	sp, #12
   85df2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85df6:	68bc      	ldr	r4, [r7, #8]
   85df8:	6863      	ldr	r3, [r4, #4]
   85dfa:	f023 0903 	bic.w	r9, r3, #3
   85dfe:	45a9      	cmp	r9, r5
   85e00:	d304      	bcc.n	85e0c <_malloc_r+0x1e8>
   85e02:	ebc5 0309 	rsb	r3, r5, r9
   85e06:	2b0f      	cmp	r3, #15
   85e08:	f300 8091 	bgt.w	85f2e <_malloc_r+0x30a>
   85e0c:	4b51      	ldr	r3, [pc, #324]	; (85f54 <_malloc_r+0x330>)
   85e0e:	4a52      	ldr	r2, [pc, #328]	; (85f58 <_malloc_r+0x334>)
   85e10:	6819      	ldr	r1, [r3, #0]
   85e12:	6813      	ldr	r3, [r2, #0]
   85e14:	eb05 0a01 	add.w	sl, r5, r1
   85e18:	3301      	adds	r3, #1
   85e1a:	eb04 0b09 	add.w	fp, r4, r9
   85e1e:	f000 8161 	beq.w	860e4 <_malloc_r+0x4c0>
   85e22:	f50a 5a80 	add.w	sl, sl, #4096	; 0x1000
   85e26:	f10a 0a0f 	add.w	sl, sl, #15
   85e2a:	f42a 6a7f 	bic.w	sl, sl, #4080	; 0xff0
   85e2e:	f02a 0a0f 	bic.w	sl, sl, #15
   85e32:	4630      	mov	r0, r6
   85e34:	4651      	mov	r1, sl
   85e36:	9201      	str	r2, [sp, #4]
   85e38:	f000 ffa4 	bl	86d84 <_sbrk_r>
   85e3c:	f1b0 3fff 	cmp.w	r0, #4294967295
   85e40:	4680      	mov	r8, r0
   85e42:	9a01      	ldr	r2, [sp, #4]
   85e44:	f000 8101 	beq.w	8604a <_malloc_r+0x426>
   85e48:	4583      	cmp	fp, r0
   85e4a:	f200 80fb 	bhi.w	86044 <_malloc_r+0x420>
   85e4e:	f8df c114 	ldr.w	ip, [pc, #276]	; 85f64 <_malloc_r+0x340>
   85e52:	45c3      	cmp	fp, r8
   85e54:	f8dc 3000 	ldr.w	r3, [ip]
   85e58:	4453      	add	r3, sl
   85e5a:	f8cc 3000 	str.w	r3, [ip]
   85e5e:	f000 814a 	beq.w	860f6 <_malloc_r+0x4d2>
   85e62:	6812      	ldr	r2, [r2, #0]
   85e64:	493c      	ldr	r1, [pc, #240]	; (85f58 <_malloc_r+0x334>)
   85e66:	3201      	adds	r2, #1
   85e68:	bf1b      	ittet	ne
   85e6a:	ebcb 0b08 	rsbne	fp, fp, r8
   85e6e:	445b      	addne	r3, fp
   85e70:	f8c1 8000 	streq.w	r8, [r1]
   85e74:	f8cc 3000 	strne.w	r3, [ip]
   85e78:	f018 0307 	ands.w	r3, r8, #7
   85e7c:	f000 8114 	beq.w	860a8 <_malloc_r+0x484>
   85e80:	f1c3 0208 	rsb	r2, r3, #8
   85e84:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
   85e88:	4490      	add	r8, r2
   85e8a:	3308      	adds	r3, #8
   85e8c:	44c2      	add	sl, r8
   85e8e:	f3ca 0a0b 	ubfx	sl, sl, #0, #12
   85e92:	ebca 0a03 	rsb	sl, sl, r3
   85e96:	4651      	mov	r1, sl
   85e98:	4630      	mov	r0, r6
   85e9a:	f8cd c004 	str.w	ip, [sp, #4]
   85e9e:	f000 ff71 	bl	86d84 <_sbrk_r>
   85ea2:	1c43      	adds	r3, r0, #1
   85ea4:	f8dd c004 	ldr.w	ip, [sp, #4]
   85ea8:	f000 8135 	beq.w	86116 <_malloc_r+0x4f2>
   85eac:	ebc8 0200 	rsb	r2, r8, r0
   85eb0:	4452      	add	r2, sl
   85eb2:	f042 0201 	orr.w	r2, r2, #1
   85eb6:	f8dc 3000 	ldr.w	r3, [ip]
   85eba:	42bc      	cmp	r4, r7
   85ebc:	4453      	add	r3, sl
   85ebe:	f8c7 8008 	str.w	r8, [r7, #8]
   85ec2:	f8cc 3000 	str.w	r3, [ip]
   85ec6:	f8c8 2004 	str.w	r2, [r8, #4]
   85eca:	f8df a098 	ldr.w	sl, [pc, #152]	; 85f64 <_malloc_r+0x340>
   85ece:	d015      	beq.n	85efc <_malloc_r+0x2d8>
   85ed0:	f1b9 0f0f 	cmp.w	r9, #15
   85ed4:	f240 80eb 	bls.w	860ae <_malloc_r+0x48a>
   85ed8:	6861      	ldr	r1, [r4, #4]
   85eda:	f1a9 020c 	sub.w	r2, r9, #12
   85ede:	f022 0207 	bic.w	r2, r2, #7
   85ee2:	f001 0101 	and.w	r1, r1, #1
   85ee6:	ea42 0e01 	orr.w	lr, r2, r1
   85eea:	2005      	movs	r0, #5
   85eec:	18a1      	adds	r1, r4, r2
   85eee:	2a0f      	cmp	r2, #15
   85ef0:	f8c4 e004 	str.w	lr, [r4, #4]
   85ef4:	6048      	str	r0, [r1, #4]
   85ef6:	6088      	str	r0, [r1, #8]
   85ef8:	f200 8111 	bhi.w	8611e <_malloc_r+0x4fa>
   85efc:	4a17      	ldr	r2, [pc, #92]	; (85f5c <_malloc_r+0x338>)
   85efe:	68bc      	ldr	r4, [r7, #8]
   85f00:	6811      	ldr	r1, [r2, #0]
   85f02:	428b      	cmp	r3, r1
   85f04:	bf88      	it	hi
   85f06:	6013      	strhi	r3, [r2, #0]
   85f08:	4a15      	ldr	r2, [pc, #84]	; (85f60 <_malloc_r+0x33c>)
   85f0a:	6811      	ldr	r1, [r2, #0]
   85f0c:	428b      	cmp	r3, r1
   85f0e:	bf88      	it	hi
   85f10:	6013      	strhi	r3, [r2, #0]
   85f12:	6862      	ldr	r2, [r4, #4]
   85f14:	f022 0203 	bic.w	r2, r2, #3
   85f18:	4295      	cmp	r5, r2
   85f1a:	ebc5 0302 	rsb	r3, r5, r2
   85f1e:	d801      	bhi.n	85f24 <_malloc_r+0x300>
   85f20:	2b0f      	cmp	r3, #15
   85f22:	dc04      	bgt.n	85f2e <_malloc_r+0x30a>
   85f24:	4630      	mov	r0, r6
   85f26:	f000 fa41 	bl	863ac <__malloc_unlock>
   85f2a:	2400      	movs	r4, #0
   85f2c:	e6a6      	b.n	85c7c <_malloc_r+0x58>
   85f2e:	f045 0201 	orr.w	r2, r5, #1
   85f32:	f043 0301 	orr.w	r3, r3, #1
   85f36:	4425      	add	r5, r4
   85f38:	6062      	str	r2, [r4, #4]
   85f3a:	4630      	mov	r0, r6
   85f3c:	60bd      	str	r5, [r7, #8]
   85f3e:	606b      	str	r3, [r5, #4]
   85f40:	f000 fa34 	bl	863ac <__malloc_unlock>
   85f44:	3408      	adds	r4, #8
   85f46:	4620      	mov	r0, r4
   85f48:	b003      	add	sp, #12
   85f4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85f4e:	bf00      	nop
   85f50:	200705c0 	.word	0x200705c0
   85f54:	20070b1c 	.word	0x20070b1c
   85f58:	200709cc 	.word	0x200709cc
   85f5c:	20070b18 	.word	0x20070b18
   85f60:	20070b14 	.word	0x20070b14
   85f64:	20070b20 	.word	0x20070b20
   85f68:	f1bc 0f14 	cmp.w	ip, #20
   85f6c:	d961      	bls.n	86032 <_malloc_r+0x40e>
   85f6e:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
   85f72:	f200 808f 	bhi.w	86094 <_malloc_r+0x470>
   85f76:	ea4f 3c15 	mov.w	ip, r5, lsr #12
   85f7a:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
   85f7e:	ea4f 014c 	mov.w	r1, ip, lsl #1
   85f82:	e697      	b.n	85cb4 <_malloc_r+0x90>
   85f84:	0a4b      	lsrs	r3, r1, #9
   85f86:	2b04      	cmp	r3, #4
   85f88:	d958      	bls.n	8603c <_malloc_r+0x418>
   85f8a:	2b14      	cmp	r3, #20
   85f8c:	f200 80ad 	bhi.w	860ea <_malloc_r+0x4c6>
   85f90:	f103 025b 	add.w	r2, r3, #91	; 0x5b
   85f94:	0050      	lsls	r0, r2, #1
   85f96:	eb07 0080 	add.w	r0, r7, r0, lsl #2
   85f9a:	6883      	ldr	r3, [r0, #8]
   85f9c:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 86158 <_malloc_r+0x534>
   85fa0:	4283      	cmp	r3, r0
   85fa2:	f000 808a 	beq.w	860ba <_malloc_r+0x496>
   85fa6:	685a      	ldr	r2, [r3, #4]
   85fa8:	f022 0203 	bic.w	r2, r2, #3
   85fac:	4291      	cmp	r1, r2
   85fae:	d202      	bcs.n	85fb6 <_malloc_r+0x392>
   85fb0:	689b      	ldr	r3, [r3, #8]
   85fb2:	4298      	cmp	r0, r3
   85fb4:	d1f7      	bne.n	85fa6 <_malloc_r+0x382>
   85fb6:	68d9      	ldr	r1, [r3, #12]
   85fb8:	687a      	ldr	r2, [r7, #4]
   85fba:	60e1      	str	r1, [r4, #12]
   85fbc:	60a3      	str	r3, [r4, #8]
   85fbe:	608c      	str	r4, [r1, #8]
   85fc0:	60dc      	str	r4, [r3, #12]
   85fc2:	e6b6      	b.n	85d32 <_malloc_r+0x10e>
   85fc4:	f045 0701 	orr.w	r7, r5, #1
   85fc8:	f042 0101 	orr.w	r1, r2, #1
   85fcc:	4425      	add	r5, r4
   85fce:	6067      	str	r7, [r4, #4]
   85fd0:	4630      	mov	r0, r6
   85fd2:	615d      	str	r5, [r3, #20]
   85fd4:	611d      	str	r5, [r3, #16]
   85fd6:	f8c5 e00c 	str.w	lr, [r5, #12]
   85fda:	f8c5 e008 	str.w	lr, [r5, #8]
   85fde:	6069      	str	r1, [r5, #4]
   85fe0:	50aa      	str	r2, [r5, r2]
   85fe2:	3408      	adds	r4, #8
   85fe4:	f000 f9e2 	bl	863ac <__malloc_unlock>
   85fe8:	e648      	b.n	85c7c <_malloc_r+0x58>
   85fea:	685a      	ldr	r2, [r3, #4]
   85fec:	e6a1      	b.n	85d32 <_malloc_r+0x10e>
   85fee:	f109 0901 	add.w	r9, r9, #1
   85ff2:	f019 0f03 	tst.w	r9, #3
   85ff6:	f104 0408 	add.w	r4, r4, #8
   85ffa:	f47f aead 	bne.w	85d58 <_malloc_r+0x134>
   85ffe:	e02d      	b.n	8605c <_malloc_r+0x438>
   86000:	f104 0308 	add.w	r3, r4, #8
   86004:	6964      	ldr	r4, [r4, #20]
   86006:	42a3      	cmp	r3, r4
   86008:	bf08      	it	eq
   8600a:	f10c 0c02 	addeq.w	ip, ip, #2
   8600e:	f43f ae67 	beq.w	85ce0 <_malloc_r+0xbc>
   86012:	e623      	b.n	85c5c <_malloc_r+0x38>
   86014:	4419      	add	r1, r3
   86016:	6848      	ldr	r0, [r1, #4]
   86018:	461c      	mov	r4, r3
   8601a:	f854 2f08 	ldr.w	r2, [r4, #8]!
   8601e:	68db      	ldr	r3, [r3, #12]
   86020:	f040 0501 	orr.w	r5, r0, #1
   86024:	604d      	str	r5, [r1, #4]
   86026:	4630      	mov	r0, r6
   86028:	60d3      	str	r3, [r2, #12]
   8602a:	609a      	str	r2, [r3, #8]
   8602c:	f000 f9be 	bl	863ac <__malloc_unlock>
   86030:	e624      	b.n	85c7c <_malloc_r+0x58>
   86032:	f10c 0c5b 	add.w	ip, ip, #91	; 0x5b
   86036:	ea4f 014c 	mov.w	r1, ip, lsl #1
   8603a:	e63b      	b.n	85cb4 <_malloc_r+0x90>
   8603c:	098a      	lsrs	r2, r1, #6
   8603e:	3238      	adds	r2, #56	; 0x38
   86040:	0050      	lsls	r0, r2, #1
   86042:	e7a8      	b.n	85f96 <_malloc_r+0x372>
   86044:	42bc      	cmp	r4, r7
   86046:	f43f af02 	beq.w	85e4e <_malloc_r+0x22a>
   8604a:	68bc      	ldr	r4, [r7, #8]
   8604c:	6862      	ldr	r2, [r4, #4]
   8604e:	f022 0203 	bic.w	r2, r2, #3
   86052:	e761      	b.n	85f18 <_malloc_r+0x2f4>
   86054:	f8d8 8000 	ldr.w	r8, [r8]
   86058:	4598      	cmp	r8, r3
   8605a:	d17a      	bne.n	86152 <_malloc_r+0x52e>
   8605c:	f01c 0f03 	tst.w	ip, #3
   86060:	f1a8 0308 	sub.w	r3, r8, #8
   86064:	f10c 3cff 	add.w	ip, ip, #4294967295
   86068:	d1f4      	bne.n	86054 <_malloc_r+0x430>
   8606a:	687b      	ldr	r3, [r7, #4]
   8606c:	ea23 0300 	bic.w	r3, r3, r0
   86070:	607b      	str	r3, [r7, #4]
   86072:	0040      	lsls	r0, r0, #1
   86074:	4298      	cmp	r0, r3
   86076:	f63f aebe 	bhi.w	85df6 <_malloc_r+0x1d2>
   8607a:	2800      	cmp	r0, #0
   8607c:	f43f aebb 	beq.w	85df6 <_malloc_r+0x1d2>
   86080:	4203      	tst	r3, r0
   86082:	46cc      	mov	ip, r9
   86084:	f47f ae64 	bne.w	85d50 <_malloc_r+0x12c>
   86088:	0040      	lsls	r0, r0, #1
   8608a:	4203      	tst	r3, r0
   8608c:	f10c 0c04 	add.w	ip, ip, #4
   86090:	d0fa      	beq.n	86088 <_malloc_r+0x464>
   86092:	e65d      	b.n	85d50 <_malloc_r+0x12c>
   86094:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
   86098:	d819      	bhi.n	860ce <_malloc_r+0x4aa>
   8609a:	ea4f 3cd5 	mov.w	ip, r5, lsr #15
   8609e:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
   860a2:	ea4f 014c 	mov.w	r1, ip, lsl #1
   860a6:	e605      	b.n	85cb4 <_malloc_r+0x90>
   860a8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   860ac:	e6ee      	b.n	85e8c <_malloc_r+0x268>
   860ae:	2301      	movs	r3, #1
   860b0:	f8c8 3004 	str.w	r3, [r8, #4]
   860b4:	4644      	mov	r4, r8
   860b6:	2200      	movs	r2, #0
   860b8:	e72e      	b.n	85f18 <_malloc_r+0x2f4>
   860ba:	1092      	asrs	r2, r2, #2
   860bc:	2001      	movs	r0, #1
   860be:	4090      	lsls	r0, r2
   860c0:	f8d8 2004 	ldr.w	r2, [r8, #4]
   860c4:	4619      	mov	r1, r3
   860c6:	4302      	orrs	r2, r0
   860c8:	f8c8 2004 	str.w	r2, [r8, #4]
   860cc:	e775      	b.n	85fba <_malloc_r+0x396>
   860ce:	f240 5354 	movw	r3, #1364	; 0x554
   860d2:	459c      	cmp	ip, r3
   860d4:	d81b      	bhi.n	8610e <_malloc_r+0x4ea>
   860d6:	ea4f 4c95 	mov.w	ip, r5, lsr #18
   860da:	f10c 0c7c 	add.w	ip, ip, #124	; 0x7c
   860de:	ea4f 014c 	mov.w	r1, ip, lsl #1
   860e2:	e5e7      	b.n	85cb4 <_malloc_r+0x90>
   860e4:	f10a 0a10 	add.w	sl, sl, #16
   860e8:	e6a3      	b.n	85e32 <_malloc_r+0x20e>
   860ea:	2b54      	cmp	r3, #84	; 0x54
   860ec:	d81f      	bhi.n	8612e <_malloc_r+0x50a>
   860ee:	0b0a      	lsrs	r2, r1, #12
   860f0:	326e      	adds	r2, #110	; 0x6e
   860f2:	0050      	lsls	r0, r2, #1
   860f4:	e74f      	b.n	85f96 <_malloc_r+0x372>
   860f6:	f3cb 010b 	ubfx	r1, fp, #0, #12
   860fa:	2900      	cmp	r1, #0
   860fc:	f47f aeb1 	bne.w	85e62 <_malloc_r+0x23e>
   86100:	eb0a 0109 	add.w	r1, sl, r9
   86104:	68ba      	ldr	r2, [r7, #8]
   86106:	f041 0101 	orr.w	r1, r1, #1
   8610a:	6051      	str	r1, [r2, #4]
   8610c:	e6f6      	b.n	85efc <_malloc_r+0x2d8>
   8610e:	21fc      	movs	r1, #252	; 0xfc
   86110:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
   86114:	e5ce      	b.n	85cb4 <_malloc_r+0x90>
   86116:	2201      	movs	r2, #1
   86118:	f04f 0a00 	mov.w	sl, #0
   8611c:	e6cb      	b.n	85eb6 <_malloc_r+0x292>
   8611e:	f104 0108 	add.w	r1, r4, #8
   86122:	4630      	mov	r0, r6
   86124:	f7ff fa7c 	bl	85620 <_free_r>
   86128:	f8da 3000 	ldr.w	r3, [sl]
   8612c:	e6e6      	b.n	85efc <_malloc_r+0x2d8>
   8612e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   86132:	d803      	bhi.n	8613c <_malloc_r+0x518>
   86134:	0bca      	lsrs	r2, r1, #15
   86136:	3277      	adds	r2, #119	; 0x77
   86138:	0050      	lsls	r0, r2, #1
   8613a:	e72c      	b.n	85f96 <_malloc_r+0x372>
   8613c:	f240 5254 	movw	r2, #1364	; 0x554
   86140:	4293      	cmp	r3, r2
   86142:	d803      	bhi.n	8614c <_malloc_r+0x528>
   86144:	0c8a      	lsrs	r2, r1, #18
   86146:	327c      	adds	r2, #124	; 0x7c
   86148:	0050      	lsls	r0, r2, #1
   8614a:	e724      	b.n	85f96 <_malloc_r+0x372>
   8614c:	20fc      	movs	r0, #252	; 0xfc
   8614e:	227e      	movs	r2, #126	; 0x7e
   86150:	e721      	b.n	85f96 <_malloc_r+0x372>
   86152:	687b      	ldr	r3, [r7, #4]
   86154:	e78d      	b.n	86072 <_malloc_r+0x44e>
   86156:	bf00      	nop
   86158:	200705c0 	.word	0x200705c0

0008615c <memchr>:
   8615c:	0783      	lsls	r3, r0, #30
   8615e:	b470      	push	{r4, r5, r6}
   86160:	b2c9      	uxtb	r1, r1
   86162:	d040      	beq.n	861e6 <memchr+0x8a>
   86164:	1e54      	subs	r4, r2, #1
   86166:	b32a      	cbz	r2, 861b4 <memchr+0x58>
   86168:	7803      	ldrb	r3, [r0, #0]
   8616a:	428b      	cmp	r3, r1
   8616c:	d023      	beq.n	861b6 <memchr+0x5a>
   8616e:	1c43      	adds	r3, r0, #1
   86170:	e004      	b.n	8617c <memchr+0x20>
   86172:	b1fc      	cbz	r4, 861b4 <memchr+0x58>
   86174:	7805      	ldrb	r5, [r0, #0]
   86176:	4614      	mov	r4, r2
   86178:	428d      	cmp	r5, r1
   8617a:	d01c      	beq.n	861b6 <memchr+0x5a>
   8617c:	f013 0f03 	tst.w	r3, #3
   86180:	4618      	mov	r0, r3
   86182:	f104 32ff 	add.w	r2, r4, #4294967295
   86186:	f103 0301 	add.w	r3, r3, #1
   8618a:	d1f2      	bne.n	86172 <memchr+0x16>
   8618c:	2c03      	cmp	r4, #3
   8618e:	d814      	bhi.n	861ba <memchr+0x5e>
   86190:	1e65      	subs	r5, r4, #1
   86192:	b354      	cbz	r4, 861ea <memchr+0x8e>
   86194:	7803      	ldrb	r3, [r0, #0]
   86196:	428b      	cmp	r3, r1
   86198:	d00d      	beq.n	861b6 <memchr+0x5a>
   8619a:	1c42      	adds	r2, r0, #1
   8619c:	2300      	movs	r3, #0
   8619e:	e002      	b.n	861a6 <memchr+0x4a>
   861a0:	7804      	ldrb	r4, [r0, #0]
   861a2:	428c      	cmp	r4, r1
   861a4:	d007      	beq.n	861b6 <memchr+0x5a>
   861a6:	42ab      	cmp	r3, r5
   861a8:	4610      	mov	r0, r2
   861aa:	f103 0301 	add.w	r3, r3, #1
   861ae:	f102 0201 	add.w	r2, r2, #1
   861b2:	d1f5      	bne.n	861a0 <memchr+0x44>
   861b4:	2000      	movs	r0, #0
   861b6:	bc70      	pop	{r4, r5, r6}
   861b8:	4770      	bx	lr
   861ba:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
   861be:	4603      	mov	r3, r0
   861c0:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
   861c4:	681a      	ldr	r2, [r3, #0]
   861c6:	4618      	mov	r0, r3
   861c8:	4072      	eors	r2, r6
   861ca:	f1a2 3501 	sub.w	r5, r2, #16843009	; 0x1010101
   861ce:	ea25 0202 	bic.w	r2, r5, r2
   861d2:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
   861d6:	f103 0304 	add.w	r3, r3, #4
   861da:	d1d9      	bne.n	86190 <memchr+0x34>
   861dc:	3c04      	subs	r4, #4
   861de:	2c03      	cmp	r4, #3
   861e0:	4618      	mov	r0, r3
   861e2:	d8ef      	bhi.n	861c4 <memchr+0x68>
   861e4:	e7d4      	b.n	86190 <memchr+0x34>
   861e6:	4614      	mov	r4, r2
   861e8:	e7d0      	b.n	8618c <memchr+0x30>
   861ea:	4620      	mov	r0, r4
   861ec:	e7e3      	b.n	861b6 <memchr+0x5a>
   861ee:	bf00      	nop

000861f0 <memcpy>:
   861f0:	4684      	mov	ip, r0
   861f2:	ea41 0300 	orr.w	r3, r1, r0
   861f6:	f013 0303 	ands.w	r3, r3, #3
   861fa:	d149      	bne.n	86290 <memcpy+0xa0>
   861fc:	3a40      	subs	r2, #64	; 0x40
   861fe:	d323      	bcc.n	86248 <memcpy+0x58>
   86200:	680b      	ldr	r3, [r1, #0]
   86202:	6003      	str	r3, [r0, #0]
   86204:	684b      	ldr	r3, [r1, #4]
   86206:	6043      	str	r3, [r0, #4]
   86208:	688b      	ldr	r3, [r1, #8]
   8620a:	6083      	str	r3, [r0, #8]
   8620c:	68cb      	ldr	r3, [r1, #12]
   8620e:	60c3      	str	r3, [r0, #12]
   86210:	690b      	ldr	r3, [r1, #16]
   86212:	6103      	str	r3, [r0, #16]
   86214:	694b      	ldr	r3, [r1, #20]
   86216:	6143      	str	r3, [r0, #20]
   86218:	698b      	ldr	r3, [r1, #24]
   8621a:	6183      	str	r3, [r0, #24]
   8621c:	69cb      	ldr	r3, [r1, #28]
   8621e:	61c3      	str	r3, [r0, #28]
   86220:	6a0b      	ldr	r3, [r1, #32]
   86222:	6203      	str	r3, [r0, #32]
   86224:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   86226:	6243      	str	r3, [r0, #36]	; 0x24
   86228:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   8622a:	6283      	str	r3, [r0, #40]	; 0x28
   8622c:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   8622e:	62c3      	str	r3, [r0, #44]	; 0x2c
   86230:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   86232:	6303      	str	r3, [r0, #48]	; 0x30
   86234:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   86236:	6343      	str	r3, [r0, #52]	; 0x34
   86238:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   8623a:	6383      	str	r3, [r0, #56]	; 0x38
   8623c:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   8623e:	63c3      	str	r3, [r0, #60]	; 0x3c
   86240:	3040      	adds	r0, #64	; 0x40
   86242:	3140      	adds	r1, #64	; 0x40
   86244:	3a40      	subs	r2, #64	; 0x40
   86246:	d2db      	bcs.n	86200 <memcpy+0x10>
   86248:	3230      	adds	r2, #48	; 0x30
   8624a:	d30b      	bcc.n	86264 <memcpy+0x74>
   8624c:	680b      	ldr	r3, [r1, #0]
   8624e:	6003      	str	r3, [r0, #0]
   86250:	684b      	ldr	r3, [r1, #4]
   86252:	6043      	str	r3, [r0, #4]
   86254:	688b      	ldr	r3, [r1, #8]
   86256:	6083      	str	r3, [r0, #8]
   86258:	68cb      	ldr	r3, [r1, #12]
   8625a:	60c3      	str	r3, [r0, #12]
   8625c:	3010      	adds	r0, #16
   8625e:	3110      	adds	r1, #16
   86260:	3a10      	subs	r2, #16
   86262:	d2f3      	bcs.n	8624c <memcpy+0x5c>
   86264:	320c      	adds	r2, #12
   86266:	d305      	bcc.n	86274 <memcpy+0x84>
   86268:	f851 3b04 	ldr.w	r3, [r1], #4
   8626c:	f840 3b04 	str.w	r3, [r0], #4
   86270:	3a04      	subs	r2, #4
   86272:	d2f9      	bcs.n	86268 <memcpy+0x78>
   86274:	3204      	adds	r2, #4
   86276:	d008      	beq.n	8628a <memcpy+0x9a>
   86278:	07d2      	lsls	r2, r2, #31
   8627a:	bf1c      	itt	ne
   8627c:	f811 3b01 	ldrbne.w	r3, [r1], #1
   86280:	f800 3b01 	strbne.w	r3, [r0], #1
   86284:	d301      	bcc.n	8628a <memcpy+0x9a>
   86286:	880b      	ldrh	r3, [r1, #0]
   86288:	8003      	strh	r3, [r0, #0]
   8628a:	4660      	mov	r0, ip
   8628c:	4770      	bx	lr
   8628e:	bf00      	nop
   86290:	2a08      	cmp	r2, #8
   86292:	d313      	bcc.n	862bc <memcpy+0xcc>
   86294:	078b      	lsls	r3, r1, #30
   86296:	d0b1      	beq.n	861fc <memcpy+0xc>
   86298:	f010 0303 	ands.w	r3, r0, #3
   8629c:	d0ae      	beq.n	861fc <memcpy+0xc>
   8629e:	f1c3 0304 	rsb	r3, r3, #4
   862a2:	1ad2      	subs	r2, r2, r3
   862a4:	07db      	lsls	r3, r3, #31
   862a6:	bf1c      	itt	ne
   862a8:	f811 3b01 	ldrbne.w	r3, [r1], #1
   862ac:	f800 3b01 	strbne.w	r3, [r0], #1
   862b0:	d3a4      	bcc.n	861fc <memcpy+0xc>
   862b2:	f831 3b02 	ldrh.w	r3, [r1], #2
   862b6:	f820 3b02 	strh.w	r3, [r0], #2
   862ba:	e79f      	b.n	861fc <memcpy+0xc>
   862bc:	3a04      	subs	r2, #4
   862be:	d3d9      	bcc.n	86274 <memcpy+0x84>
   862c0:	3a01      	subs	r2, #1
   862c2:	f811 3b01 	ldrb.w	r3, [r1], #1
   862c6:	f800 3b01 	strb.w	r3, [r0], #1
   862ca:	d2f9      	bcs.n	862c0 <memcpy+0xd0>
   862cc:	780b      	ldrb	r3, [r1, #0]
   862ce:	7003      	strb	r3, [r0, #0]
   862d0:	784b      	ldrb	r3, [r1, #1]
   862d2:	7043      	strb	r3, [r0, #1]
   862d4:	788b      	ldrb	r3, [r1, #2]
   862d6:	7083      	strb	r3, [r0, #2]
   862d8:	4660      	mov	r0, ip
   862da:	4770      	bx	lr

000862dc <memmove>:
   862dc:	4288      	cmp	r0, r1
   862de:	b4f0      	push	{r4, r5, r6, r7}
   862e0:	d910      	bls.n	86304 <memmove+0x28>
   862e2:	188c      	adds	r4, r1, r2
   862e4:	42a0      	cmp	r0, r4
   862e6:	d20d      	bcs.n	86304 <memmove+0x28>
   862e8:	1885      	adds	r5, r0, r2
   862ea:	1e53      	subs	r3, r2, #1
   862ec:	b142      	cbz	r2, 86300 <memmove+0x24>
   862ee:	4621      	mov	r1, r4
   862f0:	462a      	mov	r2, r5
   862f2:	f811 4d01 	ldrb.w	r4, [r1, #-1]!
   862f6:	3b01      	subs	r3, #1
   862f8:	f802 4d01 	strb.w	r4, [r2, #-1]!
   862fc:	1c5c      	adds	r4, r3, #1
   862fe:	d1f8      	bne.n	862f2 <memmove+0x16>
   86300:	bcf0      	pop	{r4, r5, r6, r7}
   86302:	4770      	bx	lr
   86304:	2a0f      	cmp	r2, #15
   86306:	d944      	bls.n	86392 <memmove+0xb6>
   86308:	ea40 0301 	orr.w	r3, r0, r1
   8630c:	079b      	lsls	r3, r3, #30
   8630e:	d144      	bne.n	8639a <memmove+0xbe>
   86310:	f1a2 0710 	sub.w	r7, r2, #16
   86314:	093f      	lsrs	r7, r7, #4
   86316:	eb00 1607 	add.w	r6, r0, r7, lsl #4
   8631a:	3610      	adds	r6, #16
   8631c:	460c      	mov	r4, r1
   8631e:	4603      	mov	r3, r0
   86320:	6825      	ldr	r5, [r4, #0]
   86322:	3310      	adds	r3, #16
   86324:	f843 5c10 	str.w	r5, [r3, #-16]
   86328:	6865      	ldr	r5, [r4, #4]
   8632a:	3410      	adds	r4, #16
   8632c:	f843 5c0c 	str.w	r5, [r3, #-12]
   86330:	f854 5c08 	ldr.w	r5, [r4, #-8]
   86334:	f843 5c08 	str.w	r5, [r3, #-8]
   86338:	f854 5c04 	ldr.w	r5, [r4, #-4]
   8633c:	f843 5c04 	str.w	r5, [r3, #-4]
   86340:	42b3      	cmp	r3, r6
   86342:	d1ed      	bne.n	86320 <memmove+0x44>
   86344:	1c7b      	adds	r3, r7, #1
   86346:	f002 0c0f 	and.w	ip, r2, #15
   8634a:	011b      	lsls	r3, r3, #4
   8634c:	f1bc 0f03 	cmp.w	ip, #3
   86350:	4419      	add	r1, r3
   86352:	4403      	add	r3, r0
   86354:	d923      	bls.n	8639e <memmove+0xc2>
   86356:	460e      	mov	r6, r1
   86358:	461d      	mov	r5, r3
   8635a:	4664      	mov	r4, ip
   8635c:	f856 7b04 	ldr.w	r7, [r6], #4
   86360:	3c04      	subs	r4, #4
   86362:	2c03      	cmp	r4, #3
   86364:	f845 7b04 	str.w	r7, [r5], #4
   86368:	d8f8      	bhi.n	8635c <memmove+0x80>
   8636a:	f1ac 0404 	sub.w	r4, ip, #4
   8636e:	f024 0403 	bic.w	r4, r4, #3
   86372:	3404      	adds	r4, #4
   86374:	f002 0203 	and.w	r2, r2, #3
   86378:	4423      	add	r3, r4
   8637a:	4421      	add	r1, r4
   8637c:	2a00      	cmp	r2, #0
   8637e:	d0bf      	beq.n	86300 <memmove+0x24>
   86380:	441a      	add	r2, r3
   86382:	f811 4b01 	ldrb.w	r4, [r1], #1
   86386:	f803 4b01 	strb.w	r4, [r3], #1
   8638a:	4293      	cmp	r3, r2
   8638c:	d1f9      	bne.n	86382 <memmove+0xa6>
   8638e:	bcf0      	pop	{r4, r5, r6, r7}
   86390:	4770      	bx	lr
   86392:	4603      	mov	r3, r0
   86394:	2a00      	cmp	r2, #0
   86396:	d1f3      	bne.n	86380 <memmove+0xa4>
   86398:	e7b2      	b.n	86300 <memmove+0x24>
   8639a:	4603      	mov	r3, r0
   8639c:	e7f0      	b.n	86380 <memmove+0xa4>
   8639e:	4662      	mov	r2, ip
   863a0:	2a00      	cmp	r2, #0
   863a2:	d1ed      	bne.n	86380 <memmove+0xa4>
   863a4:	e7ac      	b.n	86300 <memmove+0x24>
   863a6:	bf00      	nop

000863a8 <__malloc_lock>:
   863a8:	4770      	bx	lr
   863aa:	bf00      	nop

000863ac <__malloc_unlock>:
   863ac:	4770      	bx	lr
   863ae:	bf00      	nop

000863b0 <_Balloc>:
   863b0:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
   863b2:	b570      	push	{r4, r5, r6, lr}
   863b4:	4605      	mov	r5, r0
   863b6:	460c      	mov	r4, r1
   863b8:	b14a      	cbz	r2, 863ce <_Balloc+0x1e>
   863ba:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
   863be:	b180      	cbz	r0, 863e2 <_Balloc+0x32>
   863c0:	6801      	ldr	r1, [r0, #0]
   863c2:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
   863c6:	2200      	movs	r2, #0
   863c8:	6102      	str	r2, [r0, #16]
   863ca:	60c2      	str	r2, [r0, #12]
   863cc:	bd70      	pop	{r4, r5, r6, pc}
   863ce:	2221      	movs	r2, #33	; 0x21
   863d0:	2104      	movs	r1, #4
   863d2:	f000 fe79 	bl	870c8 <_calloc_r>
   863d6:	64e8      	str	r0, [r5, #76]	; 0x4c
   863d8:	4602      	mov	r2, r0
   863da:	2800      	cmp	r0, #0
   863dc:	d1ed      	bne.n	863ba <_Balloc+0xa>
   863de:	2000      	movs	r0, #0
   863e0:	bd70      	pop	{r4, r5, r6, pc}
   863e2:	2101      	movs	r1, #1
   863e4:	fa01 f604 	lsl.w	r6, r1, r4
   863e8:	1d72      	adds	r2, r6, #5
   863ea:	4628      	mov	r0, r5
   863ec:	0092      	lsls	r2, r2, #2
   863ee:	f000 fe6b 	bl	870c8 <_calloc_r>
   863f2:	2800      	cmp	r0, #0
   863f4:	d0f3      	beq.n	863de <_Balloc+0x2e>
   863f6:	6044      	str	r4, [r0, #4]
   863f8:	6086      	str	r6, [r0, #8]
   863fa:	e7e4      	b.n	863c6 <_Balloc+0x16>

000863fc <_Bfree>:
   863fc:	b131      	cbz	r1, 8640c <_Bfree+0x10>
   863fe:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   86400:	684a      	ldr	r2, [r1, #4]
   86402:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   86406:	6008      	str	r0, [r1, #0]
   86408:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   8640c:	4770      	bx	lr
   8640e:	bf00      	nop

00086410 <__multadd>:
   86410:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   86414:	690f      	ldr	r7, [r1, #16]
   86416:	b083      	sub	sp, #12
   86418:	4688      	mov	r8, r1
   8641a:	4681      	mov	r9, r0
   8641c:	f101 0514 	add.w	r5, r1, #20
   86420:	2400      	movs	r4, #0
   86422:	682e      	ldr	r6, [r5, #0]
   86424:	3401      	adds	r4, #1
   86426:	b2b1      	uxth	r1, r6
   86428:	0c36      	lsrs	r6, r6, #16
   8642a:	fb02 3301 	mla	r3, r2, r1, r3
   8642e:	fb02 f606 	mul.w	r6, r2, r6
   86432:	b299      	uxth	r1, r3
   86434:	eb06 4313 	add.w	r3, r6, r3, lsr #16
   86438:	eb01 4103 	add.w	r1, r1, r3, lsl #16
   8643c:	42a7      	cmp	r7, r4
   8643e:	f845 1b04 	str.w	r1, [r5], #4
   86442:	ea4f 4313 	mov.w	r3, r3, lsr #16
   86446:	dcec      	bgt.n	86422 <__multadd+0x12>
   86448:	b14b      	cbz	r3, 8645e <__multadd+0x4e>
   8644a:	f8d8 2008 	ldr.w	r2, [r8, #8]
   8644e:	4297      	cmp	r7, r2
   86450:	da09      	bge.n	86466 <__multadd+0x56>
   86452:	eb08 0287 	add.w	r2, r8, r7, lsl #2
   86456:	3701      	adds	r7, #1
   86458:	6153      	str	r3, [r2, #20]
   8645a:	f8c8 7010 	str.w	r7, [r8, #16]
   8645e:	4640      	mov	r0, r8
   86460:	b003      	add	sp, #12
   86462:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   86466:	f8d8 1004 	ldr.w	r1, [r8, #4]
   8646a:	4648      	mov	r0, r9
   8646c:	3101      	adds	r1, #1
   8646e:	9301      	str	r3, [sp, #4]
   86470:	f7ff ff9e 	bl	863b0 <_Balloc>
   86474:	f8d8 2010 	ldr.w	r2, [r8, #16]
   86478:	f108 010c 	add.w	r1, r8, #12
   8647c:	3202      	adds	r2, #2
   8647e:	4604      	mov	r4, r0
   86480:	0092      	lsls	r2, r2, #2
   86482:	300c      	adds	r0, #12
   86484:	f7ff feb4 	bl	861f0 <memcpy>
   86488:	f8d9 204c 	ldr.w	r2, [r9, #76]	; 0x4c
   8648c:	f8d8 1004 	ldr.w	r1, [r8, #4]
   86490:	9b01      	ldr	r3, [sp, #4]
   86492:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   86496:	f8c8 0000 	str.w	r0, [r8]
   8649a:	f842 8021 	str.w	r8, [r2, r1, lsl #2]
   8649e:	46a0      	mov	r8, r4
   864a0:	e7d7      	b.n	86452 <__multadd+0x42>
   864a2:	bf00      	nop

000864a4 <__hi0bits>:
   864a4:	0c03      	lsrs	r3, r0, #16
   864a6:	041b      	lsls	r3, r3, #16
   864a8:	b9b3      	cbnz	r3, 864d8 <__hi0bits+0x34>
   864aa:	0400      	lsls	r0, r0, #16
   864ac:	2310      	movs	r3, #16
   864ae:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
   864b2:	bf04      	itt	eq
   864b4:	0200      	lsleq	r0, r0, #8
   864b6:	3308      	addeq	r3, #8
   864b8:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
   864bc:	bf04      	itt	eq
   864be:	0100      	lsleq	r0, r0, #4
   864c0:	3304      	addeq	r3, #4
   864c2:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
   864c6:	bf04      	itt	eq
   864c8:	0080      	lsleq	r0, r0, #2
   864ca:	3302      	addeq	r3, #2
   864cc:	2800      	cmp	r0, #0
   864ce:	db07      	blt.n	864e0 <__hi0bits+0x3c>
   864d0:	0042      	lsls	r2, r0, #1
   864d2:	d403      	bmi.n	864dc <__hi0bits+0x38>
   864d4:	2020      	movs	r0, #32
   864d6:	4770      	bx	lr
   864d8:	2300      	movs	r3, #0
   864da:	e7e8      	b.n	864ae <__hi0bits+0xa>
   864dc:	1c58      	adds	r0, r3, #1
   864de:	4770      	bx	lr
   864e0:	4618      	mov	r0, r3
   864e2:	4770      	bx	lr

000864e4 <__lo0bits>:
   864e4:	6803      	ldr	r3, [r0, #0]
   864e6:	f013 0207 	ands.w	r2, r3, #7
   864ea:	d007      	beq.n	864fc <__lo0bits+0x18>
   864ec:	07d9      	lsls	r1, r3, #31
   864ee:	d420      	bmi.n	86532 <__lo0bits+0x4e>
   864f0:	079a      	lsls	r2, r3, #30
   864f2:	d420      	bmi.n	86536 <__lo0bits+0x52>
   864f4:	089b      	lsrs	r3, r3, #2
   864f6:	6003      	str	r3, [r0, #0]
   864f8:	2002      	movs	r0, #2
   864fa:	4770      	bx	lr
   864fc:	b299      	uxth	r1, r3
   864fe:	b909      	cbnz	r1, 86504 <__lo0bits+0x20>
   86500:	0c1b      	lsrs	r3, r3, #16
   86502:	2210      	movs	r2, #16
   86504:	f013 0fff 	tst.w	r3, #255	; 0xff
   86508:	bf04      	itt	eq
   8650a:	0a1b      	lsreq	r3, r3, #8
   8650c:	3208      	addeq	r2, #8
   8650e:	0719      	lsls	r1, r3, #28
   86510:	bf04      	itt	eq
   86512:	091b      	lsreq	r3, r3, #4
   86514:	3204      	addeq	r2, #4
   86516:	0799      	lsls	r1, r3, #30
   86518:	bf04      	itt	eq
   8651a:	089b      	lsreq	r3, r3, #2
   8651c:	3202      	addeq	r2, #2
   8651e:	07d9      	lsls	r1, r3, #31
   86520:	d404      	bmi.n	8652c <__lo0bits+0x48>
   86522:	085b      	lsrs	r3, r3, #1
   86524:	d101      	bne.n	8652a <__lo0bits+0x46>
   86526:	2020      	movs	r0, #32
   86528:	4770      	bx	lr
   8652a:	3201      	adds	r2, #1
   8652c:	6003      	str	r3, [r0, #0]
   8652e:	4610      	mov	r0, r2
   86530:	4770      	bx	lr
   86532:	2000      	movs	r0, #0
   86534:	4770      	bx	lr
   86536:	085b      	lsrs	r3, r3, #1
   86538:	6003      	str	r3, [r0, #0]
   8653a:	2001      	movs	r0, #1
   8653c:	4770      	bx	lr
   8653e:	bf00      	nop

00086540 <__i2b>:
   86540:	b510      	push	{r4, lr}
   86542:	460c      	mov	r4, r1
   86544:	2101      	movs	r1, #1
   86546:	f7ff ff33 	bl	863b0 <_Balloc>
   8654a:	2201      	movs	r2, #1
   8654c:	6144      	str	r4, [r0, #20]
   8654e:	6102      	str	r2, [r0, #16]
   86550:	bd10      	pop	{r4, pc}
   86552:	bf00      	nop

00086554 <__multiply>:
   86554:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86558:	690d      	ldr	r5, [r1, #16]
   8655a:	f8d2 9010 	ldr.w	r9, [r2, #16]
   8655e:	b085      	sub	sp, #20
   86560:	454d      	cmp	r5, r9
   86562:	460c      	mov	r4, r1
   86564:	4692      	mov	sl, r2
   86566:	da04      	bge.n	86572 <__multiply+0x1e>
   86568:	462a      	mov	r2, r5
   8656a:	4654      	mov	r4, sl
   8656c:	464d      	mov	r5, r9
   8656e:	468a      	mov	sl, r1
   86570:	4691      	mov	r9, r2
   86572:	68a3      	ldr	r3, [r4, #8]
   86574:	eb05 0709 	add.w	r7, r5, r9
   86578:	6861      	ldr	r1, [r4, #4]
   8657a:	429f      	cmp	r7, r3
   8657c:	bfc8      	it	gt
   8657e:	3101      	addgt	r1, #1
   86580:	f7ff ff16 	bl	863b0 <_Balloc>
   86584:	f100 0614 	add.w	r6, r0, #20
   86588:	eb06 0887 	add.w	r8, r6, r7, lsl #2
   8658c:	4546      	cmp	r6, r8
   8658e:	9001      	str	r0, [sp, #4]
   86590:	d205      	bcs.n	8659e <__multiply+0x4a>
   86592:	4633      	mov	r3, r6
   86594:	2000      	movs	r0, #0
   86596:	f843 0b04 	str.w	r0, [r3], #4
   8659a:	4598      	cmp	r8, r3
   8659c:	d8fb      	bhi.n	86596 <__multiply+0x42>
   8659e:	f10a 0c14 	add.w	ip, sl, #20
   865a2:	eb0c 0989 	add.w	r9, ip, r9, lsl #2
   865a6:	3414      	adds	r4, #20
   865a8:	45cc      	cmp	ip, r9
   865aa:	9400      	str	r4, [sp, #0]
   865ac:	eb04 0585 	add.w	r5, r4, r5, lsl #2
   865b0:	d25b      	bcs.n	8666a <__multiply+0x116>
   865b2:	f8cd 8008 	str.w	r8, [sp, #8]
   865b6:	9703      	str	r7, [sp, #12]
   865b8:	46c8      	mov	r8, r9
   865ba:	f85c 3b04 	ldr.w	r3, [ip], #4
   865be:	b29c      	uxth	r4, r3
   865c0:	b324      	cbz	r4, 8660c <__multiply+0xb8>
   865c2:	9a00      	ldr	r2, [sp, #0]
   865c4:	4633      	mov	r3, r6
   865c6:	f04f 0900 	mov.w	r9, #0
   865ca:	e000      	b.n	865ce <__multiply+0x7a>
   865cc:	460b      	mov	r3, r1
   865ce:	f852 7b04 	ldr.w	r7, [r2], #4
   865d2:	6819      	ldr	r1, [r3, #0]
   865d4:	fa1f fb87 	uxth.w	fp, r7
   865d8:	fa1f fa81 	uxth.w	sl, r1
   865dc:	0c38      	lsrs	r0, r7, #16
   865de:	0c09      	lsrs	r1, r1, #16
   865e0:	fb04 aa0b 	mla	sl, r4, fp, sl
   865e4:	fb04 1000 	mla	r0, r4, r0, r1
   865e8:	44d1      	add	r9, sl
   865ea:	eb00 4019 	add.w	r0, r0, r9, lsr #16
   865ee:	fa1f f989 	uxth.w	r9, r9
   865f2:	ea49 4700 	orr.w	r7, r9, r0, lsl #16
   865f6:	4619      	mov	r1, r3
   865f8:	4295      	cmp	r5, r2
   865fa:	ea4f 4910 	mov.w	r9, r0, lsr #16
   865fe:	f841 7b04 	str.w	r7, [r1], #4
   86602:	d8e3      	bhi.n	865cc <__multiply+0x78>
   86604:	f8c3 9004 	str.w	r9, [r3, #4]
   86608:	f85c 3c04 	ldr.w	r3, [ip, #-4]
   8660c:	ea5f 4913 	movs.w	r9, r3, lsr #16
   86610:	d024      	beq.n	8665c <__multiply+0x108>
   86612:	f8d6 a000 	ldr.w	sl, [r6]
   86616:	9b00      	ldr	r3, [sp, #0]
   86618:	4650      	mov	r0, sl
   8661a:	4631      	mov	r1, r6
   8661c:	f04f 0b00 	mov.w	fp, #0
   86620:	e000      	b.n	86624 <__multiply+0xd0>
   86622:	4611      	mov	r1, r2
   86624:	881a      	ldrh	r2, [r3, #0]
   86626:	0c00      	lsrs	r0, r0, #16
   86628:	fb09 0002 	mla	r0, r9, r2, r0
   8662c:	fa1f fa8a 	uxth.w	sl, sl
   86630:	4483      	add	fp, r0
   86632:	ea4a 400b 	orr.w	r0, sl, fp, lsl #16
   86636:	460a      	mov	r2, r1
   86638:	f842 0b04 	str.w	r0, [r2], #4
   8663c:	f853 7b04 	ldr.w	r7, [r3], #4
   86640:	6848      	ldr	r0, [r1, #4]
   86642:	ea4f 4a17 	mov.w	sl, r7, lsr #16
   86646:	b284      	uxth	r4, r0
   86648:	fb09 4a0a 	mla	sl, r9, sl, r4
   8664c:	429d      	cmp	r5, r3
   8664e:	eb0a 4a1b 	add.w	sl, sl, fp, lsr #16
   86652:	ea4f 4b1a 	mov.w	fp, sl, lsr #16
   86656:	d8e4      	bhi.n	86622 <__multiply+0xce>
   86658:	f8c1 a004 	str.w	sl, [r1, #4]
   8665c:	45e0      	cmp	r8, ip
   8665e:	f106 0604 	add.w	r6, r6, #4
   86662:	d8aa      	bhi.n	865ba <__multiply+0x66>
   86664:	f8dd 8008 	ldr.w	r8, [sp, #8]
   86668:	9f03      	ldr	r7, [sp, #12]
   8666a:	2f00      	cmp	r7, #0
   8666c:	dd0a      	ble.n	86684 <__multiply+0x130>
   8666e:	f858 3c04 	ldr.w	r3, [r8, #-4]
   86672:	f1a8 0804 	sub.w	r8, r8, #4
   86676:	b11b      	cbz	r3, 86680 <__multiply+0x12c>
   86678:	e004      	b.n	86684 <__multiply+0x130>
   8667a:	f858 3d04 	ldr.w	r3, [r8, #-4]!
   8667e:	b90b      	cbnz	r3, 86684 <__multiply+0x130>
   86680:	3f01      	subs	r7, #1
   86682:	d1fa      	bne.n	8667a <__multiply+0x126>
   86684:	9b01      	ldr	r3, [sp, #4]
   86686:	4618      	mov	r0, r3
   86688:	611f      	str	r7, [r3, #16]
   8668a:	b005      	add	sp, #20
   8668c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00086690 <__pow5mult>:
   86690:	f012 0303 	ands.w	r3, r2, #3
   86694:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   86698:	4614      	mov	r4, r2
   8669a:	4607      	mov	r7, r0
   8669c:	460e      	mov	r6, r1
   8669e:	d12c      	bne.n	866fa <__pow5mult+0x6a>
   866a0:	10a4      	asrs	r4, r4, #2
   866a2:	d01c      	beq.n	866de <__pow5mult+0x4e>
   866a4:	6cbd      	ldr	r5, [r7, #72]	; 0x48
   866a6:	2d00      	cmp	r5, #0
   866a8:	d030      	beq.n	8670c <__pow5mult+0x7c>
   866aa:	f04f 0800 	mov.w	r8, #0
   866ae:	e004      	b.n	866ba <__pow5mult+0x2a>
   866b0:	1064      	asrs	r4, r4, #1
   866b2:	d014      	beq.n	866de <__pow5mult+0x4e>
   866b4:	6828      	ldr	r0, [r5, #0]
   866b6:	b1a8      	cbz	r0, 866e4 <__pow5mult+0x54>
   866b8:	4605      	mov	r5, r0
   866ba:	07e3      	lsls	r3, r4, #31
   866bc:	d5f8      	bpl.n	866b0 <__pow5mult+0x20>
   866be:	4638      	mov	r0, r7
   866c0:	4631      	mov	r1, r6
   866c2:	462a      	mov	r2, r5
   866c4:	f7ff ff46 	bl	86554 <__multiply>
   866c8:	b1ae      	cbz	r6, 866f6 <__pow5mult+0x66>
   866ca:	6872      	ldr	r2, [r6, #4]
   866cc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   866ce:	1064      	asrs	r4, r4, #1
   866d0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   866d4:	6031      	str	r1, [r6, #0]
   866d6:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   866da:	4606      	mov	r6, r0
   866dc:	d1ea      	bne.n	866b4 <__pow5mult+0x24>
   866de:	4630      	mov	r0, r6
   866e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   866e4:	4638      	mov	r0, r7
   866e6:	4629      	mov	r1, r5
   866e8:	462a      	mov	r2, r5
   866ea:	f7ff ff33 	bl	86554 <__multiply>
   866ee:	6028      	str	r0, [r5, #0]
   866f0:	f8c0 8000 	str.w	r8, [r0]
   866f4:	e7e0      	b.n	866b8 <__pow5mult+0x28>
   866f6:	4606      	mov	r6, r0
   866f8:	e7da      	b.n	866b0 <__pow5mult+0x20>
   866fa:	4a0b      	ldr	r2, [pc, #44]	; (86728 <__pow5mult+0x98>)
   866fc:	3b01      	subs	r3, #1
   866fe:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   86702:	2300      	movs	r3, #0
   86704:	f7ff fe84 	bl	86410 <__multadd>
   86708:	4606      	mov	r6, r0
   8670a:	e7c9      	b.n	866a0 <__pow5mult+0x10>
   8670c:	2101      	movs	r1, #1
   8670e:	4638      	mov	r0, r7
   86710:	f7ff fe4e 	bl	863b0 <_Balloc>
   86714:	f240 2171 	movw	r1, #625	; 0x271
   86718:	2201      	movs	r2, #1
   8671a:	2300      	movs	r3, #0
   8671c:	6141      	str	r1, [r0, #20]
   8671e:	6102      	str	r2, [r0, #16]
   86720:	4605      	mov	r5, r0
   86722:	64b8      	str	r0, [r7, #72]	; 0x48
   86724:	6003      	str	r3, [r0, #0]
   86726:	e7c0      	b.n	866aa <__pow5mult+0x1a>
   86728:	00087ad8 	.word	0x00087ad8

0008672c <__lshift>:
   8672c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86730:	690b      	ldr	r3, [r1, #16]
   86732:	ea4f 1a62 	mov.w	sl, r2, asr #5
   86736:	eb0a 0903 	add.w	r9, sl, r3
   8673a:	688b      	ldr	r3, [r1, #8]
   8673c:	f109 0601 	add.w	r6, r9, #1
   86740:	429e      	cmp	r6, r3
   86742:	460f      	mov	r7, r1
   86744:	4693      	mov	fp, r2
   86746:	4680      	mov	r8, r0
   86748:	6849      	ldr	r1, [r1, #4]
   8674a:	dd04      	ble.n	86756 <__lshift+0x2a>
   8674c:	005b      	lsls	r3, r3, #1
   8674e:	429e      	cmp	r6, r3
   86750:	f101 0101 	add.w	r1, r1, #1
   86754:	dcfa      	bgt.n	8674c <__lshift+0x20>
   86756:	4640      	mov	r0, r8
   86758:	f7ff fe2a 	bl	863b0 <_Balloc>
   8675c:	f1ba 0f00 	cmp.w	sl, #0
   86760:	f100 0414 	add.w	r4, r0, #20
   86764:	dd09      	ble.n	8677a <__lshift+0x4e>
   86766:	2300      	movs	r3, #0
   86768:	461a      	mov	r2, r3
   8676a:	4625      	mov	r5, r4
   8676c:	3301      	adds	r3, #1
   8676e:	4553      	cmp	r3, sl
   86770:	f845 2b04 	str.w	r2, [r5], #4
   86774:	d1fa      	bne.n	8676c <__lshift+0x40>
   86776:	eb04 0483 	add.w	r4, r4, r3, lsl #2
   8677a:	693a      	ldr	r2, [r7, #16]
   8677c:	f107 0314 	add.w	r3, r7, #20
   86780:	f01b 0b1f 	ands.w	fp, fp, #31
   86784:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
   86788:	d021      	beq.n	867ce <__lshift+0xa2>
   8678a:	f1cb 0a20 	rsb	sl, fp, #32
   8678e:	2200      	movs	r2, #0
   86790:	e000      	b.n	86794 <__lshift+0x68>
   86792:	462c      	mov	r4, r5
   86794:	6819      	ldr	r1, [r3, #0]
   86796:	4625      	mov	r5, r4
   86798:	fa01 f10b 	lsl.w	r1, r1, fp
   8679c:	430a      	orrs	r2, r1
   8679e:	f845 2b04 	str.w	r2, [r5], #4
   867a2:	f853 2b04 	ldr.w	r2, [r3], #4
   867a6:	4563      	cmp	r3, ip
   867a8:	fa22 f20a 	lsr.w	r2, r2, sl
   867ac:	d3f1      	bcc.n	86792 <__lshift+0x66>
   867ae:	6062      	str	r2, [r4, #4]
   867b0:	b10a      	cbz	r2, 867b6 <__lshift+0x8a>
   867b2:	f109 0602 	add.w	r6, r9, #2
   867b6:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
   867ba:	687a      	ldr	r2, [r7, #4]
   867bc:	3e01      	subs	r6, #1
   867be:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   867c2:	6106      	str	r6, [r0, #16]
   867c4:	6039      	str	r1, [r7, #0]
   867c6:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   867ca:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   867ce:	f853 2b04 	ldr.w	r2, [r3], #4
   867d2:	459c      	cmp	ip, r3
   867d4:	f844 2b04 	str.w	r2, [r4], #4
   867d8:	d9ed      	bls.n	867b6 <__lshift+0x8a>
   867da:	f853 2b04 	ldr.w	r2, [r3], #4
   867de:	459c      	cmp	ip, r3
   867e0:	f844 2b04 	str.w	r2, [r4], #4
   867e4:	d8f3      	bhi.n	867ce <__lshift+0xa2>
   867e6:	e7e6      	b.n	867b6 <__lshift+0x8a>

000867e8 <__mcmp>:
   867e8:	6902      	ldr	r2, [r0, #16]
   867ea:	690b      	ldr	r3, [r1, #16]
   867ec:	b410      	push	{r4}
   867ee:	1ad2      	subs	r2, r2, r3
   867f0:	d115      	bne.n	8681e <__mcmp+0x36>
   867f2:	009b      	lsls	r3, r3, #2
   867f4:	3014      	adds	r0, #20
   867f6:	3114      	adds	r1, #20
   867f8:	4419      	add	r1, r3
   867fa:	4403      	add	r3, r0
   867fc:	e001      	b.n	86802 <__mcmp+0x1a>
   867fe:	4298      	cmp	r0, r3
   86800:	d211      	bcs.n	86826 <__mcmp+0x3e>
   86802:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   86806:	f851 4d04 	ldr.w	r4, [r1, #-4]!
   8680a:	42a2      	cmp	r2, r4
   8680c:	d0f7      	beq.n	867fe <__mcmp+0x16>
   8680e:	4294      	cmp	r4, r2
   86810:	bf94      	ite	ls
   86812:	2001      	movls	r0, #1
   86814:	f04f 30ff 	movhi.w	r0, #4294967295
   86818:	f85d 4b04 	ldr.w	r4, [sp], #4
   8681c:	4770      	bx	lr
   8681e:	4610      	mov	r0, r2
   86820:	f85d 4b04 	ldr.w	r4, [sp], #4
   86824:	4770      	bx	lr
   86826:	2000      	movs	r0, #0
   86828:	f85d 4b04 	ldr.w	r4, [sp], #4
   8682c:	4770      	bx	lr
   8682e:	bf00      	nop

00086830 <__mdiff>:
   86830:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   86834:	460d      	mov	r5, r1
   86836:	4604      	mov	r4, r0
   86838:	4611      	mov	r1, r2
   8683a:	4628      	mov	r0, r5
   8683c:	4616      	mov	r6, r2
   8683e:	f7ff ffd3 	bl	867e8 <__mcmp>
   86842:	1e07      	subs	r7, r0, #0
   86844:	d056      	beq.n	868f4 <__mdiff+0xc4>
   86846:	db4f      	blt.n	868e8 <__mdiff+0xb8>
   86848:	f04f 0900 	mov.w	r9, #0
   8684c:	6869      	ldr	r1, [r5, #4]
   8684e:	4620      	mov	r0, r4
   86850:	f7ff fdae 	bl	863b0 <_Balloc>
   86854:	692f      	ldr	r7, [r5, #16]
   86856:	6932      	ldr	r2, [r6, #16]
   86858:	3514      	adds	r5, #20
   8685a:	3614      	adds	r6, #20
   8685c:	f8c0 900c 	str.w	r9, [r0, #12]
   86860:	f100 0314 	add.w	r3, r0, #20
   86864:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
   86868:	eb06 0882 	add.w	r8, r6, r2, lsl #2
   8686c:	2100      	movs	r1, #0
   8686e:	f855 4b04 	ldr.w	r4, [r5], #4
   86872:	f856 2b04 	ldr.w	r2, [r6], #4
   86876:	fa1f fa84 	uxth.w	sl, r4
   8687a:	448a      	add	sl, r1
   8687c:	fa1f f982 	uxth.w	r9, r2
   86880:	0c11      	lsrs	r1, r2, #16
   86882:	ebc1 4114 	rsb	r1, r1, r4, lsr #16
   86886:	ebc9 020a 	rsb	r2, r9, sl
   8688a:	eb01 4122 	add.w	r1, r1, r2, asr #16
   8688e:	b292      	uxth	r2, r2
   86890:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   86894:	45b0      	cmp	r8, r6
   86896:	f843 2b04 	str.w	r2, [r3], #4
   8689a:	ea4f 4121 	mov.w	r1, r1, asr #16
   8689e:	462c      	mov	r4, r5
   868a0:	d8e5      	bhi.n	8686e <__mdiff+0x3e>
   868a2:	45ac      	cmp	ip, r5
   868a4:	4698      	mov	r8, r3
   868a6:	d915      	bls.n	868d4 <__mdiff+0xa4>
   868a8:	f854 6b04 	ldr.w	r6, [r4], #4
   868ac:	b2b2      	uxth	r2, r6
   868ae:	4411      	add	r1, r2
   868b0:	0c36      	lsrs	r6, r6, #16
   868b2:	eb06 4621 	add.w	r6, r6, r1, asr #16
   868b6:	b289      	uxth	r1, r1
   868b8:	ea41 4206 	orr.w	r2, r1, r6, lsl #16
   868bc:	45a4      	cmp	ip, r4
   868be:	f843 2b04 	str.w	r2, [r3], #4
   868c2:	ea4f 4126 	mov.w	r1, r6, asr #16
   868c6:	d8ef      	bhi.n	868a8 <__mdiff+0x78>
   868c8:	43eb      	mvns	r3, r5
   868ca:	4463      	add	r3, ip
   868cc:	f023 0303 	bic.w	r3, r3, #3
   868d0:	3304      	adds	r3, #4
   868d2:	4443      	add	r3, r8
   868d4:	3b04      	subs	r3, #4
   868d6:	b922      	cbnz	r2, 868e2 <__mdiff+0xb2>
   868d8:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   868dc:	3f01      	subs	r7, #1
   868de:	2a00      	cmp	r2, #0
   868e0:	d0fa      	beq.n	868d8 <__mdiff+0xa8>
   868e2:	6107      	str	r7, [r0, #16]
   868e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   868e8:	462b      	mov	r3, r5
   868ea:	f04f 0901 	mov.w	r9, #1
   868ee:	4635      	mov	r5, r6
   868f0:	461e      	mov	r6, r3
   868f2:	e7ab      	b.n	8684c <__mdiff+0x1c>
   868f4:	4620      	mov	r0, r4
   868f6:	4639      	mov	r1, r7
   868f8:	f7ff fd5a 	bl	863b0 <_Balloc>
   868fc:	2301      	movs	r3, #1
   868fe:	6147      	str	r7, [r0, #20]
   86900:	6103      	str	r3, [r0, #16]
   86902:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86906:	bf00      	nop

00086908 <__d2b>:
   86908:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   8690c:	2101      	movs	r1, #1
   8690e:	b083      	sub	sp, #12
   86910:	461d      	mov	r5, r3
   86912:	f3c3 560a 	ubfx	r6, r3, #20, #11
   86916:	4614      	mov	r4, r2
   86918:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   8691a:	f7ff fd49 	bl	863b0 <_Balloc>
   8691e:	f3c5 0313 	ubfx	r3, r5, #0, #20
   86922:	4680      	mov	r8, r0
   86924:	b10e      	cbz	r6, 8692a <__d2b+0x22>
   86926:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   8692a:	9301      	str	r3, [sp, #4]
   8692c:	b324      	cbz	r4, 86978 <__d2b+0x70>
   8692e:	a802      	add	r0, sp, #8
   86930:	f840 4d08 	str.w	r4, [r0, #-8]!
   86934:	4668      	mov	r0, sp
   86936:	f7ff fdd5 	bl	864e4 <__lo0bits>
   8693a:	2800      	cmp	r0, #0
   8693c:	d135      	bne.n	869aa <__d2b+0xa2>
   8693e:	e89d 000c 	ldmia.w	sp, {r2, r3}
   86942:	f8c8 2014 	str.w	r2, [r8, #20]
   86946:	2b00      	cmp	r3, #0
   86948:	bf0c      	ite	eq
   8694a:	2401      	moveq	r4, #1
   8694c:	2402      	movne	r4, #2
   8694e:	f8c8 3018 	str.w	r3, [r8, #24]
   86952:	f8c8 4010 	str.w	r4, [r8, #16]
   86956:	b9de      	cbnz	r6, 86990 <__d2b+0x88>
   86958:	eb08 0384 	add.w	r3, r8, r4, lsl #2
   8695c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   86960:	6038      	str	r0, [r7, #0]
   86962:	6918      	ldr	r0, [r3, #16]
   86964:	f7ff fd9e 	bl	864a4 <__hi0bits>
   86968:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8696a:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
   8696e:	6018      	str	r0, [r3, #0]
   86970:	4640      	mov	r0, r8
   86972:	b003      	add	sp, #12
   86974:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   86978:	a801      	add	r0, sp, #4
   8697a:	f7ff fdb3 	bl	864e4 <__lo0bits>
   8697e:	9b01      	ldr	r3, [sp, #4]
   86980:	2401      	movs	r4, #1
   86982:	3020      	adds	r0, #32
   86984:	f8c8 3014 	str.w	r3, [r8, #20]
   86988:	f8c8 4010 	str.w	r4, [r8, #16]
   8698c:	2e00      	cmp	r6, #0
   8698e:	d0e3      	beq.n	86958 <__d2b+0x50>
   86990:	f2a6 4933 	subw	r9, r6, #1075	; 0x433
   86994:	eb09 0300 	add.w	r3, r9, r0
   86998:	603b      	str	r3, [r7, #0]
   8699a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8699c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   869a0:	6018      	str	r0, [r3, #0]
   869a2:	4640      	mov	r0, r8
   869a4:	b003      	add	sp, #12
   869a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   869aa:	9b01      	ldr	r3, [sp, #4]
   869ac:	f1c0 0120 	rsb	r1, r0, #32
   869b0:	fa03 f101 	lsl.w	r1, r3, r1
   869b4:	40c3      	lsrs	r3, r0
   869b6:	9a00      	ldr	r2, [sp, #0]
   869b8:	9301      	str	r3, [sp, #4]
   869ba:	430a      	orrs	r2, r1
   869bc:	f8c8 2014 	str.w	r2, [r8, #20]
   869c0:	e7c1      	b.n	86946 <__d2b+0x3e>
   869c2:	bf00      	nop

000869c4 <_realloc_r>:
   869c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   869c8:	460c      	mov	r4, r1
   869ca:	b083      	sub	sp, #12
   869cc:	4690      	mov	r8, r2
   869ce:	4681      	mov	r9, r0
   869d0:	2900      	cmp	r1, #0
   869d2:	f000 80ba 	beq.w	86b4a <_realloc_r+0x186>
   869d6:	f7ff fce7 	bl	863a8 <__malloc_lock>
   869da:	f108 060b 	add.w	r6, r8, #11
   869de:	f854 3c04 	ldr.w	r3, [r4, #-4]
   869e2:	2e16      	cmp	r6, #22
   869e4:	f023 0503 	bic.w	r5, r3, #3
   869e8:	f1a4 0708 	sub.w	r7, r4, #8
   869ec:	d84b      	bhi.n	86a86 <_realloc_r+0xc2>
   869ee:	2110      	movs	r1, #16
   869f0:	460e      	mov	r6, r1
   869f2:	45b0      	cmp	r8, r6
   869f4:	d84c      	bhi.n	86a90 <_realloc_r+0xcc>
   869f6:	428d      	cmp	r5, r1
   869f8:	da51      	bge.n	86a9e <_realloc_r+0xda>
   869fa:	f8df b384 	ldr.w	fp, [pc, #900]	; 86d80 <_realloc_r+0x3bc>
   869fe:	1978      	adds	r0, r7, r5
   86a00:	f8db e008 	ldr.w	lr, [fp, #8]
   86a04:	4586      	cmp	lr, r0
   86a06:	f000 80a6 	beq.w	86b56 <_realloc_r+0x192>
   86a0a:	6842      	ldr	r2, [r0, #4]
   86a0c:	f022 0c01 	bic.w	ip, r2, #1
   86a10:	4484      	add	ip, r0
   86a12:	f8dc c004 	ldr.w	ip, [ip, #4]
   86a16:	f01c 0f01 	tst.w	ip, #1
   86a1a:	d054      	beq.n	86ac6 <_realloc_r+0x102>
   86a1c:	2200      	movs	r2, #0
   86a1e:	4610      	mov	r0, r2
   86a20:	07db      	lsls	r3, r3, #31
   86a22:	d46f      	bmi.n	86b04 <_realloc_r+0x140>
   86a24:	f854 3c08 	ldr.w	r3, [r4, #-8]
   86a28:	ebc3 0a07 	rsb	sl, r3, r7
   86a2c:	f8da 3004 	ldr.w	r3, [sl, #4]
   86a30:	f023 0303 	bic.w	r3, r3, #3
   86a34:	442b      	add	r3, r5
   86a36:	2800      	cmp	r0, #0
   86a38:	d062      	beq.n	86b00 <_realloc_r+0x13c>
   86a3a:	4570      	cmp	r0, lr
   86a3c:	f000 80e9 	beq.w	86c12 <_realloc_r+0x24e>
   86a40:	eb02 0e03 	add.w	lr, r2, r3
   86a44:	458e      	cmp	lr, r1
   86a46:	db5b      	blt.n	86b00 <_realloc_r+0x13c>
   86a48:	68c3      	ldr	r3, [r0, #12]
   86a4a:	6882      	ldr	r2, [r0, #8]
   86a4c:	46d0      	mov	r8, sl
   86a4e:	60d3      	str	r3, [r2, #12]
   86a50:	609a      	str	r2, [r3, #8]
   86a52:	f858 1f08 	ldr.w	r1, [r8, #8]!
   86a56:	f8da 300c 	ldr.w	r3, [sl, #12]
   86a5a:	1f2a      	subs	r2, r5, #4
   86a5c:	2a24      	cmp	r2, #36	; 0x24
   86a5e:	60cb      	str	r3, [r1, #12]
   86a60:	6099      	str	r1, [r3, #8]
   86a62:	f200 8123 	bhi.w	86cac <_realloc_r+0x2e8>
   86a66:	2a13      	cmp	r2, #19
   86a68:	f240 80b0 	bls.w	86bcc <_realloc_r+0x208>
   86a6c:	6823      	ldr	r3, [r4, #0]
   86a6e:	2a1b      	cmp	r2, #27
   86a70:	f8ca 3008 	str.w	r3, [sl, #8]
   86a74:	6863      	ldr	r3, [r4, #4]
   86a76:	f8ca 300c 	str.w	r3, [sl, #12]
   86a7a:	f200 812b 	bhi.w	86cd4 <_realloc_r+0x310>
   86a7e:	3408      	adds	r4, #8
   86a80:	f10a 0310 	add.w	r3, sl, #16
   86a84:	e0a3      	b.n	86bce <_realloc_r+0x20a>
   86a86:	f026 0607 	bic.w	r6, r6, #7
   86a8a:	2e00      	cmp	r6, #0
   86a8c:	4631      	mov	r1, r6
   86a8e:	dab0      	bge.n	869f2 <_realloc_r+0x2e>
   86a90:	230c      	movs	r3, #12
   86a92:	2000      	movs	r0, #0
   86a94:	f8c9 3000 	str.w	r3, [r9]
   86a98:	b003      	add	sp, #12
   86a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86a9e:	46a0      	mov	r8, r4
   86aa0:	1baa      	subs	r2, r5, r6
   86aa2:	2a0f      	cmp	r2, #15
   86aa4:	f003 0301 	and.w	r3, r3, #1
   86aa8:	d81a      	bhi.n	86ae0 <_realloc_r+0x11c>
   86aaa:	432b      	orrs	r3, r5
   86aac:	607b      	str	r3, [r7, #4]
   86aae:	443d      	add	r5, r7
   86ab0:	686b      	ldr	r3, [r5, #4]
   86ab2:	f043 0301 	orr.w	r3, r3, #1
   86ab6:	606b      	str	r3, [r5, #4]
   86ab8:	4648      	mov	r0, r9
   86aba:	f7ff fc77 	bl	863ac <__malloc_unlock>
   86abe:	4640      	mov	r0, r8
   86ac0:	b003      	add	sp, #12
   86ac2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86ac6:	f022 0203 	bic.w	r2, r2, #3
   86aca:	eb02 0c05 	add.w	ip, r2, r5
   86ace:	458c      	cmp	ip, r1
   86ad0:	dba6      	blt.n	86a20 <_realloc_r+0x5c>
   86ad2:	68c2      	ldr	r2, [r0, #12]
   86ad4:	6881      	ldr	r1, [r0, #8]
   86ad6:	46a0      	mov	r8, r4
   86ad8:	60ca      	str	r2, [r1, #12]
   86ada:	4665      	mov	r5, ip
   86adc:	6091      	str	r1, [r2, #8]
   86ade:	e7df      	b.n	86aa0 <_realloc_r+0xdc>
   86ae0:	19b9      	adds	r1, r7, r6
   86ae2:	4333      	orrs	r3, r6
   86ae4:	f042 0001 	orr.w	r0, r2, #1
   86ae8:	607b      	str	r3, [r7, #4]
   86aea:	440a      	add	r2, r1
   86aec:	6048      	str	r0, [r1, #4]
   86aee:	6853      	ldr	r3, [r2, #4]
   86af0:	3108      	adds	r1, #8
   86af2:	f043 0301 	orr.w	r3, r3, #1
   86af6:	6053      	str	r3, [r2, #4]
   86af8:	4648      	mov	r0, r9
   86afa:	f7fe fd91 	bl	85620 <_free_r>
   86afe:	e7db      	b.n	86ab8 <_realloc_r+0xf4>
   86b00:	428b      	cmp	r3, r1
   86b02:	da33      	bge.n	86b6c <_realloc_r+0x1a8>
   86b04:	4641      	mov	r1, r8
   86b06:	4648      	mov	r0, r9
   86b08:	f7ff f88c 	bl	85c24 <_malloc_r>
   86b0c:	4680      	mov	r8, r0
   86b0e:	2800      	cmp	r0, #0
   86b10:	d0d2      	beq.n	86ab8 <_realloc_r+0xf4>
   86b12:	f854 3c04 	ldr.w	r3, [r4, #-4]
   86b16:	f1a0 0108 	sub.w	r1, r0, #8
   86b1a:	f023 0201 	bic.w	r2, r3, #1
   86b1e:	443a      	add	r2, r7
   86b20:	4291      	cmp	r1, r2
   86b22:	f000 80bc 	beq.w	86c9e <_realloc_r+0x2da>
   86b26:	1f2a      	subs	r2, r5, #4
   86b28:	2a24      	cmp	r2, #36	; 0x24
   86b2a:	d86e      	bhi.n	86c0a <_realloc_r+0x246>
   86b2c:	2a13      	cmp	r2, #19
   86b2e:	d842      	bhi.n	86bb6 <_realloc_r+0x1f2>
   86b30:	4603      	mov	r3, r0
   86b32:	4622      	mov	r2, r4
   86b34:	6811      	ldr	r1, [r2, #0]
   86b36:	6019      	str	r1, [r3, #0]
   86b38:	6851      	ldr	r1, [r2, #4]
   86b3a:	6059      	str	r1, [r3, #4]
   86b3c:	6892      	ldr	r2, [r2, #8]
   86b3e:	609a      	str	r2, [r3, #8]
   86b40:	4621      	mov	r1, r4
   86b42:	4648      	mov	r0, r9
   86b44:	f7fe fd6c 	bl	85620 <_free_r>
   86b48:	e7b6      	b.n	86ab8 <_realloc_r+0xf4>
   86b4a:	4611      	mov	r1, r2
   86b4c:	b003      	add	sp, #12
   86b4e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86b52:	f7ff b867 	b.w	85c24 <_malloc_r>
   86b56:	f8de 2004 	ldr.w	r2, [lr, #4]
   86b5a:	f106 0c10 	add.w	ip, r6, #16
   86b5e:	f022 0203 	bic.w	r2, r2, #3
   86b62:	1950      	adds	r0, r2, r5
   86b64:	4560      	cmp	r0, ip
   86b66:	da3d      	bge.n	86be4 <_realloc_r+0x220>
   86b68:	4670      	mov	r0, lr
   86b6a:	e759      	b.n	86a20 <_realloc_r+0x5c>
   86b6c:	46d0      	mov	r8, sl
   86b6e:	f858 0f08 	ldr.w	r0, [r8, #8]!
   86b72:	f8da 100c 	ldr.w	r1, [sl, #12]
   86b76:	1f2a      	subs	r2, r5, #4
   86b78:	2a24      	cmp	r2, #36	; 0x24
   86b7a:	60c1      	str	r1, [r0, #12]
   86b7c:	6088      	str	r0, [r1, #8]
   86b7e:	f200 80a0 	bhi.w	86cc2 <_realloc_r+0x2fe>
   86b82:	2a13      	cmp	r2, #19
   86b84:	f240 809b 	bls.w	86cbe <_realloc_r+0x2fa>
   86b88:	6821      	ldr	r1, [r4, #0]
   86b8a:	2a1b      	cmp	r2, #27
   86b8c:	f8ca 1008 	str.w	r1, [sl, #8]
   86b90:	6861      	ldr	r1, [r4, #4]
   86b92:	f8ca 100c 	str.w	r1, [sl, #12]
   86b96:	f200 80b2 	bhi.w	86cfe <_realloc_r+0x33a>
   86b9a:	3408      	adds	r4, #8
   86b9c:	f10a 0210 	add.w	r2, sl, #16
   86ba0:	6821      	ldr	r1, [r4, #0]
   86ba2:	461d      	mov	r5, r3
   86ba4:	6011      	str	r1, [r2, #0]
   86ba6:	6861      	ldr	r1, [r4, #4]
   86ba8:	4657      	mov	r7, sl
   86baa:	6051      	str	r1, [r2, #4]
   86bac:	68a3      	ldr	r3, [r4, #8]
   86bae:	6093      	str	r3, [r2, #8]
   86bb0:	f8da 3004 	ldr.w	r3, [sl, #4]
   86bb4:	e774      	b.n	86aa0 <_realloc_r+0xdc>
   86bb6:	6823      	ldr	r3, [r4, #0]
   86bb8:	2a1b      	cmp	r2, #27
   86bba:	6003      	str	r3, [r0, #0]
   86bbc:	6863      	ldr	r3, [r4, #4]
   86bbe:	6043      	str	r3, [r0, #4]
   86bc0:	d862      	bhi.n	86c88 <_realloc_r+0x2c4>
   86bc2:	f100 0308 	add.w	r3, r0, #8
   86bc6:	f104 0208 	add.w	r2, r4, #8
   86bca:	e7b3      	b.n	86b34 <_realloc_r+0x170>
   86bcc:	4643      	mov	r3, r8
   86bce:	6822      	ldr	r2, [r4, #0]
   86bd0:	4675      	mov	r5, lr
   86bd2:	601a      	str	r2, [r3, #0]
   86bd4:	6862      	ldr	r2, [r4, #4]
   86bd6:	4657      	mov	r7, sl
   86bd8:	605a      	str	r2, [r3, #4]
   86bda:	68a2      	ldr	r2, [r4, #8]
   86bdc:	609a      	str	r2, [r3, #8]
   86bde:	f8da 3004 	ldr.w	r3, [sl, #4]
   86be2:	e75d      	b.n	86aa0 <_realloc_r+0xdc>
   86be4:	1b83      	subs	r3, r0, r6
   86be6:	4437      	add	r7, r6
   86be8:	f043 0301 	orr.w	r3, r3, #1
   86bec:	f8cb 7008 	str.w	r7, [fp, #8]
   86bf0:	607b      	str	r3, [r7, #4]
   86bf2:	f854 3c04 	ldr.w	r3, [r4, #-4]
   86bf6:	4648      	mov	r0, r9
   86bf8:	f003 0301 	and.w	r3, r3, #1
   86bfc:	431e      	orrs	r6, r3
   86bfe:	f844 6c04 	str.w	r6, [r4, #-4]
   86c02:	f7ff fbd3 	bl	863ac <__malloc_unlock>
   86c06:	4620      	mov	r0, r4
   86c08:	e75a      	b.n	86ac0 <_realloc_r+0xfc>
   86c0a:	4621      	mov	r1, r4
   86c0c:	f7ff fb66 	bl	862dc <memmove>
   86c10:	e796      	b.n	86b40 <_realloc_r+0x17c>
   86c12:	eb02 0c03 	add.w	ip, r2, r3
   86c16:	f106 0210 	add.w	r2, r6, #16
   86c1a:	4594      	cmp	ip, r2
   86c1c:	f6ff af70 	blt.w	86b00 <_realloc_r+0x13c>
   86c20:	4657      	mov	r7, sl
   86c22:	f857 1f08 	ldr.w	r1, [r7, #8]!
   86c26:	f8da 300c 	ldr.w	r3, [sl, #12]
   86c2a:	1f2a      	subs	r2, r5, #4
   86c2c:	2a24      	cmp	r2, #36	; 0x24
   86c2e:	60cb      	str	r3, [r1, #12]
   86c30:	6099      	str	r1, [r3, #8]
   86c32:	f200 8086 	bhi.w	86d42 <_realloc_r+0x37e>
   86c36:	2a13      	cmp	r2, #19
   86c38:	d977      	bls.n	86d2a <_realloc_r+0x366>
   86c3a:	6823      	ldr	r3, [r4, #0]
   86c3c:	2a1b      	cmp	r2, #27
   86c3e:	f8ca 3008 	str.w	r3, [sl, #8]
   86c42:	6863      	ldr	r3, [r4, #4]
   86c44:	f8ca 300c 	str.w	r3, [sl, #12]
   86c48:	f200 8084 	bhi.w	86d54 <_realloc_r+0x390>
   86c4c:	3408      	adds	r4, #8
   86c4e:	f10a 0310 	add.w	r3, sl, #16
   86c52:	6822      	ldr	r2, [r4, #0]
   86c54:	601a      	str	r2, [r3, #0]
   86c56:	6862      	ldr	r2, [r4, #4]
   86c58:	605a      	str	r2, [r3, #4]
   86c5a:	68a2      	ldr	r2, [r4, #8]
   86c5c:	609a      	str	r2, [r3, #8]
   86c5e:	ebc6 020c 	rsb	r2, r6, ip
   86c62:	eb0a 0306 	add.w	r3, sl, r6
   86c66:	f042 0201 	orr.w	r2, r2, #1
   86c6a:	f8cb 3008 	str.w	r3, [fp, #8]
   86c6e:	605a      	str	r2, [r3, #4]
   86c70:	f8da 3004 	ldr.w	r3, [sl, #4]
   86c74:	4648      	mov	r0, r9
   86c76:	f003 0301 	and.w	r3, r3, #1
   86c7a:	431e      	orrs	r6, r3
   86c7c:	f8ca 6004 	str.w	r6, [sl, #4]
   86c80:	f7ff fb94 	bl	863ac <__malloc_unlock>
   86c84:	4638      	mov	r0, r7
   86c86:	e71b      	b.n	86ac0 <_realloc_r+0xfc>
   86c88:	68a3      	ldr	r3, [r4, #8]
   86c8a:	2a24      	cmp	r2, #36	; 0x24
   86c8c:	6083      	str	r3, [r0, #8]
   86c8e:	68e3      	ldr	r3, [r4, #12]
   86c90:	60c3      	str	r3, [r0, #12]
   86c92:	d02b      	beq.n	86cec <_realloc_r+0x328>
   86c94:	f100 0310 	add.w	r3, r0, #16
   86c98:	f104 0210 	add.w	r2, r4, #16
   86c9c:	e74a      	b.n	86b34 <_realloc_r+0x170>
   86c9e:	f850 2c04 	ldr.w	r2, [r0, #-4]
   86ca2:	46a0      	mov	r8, r4
   86ca4:	f022 0203 	bic.w	r2, r2, #3
   86ca8:	4415      	add	r5, r2
   86caa:	e6f9      	b.n	86aa0 <_realloc_r+0xdc>
   86cac:	4621      	mov	r1, r4
   86cae:	4640      	mov	r0, r8
   86cb0:	4675      	mov	r5, lr
   86cb2:	4657      	mov	r7, sl
   86cb4:	f7ff fb12 	bl	862dc <memmove>
   86cb8:	f8da 3004 	ldr.w	r3, [sl, #4]
   86cbc:	e6f0      	b.n	86aa0 <_realloc_r+0xdc>
   86cbe:	4642      	mov	r2, r8
   86cc0:	e76e      	b.n	86ba0 <_realloc_r+0x1dc>
   86cc2:	4621      	mov	r1, r4
   86cc4:	4640      	mov	r0, r8
   86cc6:	461d      	mov	r5, r3
   86cc8:	4657      	mov	r7, sl
   86cca:	f7ff fb07 	bl	862dc <memmove>
   86cce:	f8da 3004 	ldr.w	r3, [sl, #4]
   86cd2:	e6e5      	b.n	86aa0 <_realloc_r+0xdc>
   86cd4:	68a3      	ldr	r3, [r4, #8]
   86cd6:	2a24      	cmp	r2, #36	; 0x24
   86cd8:	f8ca 3010 	str.w	r3, [sl, #16]
   86cdc:	68e3      	ldr	r3, [r4, #12]
   86cde:	f8ca 3014 	str.w	r3, [sl, #20]
   86ce2:	d018      	beq.n	86d16 <_realloc_r+0x352>
   86ce4:	3410      	adds	r4, #16
   86ce6:	f10a 0318 	add.w	r3, sl, #24
   86cea:	e770      	b.n	86bce <_realloc_r+0x20a>
   86cec:	6922      	ldr	r2, [r4, #16]
   86cee:	f100 0318 	add.w	r3, r0, #24
   86cf2:	6102      	str	r2, [r0, #16]
   86cf4:	6961      	ldr	r1, [r4, #20]
   86cf6:	f104 0218 	add.w	r2, r4, #24
   86cfa:	6141      	str	r1, [r0, #20]
   86cfc:	e71a      	b.n	86b34 <_realloc_r+0x170>
   86cfe:	68a1      	ldr	r1, [r4, #8]
   86d00:	2a24      	cmp	r2, #36	; 0x24
   86d02:	f8ca 1010 	str.w	r1, [sl, #16]
   86d06:	68e1      	ldr	r1, [r4, #12]
   86d08:	f8ca 1014 	str.w	r1, [sl, #20]
   86d0c:	d00f      	beq.n	86d2e <_realloc_r+0x36a>
   86d0e:	3410      	adds	r4, #16
   86d10:	f10a 0218 	add.w	r2, sl, #24
   86d14:	e744      	b.n	86ba0 <_realloc_r+0x1dc>
   86d16:	6922      	ldr	r2, [r4, #16]
   86d18:	f10a 0320 	add.w	r3, sl, #32
   86d1c:	f8ca 2018 	str.w	r2, [sl, #24]
   86d20:	6962      	ldr	r2, [r4, #20]
   86d22:	3418      	adds	r4, #24
   86d24:	f8ca 201c 	str.w	r2, [sl, #28]
   86d28:	e751      	b.n	86bce <_realloc_r+0x20a>
   86d2a:	463b      	mov	r3, r7
   86d2c:	e791      	b.n	86c52 <_realloc_r+0x28e>
   86d2e:	6921      	ldr	r1, [r4, #16]
   86d30:	f10a 0220 	add.w	r2, sl, #32
   86d34:	f8ca 1018 	str.w	r1, [sl, #24]
   86d38:	6961      	ldr	r1, [r4, #20]
   86d3a:	3418      	adds	r4, #24
   86d3c:	f8ca 101c 	str.w	r1, [sl, #28]
   86d40:	e72e      	b.n	86ba0 <_realloc_r+0x1dc>
   86d42:	4621      	mov	r1, r4
   86d44:	4638      	mov	r0, r7
   86d46:	f8cd c004 	str.w	ip, [sp, #4]
   86d4a:	f7ff fac7 	bl	862dc <memmove>
   86d4e:	f8dd c004 	ldr.w	ip, [sp, #4]
   86d52:	e784      	b.n	86c5e <_realloc_r+0x29a>
   86d54:	68a3      	ldr	r3, [r4, #8]
   86d56:	2a24      	cmp	r2, #36	; 0x24
   86d58:	f8ca 3010 	str.w	r3, [sl, #16]
   86d5c:	68e3      	ldr	r3, [r4, #12]
   86d5e:	f8ca 3014 	str.w	r3, [sl, #20]
   86d62:	d003      	beq.n	86d6c <_realloc_r+0x3a8>
   86d64:	3410      	adds	r4, #16
   86d66:	f10a 0318 	add.w	r3, sl, #24
   86d6a:	e772      	b.n	86c52 <_realloc_r+0x28e>
   86d6c:	6922      	ldr	r2, [r4, #16]
   86d6e:	f10a 0320 	add.w	r3, sl, #32
   86d72:	f8ca 2018 	str.w	r2, [sl, #24]
   86d76:	6962      	ldr	r2, [r4, #20]
   86d78:	3418      	adds	r4, #24
   86d7a:	f8ca 201c 	str.w	r2, [sl, #28]
   86d7e:	e768      	b.n	86c52 <_realloc_r+0x28e>
   86d80:	200705c0 	.word	0x200705c0

00086d84 <_sbrk_r>:
   86d84:	b538      	push	{r3, r4, r5, lr}
   86d86:	4c07      	ldr	r4, [pc, #28]	; (86da4 <_sbrk_r+0x20>)
   86d88:	2300      	movs	r3, #0
   86d8a:	4605      	mov	r5, r0
   86d8c:	4608      	mov	r0, r1
   86d8e:	6023      	str	r3, [r4, #0]
   86d90:	f7fa f958 	bl	81044 <_sbrk>
   86d94:	1c43      	adds	r3, r0, #1
   86d96:	d000      	beq.n	86d9a <_sbrk_r+0x16>
   86d98:	bd38      	pop	{r3, r4, r5, pc}
   86d9a:	6823      	ldr	r3, [r4, #0]
   86d9c:	2b00      	cmp	r3, #0
   86d9e:	d0fb      	beq.n	86d98 <_sbrk_r+0x14>
   86da0:	602b      	str	r3, [r5, #0]
   86da2:	bd38      	pop	{r3, r4, r5, pc}
   86da4:	20070b54 	.word	0x20070b54

00086da8 <__sread>:
   86da8:	b510      	push	{r4, lr}
   86daa:	460c      	mov	r4, r1
   86dac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   86db0:	f000 fa4e 	bl	87250 <_read_r>
   86db4:	2800      	cmp	r0, #0
   86db6:	db03      	blt.n	86dc0 <__sread+0x18>
   86db8:	6d23      	ldr	r3, [r4, #80]	; 0x50
   86dba:	4403      	add	r3, r0
   86dbc:	6523      	str	r3, [r4, #80]	; 0x50
   86dbe:	bd10      	pop	{r4, pc}
   86dc0:	89a3      	ldrh	r3, [r4, #12]
   86dc2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   86dc6:	81a3      	strh	r3, [r4, #12]
   86dc8:	bd10      	pop	{r4, pc}
   86dca:	bf00      	nop

00086dcc <__swrite>:
   86dcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   86dd0:	460c      	mov	r4, r1
   86dd2:	8989      	ldrh	r1, [r1, #12]
   86dd4:	461d      	mov	r5, r3
   86dd6:	05cb      	lsls	r3, r1, #23
   86dd8:	4616      	mov	r6, r2
   86dda:	4607      	mov	r7, r0
   86ddc:	d506      	bpl.n	86dec <__swrite+0x20>
   86dde:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   86de2:	2200      	movs	r2, #0
   86de4:	2302      	movs	r3, #2
   86de6:	f000 fa1f 	bl	87228 <_lseek_r>
   86dea:	89a1      	ldrh	r1, [r4, #12]
   86dec:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   86df0:	81a1      	strh	r1, [r4, #12]
   86df2:	4638      	mov	r0, r7
   86df4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   86df8:	4632      	mov	r2, r6
   86dfa:	462b      	mov	r3, r5
   86dfc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   86e00:	f000 b8fa 	b.w	86ff8 <_write_r>

00086e04 <__sseek>:
   86e04:	b510      	push	{r4, lr}
   86e06:	460c      	mov	r4, r1
   86e08:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   86e0c:	f000 fa0c 	bl	87228 <_lseek_r>
   86e10:	89a3      	ldrh	r3, [r4, #12]
   86e12:	1c42      	adds	r2, r0, #1
   86e14:	bf0e      	itee	eq
   86e16:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   86e1a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   86e1e:	6520      	strne	r0, [r4, #80]	; 0x50
   86e20:	81a3      	strh	r3, [r4, #12]
   86e22:	bd10      	pop	{r4, pc}

00086e24 <__sclose>:
   86e24:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   86e28:	f000 b97e 	b.w	87128 <_close_r>

00086e2c <strlen>:
   86e2c:	f020 0103 	bic.w	r1, r0, #3
   86e30:	f010 0003 	ands.w	r0, r0, #3
   86e34:	f1c0 0000 	rsb	r0, r0, #0
   86e38:	f851 3b04 	ldr.w	r3, [r1], #4
   86e3c:	f100 0c04 	add.w	ip, r0, #4
   86e40:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   86e44:	f06f 0200 	mvn.w	r2, #0
   86e48:	bf1c      	itt	ne
   86e4a:	fa22 f20c 	lsrne.w	r2, r2, ip
   86e4e:	4313      	orrne	r3, r2
   86e50:	f04f 0c01 	mov.w	ip, #1
   86e54:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   86e58:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   86e5c:	eba3 020c 	sub.w	r2, r3, ip
   86e60:	ea22 0203 	bic.w	r2, r2, r3
   86e64:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   86e68:	bf04      	itt	eq
   86e6a:	f851 3b04 	ldreq.w	r3, [r1], #4
   86e6e:	3004      	addeq	r0, #4
   86e70:	d0f4      	beq.n	86e5c <strlen+0x30>
   86e72:	f013 0fff 	tst.w	r3, #255	; 0xff
   86e76:	bf1f      	itttt	ne
   86e78:	3001      	addne	r0, #1
   86e7a:	f413 4f7f 	tstne.w	r3, #65280	; 0xff00
   86e7e:	3001      	addne	r0, #1
   86e80:	f413 0f7f 	tstne.w	r3, #16711680	; 0xff0000
   86e84:	bf18      	it	ne
   86e86:	3001      	addne	r0, #1
   86e88:	4770      	bx	lr
   86e8a:	bf00      	nop

00086e8c <__ssprint_r>:
   86e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86e90:	6894      	ldr	r4, [r2, #8]
   86e92:	b083      	sub	sp, #12
   86e94:	4692      	mov	sl, r2
   86e96:	4680      	mov	r8, r0
   86e98:	460d      	mov	r5, r1
   86e9a:	6816      	ldr	r6, [r2, #0]
   86e9c:	2c00      	cmp	r4, #0
   86e9e:	d06f      	beq.n	86f80 <__ssprint_r+0xf4>
   86ea0:	f04f 0b00 	mov.w	fp, #0
   86ea4:	6808      	ldr	r0, [r1, #0]
   86ea6:	688b      	ldr	r3, [r1, #8]
   86ea8:	465c      	mov	r4, fp
   86eaa:	2c00      	cmp	r4, #0
   86eac:	d043      	beq.n	86f36 <__ssprint_r+0xaa>
   86eae:	429c      	cmp	r4, r3
   86eb0:	461f      	mov	r7, r3
   86eb2:	d345      	bcc.n	86f40 <__ssprint_r+0xb4>
   86eb4:	89ab      	ldrh	r3, [r5, #12]
   86eb6:	f413 6f90 	tst.w	r3, #1152	; 0x480
   86eba:	d044      	beq.n	86f46 <__ssprint_r+0xba>
   86ebc:	696f      	ldr	r7, [r5, #20]
   86ebe:	6929      	ldr	r1, [r5, #16]
   86ec0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
   86ec4:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
   86ec8:	ebc1 0900 	rsb	r9, r1, r0
   86ecc:	1c62      	adds	r2, r4, #1
   86ece:	107f      	asrs	r7, r7, #1
   86ed0:	444a      	add	r2, r9
   86ed2:	4297      	cmp	r7, r2
   86ed4:	bf34      	ite	cc
   86ed6:	4617      	movcc	r7, r2
   86ed8:	463a      	movcs	r2, r7
   86eda:	055b      	lsls	r3, r3, #21
   86edc:	d535      	bpl.n	86f4a <__ssprint_r+0xbe>
   86ede:	4611      	mov	r1, r2
   86ee0:	4640      	mov	r0, r8
   86ee2:	f7fe fe9f 	bl	85c24 <_malloc_r>
   86ee6:	2800      	cmp	r0, #0
   86ee8:	d039      	beq.n	86f5e <__ssprint_r+0xd2>
   86eea:	6929      	ldr	r1, [r5, #16]
   86eec:	464a      	mov	r2, r9
   86eee:	9001      	str	r0, [sp, #4]
   86ef0:	f7ff f97e 	bl	861f0 <memcpy>
   86ef4:	89aa      	ldrh	r2, [r5, #12]
   86ef6:	9b01      	ldr	r3, [sp, #4]
   86ef8:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   86efc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   86f00:	81aa      	strh	r2, [r5, #12]
   86f02:	ebc9 0207 	rsb	r2, r9, r7
   86f06:	eb03 0009 	add.w	r0, r3, r9
   86f0a:	616f      	str	r7, [r5, #20]
   86f0c:	612b      	str	r3, [r5, #16]
   86f0e:	6028      	str	r0, [r5, #0]
   86f10:	60aa      	str	r2, [r5, #8]
   86f12:	4627      	mov	r7, r4
   86f14:	46a1      	mov	r9, r4
   86f16:	464a      	mov	r2, r9
   86f18:	4659      	mov	r1, fp
   86f1a:	f7ff f9df 	bl	862dc <memmove>
   86f1e:	f8da 2008 	ldr.w	r2, [sl, #8]
   86f22:	68ab      	ldr	r3, [r5, #8]
   86f24:	6828      	ldr	r0, [r5, #0]
   86f26:	1bdb      	subs	r3, r3, r7
   86f28:	4448      	add	r0, r9
   86f2a:	1b14      	subs	r4, r2, r4
   86f2c:	60ab      	str	r3, [r5, #8]
   86f2e:	6028      	str	r0, [r5, #0]
   86f30:	f8ca 4008 	str.w	r4, [sl, #8]
   86f34:	b324      	cbz	r4, 86f80 <__ssprint_r+0xf4>
   86f36:	f8d6 b000 	ldr.w	fp, [r6]
   86f3a:	6874      	ldr	r4, [r6, #4]
   86f3c:	3608      	adds	r6, #8
   86f3e:	e7b4      	b.n	86eaa <__ssprint_r+0x1e>
   86f40:	4627      	mov	r7, r4
   86f42:	46a1      	mov	r9, r4
   86f44:	e7e7      	b.n	86f16 <__ssprint_r+0x8a>
   86f46:	46b9      	mov	r9, r7
   86f48:	e7e5      	b.n	86f16 <__ssprint_r+0x8a>
   86f4a:	4640      	mov	r0, r8
   86f4c:	f7ff fd3a 	bl	869c4 <_realloc_r>
   86f50:	4603      	mov	r3, r0
   86f52:	2800      	cmp	r0, #0
   86f54:	d1d5      	bne.n	86f02 <__ssprint_r+0x76>
   86f56:	4640      	mov	r0, r8
   86f58:	6929      	ldr	r1, [r5, #16]
   86f5a:	f7fe fb61 	bl	85620 <_free_r>
   86f5e:	89aa      	ldrh	r2, [r5, #12]
   86f60:	230c      	movs	r3, #12
   86f62:	f8c8 3000 	str.w	r3, [r8]
   86f66:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   86f6a:	2300      	movs	r3, #0
   86f6c:	f04f 30ff 	mov.w	r0, #4294967295
   86f70:	81aa      	strh	r2, [r5, #12]
   86f72:	f8ca 3008 	str.w	r3, [sl, #8]
   86f76:	f8ca 3004 	str.w	r3, [sl, #4]
   86f7a:	b003      	add	sp, #12
   86f7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86f80:	4620      	mov	r0, r4
   86f82:	f8ca 4004 	str.w	r4, [sl, #4]
   86f86:	b003      	add	sp, #12
   86f88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00086f8c <_wcrtomb_r>:
   86f8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   86f90:	461e      	mov	r6, r3
   86f92:	b086      	sub	sp, #24
   86f94:	460c      	mov	r4, r1
   86f96:	4605      	mov	r5, r0
   86f98:	4617      	mov	r7, r2
   86f9a:	4b0f      	ldr	r3, [pc, #60]	; (86fd8 <_wcrtomb_r+0x4c>)
   86f9c:	b191      	cbz	r1, 86fc4 <_wcrtomb_r+0x38>
   86f9e:	f8d3 8000 	ldr.w	r8, [r3]
   86fa2:	f7fe fdb9 	bl	85b18 <__locale_charset>
   86fa6:	9600      	str	r6, [sp, #0]
   86fa8:	4603      	mov	r3, r0
   86faa:	4621      	mov	r1, r4
   86fac:	463a      	mov	r2, r7
   86fae:	4628      	mov	r0, r5
   86fb0:	47c0      	blx	r8
   86fb2:	1c43      	adds	r3, r0, #1
   86fb4:	d103      	bne.n	86fbe <_wcrtomb_r+0x32>
   86fb6:	2200      	movs	r2, #0
   86fb8:	238a      	movs	r3, #138	; 0x8a
   86fba:	6032      	str	r2, [r6, #0]
   86fbc:	602b      	str	r3, [r5, #0]
   86fbe:	b006      	add	sp, #24
   86fc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   86fc4:	681f      	ldr	r7, [r3, #0]
   86fc6:	f7fe fda7 	bl	85b18 <__locale_charset>
   86fca:	9600      	str	r6, [sp, #0]
   86fcc:	4603      	mov	r3, r0
   86fce:	4622      	mov	r2, r4
   86fd0:	4628      	mov	r0, r5
   86fd2:	a903      	add	r1, sp, #12
   86fd4:	47b8      	blx	r7
   86fd6:	e7ec      	b.n	86fb2 <_wcrtomb_r+0x26>
   86fd8:	200709d0 	.word	0x200709d0

00086fdc <__ascii_wctomb>:
   86fdc:	b121      	cbz	r1, 86fe8 <__ascii_wctomb+0xc>
   86fde:	2aff      	cmp	r2, #255	; 0xff
   86fe0:	d804      	bhi.n	86fec <__ascii_wctomb+0x10>
   86fe2:	700a      	strb	r2, [r1, #0]
   86fe4:	2001      	movs	r0, #1
   86fe6:	4770      	bx	lr
   86fe8:	4608      	mov	r0, r1
   86fea:	4770      	bx	lr
   86fec:	238a      	movs	r3, #138	; 0x8a
   86fee:	6003      	str	r3, [r0, #0]
   86ff0:	f04f 30ff 	mov.w	r0, #4294967295
   86ff4:	4770      	bx	lr
   86ff6:	bf00      	nop

00086ff8 <_write_r>:
   86ff8:	b570      	push	{r4, r5, r6, lr}
   86ffa:	4c08      	ldr	r4, [pc, #32]	; (8701c <_write_r+0x24>)
   86ffc:	4606      	mov	r6, r0
   86ffe:	2500      	movs	r5, #0
   87000:	4608      	mov	r0, r1
   87002:	4611      	mov	r1, r2
   87004:	461a      	mov	r2, r3
   87006:	6025      	str	r5, [r4, #0]
   87008:	f7f9 f99a 	bl	80340 <_write>
   8700c:	1c43      	adds	r3, r0, #1
   8700e:	d000      	beq.n	87012 <_write_r+0x1a>
   87010:	bd70      	pop	{r4, r5, r6, pc}
   87012:	6823      	ldr	r3, [r4, #0]
   87014:	2b00      	cmp	r3, #0
   87016:	d0fb      	beq.n	87010 <_write_r+0x18>
   87018:	6033      	str	r3, [r6, #0]
   8701a:	bd70      	pop	{r4, r5, r6, pc}
   8701c:	20070b54 	.word	0x20070b54

00087020 <__register_exitproc>:
   87020:	b5f0      	push	{r4, r5, r6, r7, lr}
   87022:	4c27      	ldr	r4, [pc, #156]	; (870c0 <__register_exitproc+0xa0>)
   87024:	b085      	sub	sp, #20
   87026:	6826      	ldr	r6, [r4, #0]
   87028:	4607      	mov	r7, r0
   8702a:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
   8702e:	2c00      	cmp	r4, #0
   87030:	d040      	beq.n	870b4 <__register_exitproc+0x94>
   87032:	6865      	ldr	r5, [r4, #4]
   87034:	2d1f      	cmp	r5, #31
   87036:	dd1e      	ble.n	87076 <__register_exitproc+0x56>
   87038:	4822      	ldr	r0, [pc, #136]	; (870c4 <__register_exitproc+0xa4>)
   8703a:	b918      	cbnz	r0, 87044 <__register_exitproc+0x24>
   8703c:	f04f 30ff 	mov.w	r0, #4294967295
   87040:	b005      	add	sp, #20
   87042:	bdf0      	pop	{r4, r5, r6, r7, pc}
   87044:	f44f 70c8 	mov.w	r0, #400	; 0x190
   87048:	9103      	str	r1, [sp, #12]
   8704a:	9202      	str	r2, [sp, #8]
   8704c:	9301      	str	r3, [sp, #4]
   8704e:	f7fe fde1 	bl	85c14 <malloc>
   87052:	9903      	ldr	r1, [sp, #12]
   87054:	4604      	mov	r4, r0
   87056:	9a02      	ldr	r2, [sp, #8]
   87058:	9b01      	ldr	r3, [sp, #4]
   8705a:	2800      	cmp	r0, #0
   8705c:	d0ee      	beq.n	8703c <__register_exitproc+0x1c>
   8705e:	f8d6 5148 	ldr.w	r5, [r6, #328]	; 0x148
   87062:	2000      	movs	r0, #0
   87064:	6025      	str	r5, [r4, #0]
   87066:	6060      	str	r0, [r4, #4]
   87068:	4605      	mov	r5, r0
   8706a:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   8706e:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
   87072:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
   87076:	b93f      	cbnz	r7, 87088 <__register_exitproc+0x68>
   87078:	1c6b      	adds	r3, r5, #1
   8707a:	2000      	movs	r0, #0
   8707c:	3502      	adds	r5, #2
   8707e:	6063      	str	r3, [r4, #4]
   87080:	f844 1025 	str.w	r1, [r4, r5, lsl #2]
   87084:	b005      	add	sp, #20
   87086:	bdf0      	pop	{r4, r5, r6, r7, pc}
   87088:	2601      	movs	r6, #1
   8708a:	40ae      	lsls	r6, r5
   8708c:	eb04 0085 	add.w	r0, r4, r5, lsl #2
   87090:	f8c0 2088 	str.w	r2, [r0, #136]	; 0x88
   87094:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   87098:	2f02      	cmp	r7, #2
   8709a:	ea42 0206 	orr.w	r2, r2, r6
   8709e:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   870a2:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108
   870a6:	d1e7      	bne.n	87078 <__register_exitproc+0x58>
   870a8:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   870ac:	431e      	orrs	r6, r3
   870ae:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
   870b2:	e7e1      	b.n	87078 <__register_exitproc+0x58>
   870b4:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
   870b8:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   870bc:	e7b9      	b.n	87032 <__register_exitproc+0x12>
   870be:	bf00      	nop
   870c0:	00087944 	.word	0x00087944
   870c4:	00085c15 	.word	0x00085c15

000870c8 <_calloc_r>:
   870c8:	b510      	push	{r4, lr}
   870ca:	fb02 f101 	mul.w	r1, r2, r1
   870ce:	f7fe fda9 	bl	85c24 <_malloc_r>
   870d2:	4604      	mov	r4, r0
   870d4:	b168      	cbz	r0, 870f2 <_calloc_r+0x2a>
   870d6:	f850 2c04 	ldr.w	r2, [r0, #-4]
   870da:	f022 0203 	bic.w	r2, r2, #3
   870de:	3a04      	subs	r2, #4
   870e0:	2a24      	cmp	r2, #36	; 0x24
   870e2:	d818      	bhi.n	87116 <_calloc_r+0x4e>
   870e4:	2a13      	cmp	r2, #19
   870e6:	d806      	bhi.n	870f6 <_calloc_r+0x2e>
   870e8:	4603      	mov	r3, r0
   870ea:	2200      	movs	r2, #0
   870ec:	601a      	str	r2, [r3, #0]
   870ee:	605a      	str	r2, [r3, #4]
   870f0:	609a      	str	r2, [r3, #8]
   870f2:	4620      	mov	r0, r4
   870f4:	bd10      	pop	{r4, pc}
   870f6:	2300      	movs	r3, #0
   870f8:	2a1b      	cmp	r2, #27
   870fa:	6003      	str	r3, [r0, #0]
   870fc:	6043      	str	r3, [r0, #4]
   870fe:	d90f      	bls.n	87120 <_calloc_r+0x58>
   87100:	2a24      	cmp	r2, #36	; 0x24
   87102:	6083      	str	r3, [r0, #8]
   87104:	60c3      	str	r3, [r0, #12]
   87106:	bf05      	ittet	eq
   87108:	6103      	streq	r3, [r0, #16]
   8710a:	6143      	streq	r3, [r0, #20]
   8710c:	f100 0310 	addne.w	r3, r0, #16
   87110:	f100 0318 	addeq.w	r3, r0, #24
   87114:	e7e9      	b.n	870ea <_calloc_r+0x22>
   87116:	2100      	movs	r1, #0
   87118:	f7fa fdf4 	bl	81d04 <memset>
   8711c:	4620      	mov	r0, r4
   8711e:	bd10      	pop	{r4, pc}
   87120:	f100 0308 	add.w	r3, r0, #8
   87124:	e7e1      	b.n	870ea <_calloc_r+0x22>
   87126:	bf00      	nop

00087128 <_close_r>:
   87128:	b538      	push	{r3, r4, r5, lr}
   8712a:	4c07      	ldr	r4, [pc, #28]	; (87148 <_close_r+0x20>)
   8712c:	2300      	movs	r3, #0
   8712e:	4605      	mov	r5, r0
   87130:	4608      	mov	r0, r1
   87132:	6023      	str	r3, [r4, #0]
   87134:	f7f9 ffa0 	bl	81078 <_close>
   87138:	1c43      	adds	r3, r0, #1
   8713a:	d000      	beq.n	8713e <_close_r+0x16>
   8713c:	bd38      	pop	{r3, r4, r5, pc}
   8713e:	6823      	ldr	r3, [r4, #0]
   87140:	2b00      	cmp	r3, #0
   87142:	d0fb      	beq.n	8713c <_close_r+0x14>
   87144:	602b      	str	r3, [r5, #0]
   87146:	bd38      	pop	{r3, r4, r5, pc}
   87148:	20070b54 	.word	0x20070b54

0008714c <_fclose_r>:
   8714c:	b570      	push	{r4, r5, r6, lr}
   8714e:	460c      	mov	r4, r1
   87150:	4605      	mov	r5, r0
   87152:	b131      	cbz	r1, 87162 <_fclose_r+0x16>
   87154:	b110      	cbz	r0, 8715c <_fclose_r+0x10>
   87156:	6b83      	ldr	r3, [r0, #56]	; 0x38
   87158:	2b00      	cmp	r3, #0
   8715a:	d02f      	beq.n	871bc <_fclose_r+0x70>
   8715c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87160:	b90b      	cbnz	r3, 87166 <_fclose_r+0x1a>
   87162:	2000      	movs	r0, #0
   87164:	bd70      	pop	{r4, r5, r6, pc}
   87166:	4628      	mov	r0, r5
   87168:	4621      	mov	r1, r4
   8716a:	f7fe f8f9 	bl	85360 <_fflush_r>
   8716e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   87170:	4606      	mov	r6, r0
   87172:	b133      	cbz	r3, 87182 <_fclose_r+0x36>
   87174:	4628      	mov	r0, r5
   87176:	69e1      	ldr	r1, [r4, #28]
   87178:	4798      	blx	r3
   8717a:	2800      	cmp	r0, #0
   8717c:	bfb8      	it	lt
   8717e:	f04f 36ff 	movlt.w	r6, #4294967295
   87182:	89a3      	ldrh	r3, [r4, #12]
   87184:	061b      	lsls	r3, r3, #24
   87186:	d41c      	bmi.n	871c2 <_fclose_r+0x76>
   87188:	6b21      	ldr	r1, [r4, #48]	; 0x30
   8718a:	b141      	cbz	r1, 8719e <_fclose_r+0x52>
   8718c:	f104 0340 	add.w	r3, r4, #64	; 0x40
   87190:	4299      	cmp	r1, r3
   87192:	d002      	beq.n	8719a <_fclose_r+0x4e>
   87194:	4628      	mov	r0, r5
   87196:	f7fe fa43 	bl	85620 <_free_r>
   8719a:	2300      	movs	r3, #0
   8719c:	6323      	str	r3, [r4, #48]	; 0x30
   8719e:	6c61      	ldr	r1, [r4, #68]	; 0x44
   871a0:	b121      	cbz	r1, 871ac <_fclose_r+0x60>
   871a2:	4628      	mov	r0, r5
   871a4:	f7fe fa3c 	bl	85620 <_free_r>
   871a8:	2300      	movs	r3, #0
   871aa:	6463      	str	r3, [r4, #68]	; 0x44
   871ac:	f7fe f96e 	bl	8548c <__sfp_lock_acquire>
   871b0:	2300      	movs	r3, #0
   871b2:	81a3      	strh	r3, [r4, #12]
   871b4:	f7fe f96c 	bl	85490 <__sfp_lock_release>
   871b8:	4630      	mov	r0, r6
   871ba:	bd70      	pop	{r4, r5, r6, pc}
   871bc:	f7fe f8ec 	bl	85398 <__sinit>
   871c0:	e7cc      	b.n	8715c <_fclose_r+0x10>
   871c2:	4628      	mov	r0, r5
   871c4:	6921      	ldr	r1, [r4, #16]
   871c6:	f7fe fa2b 	bl	85620 <_free_r>
   871ca:	e7dd      	b.n	87188 <_fclose_r+0x3c>

000871cc <fclose>:
   871cc:	4b02      	ldr	r3, [pc, #8]	; (871d8 <fclose+0xc>)
   871ce:	4601      	mov	r1, r0
   871d0:	6818      	ldr	r0, [r3, #0]
   871d2:	f7ff bfbb 	b.w	8714c <_fclose_r>
   871d6:	bf00      	nop
   871d8:	20070560 	.word	0x20070560

000871dc <_fstat_r>:
   871dc:	b538      	push	{r3, r4, r5, lr}
   871de:	4c08      	ldr	r4, [pc, #32]	; (87200 <_fstat_r+0x24>)
   871e0:	2300      	movs	r3, #0
   871e2:	4605      	mov	r5, r0
   871e4:	4608      	mov	r0, r1
   871e6:	4611      	mov	r1, r2
   871e8:	6023      	str	r3, [r4, #0]
   871ea:	f7f9 ff49 	bl	81080 <_fstat>
   871ee:	1c43      	adds	r3, r0, #1
   871f0:	d000      	beq.n	871f4 <_fstat_r+0x18>
   871f2:	bd38      	pop	{r3, r4, r5, pc}
   871f4:	6823      	ldr	r3, [r4, #0]
   871f6:	2b00      	cmp	r3, #0
   871f8:	d0fb      	beq.n	871f2 <_fstat_r+0x16>
   871fa:	602b      	str	r3, [r5, #0]
   871fc:	bd38      	pop	{r3, r4, r5, pc}
   871fe:	bf00      	nop
   87200:	20070b54 	.word	0x20070b54

00087204 <_isatty_r>:
   87204:	b538      	push	{r3, r4, r5, lr}
   87206:	4c07      	ldr	r4, [pc, #28]	; (87224 <_isatty_r+0x20>)
   87208:	2300      	movs	r3, #0
   8720a:	4605      	mov	r5, r0
   8720c:	4608      	mov	r0, r1
   8720e:	6023      	str	r3, [r4, #0]
   87210:	f7f9 ff3c 	bl	8108c <_isatty>
   87214:	1c43      	adds	r3, r0, #1
   87216:	d000      	beq.n	8721a <_isatty_r+0x16>
   87218:	bd38      	pop	{r3, r4, r5, pc}
   8721a:	6823      	ldr	r3, [r4, #0]
   8721c:	2b00      	cmp	r3, #0
   8721e:	d0fb      	beq.n	87218 <_isatty_r+0x14>
   87220:	602b      	str	r3, [r5, #0]
   87222:	bd38      	pop	{r3, r4, r5, pc}
   87224:	20070b54 	.word	0x20070b54

00087228 <_lseek_r>:
   87228:	b570      	push	{r4, r5, r6, lr}
   8722a:	4c08      	ldr	r4, [pc, #32]	; (8724c <_lseek_r+0x24>)
   8722c:	4606      	mov	r6, r0
   8722e:	2500      	movs	r5, #0
   87230:	4608      	mov	r0, r1
   87232:	4611      	mov	r1, r2
   87234:	461a      	mov	r2, r3
   87236:	6025      	str	r5, [r4, #0]
   87238:	f7f9 ff2a 	bl	81090 <_lseek>
   8723c:	1c43      	adds	r3, r0, #1
   8723e:	d000      	beq.n	87242 <_lseek_r+0x1a>
   87240:	bd70      	pop	{r4, r5, r6, pc}
   87242:	6823      	ldr	r3, [r4, #0]
   87244:	2b00      	cmp	r3, #0
   87246:	d0fb      	beq.n	87240 <_lseek_r+0x18>
   87248:	6033      	str	r3, [r6, #0]
   8724a:	bd70      	pop	{r4, r5, r6, pc}
   8724c:	20070b54 	.word	0x20070b54

00087250 <_read_r>:
   87250:	b570      	push	{r4, r5, r6, lr}
   87252:	4c08      	ldr	r4, [pc, #32]	; (87274 <_read_r+0x24>)
   87254:	4606      	mov	r6, r0
   87256:	2500      	movs	r5, #0
   87258:	4608      	mov	r0, r1
   8725a:	4611      	mov	r1, r2
   8725c:	461a      	mov	r2, r3
   8725e:	6025      	str	r5, [r4, #0]
   87260:	f7f9 f84e 	bl	80300 <_read>
   87264:	1c43      	adds	r3, r0, #1
   87266:	d000      	beq.n	8726a <_read_r+0x1a>
   87268:	bd70      	pop	{r4, r5, r6, pc}
   8726a:	6823      	ldr	r3, [r4, #0]
   8726c:	2b00      	cmp	r3, #0
   8726e:	d0fb      	beq.n	87268 <_read_r+0x18>
   87270:	6033      	str	r3, [r6, #0]
   87272:	bd70      	pop	{r4, r5, r6, pc}
   87274:	20070b54 	.word	0x20070b54

00087278 <__aeabi_uldivmod>:
   87278:	b94b      	cbnz	r3, 8728e <__aeabi_uldivmod+0x16>
   8727a:	b942      	cbnz	r2, 8728e <__aeabi_uldivmod+0x16>
   8727c:	2900      	cmp	r1, #0
   8727e:	bf08      	it	eq
   87280:	2800      	cmpeq	r0, #0
   87282:	d002      	beq.n	8728a <__aeabi_uldivmod+0x12>
   87284:	f04f 31ff 	mov.w	r1, #4294967295
   87288:	4608      	mov	r0, r1
   8728a:	f000 b83b 	b.w	87304 <__aeabi_idiv0>
   8728e:	b082      	sub	sp, #8
   87290:	46ec      	mov	ip, sp
   87292:	e92d 5000 	stmdb	sp!, {ip, lr}
   87296:	f000 f81d 	bl	872d4 <__gnu_uldivmod_helper>
   8729a:	f8dd e004 	ldr.w	lr, [sp, #4]
   8729e:	b002      	add	sp, #8
   872a0:	bc0c      	pop	{r2, r3}
   872a2:	4770      	bx	lr

000872a4 <__gnu_ldivmod_helper>:
   872a4:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   872a8:	9e08      	ldr	r6, [sp, #32]
   872aa:	4614      	mov	r4, r2
   872ac:	461d      	mov	r5, r3
   872ae:	4680      	mov	r8, r0
   872b0:	4689      	mov	r9, r1
   872b2:	f000 f829 	bl	87308 <__divdi3>
   872b6:	fb04 f301 	mul.w	r3, r4, r1
   872ba:	fba4 ab00 	umull	sl, fp, r4, r0
   872be:	fb00 3205 	mla	r2, r0, r5, r3
   872c2:	4493      	add	fp, r2
   872c4:	ebb8 080a 	subs.w	r8, r8, sl
   872c8:	eb69 090b 	sbc.w	r9, r9, fp
   872cc:	e9c6 8900 	strd	r8, r9, [r6]
   872d0:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

000872d4 <__gnu_uldivmod_helper>:
   872d4:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   872d8:	9e08      	ldr	r6, [sp, #32]
   872da:	4614      	mov	r4, r2
   872dc:	461d      	mov	r5, r3
   872de:	4680      	mov	r8, r0
   872e0:	4689      	mov	r9, r1
   872e2:	f000 f961 	bl	875a8 <__udivdi3>
   872e6:	fb00 f505 	mul.w	r5, r0, r5
   872ea:	fba0 ab04 	umull	sl, fp, r0, r4
   872ee:	fb04 5401 	mla	r4, r4, r1, r5
   872f2:	44a3      	add	fp, r4
   872f4:	ebb8 080a 	subs.w	r8, r8, sl
   872f8:	eb69 090b 	sbc.w	r9, r9, fp
   872fc:	e9c6 8900 	strd	r8, r9, [r6]
   87300:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

00087304 <__aeabi_idiv0>:
   87304:	4770      	bx	lr
   87306:	bf00      	nop

00087308 <__divdi3>:
   87308:	2900      	cmp	r1, #0
   8730a:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8730e:	f2c0 80a1 	blt.w	87454 <__divdi3+0x14c>
   87312:	2400      	movs	r4, #0
   87314:	2b00      	cmp	r3, #0
   87316:	f2c0 8098 	blt.w	8744a <__divdi3+0x142>
   8731a:	4615      	mov	r5, r2
   8731c:	4606      	mov	r6, r0
   8731e:	460f      	mov	r7, r1
   87320:	2b00      	cmp	r3, #0
   87322:	d13f      	bne.n	873a4 <__divdi3+0x9c>
   87324:	428a      	cmp	r2, r1
   87326:	d958      	bls.n	873da <__divdi3+0xd2>
   87328:	fab2 f382 	clz	r3, r2
   8732c:	b14b      	cbz	r3, 87342 <__divdi3+0x3a>
   8732e:	f1c3 0220 	rsb	r2, r3, #32
   87332:	fa01 f703 	lsl.w	r7, r1, r3
   87336:	fa20 f202 	lsr.w	r2, r0, r2
   8733a:	409d      	lsls	r5, r3
   8733c:	fa00 f603 	lsl.w	r6, r0, r3
   87340:	4317      	orrs	r7, r2
   87342:	0c29      	lsrs	r1, r5, #16
   87344:	fbb7 f2f1 	udiv	r2, r7, r1
   87348:	fb01 7712 	mls	r7, r1, r2, r7
   8734c:	b2a8      	uxth	r0, r5
   8734e:	fb00 f302 	mul.w	r3, r0, r2
   87352:	ea4f 4c16 	mov.w	ip, r6, lsr #16
   87356:	ea4c 4707 	orr.w	r7, ip, r7, lsl #16
   8735a:	42bb      	cmp	r3, r7
   8735c:	d909      	bls.n	87372 <__divdi3+0x6a>
   8735e:	197f      	adds	r7, r7, r5
   87360:	f102 3cff 	add.w	ip, r2, #4294967295
   87364:	f080 8105 	bcs.w	87572 <__divdi3+0x26a>
   87368:	42bb      	cmp	r3, r7
   8736a:	f240 8102 	bls.w	87572 <__divdi3+0x26a>
   8736e:	3a02      	subs	r2, #2
   87370:	442f      	add	r7, r5
   87372:	1aff      	subs	r7, r7, r3
   87374:	fbb7 f3f1 	udiv	r3, r7, r1
   87378:	fb01 7113 	mls	r1, r1, r3, r7
   8737c:	fb00 f003 	mul.w	r0, r0, r3
   87380:	b2b6      	uxth	r6, r6
   87382:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
   87386:	4288      	cmp	r0, r1
   87388:	d908      	bls.n	8739c <__divdi3+0x94>
   8738a:	1949      	adds	r1, r1, r5
   8738c:	f103 37ff 	add.w	r7, r3, #4294967295
   87390:	f080 80f1 	bcs.w	87576 <__divdi3+0x26e>
   87394:	4288      	cmp	r0, r1
   87396:	f240 80ee 	bls.w	87576 <__divdi3+0x26e>
   8739a:	3b02      	subs	r3, #2
   8739c:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   873a0:	2300      	movs	r3, #0
   873a2:	e003      	b.n	873ac <__divdi3+0xa4>
   873a4:	428b      	cmp	r3, r1
   873a6:	d90a      	bls.n	873be <__divdi3+0xb6>
   873a8:	2300      	movs	r3, #0
   873aa:	461a      	mov	r2, r3
   873ac:	4610      	mov	r0, r2
   873ae:	4619      	mov	r1, r3
   873b0:	b114      	cbz	r4, 873b8 <__divdi3+0xb0>
   873b2:	4240      	negs	r0, r0
   873b4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   873b8:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   873bc:	4770      	bx	lr
   873be:	fab3 f883 	clz	r8, r3
   873c2:	f1b8 0f00 	cmp.w	r8, #0
   873c6:	f040 8088 	bne.w	874da <__divdi3+0x1d2>
   873ca:	428b      	cmp	r3, r1
   873cc:	d302      	bcc.n	873d4 <__divdi3+0xcc>
   873ce:	4282      	cmp	r2, r0
   873d0:	f200 80e2 	bhi.w	87598 <__divdi3+0x290>
   873d4:	2300      	movs	r3, #0
   873d6:	2201      	movs	r2, #1
   873d8:	e7e8      	b.n	873ac <__divdi3+0xa4>
   873da:	b912      	cbnz	r2, 873e2 <__divdi3+0xda>
   873dc:	2301      	movs	r3, #1
   873de:	fbb3 f5f2 	udiv	r5, r3, r2
   873e2:	fab5 f285 	clz	r2, r5
   873e6:	2a00      	cmp	r2, #0
   873e8:	d13a      	bne.n	87460 <__divdi3+0x158>
   873ea:	1b7f      	subs	r7, r7, r5
   873ec:	0c28      	lsrs	r0, r5, #16
   873ee:	fa1f fc85 	uxth.w	ip, r5
   873f2:	2301      	movs	r3, #1
   873f4:	fbb7 f1f0 	udiv	r1, r7, r0
   873f8:	fb00 7711 	mls	r7, r0, r1, r7
   873fc:	fb0c f201 	mul.w	r2, ip, r1
   87400:	ea4f 4816 	mov.w	r8, r6, lsr #16
   87404:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   87408:	42ba      	cmp	r2, r7
   8740a:	d907      	bls.n	8741c <__divdi3+0x114>
   8740c:	197f      	adds	r7, r7, r5
   8740e:	f101 38ff 	add.w	r8, r1, #4294967295
   87412:	d202      	bcs.n	8741a <__divdi3+0x112>
   87414:	42ba      	cmp	r2, r7
   87416:	f200 80c4 	bhi.w	875a2 <__divdi3+0x29a>
   8741a:	4641      	mov	r1, r8
   8741c:	1abf      	subs	r7, r7, r2
   8741e:	fbb7 f2f0 	udiv	r2, r7, r0
   87422:	fb00 7012 	mls	r0, r0, r2, r7
   87426:	fb0c fc02 	mul.w	ip, ip, r2
   8742a:	b2b6      	uxth	r6, r6
   8742c:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
   87430:	4584      	cmp	ip, r0
   87432:	d907      	bls.n	87444 <__divdi3+0x13c>
   87434:	1940      	adds	r0, r0, r5
   87436:	f102 37ff 	add.w	r7, r2, #4294967295
   8743a:	d202      	bcs.n	87442 <__divdi3+0x13a>
   8743c:	4584      	cmp	ip, r0
   8743e:	f200 80ae 	bhi.w	8759e <__divdi3+0x296>
   87442:	463a      	mov	r2, r7
   87444:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   87448:	e7b0      	b.n	873ac <__divdi3+0xa4>
   8744a:	43e4      	mvns	r4, r4
   8744c:	4252      	negs	r2, r2
   8744e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   87452:	e762      	b.n	8731a <__divdi3+0x12>
   87454:	4240      	negs	r0, r0
   87456:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   8745a:	f04f 34ff 	mov.w	r4, #4294967295
   8745e:	e759      	b.n	87314 <__divdi3+0xc>
   87460:	4095      	lsls	r5, r2
   87462:	f1c2 0920 	rsb	r9, r2, #32
   87466:	fa27 f109 	lsr.w	r1, r7, r9
   8746a:	fa26 f909 	lsr.w	r9, r6, r9
   8746e:	4097      	lsls	r7, r2
   87470:	0c28      	lsrs	r0, r5, #16
   87472:	fbb1 f8f0 	udiv	r8, r1, r0
   87476:	fb00 1118 	mls	r1, r0, r8, r1
   8747a:	fa1f fc85 	uxth.w	ip, r5
   8747e:	fb0c f308 	mul.w	r3, ip, r8
   87482:	ea49 0907 	orr.w	r9, r9, r7
   87486:	ea4f 4719 	mov.w	r7, r9, lsr #16
   8748a:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
   8748e:	428b      	cmp	r3, r1
   87490:	fa06 f602 	lsl.w	r6, r6, r2
   87494:	d908      	bls.n	874a8 <__divdi3+0x1a0>
   87496:	1949      	adds	r1, r1, r5
   87498:	f108 32ff 	add.w	r2, r8, #4294967295
   8749c:	d27a      	bcs.n	87594 <__divdi3+0x28c>
   8749e:	428b      	cmp	r3, r1
   874a0:	d978      	bls.n	87594 <__divdi3+0x28c>
   874a2:	f1a8 0802 	sub.w	r8, r8, #2
   874a6:	4429      	add	r1, r5
   874a8:	1ac9      	subs	r1, r1, r3
   874aa:	fbb1 f3f0 	udiv	r3, r1, r0
   874ae:	fb00 1713 	mls	r7, r0, r3, r1
   874b2:	fb0c f203 	mul.w	r2, ip, r3
   874b6:	fa1f f989 	uxth.w	r9, r9
   874ba:	ea49 4707 	orr.w	r7, r9, r7, lsl #16
   874be:	42ba      	cmp	r2, r7
   874c0:	d907      	bls.n	874d2 <__divdi3+0x1ca>
   874c2:	197f      	adds	r7, r7, r5
   874c4:	f103 31ff 	add.w	r1, r3, #4294967295
   874c8:	d260      	bcs.n	8758c <__divdi3+0x284>
   874ca:	42ba      	cmp	r2, r7
   874cc:	d95e      	bls.n	8758c <__divdi3+0x284>
   874ce:	3b02      	subs	r3, #2
   874d0:	442f      	add	r7, r5
   874d2:	1abf      	subs	r7, r7, r2
   874d4:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   874d8:	e78c      	b.n	873f4 <__divdi3+0xec>
   874da:	f1c8 0220 	rsb	r2, r8, #32
   874de:	fa25 f102 	lsr.w	r1, r5, r2
   874e2:	fa03 fc08 	lsl.w	ip, r3, r8
   874e6:	fa27 f302 	lsr.w	r3, r7, r2
   874ea:	fa20 f202 	lsr.w	r2, r0, r2
   874ee:	fa07 f708 	lsl.w	r7, r7, r8
   874f2:	ea41 0c0c 	orr.w	ip, r1, ip
   874f6:	ea4f 491c 	mov.w	r9, ip, lsr #16
   874fa:	fbb3 f1f9 	udiv	r1, r3, r9
   874fe:	fb09 3311 	mls	r3, r9, r1, r3
   87502:	fa1f fa8c 	uxth.w	sl, ip
   87506:	fb0a fb01 	mul.w	fp, sl, r1
   8750a:	4317      	orrs	r7, r2
   8750c:	0c3a      	lsrs	r2, r7, #16
   8750e:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   87512:	459b      	cmp	fp, r3
   87514:	fa05 f008 	lsl.w	r0, r5, r8
   87518:	d908      	bls.n	8752c <__divdi3+0x224>
   8751a:	eb13 030c 	adds.w	r3, r3, ip
   8751e:	f101 32ff 	add.w	r2, r1, #4294967295
   87522:	d235      	bcs.n	87590 <__divdi3+0x288>
   87524:	459b      	cmp	fp, r3
   87526:	d933      	bls.n	87590 <__divdi3+0x288>
   87528:	3902      	subs	r1, #2
   8752a:	4463      	add	r3, ip
   8752c:	ebcb 0303 	rsb	r3, fp, r3
   87530:	fbb3 f2f9 	udiv	r2, r3, r9
   87534:	fb09 3312 	mls	r3, r9, r2, r3
   87538:	fb0a fa02 	mul.w	sl, sl, r2
   8753c:	b2bf      	uxth	r7, r7
   8753e:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
   87542:	45ba      	cmp	sl, r7
   87544:	d908      	bls.n	87558 <__divdi3+0x250>
   87546:	eb17 070c 	adds.w	r7, r7, ip
   8754a:	f102 33ff 	add.w	r3, r2, #4294967295
   8754e:	d21b      	bcs.n	87588 <__divdi3+0x280>
   87550:	45ba      	cmp	sl, r7
   87552:	d919      	bls.n	87588 <__divdi3+0x280>
   87554:	3a02      	subs	r2, #2
   87556:	4467      	add	r7, ip
   87558:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
   8755c:	fba5 0100 	umull	r0, r1, r5, r0
   87560:	ebca 0707 	rsb	r7, sl, r7
   87564:	428f      	cmp	r7, r1
   87566:	f04f 0300 	mov.w	r3, #0
   8756a:	d30a      	bcc.n	87582 <__divdi3+0x27a>
   8756c:	d005      	beq.n	8757a <__divdi3+0x272>
   8756e:	462a      	mov	r2, r5
   87570:	e71c      	b.n	873ac <__divdi3+0xa4>
   87572:	4662      	mov	r2, ip
   87574:	e6fd      	b.n	87372 <__divdi3+0x6a>
   87576:	463b      	mov	r3, r7
   87578:	e710      	b.n	8739c <__divdi3+0x94>
   8757a:	fa06 f608 	lsl.w	r6, r6, r8
   8757e:	4286      	cmp	r6, r0
   87580:	d2f5      	bcs.n	8756e <__divdi3+0x266>
   87582:	1e6a      	subs	r2, r5, #1
   87584:	2300      	movs	r3, #0
   87586:	e711      	b.n	873ac <__divdi3+0xa4>
   87588:	461a      	mov	r2, r3
   8758a:	e7e5      	b.n	87558 <__divdi3+0x250>
   8758c:	460b      	mov	r3, r1
   8758e:	e7a0      	b.n	874d2 <__divdi3+0x1ca>
   87590:	4611      	mov	r1, r2
   87592:	e7cb      	b.n	8752c <__divdi3+0x224>
   87594:	4690      	mov	r8, r2
   87596:	e787      	b.n	874a8 <__divdi3+0x1a0>
   87598:	4643      	mov	r3, r8
   8759a:	4642      	mov	r2, r8
   8759c:	e706      	b.n	873ac <__divdi3+0xa4>
   8759e:	3a02      	subs	r2, #2
   875a0:	e750      	b.n	87444 <__divdi3+0x13c>
   875a2:	3902      	subs	r1, #2
   875a4:	442f      	add	r7, r5
   875a6:	e739      	b.n	8741c <__divdi3+0x114>

000875a8 <__udivdi3>:
   875a8:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   875ac:	4614      	mov	r4, r2
   875ae:	4605      	mov	r5, r0
   875b0:	460e      	mov	r6, r1
   875b2:	2b00      	cmp	r3, #0
   875b4:	d143      	bne.n	8763e <__udivdi3+0x96>
   875b6:	428a      	cmp	r2, r1
   875b8:	d953      	bls.n	87662 <__udivdi3+0xba>
   875ba:	fab2 f782 	clz	r7, r2
   875be:	b157      	cbz	r7, 875d6 <__udivdi3+0x2e>
   875c0:	f1c7 0620 	rsb	r6, r7, #32
   875c4:	fa20 f606 	lsr.w	r6, r0, r6
   875c8:	fa01 f307 	lsl.w	r3, r1, r7
   875cc:	fa02 f407 	lsl.w	r4, r2, r7
   875d0:	fa00 f507 	lsl.w	r5, r0, r7
   875d4:	431e      	orrs	r6, r3
   875d6:	0c21      	lsrs	r1, r4, #16
   875d8:	fbb6 f2f1 	udiv	r2, r6, r1
   875dc:	fb01 6612 	mls	r6, r1, r2, r6
   875e0:	b2a0      	uxth	r0, r4
   875e2:	fb00 f302 	mul.w	r3, r0, r2
   875e6:	0c2f      	lsrs	r7, r5, #16
   875e8:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
   875ec:	42b3      	cmp	r3, r6
   875ee:	d909      	bls.n	87604 <__udivdi3+0x5c>
   875f0:	1936      	adds	r6, r6, r4
   875f2:	f102 37ff 	add.w	r7, r2, #4294967295
   875f6:	f080 80fd 	bcs.w	877f4 <__udivdi3+0x24c>
   875fa:	42b3      	cmp	r3, r6
   875fc:	f240 80fa 	bls.w	877f4 <__udivdi3+0x24c>
   87600:	3a02      	subs	r2, #2
   87602:	4426      	add	r6, r4
   87604:	1af6      	subs	r6, r6, r3
   87606:	fbb6 f3f1 	udiv	r3, r6, r1
   8760a:	fb01 6113 	mls	r1, r1, r3, r6
   8760e:	fb00 f003 	mul.w	r0, r0, r3
   87612:	b2ad      	uxth	r5, r5
   87614:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
   87618:	4288      	cmp	r0, r1
   8761a:	d908      	bls.n	8762e <__udivdi3+0x86>
   8761c:	1909      	adds	r1, r1, r4
   8761e:	f103 36ff 	add.w	r6, r3, #4294967295
   87622:	f080 80e9 	bcs.w	877f8 <__udivdi3+0x250>
   87626:	4288      	cmp	r0, r1
   87628:	f240 80e6 	bls.w	877f8 <__udivdi3+0x250>
   8762c:	3b02      	subs	r3, #2
   8762e:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   87632:	2300      	movs	r3, #0
   87634:	4610      	mov	r0, r2
   87636:	4619      	mov	r1, r3
   87638:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8763c:	4770      	bx	lr
   8763e:	428b      	cmp	r3, r1
   87640:	d84c      	bhi.n	876dc <__udivdi3+0x134>
   87642:	fab3 f683 	clz	r6, r3
   87646:	2e00      	cmp	r6, #0
   87648:	d14f      	bne.n	876ea <__udivdi3+0x142>
   8764a:	428b      	cmp	r3, r1
   8764c:	d302      	bcc.n	87654 <__udivdi3+0xac>
   8764e:	4282      	cmp	r2, r0
   87650:	f200 80dd 	bhi.w	8780e <__udivdi3+0x266>
   87654:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   87658:	2300      	movs	r3, #0
   8765a:	2201      	movs	r2, #1
   8765c:	4610      	mov	r0, r2
   8765e:	4619      	mov	r1, r3
   87660:	4770      	bx	lr
   87662:	b912      	cbnz	r2, 8766a <__udivdi3+0xc2>
   87664:	2401      	movs	r4, #1
   87666:	fbb4 f4f2 	udiv	r4, r4, r2
   8766a:	fab4 f284 	clz	r2, r4
   8766e:	2a00      	cmp	r2, #0
   87670:	f040 8082 	bne.w	87778 <__udivdi3+0x1d0>
   87674:	1b09      	subs	r1, r1, r4
   87676:	0c26      	lsrs	r6, r4, #16
   87678:	b2a7      	uxth	r7, r4
   8767a:	2301      	movs	r3, #1
   8767c:	fbb1 f0f6 	udiv	r0, r1, r6
   87680:	fb06 1110 	mls	r1, r6, r0, r1
   87684:	fb07 f200 	mul.w	r2, r7, r0
   87688:	ea4f 4c15 	mov.w	ip, r5, lsr #16
   8768c:	ea4c 4101 	orr.w	r1, ip, r1, lsl #16
   87690:	428a      	cmp	r2, r1
   87692:	d907      	bls.n	876a4 <__udivdi3+0xfc>
   87694:	1909      	adds	r1, r1, r4
   87696:	f100 3cff 	add.w	ip, r0, #4294967295
   8769a:	d202      	bcs.n	876a2 <__udivdi3+0xfa>
   8769c:	428a      	cmp	r2, r1
   8769e:	f200 80c8 	bhi.w	87832 <__udivdi3+0x28a>
   876a2:	4660      	mov	r0, ip
   876a4:	1a89      	subs	r1, r1, r2
   876a6:	fbb1 f2f6 	udiv	r2, r1, r6
   876aa:	fb06 1112 	mls	r1, r6, r2, r1
   876ae:	fb07 f702 	mul.w	r7, r7, r2
   876b2:	b2ad      	uxth	r5, r5
   876b4:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
   876b8:	42af      	cmp	r7, r5
   876ba:	d908      	bls.n	876ce <__udivdi3+0x126>
   876bc:	192c      	adds	r4, r5, r4
   876be:	f102 31ff 	add.w	r1, r2, #4294967295
   876c2:	f080 809b 	bcs.w	877fc <__udivdi3+0x254>
   876c6:	42a7      	cmp	r7, r4
   876c8:	f240 8098 	bls.w	877fc <__udivdi3+0x254>
   876cc:	3a02      	subs	r2, #2
   876ce:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
   876d2:	4610      	mov	r0, r2
   876d4:	4619      	mov	r1, r3
   876d6:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   876da:	4770      	bx	lr
   876dc:	2300      	movs	r3, #0
   876de:	461a      	mov	r2, r3
   876e0:	4610      	mov	r0, r2
   876e2:	4619      	mov	r1, r3
   876e4:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   876e8:	4770      	bx	lr
   876ea:	f1c6 0520 	rsb	r5, r6, #32
   876ee:	fa22 f705 	lsr.w	r7, r2, r5
   876f2:	fa03 f406 	lsl.w	r4, r3, r6
   876f6:	fa21 f305 	lsr.w	r3, r1, r5
   876fa:	fa01 fb06 	lsl.w	fp, r1, r6
   876fe:	fa20 f505 	lsr.w	r5, r0, r5
   87702:	433c      	orrs	r4, r7
   87704:	ea4f 4814 	mov.w	r8, r4, lsr #16
   87708:	fbb3 fcf8 	udiv	ip, r3, r8
   8770c:	fb08 331c 	mls	r3, r8, ip, r3
   87710:	fa1f f984 	uxth.w	r9, r4
   87714:	fb09 fa0c 	mul.w	sl, r9, ip
   87718:	ea45 0b0b 	orr.w	fp, r5, fp
   8771c:	ea4f 451b 	mov.w	r5, fp, lsr #16
   87720:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
   87724:	459a      	cmp	sl, r3
   87726:	fa02 f206 	lsl.w	r2, r2, r6
   8772a:	d904      	bls.n	87736 <__udivdi3+0x18e>
   8772c:	191b      	adds	r3, r3, r4
   8772e:	f10c 35ff 	add.w	r5, ip, #4294967295
   87732:	d36f      	bcc.n	87814 <__udivdi3+0x26c>
   87734:	46ac      	mov	ip, r5
   87736:	ebca 0303 	rsb	r3, sl, r3
   8773a:	fbb3 f5f8 	udiv	r5, r3, r8
   8773e:	fb08 3315 	mls	r3, r8, r5, r3
   87742:	fb09 f905 	mul.w	r9, r9, r5
   87746:	fa1f fb8b 	uxth.w	fp, fp
   8774a:	ea4b 4703 	orr.w	r7, fp, r3, lsl #16
   8774e:	45b9      	cmp	r9, r7
   87750:	d904      	bls.n	8775c <__udivdi3+0x1b4>
   87752:	193f      	adds	r7, r7, r4
   87754:	f105 33ff 	add.w	r3, r5, #4294967295
   87758:	d362      	bcc.n	87820 <__udivdi3+0x278>
   8775a:	461d      	mov	r5, r3
   8775c:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
   87760:	fbac 2302 	umull	r2, r3, ip, r2
   87764:	ebc9 0707 	rsb	r7, r9, r7
   87768:	429f      	cmp	r7, r3
   8776a:	f04f 0500 	mov.w	r5, #0
   8776e:	d34a      	bcc.n	87806 <__udivdi3+0x25e>
   87770:	d046      	beq.n	87800 <__udivdi3+0x258>
   87772:	4662      	mov	r2, ip
   87774:	462b      	mov	r3, r5
   87776:	e75d      	b.n	87634 <__udivdi3+0x8c>
   87778:	4094      	lsls	r4, r2
   8777a:	f1c2 0920 	rsb	r9, r2, #32
   8777e:	fa21 fc09 	lsr.w	ip, r1, r9
   87782:	4091      	lsls	r1, r2
   87784:	fa20 f909 	lsr.w	r9, r0, r9
   87788:	0c26      	lsrs	r6, r4, #16
   8778a:	fbbc f8f6 	udiv	r8, ip, r6
   8778e:	fb06 cc18 	mls	ip, r6, r8, ip
   87792:	b2a7      	uxth	r7, r4
   87794:	fb07 f308 	mul.w	r3, r7, r8
   87798:	ea49 0901 	orr.w	r9, r9, r1
   8779c:	ea4f 4119 	mov.w	r1, r9, lsr #16
   877a0:	ea41 4c0c 	orr.w	ip, r1, ip, lsl #16
   877a4:	4563      	cmp	r3, ip
   877a6:	fa00 f502 	lsl.w	r5, r0, r2
   877aa:	d909      	bls.n	877c0 <__udivdi3+0x218>
   877ac:	eb1c 0c04 	adds.w	ip, ip, r4
   877b0:	f108 32ff 	add.w	r2, r8, #4294967295
   877b4:	d23b      	bcs.n	8782e <__udivdi3+0x286>
   877b6:	4563      	cmp	r3, ip
   877b8:	d939      	bls.n	8782e <__udivdi3+0x286>
   877ba:	f1a8 0802 	sub.w	r8, r8, #2
   877be:	44a4      	add	ip, r4
   877c0:	ebc3 0c0c 	rsb	ip, r3, ip
   877c4:	fbbc f3f6 	udiv	r3, ip, r6
   877c8:	fb06 c113 	mls	r1, r6, r3, ip
   877cc:	fb07 f203 	mul.w	r2, r7, r3
   877d0:	fa1f f989 	uxth.w	r9, r9
   877d4:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
   877d8:	428a      	cmp	r2, r1
   877da:	d907      	bls.n	877ec <__udivdi3+0x244>
   877dc:	1909      	adds	r1, r1, r4
   877de:	f103 30ff 	add.w	r0, r3, #4294967295
   877e2:	d222      	bcs.n	8782a <__udivdi3+0x282>
   877e4:	428a      	cmp	r2, r1
   877e6:	d920      	bls.n	8782a <__udivdi3+0x282>
   877e8:	3b02      	subs	r3, #2
   877ea:	4421      	add	r1, r4
   877ec:	1a89      	subs	r1, r1, r2
   877ee:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   877f2:	e743      	b.n	8767c <__udivdi3+0xd4>
   877f4:	463a      	mov	r2, r7
   877f6:	e705      	b.n	87604 <__udivdi3+0x5c>
   877f8:	4633      	mov	r3, r6
   877fa:	e718      	b.n	8762e <__udivdi3+0x86>
   877fc:	460a      	mov	r2, r1
   877fe:	e766      	b.n	876ce <__udivdi3+0x126>
   87800:	40b0      	lsls	r0, r6
   87802:	4290      	cmp	r0, r2
   87804:	d2b5      	bcs.n	87772 <__udivdi3+0x1ca>
   87806:	f10c 32ff 	add.w	r2, ip, #4294967295
   8780a:	2300      	movs	r3, #0
   8780c:	e712      	b.n	87634 <__udivdi3+0x8c>
   8780e:	4633      	mov	r3, r6
   87810:	4632      	mov	r2, r6
   87812:	e70f      	b.n	87634 <__udivdi3+0x8c>
   87814:	459a      	cmp	sl, r3
   87816:	d98d      	bls.n	87734 <__udivdi3+0x18c>
   87818:	f1ac 0c02 	sub.w	ip, ip, #2
   8781c:	4423      	add	r3, r4
   8781e:	e78a      	b.n	87736 <__udivdi3+0x18e>
   87820:	45b9      	cmp	r9, r7
   87822:	d99a      	bls.n	8775a <__udivdi3+0x1b2>
   87824:	3d02      	subs	r5, #2
   87826:	4427      	add	r7, r4
   87828:	e798      	b.n	8775c <__udivdi3+0x1b4>
   8782a:	4603      	mov	r3, r0
   8782c:	e7de      	b.n	877ec <__udivdi3+0x244>
   8782e:	4690      	mov	r8, r2
   87830:	e7c6      	b.n	877c0 <__udivdi3+0x218>
   87832:	3802      	subs	r0, #2
   87834:	4421      	add	r1, r4
   87836:	e735      	b.n	876a4 <__udivdi3+0xfc>
   87838:	7269440a 	.word	0x7269440a
   8783c:	69746365 	.word	0x69746365
   87840:	203a6e6f 	.word	0x203a6e6f
   87844:	00006425 	.word	0x00006425
   87848:	77654e0a 	.word	0x77654e0a
   8784c:	72696420 	.word	0x72696420
   87850:	69746365 	.word	0x69746365
   87854:	203a6e6f 	.word	0x203a6e6f
   87858:	00006425 	.word	0x00006425
   8785c:	77654e0a 	.word	0x77654e0a
   87860:	676e6120 	.word	0x676e6120
   87864:	203a656c 	.word	0x203a656c
   87868:	00006425 	.word	0x00006425
   8786c:	7269640a 	.word	0x7269640a
   87870:	5f746365 	.word	0x5f746365
   87874:	6c676e61 	.word	0x6c676e61
   87878:	203d2065 	.word	0x203d2065
   8787c:	00006425 	.word	0x00006425
   87880:	635f720a 	.word	0x635f720a
   87884:	746e756f 	.word	0x746e756f
   87888:	25203d20 	.word	0x25203d20
   8788c:	00000064 	.word	0x00000064
   87890:	756f630a 	.word	0x756f630a
   87894:	725f746e 	.word	0x725f746e
   87898:	74686769 	.word	0x74686769
   8789c:	25203d20 	.word	0x25203d20
   878a0:	00000064 	.word	0x00000064
   878a4:	635f6c0a 	.word	0x635f6c0a
   878a8:	746e756f 	.word	0x746e756f
   878ac:	25203d20 	.word	0x25203d20
   878b0:	00000064 	.word	0x00000064
   878b4:	756f630a 	.word	0x756f630a
   878b8:	6c5f746e 	.word	0x6c5f746e
   878bc:	20746665 	.word	0x20746665
   878c0:	6425203d 	.word	0x6425203d
   878c4:	00000000 	.word	0x00000000
   878c8:	736e6f4b 	.word	0x736e6f4b
   878cc:	6e656c6f 	.word	0x6e656c6f
   878d0:	61657220 	.word	0x61657220
   878d4:	000a6f64 	.word	0x000a6f64
   878d8:	3d3d3d3d 	.word	0x3d3d3d3d
   878dc:	3d3d3d3d 	.word	0x3d3d3d3d
   878e0:	3d3d3d3d 	.word	0x3d3d3d3d
   878e4:	0a3d3d3d 	.word	0x0a3d3d3d
   878e8:	00000000 	.word	0x00000000
   878ec:	25202d2d 	.word	0x25202d2d
   878f0:	000d0a73 	.word	0x000d0a73
   878f4:	75647241 	.word	0x75647241
   878f8:	206f6e69 	.word	0x206f6e69
   878fc:	2f657544 	.word	0x2f657544
   87900:	00000058 	.word	0x00000058
   87904:	43202d2d 	.word	0x43202d2d
   87908:	69706d6f 	.word	0x69706d6f
   8790c:	3a64656c 	.word	0x3a64656c
   87910:	20732520 	.word	0x20732520
   87914:	2d207325 	.word	0x2d207325
   87918:	000d0a2d 	.word	0x000d0a2d
   8791c:	2079614d 	.word	0x2079614d
   87920:	32203831 	.word	0x32203831
   87924:	00373130 	.word	0x00373130
   87928:	323a3332 	.word	0x323a3332
   8792c:	38333a39 	.word	0x38333a39
   87930:	00000000 	.word	0x00000000
   87934:	6c696857 	.word	0x6c696857
   87938:	74617365 	.word	0x74617365
   8793c:	006e6573 	.word	0x006e6573
   87940:	00000043 	.word	0x00000043

00087944 <_global_impure_ptr>:
   87944:	20070138                                8.. 

00087948 <zeroes.6763>:
   87948:	30303030 30303030 30303030 30303030     0000000000000000
   87958:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   87968:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   87978:	00000000 33323130 37363534 62613938     ....0123456789ab
   87988:	66656463 00000000 6c756e28 0000296c     cdef....(null)..
   87998:	00000030                                0...

0008799c <blanks.6762>:
   8799c:	20202020 20202020 20202020 20202020                     

000879ac <zeroes.6721>:
   879ac:	30303030 30303030 30303030 30303030     0000000000000000

000879bc <blanks.6720>:
   879bc:	20202020 20202020 20202020 20202020                     
   879cc:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   879dc:	49534f50 00000058 0000002e              POSIX.......

000879e8 <__mprec_tens>:
   879e8:	00000000 3ff00000 00000000 40240000     .......?......$@
   879f8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   87a08:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   87a18:	00000000 412e8480 00000000 416312d0     .......A......cA
   87a28:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   87a38:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   87a48:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   87a58:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   87a68:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   87a78:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   87a88:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   87a98:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   87aa8:	79d99db4 44ea7843                       ...yCx.D

00087ab0 <__mprec_bigtens>:
   87ab0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   87ac0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   87ad0:	7f73bf3c 75154fdd                       <.s..O.u

00087ad8 <p05.5269>:
   87ad8:	00000005 00000019 0000007d              ........}...

00087ae4 <_init>:
   87ae4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87ae6:	bf00      	nop
   87ae8:	bcf8      	pop	{r3, r4, r5, r6, r7}
   87aea:	bc08      	pop	{r3}
   87aec:	469e      	mov	lr, r3
   87aee:	4770      	bx	lr

00087af0 <__init_array_start>:
   87af0:	00084289 	.word	0x00084289

00087af4 <__frame_dummy_init_array_entry>:
   87af4:	00080119                                ....

00087af8 <_fini>:
   87af8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87afa:	bf00      	nop
   87afc:	bcf8      	pop	{r3, r4, r5, r6, r7}
   87afe:	bc08      	pop	{r3}
   87b00:	469e      	mov	lr, r3
   87b02:	4770      	bx	lr

00087b04 <__fini_array_start>:
   87b04:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <SystemInit>:
__no_inline
RAMFUNC
void SystemInit(void)
{
	/* Set FWS according to SYS_BOARD_MCKR configuration */
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20070000:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070004:	4a20      	ldr	r2, [pc, #128]	; (20070088 <SystemInit+0x88>)
20070006:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070008:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007000c:	6013      	str	r3, [r2, #0]

	/* Initialize main oscillator */
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007000e:	4b1f      	ldr	r3, [pc, #124]	; (2007008c <SystemInit+0x8c>)
20070010:	6a1b      	ldr	r3, [r3, #32]
20070012:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070016:	d107      	bne.n	20070028 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070018:	4a1d      	ldr	r2, [pc, #116]	; (20070090 <SystemInit+0x90>)
2007001a:	4b1c      	ldr	r3, [pc, #112]	; (2007008c <SystemInit+0x8c>)
2007001c:	621a      	str	r2, [r3, #32]
			                     CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007001e:	461a      	mov	r2, r3
20070020:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070022:	f013 0f01 	tst.w	r3, #1
20070026:	d0fb      	beq.n	20070020 <SystemInit+0x20>
		}
	}

	/* Switch to 3-20MHz Xtal oscillator */
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070028:	4a1a      	ldr	r2, [pc, #104]	; (20070094 <SystemInit+0x94>)
2007002a:	4b18      	ldr	r3, [pc, #96]	; (2007008c <SystemInit+0x8c>)
2007002c:	621a      	str	r2, [r3, #32]
	                           CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;

	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007002e:	461a      	mov	r2, r3
20070030:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070032:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070036:	d0fb      	beq.n	20070030 <SystemInit+0x30>
	}
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070038:	4b14      	ldr	r3, [pc, #80]	; (2007008c <SystemInit+0x8c>)
2007003a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
2007003c:	f022 0203 	bic.w	r2, r2, #3
20070040:	f042 0201 	orr.w	r2, r2, #1
20070044:	631a      	str	r2, [r3, #48]	; 0x30
		                     PMC_MCKR_CSS_MAIN_CLK;
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070046:	461a      	mov	r2, r3
20070048:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007004a:	f013 0f08 	tst.w	r3, #8
2007004e:	d0fb      	beq.n	20070048 <SystemInit+0x48>
	}

	/* Initialize PLLA */
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
20070050:	4a11      	ldr	r2, [pc, #68]	; (20070098 <SystemInit+0x98>)
20070052:	4b0e      	ldr	r3, [pc, #56]	; (2007008c <SystemInit+0x8c>)
20070054:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070056:	461a      	mov	r2, r3
20070058:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007005a:	f013 0f02 	tst.w	r3, #2
2007005e:	d0fb      	beq.n	20070058 <SystemInit+0x58>
	}

	/* Switch to main clock */
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
20070060:	2211      	movs	r2, #17
20070062:	4b0a      	ldr	r3, [pc, #40]	; (2007008c <SystemInit+0x8c>)
20070064:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070066:	461a      	mov	r2, r3
20070068:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007006a:	f013 0f08 	tst.w	r3, #8
2007006e:	d0fb      	beq.n	20070068 <SystemInit+0x68>
	}

	/* Switch to PLLA */
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
20070070:	2212      	movs	r2, #18
20070072:	4b06      	ldr	r3, [pc, #24]	; (2007008c <SystemInit+0x8c>)
20070074:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070076:	461a      	mov	r2, r3
20070078:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007007a:	f013 0f08 	tst.w	r3, #8
2007007e:	d0fb      	beq.n	20070078 <SystemInit+0x78>
	}

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
20070080:	4a06      	ldr	r2, [pc, #24]	; (2007009c <SystemInit+0x9c>)
20070082:	4b07      	ldr	r3, [pc, #28]	; (200700a0 <SystemInit+0xa0>)
20070084:	601a      	str	r2, [r3, #0]
20070086:	4770      	bx	lr
20070088:	400e0a00 	.word	0x400e0a00
2007008c:	400e0600 	.word	0x400e0600
20070090:	00370809 	.word	0x00370809
20070094:	01370809 	.word	0x01370809
20070098:	200d3f01 	.word	0x200d3f01
2007009c:	0501bd00 	.word	0x0501bd00
200700a0:	20070130 	.word	0x20070130

200700a4 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700a4:	4b1b      	ldr	r3, [pc, #108]	; (20070114 <system_init_flash+0x70>)
200700a6:	4298      	cmp	r0, r3
200700a8:	d806      	bhi.n	200700b8 <system_init_flash+0x14>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700aa:	2300      	movs	r3, #0
200700ac:	4a1a      	ldr	r2, [pc, #104]	; (20070118 <system_init_flash+0x74>)
200700ae:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700b0:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700b4:	6013      	str	r3, [r2, #0]
200700b6:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b8:	4b18      	ldr	r3, [pc, #96]	; (2007011c <system_init_flash+0x78>)
200700ba:	4298      	cmp	r0, r3
200700bc:	d807      	bhi.n	200700ce <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700be:	f44f 7380 	mov.w	r3, #256	; 0x100
200700c2:	4a15      	ldr	r2, [pc, #84]	; (20070118 <system_init_flash+0x74>)
200700c4:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700c6:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ca:	6013      	str	r3, [r2, #0]
200700cc:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700ce:	4b14      	ldr	r3, [pc, #80]	; (20070120 <system_init_flash+0x7c>)
200700d0:	4298      	cmp	r0, r3
200700d2:	d807      	bhi.n	200700e4 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
200700d4:	f44f 7300 	mov.w	r3, #512	; 0x200
200700d8:	4a0f      	ldr	r2, [pc, #60]	; (20070118 <system_init_flash+0x74>)
200700da:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
200700dc:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700e0:	6013      	str	r3, [r2, #0]
200700e2:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700e4:	4b0f      	ldr	r3, [pc, #60]	; (20070124 <system_init_flash+0x80>)
200700e6:	4298      	cmp	r0, r3
200700e8:	d807      	bhi.n	200700fa <system_init_flash+0x56>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
200700ea:	f44f 7340 	mov.w	r3, #768	; 0x300
200700ee:	4a0a      	ldr	r2, [pc, #40]	; (20070118 <system_init_flash+0x74>)
200700f0:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
200700f2:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700f6:	6013      	str	r3, [r2, #0]
200700f8:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700fa:	4b0b      	ldr	r3, [pc, #44]	; (20070128 <system_init_flash+0x84>)
200700fc:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700fe:	bf94      	ite	ls
20070100:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
20070104:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
20070108:	4a03      	ldr	r2, [pc, #12]	; (20070118 <system_init_flash+0x74>)
2007010a:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
2007010c:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070110:	6013      	str	r3, [r2, #0]
20070112:	4770      	bx	lr
20070114:	0121eabf 	.word	0x0121eabf
20070118:	400e0a00 	.word	0x400e0a00
2007011c:	02faf07f 	.word	0x02faf07f
20070120:	03d08fff 	.word	0x03d08fff
20070124:	04c4b3ff 	.word	0x04c4b3ff
20070128:	055d4a7f 	.word	0x055d4a7f

2007012c <g_interrupt_enabled>:
2007012c:	00000001                                ....

20070130 <SystemCoreClock>:
20070130:	003d0900 00000000                       ..=.....

20070138 <impure_data>:
20070138:	00000000 20070424 2007048c 200704f4     ....$.. ... ... 
	...
2007016c:	00087940 00000000 00000000 00000000     @y..............
	...
200701e0:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200701f0:	0005deec 0000000b 00000000 00000000     ................
	...

20070560 <_impure_ptr>:
20070560:	20070138                                8.. 

20070564 <lconv>:
20070564:	000879e4 000878e8 000878e8 000878e8     .y...x...x...x..
20070574:	000878e8 000878e8 000878e8 000878e8     .x...x...x...x..
20070584:	000878e8 000878e8 ffffffff ffffffff     .x...x..........
20070594:	ffffffff 0000ffff                       ........

2007059c <lc_ctype_charset>:
2007059c:	49435341 00000049 00000000 00000000     ASCII...........
	...

200705bc <__mb_cur_max>:
200705bc:	00000001                                ....

200705c0 <__malloc_av_>:
	...
200705c8:	200705c0 200705c0 200705c8 200705c8     ... ... ... ... 
200705d8:	200705d0 200705d0 200705d8 200705d8     ... ... ... ... 
200705e8:	200705e0 200705e0 200705e8 200705e8     ... ... ... ... 
200705f8:	200705f0 200705f0 200705f8 200705f8     ... ... ... ... 
20070608:	20070600 20070600 20070608 20070608     ... ... ... ... 
20070618:	20070610 20070610 20070618 20070618     ... ... ... ... 
20070628:	20070620 20070620 20070628 20070628      ..  .. (.. (.. 
20070638:	20070630 20070630 20070638 20070638     0.. 0.. 8.. 8.. 
20070648:	20070640 20070640 20070648 20070648     @.. @.. H.. H.. 
20070658:	20070650 20070650 20070658 20070658     P.. P.. X.. X.. 
20070668:	20070660 20070660 20070668 20070668     `.. `.. h.. h.. 
20070678:	20070670 20070670 20070678 20070678     p.. p.. x.. x.. 
20070688:	20070680 20070680 20070688 20070688     ... ... ... ... 
20070698:	20070690 20070690 20070698 20070698     ... ... ... ... 
200706a8:	200706a0 200706a0 200706a8 200706a8     ... ... ... ... 
200706b8:	200706b0 200706b0 200706b8 200706b8     ... ... ... ... 
200706c8:	200706c0 200706c0 200706c8 200706c8     ... ... ... ... 
200706d8:	200706d0 200706d0 200706d8 200706d8     ... ... ... ... 
200706e8:	200706e0 200706e0 200706e8 200706e8     ... ... ... ... 
200706f8:	200706f0 200706f0 200706f8 200706f8     ... ... ... ... 
20070708:	20070700 20070700 20070708 20070708     ... ... ... ... 
20070718:	20070710 20070710 20070718 20070718     ... ... ... ... 
20070728:	20070720 20070720 20070728 20070728      ..  .. (.. (.. 
20070738:	20070730 20070730 20070738 20070738     0.. 0.. 8.. 8.. 
20070748:	20070740 20070740 20070748 20070748     @.. @.. H.. H.. 
20070758:	20070750 20070750 20070758 20070758     P.. P.. X.. X.. 
20070768:	20070760 20070760 20070768 20070768     `.. `.. h.. h.. 
20070778:	20070770 20070770 20070778 20070778     p.. p.. x.. x.. 
20070788:	20070780 20070780 20070788 20070788     ... ... ... ... 
20070798:	20070790 20070790 20070798 20070798     ... ... ... ... 
200707a8:	200707a0 200707a0 200707a8 200707a8     ... ... ... ... 
200707b8:	200707b0 200707b0 200707b8 200707b8     ... ... ... ... 
200707c8:	200707c0 200707c0 200707c8 200707c8     ... ... ... ... 
200707d8:	200707d0 200707d0 200707d8 200707d8     ... ... ... ... 
200707e8:	200707e0 200707e0 200707e8 200707e8     ... ... ... ... 
200707f8:	200707f0 200707f0 200707f8 200707f8     ... ... ... ... 
20070808:	20070800 20070800 20070808 20070808     ... ... ... ... 
20070818:	20070810 20070810 20070818 20070818     ... ... ... ... 
20070828:	20070820 20070820 20070828 20070828      ..  .. (.. (.. 
20070838:	20070830 20070830 20070838 20070838     0.. 0.. 8.. 8.. 
20070848:	20070840 20070840 20070848 20070848     @.. @.. H.. H.. 
20070858:	20070850 20070850 20070858 20070858     P.. P.. X.. X.. 
20070868:	20070860 20070860 20070868 20070868     `.. `.. h.. h.. 
20070878:	20070870 20070870 20070878 20070878     p.. p.. x.. x.. 
20070888:	20070880 20070880 20070888 20070888     ... ... ... ... 
20070898:	20070890 20070890 20070898 20070898     ... ... ... ... 
200708a8:	200708a0 200708a0 200708a8 200708a8     ... ... ... ... 
200708b8:	200708b0 200708b0 200708b8 200708b8     ... ... ... ... 
200708c8:	200708c0 200708c0 200708c8 200708c8     ... ... ... ... 
200708d8:	200708d0 200708d0 200708d8 200708d8     ... ... ... ... 
200708e8:	200708e0 200708e0 200708e8 200708e8     ... ... ... ... 
200708f8:	200708f0 200708f0 200708f8 200708f8     ... ... ... ... 
20070908:	20070900 20070900 20070908 20070908     ... ... ... ... 
20070918:	20070910 20070910 20070918 20070918     ... ... ... ... 
20070928:	20070920 20070920 20070928 20070928      ..  .. (.. (.. 
20070938:	20070930 20070930 20070938 20070938     0.. 0.. 8.. 8.. 
20070948:	20070940 20070940 20070948 20070948     @.. @.. H.. H.. 
20070958:	20070950 20070950 20070958 20070958     P.. P.. X.. X.. 
20070968:	20070960 20070960 20070968 20070968     `.. `.. h.. h.. 
20070978:	20070970 20070970 20070978 20070978     p.. p.. x.. x.. 
20070988:	20070980 20070980 20070988 20070988     ... ... ... ... 
20070998:	20070990 20070990 20070998 20070998     ... ... ... ... 
200709a8:	200709a0 200709a0 200709a8 200709a8     ... ... ... ... 
200709b8:	200709b0 200709b0 200709b8 200709b8     ... ... ... ... 

200709c8 <__malloc_trim_threshold>:
200709c8:	00020000                                ....

200709cc <__malloc_sbrk_base>:
200709cc:	ffffffff                                ....

200709d0 <__wctomb>:
200709d0:	00086fdd                                .o..
